7
[div class=p 
	"The following most recent code uses Lua and is a little better designed than the C++ code.
	$LF
]div
[div class= 
	[div class= 
		[ul class=nav nav-tabs role=tablist 
			[li class=nav-item 
				[a class=active nav-link data-bs-toggle=tab href=#tabs-130-0 
					"Lua Monopoly RNG card code
				]a
			]li
			[li class=nav-item 
				[a class=nav-link data-bs-toggle=tab href=#tabs-130-1 
					"Code to monitor RNG1 and RNG2 in emulator
				]a
			]li
			[li class=nav-item 
				[a class=nav-link data-bs-toggle=tab href=#tabs-130-2 
					"Code to find delay frame amounts
				]a
			]li
		]ul
	]div
	[div class=tab-content 
		[div class=tab-pane fade active show id=tabs-130-0 
			[div class=p 
				"Code that dumps how RNG affects the order of Chance and Community Chest cards.
				$LF
			]div
			[div class=p 
				"Index, RNG, order of Chance cards from top to bottom, order of CC cards from top to bottom, final RNG
				$LF
			]div
			[div class=p 
				"Chance card values: 0 getoutofjailfree 1 adv to go 2 nearestrail 3 back3space 4 repairs 5 poortax 6 boardwalk 7 illinois 8 adv to stcharles 9 nearestrail 10 bankpays$50 11 nearestutil 12 rideonreading 13 buildingmatures$150 14 gotojail 15 chairman
				$LF
			]div
			[div class=p 
				"Community Chest card values: 0 getoutofjailfree 1 inherit$100 2 doctorsfee$50 3 payhospital$100 4 repairs 5 salestock$45 6 schooltax 7 gotojail 8 incometaxrefund$20 9 adv to go 10 receiveservices$25 11 secondprize$10 12 bankerror 13 lifeinsur$100 14 xmasfundmatures$100 15 grandopera
				$LF
			]div
			[pre 
				[code class=language-Lua 
					$UNPRINTABLE TEXT!!!
				]code
			]pre
		]div
		[div class=tab-pane fade id=tabs-130-1 
			[div class=p 
				"The following code monitors the index of RNG1 and RNG2 when running NES Monopoly in BizHawk.
				$LF
			]div
			[div class=p 
				"The code uses a reverse lookup table to give the index for an RNG1 value (up to a max of max_number).
				$LF
			]div
			[div class=p 
				"RNG2 is just 35*index mod 256, so the index is calculated just by 139*rng2 mod 256.
				$LF
			]div
			[pre 
				[code class=language-Lua 
					$UNPRINTABLE TEXT!!!
				]code
			]pre
		]div
		[div class=tab-pane fade id=tabs-130-2 
			[div class=p 
				"The following code is an example of finding the delay frame amounts a,b,c,d,e,f,g,h to manipulate the desired outcome, given an initial RNG1 index.
				$LF
			]div
			[pre 
				[code class=language-Lua 
					$UNPRINTABLE TEXT!!!
				]code
			]pre
		]div
	]div
]div
[div class=p 
	"The following code uses C++ and is obsolete.
	$LF
]div
[div class= 
	[div class= 
		[ul class=nav nav-tabs role=tablist 
			[li class=nav-item 
				[a class=active nav-link data-bs-toggle=tab href=#tabs-7983-0 
					"Click other tabs to show
				]a
			]li
			[li class=nav-item 
				[a class=nav-link data-bs-toggle=tab href=#tabs-7983-1 
					"Monopoly_card (obsolete)
				]a
			]li
			[li class=nav-item 
				[a class=nav-link data-bs-toggle=tab href=#tabs-7983-2 
					"Monopoly_header (obsolete)
				]a
			]li
			[li class=nav-item 
				[a class=nav-link data-bs-toggle=tab href=#tabs-7983-3 
					"Monopoly_main_functions (obsolete)
				]a
			]li
			[li class=nav-item 
				[a class=nav-link data-bs-toggle=tab href=#tabs-7983-4 
					"Monopoly_input_solve (obsolete)
				]a
			]li
			[li class=nav-item 
				[a class=nav-link data-bs-toggle=tab href=#tabs-7983-5 
					"Monopoly  (obsolete)
				]a
			]li
		]ul
	]div
	[div class=tab-content 
		[div class=tab-pane fade active show id=tabs-7983-0 
		]div
		[div class=tab-pane fade id=tabs-7983-1 
			[div class=p 
				"The following source is for a program used to determine which card combinations are feasible through luck-manipulation. This code is based off an RNG disassembly of the Monopoly ROM.
				$LF
			]div
			[div class=p 
				"Most of this stuff is independent of the below project, because it was one of the earlier programs.
				$LF
			]div
			[div class=p 
				"Note: Chance deck starts at $0472. Community Chest deck starts at $0482. Both are 16 bytes long.
				$LF
			]div
			[div class=p 
				"Chance card values:
				$LF
				"0 getoutofjailfree
				$LF
				"1 adv to go
				$LF
				"2 nearestrail
				$LF
				"3 back3space
				$LF
				"4 repairs
				$LF
				"5 poortax
				$LF
				"6 boardwalk
				$LF
				"7 illinois
				$LF
				"8 adv to stcharles
				$LF
				"9 nearestrail
				$LF
				"10 bankpays$50
				$LF
				"11 nearestutil
				$LF
				"12 rideonreading
				$LF
				"13 buildingmatures$150
				$LF
				"14 gotojail
				$LF
				"15 chairman
				$LF
			]div
			[div class=p 
				"Community Chest card values:
				$LF
				"0 getoutofjailfree
				$LF
				"1 inherit$100
				$LF
				"2 doctorsfee$50
				$LF
				"3 payhospital$100
				$LF
				"4 repairs
				$LF
				"5 salestock$45
				$LF
				"6 schooltax
				$LF
				"7 gotojail
				$LF
				"8 incometaxrefund$20
				$LF
				"9 adv to go
				$LF
				"10 receiveservices$25
				$LF
				"11 secondprize$10
				$LF
				"12 bankerror
				$LF
				"13 lifeinsur$100
				$LF
				"14 xmasfundmatures$100
				$LF
				"15 grandopera
				$LF
			]div
			[div class=p 
				"monopoly.cc:
				$LF
			]div
			[pre 
				[code class=language-c_white 
					$UNPRINTABLE TEXT!!!
				]code
			]pre
		]div
		[div class=tab-pane fade id=tabs-7983-2 
			[div class=p 
				"This was the code for the main project during Monopoly TASing.
				$LF
			]div
			[div class=p 
				"Header only.
				$LF
			]div
			[div class=p 
				"monopolyfuncdef.h:
				$LF
			]div
			[pre 
				[code class=language-c_white 
					$UNPRINTABLE TEXT!!!
				]code
			]pre
		]div
		[div class=tab-pane fade id=tabs-7983-3 
			[div class=p 
				"Actually a C file.
				$LF
				"Provides functionality
				$LF
			]div
			[div class=p 
				"monopoly.h:
				$LF
			]div
			[pre 
				[code class=language-c_white 
					$UNPRINTABLE TEXT!!!
				]code
			]pre
		]div
		[div class=tab-pane fade id=tabs-7983-4 
			[div class=p 
				"This is a program used to find input delay that produces the correct rolls, subject to 3 degrees of freedom per turn over multiple turns. Originally used to find optimal input for a game, this program has now been abused (in the //quickie section) to find input for one or two turns.
				$LF
			]div
			[div class=p 
				"monopolysolve.cc:
				$LF
			]div
			[pre 
				[code class=language-c_white 
					$UNPRINTABLE TEXT!!!
				]code
			]pre
		]div
		[div class=tab-pane fade id=tabs-7983-5 
			[div class=p 
				"This program searches for endings. Meaning that it searches for a random seed that generates automatic consecutive CPU losses after end of input.
				$LF
			]div
			[div class=p 
				"Where the CPU players are is not important 
				[em 
					"a priori
				]em
				". The important part is that a CPU rolls a double into an orange hotel group (St. James), and then 2 to Tennessee or 3 to New York. It is permitted for one CPU (at most) to go from either of these three to the next Chance, since the card is (manipulated to be) go back 3 spaces onto New York.
				$LF
			]div
			[div class=p 
				"In other words each CPU must roll a double first, then 2 or 3 second, with at most one exception permitted to roll 4 or 6 second.
				$LF
			]div
			[div class=p 
				"The program only searches over the first few 
				[code 
					"RndVal1 (rnda)
				]code
				" random values for all 256 values of 
				[code 
					"RndVal2 (rndb)
				]code
				". The period of 
				[code 
					"RndVal1
				]code
				" is 2^22-1, or over 4 million, so most values of 
				[code 
					"RndVal1
				]code
				" are impractical.
				$LF
			]div
			[div class=p 
				"For manipulating 3 CPUs (6 rolls), there are many short-range solutions. For 4 CPUs (8 rolls), there are very few short-range solutions. No solution has been found for 5 CPUs (10 rolls) within a range of 100000 
				[code 
					"RndVal1
				]code
				" iterations.
				$LF
			]div
			[div class=p 
				"There are two timing versions, one with hurry timing and one with relax timing.
				$LF
			]div
			[div class=p 
				"monopolysolve2.cc:
				[br 
				]br
				$LF
			]div
			[pre 
				[code class=language-c_white 
					$UNPRINTABLE TEXT!!!
				]code
			]pre
		]div
	]div
]div
