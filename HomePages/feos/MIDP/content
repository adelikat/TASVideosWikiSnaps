23
[div class=p 
	"This page describes my attempts to run/build things like midp.exe and kvm.exe. Those are from 
	[b 
		"midp2.0fcs
	]b
	" and 
	[b 
		"j2me_cldc-1_1-fcs-src-winunix
	]b
	" respectively. midp.exe is basically a J2ME emulator that can run midlets just like phones running 
	[a class=extlink href=https://en.wikipedia.org/wiki/Series_40 rel=nofollow 
		"Series 40
	]a
	" and similar do. kvm.exe is a virtual machine, designed by Sun to be used on devices with limited resources (hence its specification name).
	$LF
]div
[h4 id=Compiling 
	" Compiling
	$LF
]h4
[div class=p 
	"I managed to build kvm.exe using both cygwin and msvc6. It required installing cygwin along with its make and cmp (difutils) tools (just to make sure I also installed the gcc stuff), and Java Development Kit. Then I added JDK/s and cygwin's bin folders to system 
	[tt 
		"PATH
	]tt
	" variable the way it's commanded in the docs. To make the build working though, I also had to trick the system to use msvc's link tool by renaming its equivalent in 
	[em 
		"cygwin/bin
	]em
	", link.exe, to link_cyg.exe (a hack that worked so whatever). Lastly, since I installed a later version of JDK, I had to replace 
	[tt 
		"JAVAC = javac
	]tt
	" with 
	[tt 
		"JAVAC = javac -source 1.3
	]tt
	" in makefiles in 
	[em 
		"D:\kvm\tools\jcc
	]em
	" and 
	[em 
		"D:\kvm\api
	]em
	$LF
]div
[div class=p 
	"Note: after unzipping the midp and cldc packages to the root dir of my D drive, I renamed them to be 
	[em 
		"midp
	]em
	" and 
	[em 
		"kvm
	]em
	", I pasted entire paths above for simplicity.
	$LF
]div
[div class=p 
	"For cygwin, I run "
	[a class=extlink href=https://support.microsoft.com/en-us/kb/320148 rel=nofollow 
		"command prompt from here
	]a
	"" in 
	[em 
		"D:\kvm\build\win32
	]em
	" dir and use the command:
	$LF
]div
[blockquote 
	" make clean all
	$LF
]blockquote
[div class=p 
	"The executional is created in 
	[em 
		"D:\kvm\kvm\VmWin\build
	]em
	" dir if you're building with cygwin, and in 
	[em 
		"D:\kvm\kvm\VmWin\build\Debug
	]em
	" if you're building with msvc.
	$LF
]div
[div class=p 
	"Note that 
	[tt 
		"nativeFunctionTableWin.c
	]tt
	" and 
	[tt 
		"ROMjavaWin.c
	]tt
	" are generated by javac that compiles the Java files in jcc dir, so you won't be able to build the msvc project until you execute the makefile in 
	[em 
		"D:\kvm\tools\jcc
	]em
	".
	$LF
]div
[div class=p 
	"To build midp.exe, I added an 
	[tt 
		"ALT_BOOTDIR
	]tt
	" variable to system vars with the value of my JDK folder (inside quotes, or the path slashes will be killed by jcc). Line 159 of 
	[em 
		"D:\midp\build\share\makefiles\Defs.gmk
	]em
	" should be replaced with 
	[tt 
		"JAVAC = $(BOOTDIR)/bin/javac$(EXE) -source 1.3
	]tt
	". You also need zip and unzip tools installed for cygwin. After building most of the files, the cp tool will fail to copy gifs from 
	[em 
		"D:\midp2.0fcs\src\example\icons
	]em
	", since there're only pngs there. Remove line 354 from 
	[em 
		"D:\midp2.0fcs\build\share\makefiles\Example.gmk
	]em
	".
	$LF
]div
[div class=p 
	"Note: if one is compiling midp against cldc 1.1 (the intended version is cldc 1.0.4, but it's missing float functions used by many games), it's gonna have compilation errors with com.sun.cldc.io.GeneralBase. To enable cldc 1.1 support, run this patch prior to renaming of the dir: https://gist.github.com/vadosnaprimer/53cd13f00ef32167fea8d3370ca9f3f5 That doesn't magically make the previously incompatible games work though, one will have to debug the problems anyway.
	$LF
]div
[div class=p 
	"To build midp.exe, I also used
	$LF
]div
[blockquote 
	" make clean all
	$LF
]blockquote
[div class=p 
	"from 
	[em 
		"D:\midp\build\win32\kvm
	]em
	". The file spawned in 
	[em 
		"D:\midp\build\win32\kvm\bin
	]em
	".
	$LF
]div
[div class=p 
	"How other people did it:
	$LF
]div
[div class=p 
	"https://phonej2me.github.io/recompiling_midp/recompiling_midp.html
	$LF
]div
[h4 id=GCC 
	" GCC
	$LF
]h4
[div class=p 
	"From how building goes - msvc's cl and link are the only setup that works - one can make a justified assumption, that no one even attempted to compile it for windows with gcc. It lacks basic preprocessor definitions accounting for gcc, and it breaks when building with cygwin's tools for win32.
	$LF
]div
[div class=p 
	"After tweaking the sources to compile with gcc, it segfaults right at the start. 
	[tt 
		"debug
	]tt
	" target affects the place where it happens, but I can't seem to be able to resolve it.
	$LF
]div
[h4 id=VisualGDB 
	" VisualGDB
	$LF
]h4
[div class=p 
	"It seems it's the only way to import the project properly to MSVC, and configuring the project to use the cl/link path during compiling results in a solution buildable from MSVC. (Well, it can be imported from a .pdb file using an extension to VC11+, but it won't compile.) Configuring means adding include/lib directories, setting up the project type (gnu makefile), and other stuff.
	$LF
]div
[div class=p 
	"The default toolchain there is gcc/gdb though, so they should be ignored by not using a 
	[tt 
		"GCC=true
	]tt
	" flag in the 
	[tt 
		"make
	]tt
	" command, but using 
	[tt 
		"DEBUG=true
	]tt
	". It makes cl create a symbols file.
	$LF
]div
[div class=p 
	"In the MSVC's Debugging properties of a project, one must add a command to launch the generated executional, instead of going the default way. So you could use Visual Studio debugger without the need to attach to a running process. Arguments to run an installed midlet for some reason don't work. But it can be launched via GUI anyway.
	$LF
]div
[h4 id=License 
	" License
	$LF
]h4
[div class=p 
	"In case you're wondering, Sun Community Source License isn't strictly open source, but it allows editing the source and distributing the compiled executional for the sake of research.
	$LF
]div
[div class=p 
	"http://www.oracle.com/technetwork/java/scsl-1-1-149938.txt
	$LF
]div
[div class=p 
	"Research Use License:  (i) use, reproduce and 
	[b 
		"modify the Original Code
	]b
	", Upgraded Code and Specifications to create Modifications and Reformatted Specifications for Research Use by You, (ii) 
	[b 
		"publish and display Original Code
	]b
	", Upgraded Code and Specifications with, or 
	[b 
		"as part of Modifications
	]b
	", as permitted under Section 3.1 b) below, (iii) reproduce and distribute copies of Original Code and Upgraded Code to Licensees and students for Research Use by You, (iv) compile, reproduce and distribute Original Code and Upgraded Code in Executable form, and Reformatted Specifications to anyone for Research Use by You.
	$LF
]div
[div class=p 
	""Research Use" means use and distribution of Covered Code only for Your research, development, educational or personal and individual use, and expressly excludes Internal Deployment Use and Commercial Use.
	$LF
]div
[div class=p 
	""Covered Code" means the Original Code, Upgraded Code, Modifications, or any combination thereof.
	$LF
]div
[div class=p 
	""Modification(s)" means (i) any change to Covered Code; (ii) any new file or other representation of computer program statements that contains any portion of Covered Code; and/or (iii) any new Source Code implementing any portion of the Specifications.
	$LF
]div
[h4 id=Notestoself 
	" Notes to self
	$LF
]h4
[div class=p 
	"InitializeWindowSystem()
]div
