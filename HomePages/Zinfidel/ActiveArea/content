7
[div class=p 
	[img class=embed mw-100 src=https://i.imgur.com/QH7Eq9L.gif 
	]img
	$LF
]div
[div class=card mb-2 
	[div class=card-header 
		[strong 
			"Table of contents
		]strong
	]div
	[div class=card-body 
		[ul 
			[li 
				[a href=#TlDr 
					" tl;dr
					$LF
				]a
			]li
			[li 
				[a href=#Overview 
					" Overview
					$LF
				]a
				[ul 
					[li 
						[a href=#RecommendedReadingViewing 
							" Recommended Reading/Viewing
							$LF
						]a
					]li
					[li 
						[a href=#WhyHowDoesThisInformationHelpWithEncodingSpeedruns 
							" Why? How does this information help with encoding speedruns?
							$LF
						]a
					]li
					[li 
						[a href=#OversimplificationsMisrepresentationsAndDamnedLies 
							" Oversimplifications, Misrepresentations, and Damned Lies
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#GoingFromTimeToPixels 
					" Going From Time to Pixels
					$LF
				]a
				[ul 
					[li 
						[a href=#ActiveAreaAsTime 
							" Active area as time
							$LF
						]a
					]li
					[li 
						[a href=#ActiveAreaVisualizedAsPhysicalSpace 
							" Active Area Visualized as Physical Space
							$LF
						]a
					]li
					[li 
						[a href=#ActiveAreaVisualizedAsSamples 
							" Active Area Visualized as Samples
							$LF
						]a
					]li
				]ul
			]li
		]ul
	]div
]div
[h2 id=TlDr 
	" tl;dr
	$LF
]h2
[ul 
	[li 
		" Analog TVs did not actually stretch their image to a 4:3 aspect ratio.
		$LF
	]li
	[li 
		" The active area part of the signal that TVs displayed 
		[em 
			"was
		]em
		" in a 4:3 aspect ratio, and is bigger than the console's picture.
		$LF
	]li
	[li 
		" When you convert the active area to square pixels, you will get dimensions that are not 4:3, and are different for each console.
		$LF
	]li
	[li 
		" By putting square-pixel game footage in a simulated square-pixel active area, then distorting that to a 4:3 aspect ratio, you get an accurate picture.
		$LF
	]li
]ul
[h2 id=Overview 
	" Overview
	$LF
]h2
[div class=p 
	"The goal of this page is to explain what is meant by the term "active area" specifically as it applies to its use in formatting and encoding video game footage. The connection between active area and pixel aspect ratio will be established, as well as techniques for using knowledge of a console's active area for accurately sizing emulator recordings. Gross misrepresentations of how analog signals appear will be presented in the pursuit of convenient visualizations to make the topic easier to convey, so it is highly recommended that you learn a little about analog TV first by checking out the recommended reading/viewing section.
	$LF
]div
[h3 id=RecommendedReadingViewing 
	" Recommended Reading/Viewing
	$LF
]h3
[ul 
	[li 
		" 
		[a href=https://youtu.be/l4UgZBs7ZGo rel=noopener external nofollow 
			"Lines of Light: How Analog Television Works
		]a
		$LF
	]li
]ul
[h3 id=WhyHowDoesThisInformationHelpWithEncodingSpeedruns 
	" Why? How does this information help with encoding speedruns?
	$LF
]h3
[div class=p 
	"Understanding active area will help you understand a few cool tricks that you can use to stretch and resize your emulator video dump so that it will look like it would on a television, since it is not the same as the emulator's output (usually). You may have heard about how TVs would stretch the game image to a 4:3 ratio (this is a misconception); the information on this page will explain what's actually going on there and how to accurately emulate it.
	$LF
]div
[div class=p 
	[em 
		""Wait, the 256x224px video that my NES emulator gave me isn't how it's supposed to look?"
	]em
	" Ignoring for now the deeply difficult question of how games were intended to look by the developers, old video game consoles designed to display on analog TVs did not display their framebuffers' square pixels as square on the TV - they were almost always stretched or squished horizontally a bit. The ratio of width to height of the 
	[em 
		"dots
	]em
	" on the TV is what is known as 
	[b 
		"P
	]b
	"ixel 
	[b 
		"A
	]b
	"spect 
	[b 
		"R
	]b
	"atio (PAR). This means that to 
	[em 
		"accurately
	]em
	" represent the game as it would appear on a television, you've got to distort the video's proportions a bit, and the amount is different for each console.
	$LF
]div
[h3 id=OversimplificationsMisrepresentationsAndDamnedLies 
	" Oversimplifications, Misrepresentations, and Damned Lies
	$LF
]h3
[div class=p 
	"The purpose of this page is not to explain how analog television works any more than is needed to explain the active area. There are any number of good sources on the internet (check the recommended links sections for a few) that should be consulted for that. As a lot of the details of how analog TV works are quite complicated and actually make explaining the active area concept more difficult, there will be inaccurate or misleading information on this page because it makes explaining the necessary concepts more practical for the purposes of encoding speedruns. While all attempts will be made to make it clear when inaccurate information is being conveyed, I would be remiss in not laying out these details explicitly, so here is a list.
	$LF
]div
[ul 
	[li 
		" Any time the term "NTSC" is used in this document, it could variously refer any one or combination of composite video, the NTSC standard, or the System M system. For the purposes of the information on this page, there isn't a practically useful difference between them, and it's pretty common to just refer to them all as "NTSC" anyway.
		$LF
	]li
	[li 
		" Any mention of "dots" or (or "samples" when referring to a TV screen) having a certain shape or dimension is ignoring the complexity of color television sets' shadow masks and phosphor arrangements that drastically change what's on the screen at a 
		[em 
			"micro
		]em
		" level. At a 
		[em 
			"macro
		]em
		" level however, this complexity is unimportant.
		$LF
	]li
	[li 
		" Speaking of shadow masks, when I talk about an electron beam, cathode rays, or an electron gun in a color television, I am actually talking about 
		[em 
			"three
		]em
		" of each. Again the complexities of how color television works aren't so important to the subject, and talking about a single "beam" entity makes it easier to convey. 
		$LF
	]li
	[li 
		" I will frequently refer to television signals as if they were all progressively drawn, even though the reality of nearly all analog consoles is that they use interlaced signals. The complexities of fields, frames, and interlacing makes visualizing active area very difficult, and pretending we are dealing with progressive signals makes it simpler to explain. Interlacing has important impacts on this subject though, so where it is important, the effects of interlacing as it pertains to active area will be addressed.
		$LF
	]li
]ul
[h2 id=GoingFromTimeToPixels 
	" Going From Time to Pixels
	$LF
]h2
[ol 
	[li 
		" The parts of a TV signal that are responsible for actually drawing an image to the TV screen are individually called the "active time" or "active period" of the signal. Active area is defined as discontinuous periods of 
		[b 
			"time
		]b
		" at its most basic level.
		$LF
	]li
	[li 
		" If we relate the the active periods of the TV signal to the physical, 4:3 area on the screen that the cathode ray strikes during those times, you get a rectangle in physical space. Active area can be represented as rectangular 
		[b 
			"physical dimensions
		]b
		" in space this way.
		$LF
	]li
	[li 
		" Consoles put their pixels into the physical dimensions of the active area by varying the signal levels at a certain frequency, thereby sampling the active area into a grid of lines of samples. With an input device like a console, active area can be represented as a grid of 
		[b 
			"samples
		]b
		". These samples are (usually) not squares - they will be little roundish rectangles.
		$LF
	]li
	[li 
		" Modern display devices can't display samples of varying sizes, they display square pixels. If we take the lines of samples from the active area, and convert each sample into a square pixel, we 
		[em 
			"resolve
		]em
		" the active area into a grid of 
		[b 
			"square pixels
		]b
		".
		$LF
	]li
	[li 
		" The grid of pixels we get from the previous step won't be a 4:3 rectangle, even though the physical dimensions of the active area were, because we changed the size of the samples when converting them to square pixels. If we take our grid of pixels and scale the horizontal dimension so that the whole image now forms a 4:3 rectangle again, we will have converted our square pixels into 
		[b 
			"non-square pixels
		]b
		". These non-square pixels will have a pixel aspect ratio that matches the aspect ratio of the samples, and thus the original image will be recovered.
		$LF
	]li
]ol
[h3 id=ActiveAreaAsTime 
	" Active area as time
	$LF
]h3
[div class=p 
	"A significant chunk of an NTSC signal contains no visual information. For each line, there is color burst information used to keep the chroma subcarrier synchronized, and front/back porch sections used to allow voltages to stabilize. These parts of the lines are not shown on the TV screen anywhere, and occur before the electron gun/beam is turned on again. There is also information in the signal outside of the time where a frame is being drawn. For instance, there is quite a bit of time in the signal allotted to allowing the electron beam to return to its starting position (VBLANK).
	$LF
]div
[div class=p 
	"When you hear about an NTSC signal containing 525 lines, what that means is that there are 525 lines' worth of time for every frame. There is a part of the signal that lasts for 486 lines which can contain visual information, and the TV's active area lives on those lines. In each of those 486 lines, the part of the lines that actually contain visual information is the Active Area.
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.imgur.com/FD9UCLC.png 
	]img
	$LF
]div
[h3 id=ActiveAreaVisualizedAsPhysicalSpace 
	" Active Area Visualized as Physical Space
	$LF
]h3
[div class=p 
	"Let's take the diagram from the previous section, isolate just one line, and add some color to it. The green part of the signal is the active area - the part that contains visual information to display on the line. The orange part is the rest of the signal that makes up the line, the part that isn't shown:
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.imgur.com/jfQcdDp.png 
	]img
	$LF
]div
[div class=p 
	"During much of the orange part of the signal above, the electron beam gets turned off (or to a very weak level actually) and starts its journey back to the left side of the screen. If we creatively apply some dimensionality to this one-dimensional signal by stacking the signal diagrams to represent the line signal's "positioning" on the screen, we get this:
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.imgur.com/UmI7Hgc.png 
	]img
	$LF
]div
[div class=p 
	"Finally, lets expand this art experiment to cover an entire virtual television, and also include all of the vertical blanking period, which is a huge chunk of the signal with no visual information at all (no green part):
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.imgur.com/q4ziO5s.png 
	]img
	$LF
]div
[div class=p 
	"If we pretend that the TV's electron beam could scan for the entirety of an NTSC signal, and visualize that as a rectangle of space in front of a TV, we get the orange + green rectangle in the image above. The electron beam in this example would instantly "teleport" from the bottom-right corner of the orange + green rectangle (end of frame), to the upper-left corner of the rectangle (beginning of next frame).
	$LF
]div
[div class=p 
	"The part of the orange rectangle above the viewable area is mostly the 
	[b 
		"vertical blanking
	]b
	" (VBLANK) time, where not much is happening in the signal because we have to wait for the TV's electron beam to reset. In this example we are pretending that this happens instantly, but in reality it takes time for the beam to get back to the top because the inductive forces that control the beam can not change instantly. The part of the rectangle to the left of the viewable area would be where the 
	[b 
		"horizontal blanking
	]b
	" occurs, or HBLANK. See the diagram of the NTSC signal line above to see the various parts of HBLANK.
	$LF
]div
[div class=p 
	"The green rectangle is the 
	[b 
		"Active Area
	]b
	" of the signal. It is the physical space over which the TVs electron beam can actually draw an image, though depending on the construction and quality of the TV, not all of the space will be useable. In the graphic above, the TV's bezel would cover some of the useable space, a very common real-world scenario. Most consumer televisions also overscanned, which has the effect of "zooming in" or making the green rectangle larger, cutting away even more useable space.
	$LF
]div
[div class=p 
	"You'll notice in the above image that the game's image does not fill the entire Active Area. In the idealized TV in the image, it perfectly displays the image in exactly the proportions that the NTSC signal specifies. But in reality, television sets were built within manufacturing tolerances, some looser than others. On cheaper TV sets, the quality of the image towards the edges of the TV glass would degrade quickly. This is due partially to the curve of the TV screen's glass, but also because cheaper components could not maintain quality near the edges of of the electron gun's operational limits. To combat this, manufacturers of these cheap sets would tune these TVs' parameters to "zoom in" the image so that the part of the image that was drawn poorly would be outside of the viewing area of the television set. This is what is commonly known as 
	[b 
		"overscan
	]b
	". This is the reason a lot of people remember their video games taking up the entire TV screen - their TVs were zoomed in!
	$LF
]div
[h3 id=ActiveAreaVisualizedAsSamples 
	" Active Area Visualized as Samples
	$LF
]h3
[div class=p 
	[img class=embed mw-100 src=https://i.imgur.com/ct7yDUn.png 
	]img
	$LF
	"// TODO
	$LF
]div
[ul 
	[li 
		" pixel clock * 52.6 (but more commonly 52.148) = active samples per line
		$LF
	]li
	[li 
		" Width of sample is relative to height, which was determined by labs. Mention this, what was determined to produce square, then lead to next calc
		$LF
	]li
	[li 
		" Width of sample has to do with speed of raster beam, which changes depending on size of TV so that it is commensurate with beam height
		$LF
	]li
	[li 
		" Relate sample rate to square pixel rate (12.27 or 135/11) to get AR of sample.
		$LF
	]li
	[li 
		" Point out that 8/7 SAR in 
		[b 
			"coincidentally
		]b
		" the same as PAR for NES
		$LF
	]li
	[li 
		" Show blank border area and relate to NES holding signal low during that period.
	]li
]ul
