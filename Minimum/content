43
[div class=toc 
	[ul 
		[li 
			[a href=#heading-12 
				" Introduction
				$LF
			]a
		]li
		[li 
			[a href=#heading-422 
				" Ranking
				$LF
			]a
		]li
		[li 
			[a href=#heading-1738 
				" Minimum Buttons
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#heading-1991 
						" Pressed
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#heading-2289 
								" Runs - 5 active, 7 obsolete
								$LF
							]a
						]li
					]ul
				]li
				[li 
					[a href=#heading-4679 
						" Inputted
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#heading-4863 
								" Runs - 1 active, 1 obsolete
								$LF
							]a
						]li
					]ul
				]li
				[li 
					[a href=#heading-5350 
						" Resources
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#heading-6433 
								" Encoding
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
	]ul
]div
[h2 
	" Introduction
	$LF
	[a id=heading-12 
	]a
]h2
[p 
	"This page will host all runs that attempt to find a non-trivial minimum for an action, such as jumping, weapon usage, and puzzle moves. Non-trivial means the minimum is not clear, meaning that low% runs do not qualify if it is known before running what path yields the lowest percent. 
	(__wikiLink|user:HappyLee)
	"'s 
	[a href=/2908S 
		"Super Mario Bros. "lowest score (500)"
	]a
	" is another example of a trivial minimum.
	$LF
]p
[h2 
	" Ranking
	$LF
	[a id=heading-422 
	]a
]h2
[p 
	"Although there is no consensus on how these types of TASes should be ranked, 
	(__wikiLink|user:Brandon)
	" suggests completely separating each sub-goal as attempting to achieve several at once would inevitably lead to trade-offs, which would render ranking impossible. In these divisions, runs with less actions will obsolete runs with more actions, and a shorter run with the same amount of actions will obsolete a longer one. However, the "record holder" for a particular game is the first person to reach the smallest amount actions. Here's an example of a possible list of Super Mario Bros. TASes in the "minimum buttons pressed" category:
	$LF
]p
[p 
	"300 buttons pressed by John
	$LF
]p
[ul 
	[li 
		" Added Super Mario Bros (JPN/USA PRG0) by Chris with 300 buttons pressed in 5:00.75 (2011-07-16)
		$LF
		[ul 
			[li 
				" obsoletes Super Mario Bros (JPN/USA PRG0) by John with 300 buttons pressed in 5:01.99 (2011-07-07)
				$LF
				[ul 
					[li 
						" 
						[del 
							"Added Super Mario Bros (JPN/USA PRG0) by Bob with 301 buttons pressed in 4:59.88 (2011-07-04)
						]del
						$LF
						[ul 
							[li 
								" 
								[del 
									"obsoletes Super Mario Bros (JPN/USA PRG0) by Bob with 301 buttons pressed in 5:00.30 (2011-07-02)
								]del
								$LF
								[ul 
									[li 
										" 
										[del 
											"obsoletes Super Mario Bros (JPN/USA PRG0) by Bob with 301 buttons pressed in 5:01.66 (2011-07-01)
										]del
										$LF
									]li
								]ul
							]li
						]ul
					]li
				]ul
			]li
		]ul
	]li
]ul
[p 
	"As you can see, John, the first player to achieve 300 presses, holds the rank. However, Chris' movie obsoletes John's.
	$LF
]p
[h2 
	" Minimum Buttons
	$LF
	[a id=heading-1738 
	]a
]h2
[p 
	(__wikiLink|user:Nach)
	" once 
	[a href=/forum/t/7082 
		"suggested
	]a
	" the idea of a kind of TAS where button presses were minimized. Sadly, no one could agree on what constitutes a press. Therefore, 
	(__wikiLink|user:Brandon)
	" proposed two groups for these kinds of runs:
	$LF
]p
[h3 
	" Pressed
	$LF
	[a id=heading-1991 
	]a
]h3
[p 
	"This category means that the player tries to press as few buttons as possible. A button press is defined as one button down counting as one button press, regardless of how long it's held. For example, if a player holds down two buttons for 5 frames, the number of buttons pressed is 2.
	$LF
]p
[h4 
	" Runs - 5 active, 7 obsolete
	$LF
	[a id=heading-2289 
	]a
]h4
[p 
	[b 
		"GB Super Mario Land
	]b
	$LF
]p
[p 
	"289 buttons pressed by 
	(__wikiLink|user:MUGG)
	$LF
]p
[ul 
	[li 
		" Added 
		[a class=extlink href=http://dehacked.2y.net/microstorage.php/info/187532754/sml1muggleastpress.vbm rel=nofollow 
			"GB Super Mario Land (any v1.0) by MUGG with 289 buttons pressed in 18:24
		]a
		" (2011-07-19)
		$LF
	]li
]ul
[p 
	[b 
		"NES Donkey Kong
	]b
	$LF
]p
[p 
	"35 buttons pressed by 
	(__wikiLink|user:nitrogenesis)
	$LF
]p
[ul 
	[li 
		" Added 
		[a class=extlink href=http://dehacked.2y.net/microstorage.php/info/1982631593/DK_MP.fm2 rel=nofollow 
			"NES Donkey Kong (JPN/USA) by nitrogenesis with 35 buttons pressed in 01:17.32
		]a
		" (2011-07-20)
		$LF
	]li
]ul
[p 
	[b 
		"NES Donkey Kong Jr.
	]b
	$LF
]p
[p 
	"47 buttons pressed by 
	(__wikiLink|user:Brandon)
	$LF
]p
[ul 
	[li 
		" Added 
		[a class=extlink href=http://dehacked.2y.net/microstorage.php/info/361017945/Donkey%20Kong%20Jr.%20%28JU%29.fm2 rel=nofollow 
			"NES Donkey Kong Jr. (JPN/USA) by Brandon Evans with 47 buttons pressed in 2:22.15
		]a
		" (2011-12-04)
		$LF
	]li
]ul
[p 
	[b 
		"NES Super Mario Bros
	]b
	$LF
]p
[p 
	"142 buttons pressed by 
	(__wikiLink|user:Brandon)
	$LF
]p
[ul 
	[li 
		" Added 
		(__wikiLink|3556S)
		" (2012-04-06)
		$LF
		[ul 
			[li 
				" obsoletes 
				(__wikiLink|3534S)
				" (Submitted on 2012-04-01, originally added on 2012-01-19)
				$LF
				[ul 
					[li 
						" 
						[del 
							"obsoletes 
							[a class=extlink href=http://dehacked.2y.net/microstorage.php/info/1820584312/fractalsmininputlol.fm2 rel=nofollow 
								"Super Mario Bros (JPN/USA PRG0) by MUGG & FractalFusion with 147 buttons pressed in 06:45.57
							]a
							" (2011-07-20)
						]del
						$LF
						[ul 
							[li 
								" 
								[del 
									"obsoletes 
									[a class=extlink href=http://dehacked.2y.net/microstorage.php/info/1058016196/fractalsmininputlol.fm2 rel=nofollow 
										"Super Mario Bros (JPN/USA PRG0) by FractalFusion with 148 buttons pressed in 06:59.09
									]a
									" (2011-07-19)
								]del
								$LF
								[ul 
									[li 
										" 
										[del 
											"obsoletes 
											[a class=extlink href=http://dehacked.2y.net/microstorage.php/info/67719869/Super%20Mario%20Bros%20%28JU%29%20%28PRG%200%29%20-%20Minimum%20Presses.fm2 rel=nofollow 
												"Super Mario Bros (JPN/USA PRG0) by Brandon Evans & MUGG with 156 buttons pressed in 05:43.33
											]a
											" (2011-07-18)
										]del
										$LF
										[ul 
											[li 
												" 
												[del 
													"obsoletes 
													[a class=extlink href=http://dehacked.2y.net/microstorage.php/info/606060007/smb1muggleastpress.fm2 rel=nofollow 
														"Super Mario Bros (JPN/USA PRG0) by MUGG with 158 buttons pressed in 05:34.45
													]a
													" (2011-07-18)
												]del
												$LF
												[ul 
													[li 
														" 
														[del 
															"obsoletes 
															[a class=extlink href=http://dehacked.2y.net/microstorage.php/info/949843052/Super%20Mario%20Bros%20%28PRG%200%29%20%28JU%29%20least%20press2.fm2 rel=nofollow 
																"Super Mario Bros (JPN/USA PRG0) by FractalFusion with 163 buttons pressed in 05:59.08
															]a
															" (2011-07-18)
														]del
														$LF
														[ul 
															[li 
																" 
																[del 
																	"obsoletes 
																	[a class=extlink href=http://dehacked.2y.net/microstorage.php/info/1828284305/Super%20Mario%20Bros%20%28JU%29%20%28PRG%200%29%20-%20Minimum%20Presses.fm2 rel=nofollow 
																		"Super Mario Bros (JPN/USA PRG0) by Brandon Evans with 171 pressed in 05:45.90
																	]a
																	" (2011-07-17)
																]del
																$LF
															]li
														]ul
													]li
												]ul
											]li
										]ul
									]li
								]ul
							]li
						]ul
					]li
				]ul
			]li
		]ul
	]li
]ul
[p 
	[b 
		" Super Mario Bros. 3
	]b
	$LF
]p
[p 
	"235 buttons pressed by 
	(__wikiLink|user:Brandon)
	$LF
]p
[ul 
	[li 
		" Added 
		(__wikiLink|3586S)
		" (2012-05-01)
		$LF
	]li
]ul
[h3 
	" Inputted
	$LF
	[a id=heading-4679 
	]a
]h3
[p 
	"This category means that the player inputs as few buttons as possible. For example, if a player holds down two buttons for 5 frames, the number of buttons inputted is 10.
	$LF
]p
[h4 
	" Runs - 1 active, 1 obsolete
	$LF
	[a id=heading-4863 
	]a
]h4
[p 
	[b 
		"NES Urban Champion
	]b
	$LF
]p
[p 
	"40 buttons inputted by 
	(__wikiLink|user:Brandon)
	$LF
]p
[ul 
	[li 
		" Added 
		[a class=extlink href=http://dehacked.2y.net/microstorage.php/info/349427736/Urban%20Champion%20%28JU%29.fm2 rel=nofollow 
			"NES Urban Champion (JPN/USA) by Brandon Evans with 40 buttons inputted in 00:49.98
		]a
		" (2011-07-20)
		$LF
		[ul 
			[li 
				" obsoletes 
				[a class=extlink href=http://dehacked.2y.net/microstorage.php/info/254652472/Urban%20Champion%20%28JU%29.fm2 rel=nofollow 
					"NES Urban Champion (JPN/USA) by Brandon Evans with 40 buttons inputted in 00:56.59
				]a
				" (2011-07-20)
				$LF
			]li
		]ul
	]li
]ul
[h3 
	" Resources
	$LF
	[a id=heading-5350 
	]a
]h3
[p 
	(__wikiLink|user:bkDJ)
	" created a 
	[a class=extlink href=http://code.google.com/p/tastools/downloads/detail?name=TAS_Button_Stats_v0.7.zip rel=nofollow 
		"program
	]a
	" that can calculate several statistics on the buttons pressed and inputted for a movie file. In addition, 
	(__wikiLink|user:Brandon)
	" wrote a Lua script to track button presses and input. Its 
	[a class=extlink href=http://code.google.com/p/bizhawk/source/browse/trunk/BizHawk.MultiClient/output/Lua/ButtonCount.lua rel=nofollow 
		"best incarnation
	]a
	" is for 
	(__wikiLink|Bizhawk)
	". There's another version which works satisfactorily on several other emulators, which you can find at 
	[a class=extlink href=http://code.google.com/p/brandon-evans-tas/source/browse/Lua/ButtonCount.lua rel=nofollow 
		"Brandon's TASing repository
	]a
	", 
	[a class=extlink href=http://code.google.com/p/tastools/source/browse/trunk/Lua/ButtonCount.lua rel=nofollow 
		"tastools
	]a
	", and 
	[a class=extlink href=http://fceultra.svn.sourceforge.net/viewvc/fceultra/fceu/output/luaScripts/ButtonCount.lua?view=log rel=nofollow 
		"FCEUX's repository
	]a
	" (It is set to be bundled with the release of FCEUX 2.1.6). For more information on both scripts, such as what platforms they support, see their 
	[a class=extlink href=http://code.google.com/p/tastools/wiki/TASButtonStats rel=nofollow 
		"tastools Wiki page
	]a
	".
	$LF
]p
[h4 
	" Encoding
	$LF
	[a id=heading-6433 
	]a
]h4
[p 
	"For encodes of these runs, we have 
	(__wikiLink|user:FractalFusion)
	"'s 
	[a class=extlink href=http://code.google.com/p/brandon-evans-tas/source/browse/Lua/ddrinput.lua rel=nofollow 
		"DDR Input
	]a
	" Lua script. It generates the input as if it were a song from Dance Dance Revolution, making it clear what the duration of the presses are. It also displays the number of buttons pressed on top. A few tweaks will be necessary to make it work for "minimum buttons inputted".
]p
