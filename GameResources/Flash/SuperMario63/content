20
[div class=p 
	"This page serves as a knowledge base for speedrun-related glitches, tricks and information for Super Mario 63.
	$LF
]div
[div class=p 
	"The recommended emulator to run the game would be 
	[a href=https://ruffle.rs/ rel=noopener external nofollow 
		"Ruffle
	]a
	" in order to be able to use libTAS with it for a more user-friendly experience. Alternatively, Flash Player combined with the 
	[a href=https://github.com/GTcreyon/tas63editor-gd/releases/tag/v0.3.0 rel=noopener external nofollow 
		"TAS63
	]a
	" program coded by fellow speedrunner Creyon may also be used.
	$LF
]div
[div class=p 
	[b 
		"NOTE: The default game is impossible to complete using Ruffle because of a softlock that occurs in True Bowser.
	]b
	" However, 
	[a href=https://www.mediafire.com/file/l6nlbybta44dh5i/sm63_fixed.swf/file rel=noopener external nofollow 
		"a modified version of the game
	]a
	" has been created that fixes this softlock and makes the game beatable again, while keeping everything else the same. 
	$LF
]div
[div class=card mb-2 
	[div class=card-header 
		[strong 
			"Table of contents
		]strong
	]div
	[div class=card-body 
		[ul 
			[li 
				[a href=#VersionOverview 
					" Version overview
					$LF
				]a
			]li
			[li 
				[a href=#Mechanics 
					" Mechanics
					$LF
				]a
				[ul 
					[li 
						[a href=#Diving 
							" Diving
							$LF
						]a
					]li
					[li 
						[a href=#Dashing 
							" Dashing
							$LF
						]a
					]li
					[li 
						[a href=#Groundpounding 
							" Groundpounding
							$LF
						]a
					]li
					[li 
						[a href=#Spinning 
							" Spinning
							$LF
						]a
					]li
					[li 
						[a href=#Fludds 
							" FLUDDs
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#GlitchesSkips 
					" Glitches & Skips
					$LF
				]a
				[ul 
					[li 
						[a href=#EndOfLevelSkipEosSkip 
							" 
							"End of Level Skip (EoS Skip)
							$LF
						]a
					]li
					[li 
						[a href=#ShineCancel 
							" Shine Cancel
							$LF
						]a
					]li
					[li 
						[a href=#DoubleRocket 
							" Double Rocket
							$LF
						]a
					]li
					[li 
						[a href=#FluddPreservation2009Only 
							" 
							"FLUDD Preservation
							" (2009 only)
							$LF
						]a
					]li
					[li 
						[a href=#PauseBuffering 
							" Pause Buffering
							$LF
						]a
					]li
					[li 
						[a href=#LevelDesignerPreservation 
							" Level Designer Preservation
							$LF
						]a
					]li
					[li 
						[a href=#Zipping 
							" Zipping
							$LF
						]a
					]li
					[li 
						[a href=#ShineSpawnCutsceneSkip 
							" Shine Spawn Cutscene Skip
							$LF
						]a
					]li
					[li 
						[a href=#InstantDeath 
							" Instant Death
							$LF
						]a
					]li
					[li 
						[a href=#DieAnywhere 
							" Die Anywhere
							$LF
						]a
					]li
					[li 
						[a href=#RedCoinGlitch 
							" Red Coin Glitch
							$LF
						]a
					]li
					[li 
						[a href=#ExtendedVerticalDive 
							" Extended Vertical Dive
							$LF
						]a
					]li
				]ul
			]li
		]ul
	]div
]div
[div class=p 
	[br 
	]br
	$LF
]div
[h2 id=VersionOverview 
	" Version overview
	$LF
]h2
[div class=p 
	"The game has 2 main versions that are used for playing the game - version 1.2, released in 2009, and version 1.5, released in 2012.
	$LF
]div
[div class=p 
	"The 2009 version of the game is the main version that's used by speedrunners, because of an oversight in the game's code that allows Rocket and Turbo nozzles to be used inside of Space and Escape, something that they patched in the latter version. Another huge version difference comes from Fludd Preservation only being possible on 2009, and when combined with FLUDDs in Space and Escape it adds up to over 5 minutes of timesave in the longer categories over 2012. There are also other version differences between them, but they aren't nearly as significant, so they will be briefly listed below:
	$LF
]div
[ul 
	[li 
		" Slide Skip only works on the 2009 version.
		$LF
	]li
	[li 
		" Level Designer is accessible without having any Star Coins on the 2012 version (for 2009 version you need 5 to unlock it). 
		$LF
	]li
	[li 
		" Level Designer has more items compared to 2009.
		$LF
	]li
	[li 
		" Preserving FLUDDs via the Level Designer is only possible on the 2012 version.
		$LF
	]li
]ul
[div class=p 
	[br 
	]br
	" 
	[br 
	]br
	$LF
]div
[h2 id=Mechanics 
	" Mechanics
	$LF
]h2
[div class=p 
	[img class=embedright mw-100 height=182 src=https://imgur.com/3Zsn6z0.gif width=273 
	]img
	$LF
]div
[h3 id=Diving 
	" Diving
	$LF
]h3
[div class=p 
	"When walking on flat ground, Mario can gain speed the longer he walks for until he reaches his horizontal speed cap of 7.2 units per frame. Depending on what type of ground he walks on, for example if it's sloped or not and the angle of the slope, this speed cap can vary slightly. However, diving lets him bypass this speed cap and build more speed by recovering after landing from a dive, letting him chain multiple dives, with each subsequent dive giving him 4 more speed. Although his speed gradually decreases due to air resistance, this speed loss is very minimal and doesn't take away from its main benefit. Diving is one of the most useful moves in the entire game by generating a lot of horizontal speed in a very short amount of time by chaining them together, and it's especially useful when not having access to the Rocket & Turbo FLUDDs. Moreover, diving is not only very useful for building up horizontal speed, it's also useful for when having to fall down large distances by giving you downwards speed. Its only minor drawback is that you have to either backflip or dive recover after landing on the ground in order to keep moving, but this disadvantage pales in comparison to its overall usefulness in the game.
	$LF
]div
[div class=p 
	[img class=embedright mw-100 height=182 src=https://imgur.com/YDy0ejf.gif width=273 
	]img
	$LF
]div
[h3 id=Dashing 
	" Dashing
	$LF
]h3
[div class=p 
	"Mario can perform a dash by double tapping either the left or right arrow key, however 2 conditions have to be met in order to initiate a dash; Mario must be on the ground, and he must have at least 5 horizontal speed in the direction in which he's facing. This move lets him build up more speed the more he runs on the ground until he reaches the dashing speed cap of 11.8 units per frame. While, in theory, it does sound like dashing would be useful to generate horizontal speed, it's rarely used for this purpose as it is entirely outclassed by diving and it also has a small animation for initiating the dash. Its main benefit is that it allows us to do double rocket and to shine cancel, while also enabling us to clip through walls, as it can be used while pause buffering to generate infinite amounts of speed. However, dashing only gives Mario an additional 1.8 speed from frame perfectly pausing and unpausing, which is a tiny increase given that we need a lot of speed to clip through, thus it cannot be done fast enough to save time in a speedrun, not even in a TAS setting.
	$LF
]div
[div class=p 
	[img class=embedright mw-100 height=182 src=https://imgur.com/CYm0oSs.gif width=273 
	]img
	$LF
]div
[h3 id=Groundpounding 
	" Groundpounding
	$LF
]h3
[div class=p 
	"A groundpound can be done by pressing Z while in the air; after initiating it, a short animation of initiating the groundpound plays, during which your horizontal speed is nullified and you start gaining a lot of downwards velocity, letting you phase through breakable blocks. After the move is initiated, the player can hold left or right to also move horizontally, although the horizontal speed is very small, and by holding Down he gains ever so slightly more vertical speed downwards. By itself groundpounds are only used when having to break objects to progress through the level, because of the animation of initiating the groundpound as well as the animation after landing on the ground losing almost a second. The main use of this move, however, is when combined with a dive. By pressing Down and Z at the same time, Mario will perform a groundpound dive, which is a dive that kills all of his horizontal speed. This move is useful when having to turn around or when having to lose all of your speed very quickly.
	$LF
]div
[div class=p 
	[img class=embedright mw-100 height=182 src=https://imgur.com/Kpe2Kp7.gif width=273 
	]img
	$LF
]div
[h3 id=Spinning 
	" Spinning
	$LF
]h3
[div class=p 
	"Mario can do a spin either by pressing X or by pressing Left and Right or viceversa in quick succession. Spinning gives Mario more air time while preserving most of his horizontal speed, and it also gives him a slight height increase on the frame he performs it. While spinning is generally used for longer air time, it can also be useful when having to fall down large holes. By holding Down after pressing X, Mario will gain a lot more downwards velocity and be able to fall faster; however, the more you hold Down for, the longer his animation of spinning extends for, which doesn't let him jump after he lands on the ground while in this animation. Thus, Down has to be released according to your downwards speed in order for Mario to be able to jump right after he lands.
	$LF
	"Alternating between Left and Right results in the most air time possible, and doing the same while also holding Down gives the least amount of air time.
	$LF
]div
[h3 id=Fludds 
	" FLUDDs
	$LF
]h3
[div class=p 
	"The game features all 3 FLUDDs that were originally introduced in Super Mario Sunshine: Hover, Rocket and Turbo FLUDD.
	$LF
]div
[dl 
	[dt 
		"Hover
	]dt
	[dd 
		" The Hover nozzle is unlocked from the very beginning of the game, being introduced already in the first Tutorial stage. The main benefit that this nozzle gives is the ability to gain more height and cross larger gaps. By holding Up while using the nozzle you are able to maximize the height gained, however the main usage that it has is when it's combined with diving. The Hover FLUDD can not only push Mario upwards, but it can also push him horizontally by ducking while using the nozzle, letting you generate even more speed with dives. The main drawback of this nozzle, however is that it can't be used infinitely, due to a mechanic called the FLUDD energy.
		$LF
	]dd
]dl
[div class=p 
	[img class=embedright mw-100 src=https://imgur.com/GmBvipF.png 
	]img
	$LF
]div
[dl 
	[dt 
		"FLUDD Energy
	]dt
	[dd 
		" In order for the game to be balanced with the usage of nozzles, the developers added a meter next to the FLUDD icon that appears in the bottom right corner of the screen (the bar highlighted in green). This meter depletes as you're using FLUDDs (with the exception of Turbo nozzle) so that you can't use them infinitely, and each FLUDD has its own rate at which it decreases the meter. Once this meter is empty, no FLUDDs can be used until the energy is refilled by landing on the ground. When it comes to the Hover nozzle, it can be used no matter how much FLUDD energy you have, something which the other 2 nozzles can't do, however it also empties it quite fast from a full meter, which means it can't be used for very long. Hover can also be useful when having little to no FLUDD energy as it is able to drastically decrease our speed without having to use a groundpound dive. This nozzle is not very useful overall, which makes sense given how you unlock it so early on into the game, so we mostly skip using it.
		$LF
		[dt 
			"Rocket
		]dt
		[dd 
			" Rocket FLUDD (and Turbo as well) is unlocked after collecting the key from the first fight against Bowser. It is first showcased in the second room of Tutorial 2 with its primary use being to gain a lot more height compared to Hover. The developers knew that this FLUDD could be too overpowered, so they decided to "nerf" it in the sense that it uses 5 water at a time instead of 1, unlike the other nozzles, and also completely empties your FLUDD energy from a single usage. Even with those nerfs however, it is still the most broken FLUDD by far, because it allows for one of the most overpowered glitches in the entire game: the double rocket. Even during normal gameplay, this nozzle is still very solid as it not only gives you a crazy amount of height, but it also gives you quite a lot of horizontal speed as well by using it while moving in a direction. Just like Hover, the vertical distance crossed by using the nozzle can be converted into horizontal distance by ducking; doing so gives you 25 horizontal speed instantly.
			$LF
			[dt 
				"Turbo
			]dt
			[dd 
				" This FLUDD is unlocked at the same time as Rocket, being first revealed in the first room of Tutorial 2. While there are no known major glitches involving this nozzle, besides being able to pause buffer triple jump with it to gain more height, it is almost just as good as Rocket due to the sheer amount of horizontal velocity it can generate. While being on the ground or inside of water takes away from the speed, using it in the air is another story, as it has a speed cap of 36.45 units per frame and it is able to reach over 30 speed in mere seconds. It is also the only FLUDD in the game that doesn't use any FLUDD energy, so the meter always stays full while using Turbo, which is what makes it able to build up so much speed; this means that you can use Turbo to gain a good amount of speed, then use Rocket to gain great height and gain even more speed. It is also able to generate some downwards speed as well by using it while diving.
				$LF
			]dd
		]dd
	]dd
]dl
[div class=p 
	[br 
	]br
	$LF
]div
[h2 id=GlitchesSkips 
	" Glitches & Skips
	$LF
]h2
[div class=p 
	"The majority of the glitches and skips listed here involve pausing the game in order to make them work. The reason why pausing is needed is because there is a flaw in the game’s code that makes animations start progressing 1 frame earlier than the actual physics of the game. This tiny discrepancy opens the door to dozens of game-breaking glitches being possible. 
	$LF
]div
[h3 id=EndOfLevelSkipEosSkip 
	" 
	[a href=https://imgur.com/GMbZCaE.mp4/ rel=noopener external nofollow 
		"End of Level Skip (EoS Skip)
	]a
	$LF
]h3
[div class=p 
	"Whenever Mario collects a shine, the game stops all of his momentum on the frame he touches the shine so that he is unable to move during the shine collecting cutscene. After this cutscene is played and Mario touches the ground, the game spawns him back inside the castle based on which stage he entered, and if he collected a secret shine, it will always spawn him in the Main Hall, which is then followed by another cutscene plays of counting down his score and setting a new high score if he got one. However, the game tracks that Mario collected the shine as soon as he touches it, so by pausing the game before Mario lands on the ground and then exiting the level, you are able to skip all of those cutscenes and get spawned in the castle accordingly. This can be done for any shine in the game.
	$LF
]div
[h3 id=ShineCancel 
	" Shine Cancel
	$LF
]h3
[div class=p 
	"Normally, when you collect a shine, you are kicked out of the stage after collecting it, even if you do EoS Skip. This means all your collectibles, most notably the red coins or silver stars that you obtained before grabbing the shine, are reset once you reenter the stage. However, it is possible to actually stay inside the stage while still collecting the shine by skipping the animation of collecting the shine entirely. This happens because the game registers that you collected the shine 1 frame before it actually puts the shine into Mario's hand and the cutscene mentioned previously starts playing. This is done by overwriting the cutscene of collecting the shine with another animation, thus enabling you to keep playing the stage while keeping all red coins and silver stars. It is a frame perfect trick though; there are many ways to perform a shine cancel, but the main ones will be briefly listed here:
	$LF
]div
[dl 
	[dt 
		[a href=https://i.imgur.com/P8HqIgt.mp4/ rel=noopener external nofollow 
			"Triple Jump Shine Cancel
		]a
	]dt
	[dd 
		" This is one of the easiest methods to perform a shine cancel with, being the first variation of shine cancelling that was discovered back in 2014 by the runner Sekanor. It involves performing a triple jump near the shine and then pausing on the frame before the cutscene of collecting the shine would start playing, while holding Down or Z to dive or groundpound respectively on the first frame out of the unpause. This method is easier because you don't actually have to be frame perfect to hit it, as you can pause buffer until you get the correct frame. While it is the most consistent method to hit shine cancels, it is a bit slow since you need to set up a triple jump, which takes a few seconds to do.
		$LF
	]dd
]dl
[dl 
	[dt 
		[a href=https://imgur.com/LrtrZr4.mp4/ rel=noopener external nofollow 
			"Backflip Shine Cancel
		]a
	]dt
	[dd 
		" This is the most optimal method to pull off a shine cancel, as it can be done with no setup almost instantly in most places in the game. This one is performed by staying a bit away from the shine such that Mario is able to grab it while having downwards momentum, followed by a pause on the first frame of the shine disappearing and then unpausing the game, just like for a triple jump shine cancel. While this method is the fastest way to perform a shine cancel, it has an important drawback; the height you gain from a backflip is not nearly as high as the height gained from a triple jump, meaning that this only works for shines that are placed lower. For the shines that are placed higher, an alternative method of shine cancelling will have to be used.
		$LF
	]dd
]dl
[dl 
	[dt 
		[a href=https://youtube.com/clip/UgkxhjUcnzQjLKYC5dnud9vWT4JenqQOVh0e?si=xQZd3dDUQPFE129v rel=noopener external nofollow 
			"Dash Shine Cancel
		]a
	]dt
	[dd 
		" One of the least optimal methods to do a shine cancel with, although it is still slightly faster than setting up a triple jump from scratch. It is not entirely impractical though, as this method is used for shines that cannot be reached by using a backflip, such as the basement shine in Boo's Mansion, by performing a dash double rocket and then pause buffering on the frame before grabbing the shine until the animation of the dash finishes, at which point you can dive out.
		$LF
	]dd
]dl
[dl 
	[dt 
		[a href=https://imgur.com/w1VoA30.mp4/ rel=noopener external nofollow 
			"Roll-out Shine Cancel
		]a
	]dt
	[dd 
		" This is one of the least practical shine cancel methods as it requires the shine to be low enough so that Mario can reach it using a dive recover, however, it can be one of the fastest ways to shine cancel if you are late enough in the animation of dive recovering. It is used in TAS and BTT in Lethal Lava Land for the Silvers shine, in Wet Dry World also for the Silvers shine and in Shifting Sand Land for the top shine (TAS only).
		$LF
	]dd
]dl
[h3 id=DoubleRocket 
	" Double Rocket
	$LF
]h3
[div class=p 
	"Normally after using a rocket, it is impossible to use it again as the rocket drains all of the FLUDD energy after being used; the only way to do more rockets would be to land on the ground in order to refill the FLUDD meter. However, by doing certain actions on the same frame the rocket blasts off, the game sees that you already used a rocket, but because the animation of the rocket taking off was interrupted by another animation, the physics allow Mario to stay on the ground for 1 more frame, which is enough to immediately refill the FLUDD energy and be able to use rocket for a second time in the air. This means that you can get twice the height that you would normally with only 1 rocket, which makes some huge skips possible, such as reaching the door that leads to Huge Room 1 early. This trick also allows for Turbo to be used right after a rocket in order to cross large distances.
	$LF
]div
[div class=p 
	"There are many variations of the double rocket that involve doing different animations being done to pull off the glitch, so the most important ones will be listed here:
	$LF
]div
[dl 
	[dt 
		[a href=https://imgur.com/60rdA4A.mp4/ rel=noopener external nofollow 
			"Pause Double Rocket (PDR)
		]a
	]dt
	[dd 
		" This was the first variation of the double rocket that was found which worked for Mario (the first variation found only worked for Luigi), being discovered all the way back in 2014 by fellow RTA runner April. It is done by pausing on the same frame as the animation of the rocket starts and then unpausing right after. Therefore, this method is the easiest one to pull off a double rocket since it doesn't require a frame perfect input, as it can be pause buffered until hitting the right frame. It's generally considered to be the second most useful variation of the trick, as you have to lose 3 frames to pause and unpause the game, however you have a lot more control over how much height you gain compared to the other methods, something that some of the other methods don't have the luxury of having that much control.
		$LF
	]dd
]dl
[dl 
	[dt 
		[a href=https://youtube.com/clip/UgkxhjUcnzQjLKYC5dnud9vWT4JenqQOVh0e?si=xQZd3dDUQPFE129v rel=noopener external nofollow 
			"Dash Double Rocket
		]a
	]dt
	[dd 
		" This method of doing a double rocket is only used in combination with the Dash Shine Cancel mentioned previously, by dashing on the frame the rocket would blast off instead of pausing.
		$LF
	]dd
]dl
[dl 
	[dt 
		[a href=https://imgur.com/ZDZDWDP.mp4/ rel=noopener external nofollow 
			"Shift Double Rocket (SDR)
		]a
	]dt
	[dd 
		" This is the most optimal method of performing double rockets as it cuts out the 3 frames needed to pause & unpause the game; it's done by switching to Turbo by pressing Shift on the frame the rocket takes off. The main drawback of this method, however, is that the sooner you switch to Turbo after doing a rocket, the less height you gain from the rocket. Therefore, you have limited control over how much height you can get. The only way to increase your height gained is by holding Up after the rocket is performed.
		$LF
	]dd
]dl
[dl 
	[dt 
		[a href=https://youtube.com/clip/UgkxYzN8oTAxWNX6keNthQAG43L7eK2j10JB?si=nfGf2BQ11OrA-CUO rel=noopener external nofollow 
			"Triple Rocket
		]a
	]dt
	[dd 
		" Before the second rocket bursts, you can pause and start pause buffering. You will see the second rocket burst as you pause buffer. Once the second rocket bursts, count 8 pause buffers to charge another rocket.
		$LF
	]dd
]dl
[div class=p 
	"Either go to the FLUDD page of the pause screen and switch to None, or unpause and hold the FLUDD shift button to shift the equipped FLUDD. After switching FLUDDs, you can switch back to rocket at any time to perform another rocket. It is best to do this on the rising edge of the rocket's peak, to maximize height. 
	$LF
]div
[div class=p 
	"Other types of double rockets that aren't of much use include: 
	$LF
]div
[ul 
	[li 
		" Damage Double Rocket
		$LF
	]li
	[li 
		" Dive Recover Double Rocket
		$LF
	]li
	[li 
		" Backflip Double Rocket 
		$LF
	]li
	[li 
		" Duck Double Rocket (Luigi only)
		$LF
	]li
]ul
[h3 id=FluddPreservation2009Only 
	" 
	[a href=https://youtube.com/clip/UgkxNKPLUWa5qYkfVO5HXyxuOM3ymcDPfKpI?si=HYh67xqNaTY0b4le rel=noopener external nofollow 
		"FLUDD Preservation
	]a
	" (2009 only)
	$LF
]h3
[div class=p 
	"When entering any stage or secret level, the game checks to see if you entered a level or not, if that level is a secret course, or, if you entered a normal stage, it also checks which one you entered. This is done so that the game knows where to place you if you collect a shine or decide to pause and exit the level; if it's a secret level, you will spawn in the Castle Grounds after exiting, and if it's a stage, you will get placed in front of the painting used to enter the stage. The game also has another variable in memory that stores which nozzles you have unlocked in every stage that isn't a secret course, so that you don't have to unlock them again when reentering. However, this check to determine the level that you're in is only done once, right after entering the stage; this usually does the job just fine, as you're unable to enter a stage while playing a different one. But there is a catch: since entering a secret course respawns you in the Castle Grounds, which is the same respawn location used for when you're not inside of any level, the game doesn't update your respawn location at all, as during normal gameplay it's impossible to enter a stage while being in a secret course. Players have discovered that by entering a stage, then quitting the game and reentering the file, you will always spawn in front of the castle entrance, but the game still thinks you're inside of the stage you just entered. So, by collecting FLUDDs from the hidden area inside the castle or from a secret course and then reentering the stage, the game will give you the FLUDDs you collected inside of that stage. This glitch also works in reverse: by quitting game while inside of a stage with FLUDDs unlocked and then entering a secret course, you will have access to the FLUDDs you unlocked in that level. Using this glitch makes it possible to have access to FLUDDs in any secret level or any course in the game, making it one of the most important discoveries for the longer categories.
	$LF
]div
[h3 id=PauseBuffering 
	" Pause Buffering
	$LF
]h3
[div class=p 
	"When pausing the game, all entities on screen stop moving and Mario is unable to move, but the game still registers inputs being pressed. However, because animations start progressing 1 frame earlier than movement after unpausing, pausing the game can have some interesting effects when done at higher speeds, both horizontal and vertical. The effects of the glitch are also heavily dependent on how precisely you pause & unpause the game; the following effects will only take into consideration frame perfect pause buffering, which is done by pausing the first frame the animation starts and then pausing while not advancing movement frames at all. This glitch has many applications inside of the game, but these are the most important effects that it can produce:
	$LF
]div
[dl 
	[dt 
		[a href=https://youtube.com/clip/Ugkx2MLiwuuBbJEQGQ8bWD3xky2N8SyFpyu-?si=8gC3wIaPWIuIxObq rel=noopener external nofollow 
			"Dive Grinding
		]a
	]dt
	[dd 
		" By perform either a backflip or a triple jump (note that you must wait 12 frames after a backflip to be able to dive), then holding down and pause buffering allows the player to dive an additional time for each pause, stacking the speed boost that a dive gives you. Dive grinds are very useful for building horizontal speed without FLUDD, and is particularly useful in Tutorial 1. 
		$LF
		[dt 
			"Infinite Luigi Triple Jump
		]dt
		[dd 
			" To perform this glitch, simply triple jump as Luigi then start doing static pause buffers until you reach the height desired, then unpause the game and let Luigi fly into the air. The standing hypothesis for how this works is that Luigi's triple jump is the same as Mario's but with an extra added velocity boost, so when we pause buffer as Luigi, we can multiply that velocity boost with each pause to incrementally add to the Y velocity. This allows Luigi to build infinite speed while triple jumping, but it currently has no uses for speedruns.   
			$LF
			[dt 
				[a href=https://youtube.com/clip/UgkxHt5BBITRIA7nL3GeyJqymgQ_o-QBjwIE?si=CpVVz1E3SZ2nF_wP rel=noopener external nofollow 
					"Dash Pause Buffer
				]a
			]dt
			[dd 
				" To perform it, start dashing by double tapping left or right. Then immediately after, start doing static pause buffers until the necessary speed is reached. Unpause the game and, in many cases, jump directly after. This is because Mario's speed will be capped if he starts walking on the floor after a dash buffer, so a jump is necessary in most cases to preserve the speed. Cases that don't require jumping are when Mario will be airborne eitherway after the buffer. 
				$LF
				[dt 
					[a href=https://youtube.com/clip/UgkxftDcOiuHDczPcITg6trjjtEFLx50Oso5?si=QwV4aZZwuyQ7a1W0 rel=noopener external nofollow 
						"Infinite Spin
					]a
				]dt
				[dd 
					" Because spinning gives Mario a tiny amount of extra height, a method was found for Mario to gain infinite height using the spin; by pausing the game on the frame the animation of spinning begins, then going into the FLUDD section of the pause menu and switching FLUDDs to another one, after unpausing Mario will gain the height boost again, which can be repeated infinitely. This is only useful for when not having access to Rocket though, such as in the Hover FLUDD Only categories, and also for the jumpless challenge, where pressing jump is forbidden.
					$LF
					[dt 
						[a href=https://youtube.com/clip/UgkxKExclvPJky5NhVk5ElP0ykyfxFrCqLFQ?si=RfSjdTQpvA33U8Fd rel=noopener external nofollow 
							"Fire Recoil Pause Buffering
						]a
					]dt
					[dd 
						" When falling into lava or taking damage from fire, Mario gets a big bounce which gives him a lot of vertical momentum and is unable to perform any actions until he lands on the ground and the animation finishes; by pause buffering on the frame Mario comes into contact with fire or lava, you're able to essentially multiply his upwards speed with each pause, being able to gain a crazy amount of height in a very short amount of time. Since there has to be fire or lava nearby though, this technique is only useful in Lethal Lava Land.
						$LF
					]dd
				]dd
			]dd
		]dd
	]dd
]dl
[h3 id=LevelDesignerPreservation 
	" Level Designer Preservation
	$LF
]h3
[div class=p 
	"This is an advanced glitch discovered and explored in 2022 by Sapling2208 and others. It allows for the Level Designer and custom courses to be brought into and interact with main courses. To pull it off, you must enter a Secret Course, equip FLUDD and perform a Shine Cancel on a shine. You need to position yourself somewhere that you can die without having to issue any additional input. Then, using the FLUDD menu in the pause menu, remove FLUDD to trigger the shine grabbed animation that plays upon exiting a stage, and allow yourself to die. While dying, hover over the Save and Exit prompt to increase its size. Then, move your mouse to its edge. This will ensure it remains clickable. After dying, the animation should replay, spawning another smaller prompt ontop of the previous. Click on the hovered prompt to be brought back to the Title Screen with a prompt still usable, navigate to the Level Designer and create a custom level as required. To combine the custom level with the campaign, click the remaining Save and Exit prompt and navigate to a campaign stage. Click in the upper left corner to click File and move your mouse down slightly to click Test Course. 
	$LF
]div
[h3 id=Zipping 
	" Zipping
	$LF
]h3
[div class=p 
	"When Mario runs into an acute angle tile while in the air, the game thinks that his body is stuck inside of the tile which is considered to be a wall, even though Mario keeps his vertical speed. When Mario is inside of a wall, the game checks for the closest tile where he isn't inside of a wall in the direction in which he was facing when he entered the wall, which causes him to get instantly snapped horizontally to that tile's location. This can also happen if Mario gets squished inbetween a moving platform and a wall; this was the first glitch found all the way back in 2010 by Ihavenoname248 and is used today at the end of Huge Room 2 in order to skip the other moving platform in RTA runs and is also useful at the beginning of Escape 2 for BTT and TAS.
	$LF
]div
[h3 id=ShineSpawnCutsceneSkip 
	" Shine Spawn Cutscene Skip
	$LF
]h3
[div class=p 
	"Normally whenever the cutscene of the shine summoning itself plays, Mario is unable to move and he is forced to watch this slow cutscene. However, the game actually lets him move for about half a second when the cutscene begins before he is stuck in place. By overwriting this cutscene with another one, such as  the transition between areas, entering a door or by dying, the shine spawning cutscene is skipped and the shine sprite appears normally. This trick is used in Bob-Omb Battlefield and Boo's Mansion to skip the cutscenes for the red coin shines.
	$LF
]div
[dl 
	[dt 
		[a href=https://imgur.com/tL4wyB5.gif/ rel=noopener external nofollow 
			"Moving Through Cutscene
		]a
	]dt
	[dd 
		" By collecting the last red coin or silver star on the frame you start a triple jump or a dive, you can move in a glitchy way while the cutscene is taking place. Instead of Mario's horizontal speed being set to 0 or 0.5 if he spins before the cutscene begins, his speed is set to 7 for the entire duration of the cutscene, which he can use to travel pretty large distances and reach the shine in most cases. Doing a triple jump is more beneficial than a dive, because if Mario reaches the shine while in this state he can instantly perform a shine cancel on the shine.
		$LF
	]dd
]dl
[h3 id=InstantDeath 
	" Instant Death
	$LF
]h3
[div class=p 
	"It was mentioned above that dying was one way to perform a shine spawning cutscene skip. This is because there is a glitch that can essentially kill Mario even while having full HP; by taking damage from an enemy or by bonking into a wall on the first few frames the shine spawning cutscene begins, Mario will take a death no matter what his HP is. This is the core glitch that is used in Boo's Mansion for the Basement shine in order to not only skip the shine cutscene but also skip King Boo's cutscene of dying.
	$LF
]div
[h3 id=DieAnywhere 
	" Die Anywhere
	$LF
]h3
[div class=p 
	"This is another glitch that can kill Mario much faster, and as its name implies it can be done anywhere. It involves doing a backflip and then pause buffering a dive at the peak of Mario's height; doing this for long enough will give Mario so much downwards speed that it takes away half of his full HP when he lands on the ground. Therefore, this trick has to be done twice in order to kill Mario. Its primary use is in Wet Dry World in order to skip having to collect the rest of the red coins to get the red coin shine.
	$LF
]div
[h3 id=RedCoinGlitch 
	" Red Coin Glitch
	$LF
]h3
[div class=p 
	[b 
		"Note: This glitch only works in Wet Dry World and Tick Tock Clock.
	]b
	$LF
]div
[div class=p 
	"In order to make Red Coin and Silver Star shines spawn, the developers associated an ID to the shine sprite in order to detect whether they are active or not. Once all 8 red coins have been collected, or all 5 silver stars, the value in the coin collect array at their ID is set to true so it stays tangible when you die, instead of going back to being inactive or replaying its animation. However, there was a mistake made by the developers when selecting the object that handles coin IDs in Wet Dry World and Tick Tock Clock, so the wrong count is referenced when the shine sprite gets its ID. This means that the shine gets ID 0, which is shared with the first red coin in Tick Tock Clock and the first yellow coin in Wet Dry World (see below). This allows the player to spawn these 2 Red Coin shines by only collecting 1 Red Coin in TTC and 1 yellow coin in WDW, after reloading the room. 
	$LF
]div
[div class=p 
	[img class=embedleft mw-100 height=308 src=https://imgur.com/B6uHTan.png width=620 
	]img
	$LF
	[img class=embedright mw-100 height=308 src=https://imgur.com/0Rtm06e.png width=620 
	]img
	$LF
]div
[h3 id=ExtendedVerticalDive 
	" Extended Vertical Dive
	$LF
]h3
[div class=p 
	"TODO
	$LF
]div
