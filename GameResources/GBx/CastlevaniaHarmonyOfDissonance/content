20
[p 
	"->Camera's Coordinate
	$LF
]p
[table 
	[tbody 
		[tr 
			[td 
				"decription		
			]td
			[td 
				"type		
			]td
			[td 
				"address	
			]td
		]tr
		[tr 
			[td 
				"X			
			]td
			[td 
				"2byte		
			]td
			[td 
				"0x0200A446	
			]td
		]tr
		[tr 
			[td 
				"Y			
			]td
			[td 
				"2byte		
			]td
			[td 
				"0x0200A44A	
			]td
		]tr
	]tbody
]table
[p 
	"note:Grid can be generated from these addresses.
	$LF
]p
[p 
	"Gocha found these addresses as camera's coordinates.
	$LF
]p
[hr 
]hr
[p 
	"->About Player's Parameter(Juste/Maxim/Simon)
	$LF
]p
[table 
	[tbody 
		[tr 
			[td 
				"decription		
			]td
			[td 
				"type		
			]td
			[td 
				"address	
			]td
		]tr
		[tr 
			[td 
				"MAX HP			
			]td
			[td 
				"2byte		
			]td
			[td 
				"0x02018786	
			]td
		]tr
		[tr 
			[td 
				"Current HP		
			]td
			[td 
				"2byte		
			]td
			[td 
				"0x0201854E	
			]td
		]tr
		[tr 
			[td 
				"MAX MP			
			]td
			[td 
				"2byte		
			]td
			[td 
				"0x02018788	
			]td
		]tr
		[tr 
			[td 
				"Current MP		
			]td
			[td 
				"2byte		
			]td
			[td 
				"0x02018550	
			]td
		]tr
		[tr 
			[td 
				"MAX Heart		
			]td
			[td 
				"2byte		
			]td
			[td 
				"0x0201878A	
			]td
		]tr
		[tr 
			[td 
				"Current Heart		
			]td
			[td 
				"2byte		
			]td
			[td 
				"0x02018794	
			]td
		]tr
		[tr 
			[td 
				"CurrentSubWeapon	
			]td
			[td 
				"1byte		
			]td
			[td 
				"0x0201877E	
			]td
		]tr
		[tr 
			[td 
				"Direction(L/R)		
			]td
			[td 
				"1byte		
			]td
			[td 
				"0x02000478	
			]td
		]tr
		[tr 
			[td 
				"X Speed(integer part)	
			]td
			[td 
				"2byte		
			]td
			[td 
				"0x0200046A	
			]td
		]tr
		[tr 
			[td 
				"X Speed(fractional part)	
			]td
			[td 
				"unsigned 2byte	
			]td
			[td 
				"0x02000468	
			]td
		]tr
		[tr 
			[td 
				"Y Speed(integer part)	
			]td
			[td 
				"2byte		
			]td
			[td 
				"0x0200046E	
			]td
		]tr
		[tr 
			[td 
				"Y Speed(fractional part)	
			]td
			[td 
				"unsigned 2byte	
			]td
			[td 
				"0x0200046C	
			]td
		]tr
	]tbody
]table
[p 
	"note:
	$LF
	"Both of X and Y Speed are represented in this equation.
	$LF
]p
[p 
	"Speed=integer_part+fractional_part
	$LF
]p
[hr 
]hr
[p 
	"->Collision detection of Player
	$LF
]p
[p 
	"-Touching detection for other Attacking/Touching detection.
	$LF
]p
[table 
	[tbody 
		[tr 
			[td 
				"decription		
			]td
			[td 
				"type		
			]td
			[td 
				"address	
			]td
		]tr
		[tr 
			[td 
				"Left Edge		
			]td
			[td 
				"2byte
			]td
			[td 
				"0x03001A20	
			]td
		]tr
		[tr 
			[td 
				"Top			
			]td
			[td 
				"2byte
			]td
			[td 
				"0x03001A22	
			]td
		]tr
		[tr 
			[td 
				"Right Edge		
			]td
			[td 
				"2byte
			]td
			[td 
				"0x03001A24	
			]td
		]tr
		[tr 
			[td 
				"Bottom			
			]td
			[td 
				"2byte
			]td
			[td 
				"0x03001A26	
			]td
		]tr
	]tbody
]table
[p 
	"-Attacking/Touching detection for detection which shows the other sprites is attacked by Player.
	$LF
]p
[table 
	[tbody 
		[tr 
			[td 
				"decription		
			]td
			[td 
				"type		
			]td
			[td 
				"address	
			]td
		]tr
		[tr 
			[td 
				"X Onset		
			]td
			[td 
				"1byte		
			]td
			[td 
				"0x03001A28	
			]td
		]tr
		[tr 
			[td 
				"Y Onset		
			]td
			[td 
				"1byte(unsigned)
			]td
			[td 
				"0x03001A29	
			]td
		]tr
		[tr 
			[td 
				"X Offset		
			]td
			[td 
				"1byte		
			]td
			[td 
				"0x03001A2A	
			]td
		]tr
		[tr 
			[td 
				"Y Offset		
			]td
			[td 
				"1byte(unsigned)
			]td
			[td 
				"0x03001A2B	
			]td
		]tr
	]tbody
]table
[p 
	"note:
	$LF
]p
[p 
	"The former shows the detection that Player is touched by other sprites.
	$LF
]p
[p 
	"The latter shows that Player's attack detection.
	$LF
]p
[p 
	"The latter is calculated by following equation
	$LF
]p
[p 
	"Left_Edge=X_Coordinate+X_Onset
	$LF
]p
[p 
	"Right_Edge=Left_Edge+X_Offset
	$LF
]p
[p 
	"Top=Y_Coordinate+Y_Onset
	$LF
]p
[p 
	"Bottom=Top-Y_Offset
	$LF
]p
[p 
	"X_Coordinate and Y_Coordinate is on-desplay value.
	$LF
]p
[p 
	"Normally, when Player attacked with own weapon (whip or sword),
	$LF
	"detection value is initialized after end of attacking.
	$LF
]p
[p 
	"However, by attacking with martial arts like dive-kick and rolling attack,
	$LF
	"detection value is not initialized and it can be used at next attacking for 1 Frame.
	$LF
]p
[p 
	"In published "Maxim" run, this technique is used for kicking first candlestand.
	$LF
]p
[hr 
]hr
[p 
	"->Various values of sprites.
	$LF
]p
[p 
	"-Starting from 0x02000510.
	$LF
	"This Address is arbitrary decided as base address by Robert_Ordis.
	$LF
]p
[table 
	[tbody 
		[tr 
			[td 
				"decription		
			]td
			[td 
				"type		
			]td
			[td 
				"offset	
			]td
		]tr
		[tr 
			[td 
				"To next sprite		
			]td
			[td 
				"		
			]td
			[td 
				"+0x80	
			]td
		]tr
		[tr 
			[td 
				"Current HP		
			]td
			[td 
				"2byte		
			]td
			[td 
				"+0x44	
			]td
		]tr
		[tr 
			[td 
				"X sub-Pixel		
			]td
			[td 
				"2byte(unsigned)
			]td
			[td 
				"+0x50	
			]td
		]tr
		[tr 
			[td 
				"X coordinate		
			]td
			[td 
				"2byte		
			]td
			[td 
				"+0x52	
			]td
		]tr
		[tr 
			[td 
				"Y sub-Pixel		
			]td
			[td 
				"2byte(unsigned)
			]td
			[td 
				"+0x54	
			]td
		]tr
		[tr 
			[td 
				"Y coordinate		
			]td
			[td 
				"2byte		
			]td
			[td 
				"+0x56	
			]td
		]tr
		[tr 
			[td 
				"Direction(L/R)		
			]td
			[td 
				"2byte		
			]td
			[td 
				"+0x68	
			]td
		]tr
		[tr 
			[td 
				"Collision decision	
			]td
			[td 
				"1byte		
			]td
			[td 
				"+0x7A	
			]td
		]tr
		[tr 
			[td 
				"Access number for collision detection address	
			]td
			[td 
				"1byte(probably)
			]td
			[td 
				"+0x7B	
			]td
		]tr
		[tr 
			[td 
				"1st accepted attack ID
			]td
			[td 
				"1byte
			]td
			[td 
				"+0x7C
			]td
		]tr
		[tr 
			[td 
				"2nd accepted attack ID
			]td
			[td 
				"1byte
			]td
			[td 
				"+0x7D
			]td
		]tr
		[tr 
			[td 
				"1st invulnerablity	
			]td
			[td 
				"1byte(unsigned)
			]td
			[td 
				"+0x7E	
			]td
		]tr
		[tr 
			[td 
				"2nd invulnerablity	
			]td
			[td 
				"1byte(unsigned)
			]td
			[td 
				"+0x7F	
			]td
		]tr
	]tbody
]table
[p 
	"note:
	$LF
]p
[p 
	"1.Collision decision
	$LF
]p
[p 
	"Basically, value of "Collision decision"(+7A) is shown as follows in binary.
	$LF
]p
[table 
	[tbody 
		[tr 
			[td 
				"bit	
			]td
			[td 
				"description		
			]td
			[td 
				"value			
			]td
		]tr
		[tr 
			[td 
				"1st bit
			]td
			[td 
				"enable collision detection	
			]td
			[td 
				"0:disable 1:enable	
			]td
		]tr
		[tr 
			[td 
				"2nd bit
			]td
			[td 
				"enable attacking	
			]td
			[td 
				"0:enable  1:disable	
			]td
		]tr
		[tr 
			[td 
				"3rd bit
			]td
			[td 
				"enable taking other's attack
			]td
			[td 
				"0:enable  1:disable	
			]td
		]tr
		[tr 
			[td 
				"4th bit
			]td
			[td 
				"enable guarding other's attack	
			]td
			[td 
				"0:disable 1:enable	
			]td
		]tr
	]tbody
]table
[p 
	"Upper bit is show a exception of guard detection.
	$LF
	"It will work while 4th bit is 1.
	$LF
]p
[table 
	[tbody 
		[tr 
			[td 
				"bit	
			]td
			[td 
				"description				
			]td
			[td 
				"value			
			]td
		]tr
		[tr 
			[td 
				"5th bit
			]td
			[td 
				"guard only SubWeapons			
			]td
			[td 
				"0:disable 1:enable	
			]td
		]tr
		[tr 
			[td 
				"6th bit
			]td
			[td 
				"guard Subweapons and normal attack	
			]td
			[td 
				"0:disable 1:enable	
			]td
		]tr
		[tr 
			[td 
				"7th bit
			]td
			[td 
				"probably guard all attack		
			]td
			[td 
				"0:disable 1:enable	
			]td
		]tr
		[tr 
			[td 
				"8th bit
			]td
			[td 
				"unknown			
			]td
			[td 
				"0:disable 1:enable	
			]td
		]tr
	]tbody
]table
[p 
	"Lower bit exception is priorly applied.
	$LF
]p
[p 
	"For example, 
	$LF
	"if +0x7A value of one sprite is 0x5B,
	$LF
]p
[p 
	"0x5B=0x10+0x40+0x0B,
	$LF
]p
[p 
	"and guarding is working but 5th bit is enable.
	$LF
	"So, the sprite can guard only SubWeapons and charge/normal attack is not guarded;0x40 is ignored.
	$LF
]p
[p 
	"Exception is only applied for guarding.
	$LF
]p
[p 
	"In following case, 4 higher-bits are ignored.
	$LF
]p
[p 
	"-collision detecting is disabled.
	$LF
]p
[p 
	"-taking collision is disabled.
	$LF
]p
[p 
	"But, I think that 6th bit is only used in upper-bits.
	$LF
]p
[p 
	"2. Invulnerablity and Accepted attack ID
	$LF
]p
[p 
	"There are two invulnerablity and accepted attack ID.
	$LF
]p
[p 
	"Accepted attack ID values shows which kind of attack hit the sprites.
	$LF
	"Invulnerability time values shows time of invulnerablity of one kind of attacks (Frames).
	$LF
	"And when 1st/2nd invulnerability became 0, 1st/2nd accepted atack ID will be reseted.
	$LF
]p
[p 
	"These value is very important for "Shuriken Glitch"(will be descibed in "Attack method" section).
	$LF
]p
[hr 
]hr
[p 
	"->Collision detection of sprites
	$LF
]p
[p 
	"Starting from 0x03001A28.
	$LF
]p
[p 
	"Probably, "Access for collision" of "Various values of sprites" is used as follows.
	$LF
]p
[p 
	"OnsetAddress=0x03001A28+Access_for_collision*0x00000008
	$LF
]p
[table 
	[tbody 
		[tr 
			[td 
				"decription		
			]td
			[td 
				"type		
			]td
			[td 
				"offset	
			]td
		]tr
		[tr 
			[td 
				"To next detection	
			]td
			[td 
				"		
			]td
			[td 
				"+0x08	
			]td
		]tr
		[tr 
			[td 
				"X Onset for Attacking	
			]td
			[td 
				"1byte		
			]td
			[td 
				"+0x00	
			]td
		]tr
		[tr 
			[td 
				"Y Onset for Attacking	
			]td
			[td 
				"1byte(unsigned)
			]td
			[td 
				"+0x01	
			]td
		]tr
		[tr 
			[td 
				"X Offset for Attacking	
			]td
			[td 
				"1byte		
			]td
			[td 
				"+0x02	
			]td
		]tr
		[tr 
			[td 
				"Y Offset for Attacking	
			]td
			[td 
				"1byte(unsigned)
			]td
			[td 
				"+0x03	
			]td
		]tr
		[tr 
			[td 
				"X Onset for Taking	
			]td
			[td 
				"1byte		
			]td
			[td 
				"+0x04	
			]td
		]tr
		[tr 
			[td 
				"Y Onset for Taking	
			]td
			[td 
				"1byte(unsigned)
			]td
			[td 
				"+0x05	
			]td
		]tr
		[tr 
			[td 
				"X Offset for Taking	
			]td
			[td 
				"1byte		
			]td
			[td 
				"+0x06	
			]td
		]tr
		[tr 
			[td 
				"Y Offset for Taking	
			]td
			[td 
				"1byte(unsigned)
			]td
			[td 
				"+0x07	
			]td
		]tr
	]tbody
]table
[p 
	"note:
	$LF
]p
[p 
	"->Calculation of detection
	$LF
]p
[p 
	"This is same as Player's Attacking/Touching detection.
	$LF
	"Subpixel(fractional part) of character's coordinate is not considered for detection.
	$LF
]p
[p 
	"Left_Edge=X_Coordinate+X_Onset
	$LF
]p
[p 
	"Right_Edge=Left_Edge+Y_Onset
	$LF
]p
[p 
	"Top=Y_Coordinate+Y_Onset
	$LF
]p
[p 
	"Bottom=Top+Y_Offset
	$LF
]p
[p 
	"If attacking/touching detection of Player's attacks or SubWeapon
	$LF
	"and detection of taking of one enemy are collided,
	$LF
	"the enemy is damaged.
	$LF
]p
[p 
	"And in the opposite (attacked by enemies and Player is taking), Player is damaged.
	$LF
]p
[p 
	"But, in some enemies, detection for taking damage is also worked as detection for attacking.
	$LF
]p
[p 
	"Following enemies are so.
	$LF
]p
[p 
	"-Lizard man series.
	$LF
]p
[p 
	"-Skull knight Lord (1st form)
	$LF
]p
[p 
	"-Golem (1st form when it hits with its arm)
	$LF
]p
[p 
	"-Devil
	$LF
]p
[hr 
]hr
[p 
	"->Attack method
	$LF
	"In this game, method of accepting the attack is described as follows.
	$LF
]p
[pre 
	" 1.When attacking hitbox of friendly sprites(Player or SubWeapons) covered taking hitbox of enemy sprites, compare between the new ID of attacking and existing ID.
	$LF
	" 
	$LF
	" 2.If same ID as new attack doesn't exist in the sprites, calculate AND value between existing IDs.
	$LF
	" 
	$LF
	" 3.If the result of AND arithmetic is 0, take a new damage and write new ID and invulnerability values in empty address.
	$LF
]pre
[p 
	"This method is based on following very simple scheme.
	$LF
]p
[pre 
	" -If either attacked IDs is 0, AND value is 0 and sprite will be acceptable for new attack.
	$LF
	" 
	$LF
	" -If both of attacked IDs are filled, AND value will be other value and new attack cannot be accepted.
	$LF
]pre
[p 
	"However, due to mistake for setting ID of attacking, there are some attack combinations that AND calculation result is 0.
	$LF
]p
[p 
	"If two attack is accepted and their AND value is 0, the third attack is accepted and the sprite's HP is reduced by the third attack. But because of filling both of accepted ID in sprite's memories, the last attack is accepted but not stored. So, in next frame, acception for the third attack is processed again and multiple hitting is occurred.
	$LF
]p
[p 
	"These series of processing are continued until either invulnerability count 0. Therefore, the longest time of continuing multiple hits depends on the attack which has the shortest invulnerability.
	$LF
]p
[p 
	"Player can use any attack except the stored attacking for the third attack because this glitch is caused by unexpected combination of 1st and 2nd attack.
	$LF
]p
[p 
	"IDs of attack list for each characters are shown in following tables.
	$LF
]p
[p 
	"-Just Belmont
	$LF
]p
[table 
	[tbody 
		[tr 
			[td 
				"Attack			
			]td
			[td 
				"ID(showing in binary and hex)	
			]td
			[td 
				"invulnerablity	
			]td
		]tr
		[tr 
			[td 
				"Normal Whip		
			]td
			[td 
				"00000011(0x03)		
			]td
			[td 
				"29 Frames			
			]td
		]tr
		[tr 
			[td 
				"Midair Whip		
			]td
			[td 
				"00000010(0x02)		
			]td
			[td 
				"40 Frames			
			]td
		]tr
		[tr 
			[td 
				"Sliding		
			]td
			[td 
				"00000110(0x06)		
			]td
			[td 
				"30 Frames			
			]td
		]tr
		[tr 
			[td 
				"Dive Kicking		
			]td
			[td 
				"00000110(0x06)		
			]td
			[td 
				"30 Frames			
			]td
		]tr
		[tr 
			[td 
				"SubWeapon:Knife	
			]td
			[td 
				"00000000(0x00)		
			]td
			[td 
				"0 Frames			
			]td
		]tr
		[tr 
			[td 
				"SubWeapon:Axe		
			]td
			[td 
				"00001000(0x08)		
			]td
			[td 
				"20 Frames			
			]td
		]tr
		[tr 
			[td 
				"SubWeapon:Cross	
			]td
			[td 
				"00001001(0x09)		
			]td
			[td 
				"20 Frames			
			]td
		]tr
	]tbody
]table
[p 
	"-Maxim Kischine
	$LF
]p
[table 
	[tbody 
		[tr 
			[td 
				"Attack			
			]td
			[td 
				"ID(showing in binary and hex)	
			]td
			[td 
				"invulnerablity	
			]td
		]tr
		[tr 
			[td 
				"Normal Slashing	
			]td
			[td 
				"00110001(0x31)		
			]td
			[td 
				"20 Frames			
			]td
		]tr
		[tr 
			[td 
				"Midair Slashing	
			]td
			[td 
				"00110000(0x30)		
			]td
			[td 
				"14 Frames			
			]td
		]tr
		[tr 
			[td 
				"Sliding		
			]td
			[td 
				"00000110(0x06)		
			]td
			[td 
				"30 Frames			
			]td
		]tr
		[tr 
			[td 
				"Kicking		
			]td
			[td 
				"00110010(0x32)		
			]td
			[td 
				"10 Frames			
			]td
		]tr
		[tr 
			[td 
				"Rolling Attacking	
			]td
			[td 
				"00000011(0x03)		
			]td
			[td 
				"29 Frames			
			]td
		]tr
		[tr 
			[td 
				"Dive Kicking		
			]td
			[td 
				"00000110(0x06)		
			]td
			[td 
				"30 Frames			
			]td
		]tr
		[tr 
			[td 
				"SubWeapon:Shuriken	
			]td
			[td 
				"00101111(0x2F)		
			]td
			[td 
				"20 Frames			
			]td
		]tr
	]tbody
]table
[p 
	"-Simon Belmont
	$LF
]p
[table 
	[tbody 
		[tr 
			[td 
				"Attack			
			]td
			[td 
				"ID(showing in binary and hex)	
			]td
			[td 
				"invulnerablity 	
			]td
		]tr
		[tr 
			[td 
				"Normal Whip		
			]td
			[td 
				"00000011(0x03)		
			]td
			[td 
				"29 Frames		
			]td
		]tr
		[tr 
			[td 
				"Midair Whip		
			]td
			[td 
				"00000010(0x02)		
			]td
			[td 
				"40 Frames		
			]td
		]tr
		[tr 
			[td 
				"SubWeapon:Cross	
			]td
			[td 
				"00001001(0x09)		
			]td
			[td 
				"20 Frames		
			]td
		]tr
	]tbody
]table
[p 
	"For example, in the most popular case, 1st attack is Maxim's Dive Kicking(0x06) and 2nd attack is Midair Slashing(0x30). The AND value of both accepted attack ID is 0. So, if the thrown Shuriken hit to the enemy, multiple hit glitch is occurred because of the attack of Shuriken is accepted but it isn't stored in sprite's memory. The longest time for continuing multiple hit is 14Frame(invulnerability of Midair Slashing).
	$LF
]p
[hr 
]hr
[p 
	"->Lua Script
	$LF
]p
[p 
	"-Showing detection and other values script is created by Robert_Ordis.
	$LF
]p
[p 
	[a class=extlink href=http://www.4shared.com/zip/--gCghWd/CVHoD_Displaying_Script_0_4.html rel=nofollow 
		"For VBA-rr v23.5 fix bug about color type in hex.
	]a
]p
