27
[div class=toc 
	[ul 
		[li 
			[ul 
				[li 
					[a href=#Speed&PixelPositionMechanics 
						" Speed & Pixel Position Mechanics
						$LF
					]a
				]li
				[li 
					[a href=#MaintainingSlidingSpeed 
						" Maintaining Sliding Speed
						$LF
					]a
				]li
				[li 
					[a href=#TheWalljump 
						" The Walljump
						$LF
					]a
				]li
				[li 
					[a href=#Enterwallsatacorner 
						" Enter walls at a corner
						$LF
					]a
				]li
				[li 
					[a href=#CornerBoosting 
						" Corner Boosting
						$LF
					]a
				]li
				[li 
					[a href=#CeilingBoosting 
						" Ceiling Boosting
						$LF
					]a
				]li
				[li 
					[a href=#Gettinginfloors 
						" Getting in floors
						$LF
					]a
				]li
				[li 
					[a href=#Earlypipeentryviafloorglitching 
						" Early pipe entry via floor glitching
						$LF
					]a
				]li
				[li 
					[a href=#Bouncinghighoffturtles(SMB1,SMB2j) 
						" Bouncing high off turtles (SMB1, SMB2j)
						$LF
					]a
				]li
				[li 
					[a href=#Mushroom/enemybounce 
						" Mushroom / enemy bounce
						$LF
					]a
				]li
				[li 
					[a href=#NottakingdamagefromBowser'sgroundpound. 
						" Not taking damage from Bowser's ground pound.
						$LF
					]a
				]li
				[li 
					[a href=#Runningdownhill 
						" Running down hill
						$LF
					]a
				]li
				[li 
					[a href=#ImportantRAMAddresses 
						" Important RAM Addresses
						$LF
					]a
				]li
			]ul
		]li
	]ul
]div
[div class=p 
	"Page created, content coming soon! Meanwhile, look at the 
	[a class=intlink href=/GameResources/NES/SuperMarioBros 
		"tricks for the previous game
	]a
	", the games share a lot of stuff.
	$LF
]div
[h3 id=Speed&PixelPositionMechanics 
	" Speed & Pixel Position Mechanics
	$LF
]h3
[ul 
	[li 
		" 0x00BD - X Speed
		$LF
	]li
	[li 
		" 0x0075 - X position in level, 2nd byte
		$LF
	]li
	[li 
		" 0x0090 - X position in level
		$LF
	]li
	[li 
		" 0x074D - X subpixel position
		$LF
	]li
]ul
[div class=p 
	"Like 
	[a class=intlink href=/GameResources/NES/SuperMarioBros 
		" SMB and SMB2j
	]a
	" (as well as many NES games), SMB3 has a subpixel precision of 16.  Subpixel is a 1 byte value that represents a fraction of a pixel (256ths of a pixel).  A precision of 16 means it will only change in increments of 16.  Thus 1 subpixel equals a value of 16 on 0x074D.
	$LF
]div
[div class=p 
	"Speed (0x00BD) is measured in subpixels per frame.  A value of 40 means 40 16ths of a pixel, or 2.5 pixels per frame.
	$LF
]div
[div class=p 
	"Mario has a different max speed in various situations:
	$LF
]div
[table 
	[tbody 
		[tr 
			[th 
				"Situation
			]th
			[th 
				"Max
			]th
			[th 
				"Pix/Frame
			]th
		]tr
		[tr 
			[td 
				"Wall ejecting
			]td
			[td 
				"16
			]td
			[td 
				"1
			]td
		]tr
		[tr 
			[td 
				"Flying
			]td
			[td 
				"23
			]td
			[td 
				"1.958
			]td
		]tr
		[tr 
			[td 
				"Walking/swimming
			]td
			[td 
				"24
			]td
			[td 
				"1.5
			]td
		]tr
		[tr 
			[td 
				"Run-no P
			]td
			[td 
				"40
			]td
			[td 
				"2.5
			]td
		]tr
		[tr 
			[td 
				"Run+P
			]td
			[td 
				"56
			]td
			[td 
				"3.5
			]td
		]tr
		[tr 
			[td 
				"Sliding
			]td
			[td 
				"63
			]td
			[td 
				"3.938
			]td
		]tr
	]tbody
]table
[div class=p 
	[b 
		"Subpixel carry over
	]b
	$LF
]div
[div class=p 
	"This game has subpixel carryover, meaning that x & y subpixel values are not cleared at the end of a level and are thus carried over to the next level.  Having a high x subpixel value at the end of one level will give you a head start in the next.
	$LF
]div
[hr 
]hr
[h3 id=MaintainingSlidingSpeed 
	" Maintaining Sliding Speed
	$LF
]h3
[div class=p 
	(__wikiLink|/TODO|TODO)
	":  Explain 8 frame rule + RAM address, how to use this to keep speed.
	$LF
]div
[hr 
]hr
[h3 id=TheWalljump 
	" The Walljump
	$LF
]h3
[div class=p 
	[img class=embed src=http://media.tasvideos.org/smbtricks/smb3_walljump.gif 
	]img
	$LF
]div
[div class=p 
	"A walljump occurs when you jump towards a wall and Mario's foot collides with the wall in such a way that he can jump again. 
	?IF 0
		"The walljump in the left image is easy to try even on the real console. <The referenced image appears to be missing.
	?ENDIF 0
	" In the animation above (made on a custom map), three walljumps are performed.
	$LF
]div
[div class=p 
	"Theory: Walljumps are possible because the game does a floor check
	$LF
	"(a simple "is position divided by 16 even? Is there a solid block below him?" test)
	$LF
	"even during a wall-ejection.
	$LF
	"Wall-ejection is SMB's mechanism to adjust Mario's horizontal position properly
	$LF
	"when his left side and right side have a different inside-wall status. The game
	$LF
	"ejects Mario in the opposite direction from the one in which he was traveling when he entered the wall.
	$LF
]div
[div class=p 
	"Two conditions must be met for a walljump to be possible:
	$LF
]div
[ul 
	[li 
		" Mario must have a minimum of 33 horizontal speed (towards the wall)
		$LF
	]li
	[li 
		" Mario's feet must hit the wall exactly at a block boundary (every 16 pixels)
		$LF
	]li
]ul
[div class=p 
	"It's possible to perform a walljump on any non-lethal solid material
	$LF
	"(bricks, pipes, etc).
	$LF
]div
[div class=p 
	"In SMB3, the trick works exactly the same way as in 
	[a class=intlink href=/GameResources/NES/SuperMarioBros 
		"SMB1
	]a
	", but
	$LF
	"is harder to perform, because the game is more effective at keeping Mario outside of walls.
	[br 
	]br
	$LF
]div
[hr 
]hr
[h3 id=Enterwallsatacorner 
	" Enter walls at a corner
	$LF
]h3
[div class=p 
	[img class=embedright src=http://media.tasvideos.org/smbtricks/smb3_wall.gif 
	]img
	$LF
	"This can not be done with small mario.
	$LF
]div
[div class=p 
	"Do a duck jump towards a wall and aim at the block just below the corner.  If your speed and subpixel values are right you will enter in the wall.  Stop ducking on the right frame, and mario will begin to eject out of the wall towards the right.  Once in the wall, mario will not be able to run left or right.
	$LF
	[br 
	]br
	$LF
]div
[hr 
]hr
[h3 id=CornerBoosting 
	" Corner Boosting
	$LF
]h3
[div class=p 
	"Corner boosts work on any block that is one block wide and isn't adjacent to another block.  This block can be in the air or on the ground.  If you jump at it at the right height, subpixel position, and speed, you can fall through the block.  In the process you get a small ~1 pixel boost from doing so.
	$LF
]div
[div class=p 
	"TODO: Add animated GIF
	$LF
	[br 
	]br
	$LF
]div
[hr 
]hr
[h3 id=CeilingBoosting 
	" Ceiling Boosting
	$LF
]h3
[div class=p 
	[img class=embedright src=/images/gameresources/smb3-cornerboost.gif 
	]img
	$LF
	"It is possible to boost a pixel off of corners of ceilings (similar to how it works in 
	[a class=intlink href=/GameResources/DS/NewSuperMarioBros 
		"NSMB
	]a
	") by duck jumping.
	$LF
]div
[div class=p 
	"This animated GIF demonstrates how the ceiling boost works.  While Mario's speed never changes he is boosted 1 pixel if he hits the corner with the correct subpixel position.  The right side of the GIF shows his "predicted" position based on Mario's speed and then his actual position.  The actual position is greater due to the boosting that has occurred.  The left counter shows Mario has boosted exactly 1 pixel.
	$LF
]div
[div class=p 
	[br 
	]br
	$LF
]div
[hr 
]hr
[h3 id=Gettinginfloors 
	" Getting in floors
	$LF
]h3
[div class=p 
	"This is the same trick as with corner boosting except there are several blocks to the right (the "floor").  If you do a corner boost into the block you will be stuck in the block instead of going through -- unless you duck.  Ducking ejects Mario to the right, allowing him to pass through the wall. 
	$LF
	[br 
	]br
	$LF
]div
[hr 
]hr
[h3 id=Earlypipeentryviafloorglitching 
	" Early pipe entry via floor glitching
	$LF
]h3
[div class=p 
	"An application of the Getting in Floors trick.  Using this trick in auto-scrolling levels such as airships allows Mario to enter the pipe much sooner than he normally could.
	$LF
]div
[div class=p 
	"TODO: Demonstration.
	$LF
	[br 
	]br
	$LF
]div
[hr 
]hr
[div class=p 
	[img class=embedright src=http://media.tasvideos.org/smbtricks/smb3_talljump.gif 
	]img
	$LF
]div
[h3 id=Bouncinghighoffturtles(SMB1,SMB2j) 
	" Bouncing high off turtles (SMB1, SMB2j)
	$LF
]h3
[div class=p 
	"How it's done: If you jump toward a turtle while it's in the air,
	$LF
	"you can stomp it while moving upward and keep moving upward.
	$LF
	"The maximum height that you'll be able to reach if you keep holding
	$LF
	"down A depends on the exact frame that you made your jump and which
	$LF
	"part of the turtle you hit, so if you aren't bouncing high enough,
	$LF
	"keep adjusting your jump one frame at a time.
	$LF
]div
[div class=p 
	"This is useful for being able to get over an obstacle or landing on
	$LF
	"another enemy after bouncing off a turtle.
	$LF
]div
[div class=p 
	"The same can be done for a couple of walking enemies too, when
	$LF
	"you are running at top speed.
	$LF
]div
[hr 
]hr
[h3 id=Mushroom/enemybounce 
	" Mushroom / enemy bounce
	$LF
]h3
[div class=p 
	"How it's done: If you hold A while picking up a mushroom that's on top of an enemy, and you manage to collect the mushroom before killing the enemy, you will bounce off of the enemy without killing it. Probably useless.
	$LF
]div
[hr 
]hr
[h3 id=NottakingdamagefromBowser'sgroundpound. 
	" Not taking damage from Bowser's ground pound.
	$LF
]h3
[div class=p 
	"How it's done: Stay perfectly still when Bowser is about to slam you. If you are small Mario, you won't be killed, and you'll remain perfectly safe unless you move while you're overlapping him.
	$LF
]div
[hr 
]hr
[h3 id=Runningdownhill 
	" Running down hill
	$LF
]h3
[div class=p 
	"While running downhill doesn't change the speed address, it does cause Mario to travel 3 subpixels per frame faster than his reported speed.  This gives an effective speed boost of +3.
	$LF
]div
[hr 
]hr
[h3 id=ImportantRAMAddresses 
	" Important RAM Addresses
	$LF
]h3
[div class=p 
	(addresses|addrset=3)
	$LF
]div
[hr 
]hr
[div class=p 
	"TODO: add these
	$LF
]div
[ul 
	[li 
		" Tompa's "pipe glitch"
		$LF
	]li
	[li 
		" Stuttering (getting P speed with less floor distance)
		$LF
	]li
]ul
[div class=p 
	[br 
	]br
	$LF
]div
