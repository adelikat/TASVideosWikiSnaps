20
[div class=toc 
	[ul 
		[li 
			[ul 
				[li 
					[a href=#heading-4164 
						"Memory addresses for 
						[tt 
							"Super Mario 64 DS (USA, v1.0)
						]tt
						$LF
					]a
				]li
				[li 
					[a href=#heading-4165 
						"Informations about the addresses given
						$LF
					]a
				]li
				[li 
					[a href=#heading-4166 
						"Maximum speeds
						$LF
					]a
				]li
				[li 
					[a href=#heading-4167 
						" Glitches and Tricks
						$LF
					]a
				]li
			]ul
		]li
	]ul
]div
[h3 
	"Memory addresses for 
	[tt 
		"Super Mario 64 DS (USA, v1.0)
	]tt
	$LF
	[a id=heading-4164 
	]a
]h3
[p 
	"Side note : The DS framerate is around 60 FPS, but most of this game runs at 30 FPS, which means that almost every sort of timer will decrease every 2 frames. Also, the input given by the player is counted when the actual game frame finishes, not when it lags.
	$LF
]p
[p 
	"Unfortunately, most of the interesting information is not at a fixed address; it changes as you move from one area to another. The address that refers to the player base is 0x02097490. This address holds a 4-byte pointer to the base of most of the interesting addresses.
	$LF
]p
[p 
	"For instance, in the castle grounds when you first start the game, 0x02097490 holds 0x02169718. But once you get into the castle, 0x02097490 holds 0x0217AB38.
	$LF
]p
[hr 
]hr
[p 
	"These are the addresses that have been decoded so far:
	$LF
]p
[table 
	[tbody 
		[tr 
			[th 
				"Address
			]th
			[th 
				"Size (bytes)
			]th
			[th 
				"Description
			]th
		]tr
		[tr 
			[td 
				"base + 0x08
			]td
			[td 
				"1
			]td
			[td 
				"Which character you are playing as (Mario: 0, Luigi: 1, Wario: 2, Yoshi: 3)
				[br 
				]br
				"(Putting a cap will set this value to the character of the cap)
			]td
		]tr
		[tr 
			[td 
				"base + 0x5C, 0x60, 0x64
			]td
			[td 
				"4
			]td
			[td 
				"Character's X, Y and Z positions
			]td
		]tr
		[tr 
			[td 
				"base + 0x8E
			]td
			[td 
				"2
			]td
			[td 
				"Facing angle
			]td
		]tr
		[tr 
			[td 
				"base + 0x94
			]td
			[td 
				"2
			]td
			[td 
				"Motion angle
			]td
		]tr
		[tr 
			[td 
				"base + 0x98
			]td
			[td 
				"4
			]td
			[td 
				"Speed
			]td
		]tr
		[tr 
			[td 
				"base + 0x6ED
			]td
			[td 
				"1
			]td
			[td 
				"Y run timer (max is 30)
				$LF
			]td
		]tr
		[tr 
			[td 
				"base + 0xA4
			]td
			[td 
				"4
			]td
			[td 
				"X Velocity
			]td
		]tr
		[tr 
			[td 
				"base + 0xA8
			]td
			[td 
				"4
			]td
			[td 
				"Y Velocity (To prevent players from doing Vertical Speed Conservation, the value it holds is always -32678 when on the ground)
			]td
		]tr
		[tr 
			[td 
				"base + 0xAC
			]td
			[td 
				"4
			]td
			[td 
				"Z Velocity
			]td
		]tr
		[tr 
			[td 
				"base + 0x644
			]td
			[td 
				"4
			]td
			[td 
				"The Y position of the floor that is under you (-2,147,483,648 if there is no floor under you)
			]td
		]tr
		[tr 
			[td 
				"base + 0x706
			]td
			[td 
				"1
			]td
			[td 
				"Water state. When in the water or when the game thinks so, this address holds a value of 1. If not, the value it holds is 0.
			]td
		]tr
		[tr 
			[td 
				"base + 0x370, 374, 378
			]td
			[td 
				"4
			]td
			[td 
				"These addresses have to do with what mode you're in (walking/jumping/swimming/crouching/etc.)
			]td
		]tr
		[tr 
			[td 
				"0x02096750
			]td
			[td 
				"4
			]td
			[td 
				"RNG. Understandable if shown as Hexadecimal
			]td
		]tr
		[tr 
			[td 
				"0x0217A11E
			]td
			[td 
				"1
			]td
			[td 
				"SSL Pillar counter (also used for some other counts in the game)
			]td
		]tr
		[tr 
			[td 
				"0x02151D14
			]td
			[td 
				"4
			]td
			[td 
				"Koopa the Quick's speed in Bomb-Omb Battlefield
				$LF
			]td
		]tr
		[tr 
			[td 
				"0x02167F84
			]td
			[td 
				"4
			]td
			[td 
				"Koopa the Quick's speed in Tiny Huge Island
				$LF
			]td
		]tr
		[tr 
			[td 
				"0x0217B1D4
			]td
			[td 
				"2
			]td
			[td 
				"Bowser's revolution speed, the higher it is the faster youâ€™re spinning him.
			]td
		]tr
		[tr 
			[td 
				"0x02176464
			]td
			[td 
				"4
			]td
			[td 
				"Water level in the basement. Not fully tested, useful for hacking the 30 stars door skip to be easier.
			]td
		]tr
		[tr 
			[td 
				"base + 0xCC
			]td
			[td 
				"1
			]td
			[td 
				"Character's room reference. This address is unsigned and links the character to the main room currently loaded.
				[br 
				]br
				"When unloading the main room you're supposed to currently be in and loading another one instead, you will need to cheat this value to keep the character alive to avoid softlocking.
			]td
		]tr
	]tbody
]table
[p 
	"The following addresses are actually less than base; this means they are probably in
	$LF
	"a separate object, so they might not always be at the same place relative to base (although they are consistent in limited testing).
	$LF
]p
[table 
	[tbody 
		[tr 
			[th 
				"Address
			]th
			[th 
				"Size (bytes)
			]th
			[th 
				"Description
			]th
		]tr
		[tr 
			[td 
				"base - 0x12C, 0x128, 0x124
			]td
			[td 
				"4
			]td
			[td 
				"camera X, Y and Z positions
			]td
		]tr
		[tr 
			[td 
				"base - 0x3A
			]td
			[td 
				"2
			]td
			[td 
				"camera up/down angle
			]td
		]tr
	]tbody
]table
[p 
	[br 
	]br
	$LF
]p
[h3 
	"Informations about the addresses given
	$LF
	[a id=heading-4165 
	]a
]h3
[p 
	"Angles are 2-byte values that use the full range from 0 to 65535 and then wrap (so an angle of 65535 is almost the same as an angle of 0). The character's facing angle controls what angle the character is drawn on the screen (relevant for glitchy longjumps, kicks, crouch, yoshi's tongue, etc.); the character's motion angle controls what direction the character is moving. When you're going in a straight line then the two angles are the same; when you're turning quickly (or some other things such as redirected jumps), the model angle lags behind the motion angle.
	$LF
]p
[p 
	"Koopa the Quick's maximum speed is 98,304 but it becomes 196,108 when you finish the race (if you finish before him). Though, it will become 98,304 again if you go close to him, even after finishing the race.
	$LF
]p
[p 
	"Y run is set as 30 as soon as you can run fast, even if you're still standing holding Y. The Y run timer only decreases when you're running/walking and you can conserve it by doing a move. Even crouching keeps it. If the Y run timer eventually reaches 0 and that you want to keep the speed as long as possible, you need to press no-direction for 6 frames, then pressing forward again for 2 frames, then pressing no-direction for 6 frames, etc. This is only useful if you are heading to go straight forward.
	$LF
]p
[p 
	"The Random Number Generator (RNG) is set to the frame counter when entering a new area. Therefore it has limited manipulations which means that you need to be lucky and hope you get a good RNG when entering a level. The way to manipulate it is to delay the entrance to a level, or try to save frames earlier to get a larger choice.
	$LF
]p
[h3 
	"Maximum speeds
	$LF
	[a id=heading-4166 
	]a
]h3
[p 
	"Note that the maximum speed for a move does not mean you cannot get a higher speed while doing that move. In fact, you can get a higher speed than the maximum speed in some instances. For example, if you jump immediately after doing a long jump, you will notice that your speed is much higher than the maximum speed for a jump. In that case, you will need to check about the no-input trick further below.
	$LF
	"Also, the maximum speed when you're sliding, regardless of the move you are in, is 409,600.
	$LF
]p
[p 
	"Here are listed the maximum speeds of every character for every move :
	$LF
]p
[ul 
	[li 
		"Common to everyone
		$LF
		[ul 
			[li 
				"Butt Slide / Slip : 196,608
				$LF
			]li
			[li 
				"Slidekick / Dive : 163,840
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"Mario
		$LF
		[ul 
			[li 
				"Walking : 36,860 . Running : 147,440 . Y running : 176,921 . Jumping : 121,638 . Backflip / Sideflip : 121,638 . Longjump : 221,160 . Swimming : 65,536
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"Luigi
		$LF
		[ul 
			[li 
				"Walking : 32,760 . Running : 131,040 . Y running : 157,242 . Jumping : 108,108 . Backflip / Sideflip : 108,108 . Longjump : 196,560 . Swimming : 98,304
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"Yoshi
		$LF
		[ul 
			[li 
				"Walking : 32,760 . Running : 131,040 . Y running : 157,242 . Jumping : 108,108 . Backflip / Sideflip : 108,108 . Longjump : 196,560 . Swimming : 58,976
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"Wario
		$LF
		[ul 
			[li 
				"Walking : 30,720 . Running : 122,880 . Y running : 147,450 . Jumping : 101,376 . Backflip / Sideflip : 101,376 . Longjump : 184,320 . Swimming : 42,592
				$LF
			]li
		]ul
	]li
]ul
[h3 
	" Glitches and Tricks
	$LF
	[a id=heading-4167 
	]a
]h3
[ul 
	[li 
		"Here is a more detailed explanation about why portals happen and how to manage to do them : 
		[a class=extlink href=https://www.youtube.com/watch?v=4IVgXx-ZDHc rel=nofollow 
			"Integer Overflow Portal Explanation
		]a
		$LF
	]li
]ul
[ul 
	[li 
		"Heaven's portal: When you do a slidekick, dive or long jump into a glitchy corner (meaning the character slightly enters the wall), if you do it with a certain angle and while moving downwards, the character is sent upwards to the ceiling above them. Most of the places where you can do a heaven's portal have no in-course ceiling, therefore the ceiling above the character is the hard-coded limit, which is very high. The trick can also be done by going into a wall with high speed. Heaven's portals can be used to do major skips (e.g. Moat Skip) or reach stars faster.
		$LF
	]li
]ul
[ul 
	[li 
		"Hell's portal : This is the same as Heaven's portal, but it can get the character stuck into the animation he is in and go forward forever. Until you recover or jump (press A or B) and you will be sent to the death barrier, or if you're lucky and get over a floor at some point, recover or jump to prevent getting stuck again.
		$LF
	]li
]ul
[ul 
	[li 
		"Deathwarp clip : This also works by glitching into a corner, but in some instances you can be sent downwards (to the death barrier) instead of upwards (to the ceiling above). Can be useful to skip entering rooms in the castle.
		$LF
	]li
]ul
[ul 
	[li 
		"Corner clipping: Some glitchy corners allow you to go through the wall instead of sending you into a portal, for example the characters' room right corner.
		$LF
	]li
]ul
[ul 
	[li 
		"Star cancel glitch: When you eat a star as Yoshi, it is possible to skip the celebration for getting the star, that forces you to exit the level. After eating the star if you bounce on a fly guy or spindrift, land on a shell, or grab an owl, then you will be able to move around with the star in your mouth. If you walk/run, stand still long enough for the landing animation to finish, or start swimming, then you will do the celebration for the star as usual. However, if you jump out of the landing animation then you will not start the celebration, and can thus delay it indefinitely.
		$LF
	]li
]ul
[ul 
	[li 
		"No-direction trick: This trick works by not pressing any direction while doing any sort of jump. When doing so, the character's speed will aim to go to 0 by decreasing/increasing (depending on the situation) by 2048, until it reaches 0. It's useful to do it while the character's speed is above maximum speed, since the speed goes down slower than if you pressed any direction. It works with all movement except punches, kicks, dives and slidekicks since their speed doesn't decrease in the same way and/or is locked.
		$LF
	]li
]ul
[ul 
	[li 
		"Direction reset: When pressing the opposite direction from the direction the character is facing while in the air, their speed starts decreasing until it becomes negative (which means the character is actually moving in the opposite direction from the direction they are facing). However, if the speed becomes exactly 0 while decreasing the speed, it will increase (positive numbers) even if you're moving in the opposite direction of the way you're facing. If the direction is backwards (being more than a 16384 angle difference from the facing angle) and you keep pressing the direction while landing, then the character will instantly turn when landing.
		$LF
	]li
]ul
[ul 
	[li 
		"Frame sliding: While walking up a slope you'll notice that your speed decreases every frame. To avoid this, simply press backwards and no-direction every other frame to keep the speed you had. if you don't have enough space to do a slidekick recover (or a kick in a case of a quite flat slope) then this can be useful. It can also be used to preserve a little Y run for each time you do it, and as entertainment for a run (e.g. using it during Moat Skip in any% since there is a lot of straight running).
		$LF
	]li
]ul
[ul 
	[li 
		"Glitchy long jump: Usually, when you do a long jump, it is necessary that the character is facing the same direction he is moving in order to get a long jump with the highest speed. However, while walking, if you turn very fast so that the model angle lags behind the motion angle, by using a specific direction with the touchscreen you can do long jumps with top speed where model angle and motion angle are completely different. Here is a more detailed explanation of this trick: 
		[a class=extlink href=https://youtu.be/1tOC5HVSY9w rel=nofollow 
			"Glitchy Long Jump Explanation
		]a
		$LF
	]li
]ul
[ul 
	[li 
		"Delayed long jump: By running and pressing R you can slide for up to 16 frames while maintaining the speed you were running at. This can be useful for preserving Y run.
		$LF
	]li
]ul
[ul 
	[li 
		"Punches and Kicks :
		$LF
	]li
]ul
[ul 
	[li 
		[ul 
			[li 
				"Before reading these tricks, it is important to note that when doing a punch, your speed will decrease by 2048 every frame if you're on the ground. If you're in the air, the speed becomes locked. When doing a kick, you're not affected by the floor (if it's a moving floor, you are not affected by its movement), and the kick will keep the speed you had until you reach the ground. Also, after a kick you can instantly run after landing. Same with a punch, but your speed will be sent to 0 after the animation finishes. Therefore, punches and kicks are useful for being faster than running in some instances.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		[ul 
			[li 
				"Kick trick: By pressing and holding B when you do an air move, if you press A (and don't release B) immediately when you land, you will do a kick. It usually isn't possible to kick while in the landing animation, and this lets you preserve speed from a long jump for example.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		[ul 
			[li 
				"Punch trick: If you release B just after pressing A and B for 2 frames, you won't kick, you will punch instead. Thus you can punch at any speed using this.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		[ul 
			[li 
				"Slow Y kick : When doing punches, if your kick is done with only A and while on the ground, your vertical speed will slowly increase and then slowly decrease.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		[ul 
			[li 
				"Regular kick trick : when doing punches, if the last kick is done by pressing A and B at the same time, you will never do a 
				[tt 
					"Slow Y kick
				]tt
				". You can also do a regular kick instead of the 2nd punch, which is very useful.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		[ul 
			[li 
				"No slowdown kick : When kicking something from far away (you have a few frames window to do that though), you won't slow down when hitting that thing.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		[ul 
			[li 
				"No slowdown punches : When punching something (excepted bricks), even if you're very close to the ennemy you want to hit, you have a 2 frame window to do a punch or a regular kick, and it will cancel the hitting sprite, so you won't slowdown. This trick doesn't work with bricks.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"No bonk trick : When doing a dive or a longjump, you would usually bonk when reaching a wall. Though, if your speed is less than 66K, you won't bonk. If you're playing as Mario, you can wallkick after that. For a dive, you need to have a really low speed dive, and that's only possible with triple jumps, slope jumps, and sideflips, because they are the only moves that allow you to dive at any speed.
		$LF
	]li
]ul
[ul 
	[li 
		"Y run: This is a feature of the game. If you stand still and hold Y, after almost one second you will be able to run extremely fast (even faster than the max run speed) and with insane acceleration for a short period of time. There is a timer that starts at 30 and decreases by 1 every 2 frames, though only while you are on the ground. This means just running normally it will last for one second exactly, but with lots of air time it can last for an entire star. Y run can be useful when you have to go through doors, since you can run fast immediately instead of slowly building up speed from 0. Also, with the touchscreen, you can instantly decrease your speed to a value you want instead of slowly decreasing. This can be used to turn faster by reaching 0 speed quickly.
		$LF
	]li
]ul
[ul 
	[li 
		"Air Reset
		$LF
	]li
]ul
[ul 
	[li 
		[ul 
			[li 
				"There are several tricks that allow you to count as standing on ground while in the air for one frame, meaning you can jump, backflip, kick, and in some cases even long jump from mid-air.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		[ul 
			[li 
				"Dive reset: When doing a dive onto the ground, if you let your speed reach 0 (by letting it slowly decrease or grabbing something) you will automatically recover in a standing up animation. While in the air, you can't decrease speed during a dive, so the game assumes you're on ground after doing this animation. However, while doing a sideflip, wall jump, or triple jump (very hard with a triple jump), if you get the right amount of negative speed, you can do a dive that sets your speed to exactly 0. Thus, the standing up animation will play in mid-air as soon as you do the dive. After the animation finishes, you will be able to move for 1 frame, allowing you to jump, backflip, or kick. This trick allows us to reach new heights, as it allows infinite height gain as Mario using a wall. Here is a video explanation: 
				[a class=extlink href=https://www.youtube.com/watch?v=LYE3pbvhlcE rel=nofollow 
					"Dive Reset Explanation
				]a
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		[ul 
			[li 
				"Spit reset: After spitting out something as Yoshi, there are 2 frames when Yoshi switches from the spitting animation to the walking animation where you can jump, spit, backflip, or even long jump if you are travelling fast enough.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		[ul 
			[li 
				"Egg reset: This works the same way as the spit reset, but you can also do it by making an egg.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		[ul 
			[li 
				"Throw reset: After throwing an egg or another object, there will be 2 frames when the character switches back from the throwing animation to the walking animation where you can do the same moves as recalled before.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"Sky Wall Kicks : Usually when doing wallkicks, it happens in situations where the walls you wallkick with are opposite (180Â°). But it's also possible to do it with walls that are a bit less than 90Â° by slowing speed to 0 and redirecting to the other wall in order to gain height (e.g. : used in Tall, Tall, Mountain).
		$LF
	]li
]ul
[ul 
	[li 
		"Igloo clip : In Snowman's Land, the igloo's outside loading zone is a bit out of the actual igloo. By having the perfect position you can reach the trigger without having to crawl to access it. Example : 
		[a class=extlink href=https://www.youtube.com/watch?v=bbgs4hVcfg4&t=32s rel=nofollow 
			"SL 100+Reds TAS where Igloo clip is used
		]a
		$LF
	]li
]ul
[ul 
	[li 
		"SSL pillar glitch: If you start walking onto a pillar in Shifting Sand Land with quite high speed (running speed is sufficient), depending of your position and motion angle, you can upwarp a little, or sometimes you can lose all your speed while on the shell.
		$LF
	]li
]ul
[ul 
	[li 
		"Fast pole grabbing: When jumping or sideflipping, if your speed is less than 40961 when grabbing a pole you will be able to jump or climb the pole instantly. Normally, you would have a second where you can't do anything, as there is a short animation. With Yoshi and Luigi (only useful to do alternate pole jumps with them) you can manipulate the speed to be negative since any negative speed makes the trick work, e.g -108108. If you are jumping off the pole, hold backwards, and just before reaching a speed of 0, press no direction so that then if you press backwards again, your speed will become negative instead of going to 0 and becoming positive.
		$LF
	]li
]ul
[ul 
	[li 
		"Grate upwarp glitch: In Goomboss Battle, if you jump under the grate with a precise position and an angle to the left, there is a glitchy spot where you can hang at the very edge and cannot move at all if you stay hanging. If you manage to have the perfect position and perfect angle you will not hang on the grate, and instead enter the wall. This means a failsafe occurs and you are sent up to the edge of the grate, in a landing state.
		$LF
	]li
]ul
[ul 
	[li 
		"Dialogue in air: The check for dialogue in this game only cares about X and Z position, not Y position. This means that by using a dive reset or spit reset you can start the dialogue in mid-air. While the text is on screen the character will float, and after that you have 2 frames to do an action. However, the character will always look directly at anyone who is talking to them, so being too high above whoever's talking will lose frames because they have to tilt their head downwards. They also have to get their head back to a normal position after the text, once again wasting a few frames.
		$LF
	]li
]ul
[ul 
	[li 
		"NPC clipping: This works by talking to a bunny or a Toad that is close to a wall while you are between it and the wall. The game pushes you out of the NPC, making you go through walls with the right position.
		$LF
	]li
]ul
