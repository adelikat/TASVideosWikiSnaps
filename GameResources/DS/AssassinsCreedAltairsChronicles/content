52
[hr 
]hr
[div class=card mb-2 
	[div class=card-header 
		[strong 
			"Table of contents
		]strong
	]div
	[div class=card-body 
		[ul 
			[li 
				[a href=#BasicMovementWalkingJumping 
					" Basic movement (walking, jumping)
					$LF
				]a
			]li
			[li 
				[a href=#CutsceneSkipping 
					" Cutscene skipping
					$LF
				]a
			]li
			[li 
				[a href=#BasicsOfStates 
					" Basics of states
					$LF
				]a
			]li
			[li 
				[a href=#AdvancedMovementAndStates 
					" Advanced movement and states
					$LF
				]a
				[ul 
					[li 
						[a href=#Wallhugging 
							" Wallhugging 
							$LF
						]a
					]li
					[li 
						[a href=#WallclimbingWallgrabbingWalljumpingGlitchedWallClimbingEdgeGrabbingHangingAndClimbing 
							" Wallclimbing, wallgrabbing, walljumping, glitched wall climbing, edge grabbing, hanging and climbing.
							$LF
						]a
					]li
					[li 
						[a href=#LadderAndNetClimbing 
							" Ladder and net climbing
							$LF
						]a
					]li
					[li 
						[a href=#KickingTriggeringEnemyGrappling 
							" Kicking, triggering, enemy grappling
							$LF
						]a
					]li
					[li 
						[a href=#FallDamage 
							" Fall damage
							$LF
						]a
					]li
					[li 
						[a href=#BoxMechanics 
							" Box mechanics
							$LF
						]a
					]li
					[li 
						[a href=#PassingOver 
							" Passing over
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#ExpertMovementTechniques 
					" Expert movement techniques
					$LF
				]a
				[ul 
					[li 
						[a href=#Slopes 
							" Slopes
							$LF
						]a
					]li
					[li 
						[a href=#AdvancedJumpingTechniques 
							" Advanced jumping techniques
							$LF
						]a
					]li
				]ul
			]li
		]ul
	]div
]div
[hr 
]hr
[h3 id=BasicMovementWalkingJumping 
	" Basic movement (walking, jumping)
	$LF
]h3
[div class=p 
	[b 
		"Movement
	]b
	" is simple: when holding a direction from an idle state, Altaïr will walk in that direction for four frames, then start running. Running speed is preserved until Altaïr stops or lands on sloped terrain (see Slopes).
	$LF
]div
[div class=p 
	"While stopping from walking or running, Altair gets into the stopped state for 22 frames, before being in the idle state. There are three basic concepts to understand: walking, jumping, and cutscene skipping. The fastest form of movement is 
	[b 
		"jumping
	]b
	" (B). This is normally as fast as walking, but Altaïr gets a burst of speed at the start of each jump. This is why optimal movement is based on doing jumps as short as possible. Each jump can gain extra height by holding B for longer. One important thing to note is that the minimum height of each jump is different.
	$LF
]div
[div class=p 
	"Going a little bit in depth: there are four (five after getting the triple jump) types of jumps; first, the high jump, which is done from the idle state of Altair. This does a jump with Altaïr holding his arms up. It is the fastest jump for setting up a double or triple jump, and is used only for these occasions, since if you need to go high, doing a high>double is better than doing a full height high jump.
	$LF
]div
[div class=p 
	"The 
	[b 
		"crouch jump
	]b
	" is done when Altaïr jumps when he is in the walking state. Altaïr jumps with his knees in front of him. This is noticably slower than a jump, and is only used in rare case when setting up a double/triple jump is needed but obtaining the running state is impossible.
	$LF
]div
[div class=p 
	"The 
	[b 
		"long jump
	]b
	" (jump for short) is when Altair jumps while in the running state, and has Altaïr lunging forwards. Ideally, because of the fact that you gain a burst of speed at the start of each jump, doing normal jumps over and over would be the fastest alternative, because double/triple jumps have a higher minimum height (1 frame longer to land for double jumps, 4 frames for triple jumps.) Because of jump timers, however, interupting a double or triple jump to do a normal jump is not worthwhile assuming normal conditions. In conditions with slopes or stairs, where interrupting the jump timer is noticably easier, this fact is used.
	$LF
]div
[div class=p 
	"However, let's talk about that with jump timers and the double jump. The 
	[b 
		"double jump
	]b
	" is the fundamental move of this TAS, along with the walljump and wallclimb: in the first half of the game, it is the highest form of vertical movement Altaïr has avaible. It is the main move to break levels in many ways not intended, and is also, at max height, the only way to jump over enemies fully in the first half of the game. The double jump is dependant on first doing a jump, then jumping again. This is the 
	[b 
		"jump timer
	]b
	". The two ways to cancel it are to either not jump within 22 frames of the jump timer triggering or to change Altaïr's facing direction two times. This is used, as stated earlier, to do long jumps more often.
	$LF
]div
[div class=p 
	"The 
	[b 
		"triple jump
	]b
	" is the last jump obtained, halfway through the game, and it is vital to the second part of any run. The triple jump has the highest minimal height and the highest maximal height. Essentially, it is a very complex double edged sword: while obtaining the triple jump does, ironically, make Altaïr slower due to its higher minimum height,  it is very helpful for breaking levels in a much more severe fashion than the double jump, and jumping over many triggers. This brings up the use of the triple jump as objectively the most complex in a run, and each use has to be carefully planned as it has repercussions on the entire level regarding the jump timer.
	$LF
]div
[div class=p 
	"Jumping is explained more in depth under "Advanced jumping mechanics".
	$LF
]div
[h3 id=CutsceneSkipping 
	" Cutscene skipping
	$LF
]h3
[div class=p 
	[b 
		"Cutscene skipping
	]b
	" is a rather broken function done by using B when a cutscene appears after the right amount of time. This is broken because cutscenes are done in real time, so the current state in which Altair is in gets retained. Furthermore, actions that are executed in the cutscene (for example, creating a platform), don't have the time to fully execute and finish.. in real time! This fact is abused sometimes.
	$LF
]div
[div class=p 
	"Note that if you aren't in any state, Altaïr will be put in the idle state and won't be able to jump for the first 4 frames after the skip.
	$LF
]div
[h3 id=BasicsOfStates 
	" Basics of states
	$LF
]h3
[div class=p 
	"Before moving on to advanced movement, animations, or states, need to be understood. Altaïr follows a state system: he can only be in one state at once. Certain states override others: this is 
	[b 
		"animation cancelling
	]b
	", and is explained in depth in the Animation Cancelling seciton.
	$LF
]div
[div class=p 
	"Here is a list of all the relevant states, and their priority. If a state has priority over another, you have to wait for it to end to trigger the lower priority one. To have more information about them, check their respective mentions.
	$LF
]div
[div class=p 
	"Idle < Stop (< High Jump) < Walking (< Crouch Jump) < Running < Long Jump = Double Jump = Triple Jump < Wallgrab = Wallclimb = Walljump = Edge grab = Edge hang = Ladder climb = Ladder climbed = Net climb = Net jump = Short balance on bridge = Long balance on bridge = Bridge walking = Crossbow shooting <  Edge climbing < Archer shot = Wall hugging < Knocked back by enemy < Attacked = Knight grabbed < Wooden box grabbing = Metal box pushing = Metal box pulling < Attacking (any move) = Grappling = Rope grabbing = Kicking = Triggering = Enemy grappling = High fall damage = Bomb throwing = Passing over = Sliding = Holding a torch
	$LF
]div
[h3 id=AdvancedMovementAndStates 
	" Advanced movement and states
	$LF
]h3
[div class=p 
	"If you are confused about some of the mentions in this part, check the section above.
	$LF
]div
[h4 id=Wallhugging 
	" Wallhugging 
	$LF
]h4
[div class=p 
	"There are two walls in this game: grabbable walls and ungrabbable walls. Ungrabbable walls are made in an effort for the player to not go out of bounds.. though we all know how that turns out. These are the main problem, however; touching an ungrabbable wall of any sort will put Altair into a 
	[b 
		"wallhugging 
	]b
	"animation, where he wildly flails his arms up like an idiot and falls while preserving his momemtum from his jump. However, the main obstacle is that once Altaïr wallhugs, his direction cannot be turned at all: this means, if your direction is up right and hit a wall to the right, you are locked to that direction. Wallhugging is always avoided when it wastes time, though it is useful in cases to stop the jump timer.
	$LF
]div
[h4 id=WallclimbingWallgrabbingWalljumpingGlitchedWallClimbingEdgeGrabbingHangingAndClimbing 
	" Wallclimbing, wallgrabbing, walljumping, glitched wall climbing, edge grabbing, hanging and climbing.
	$LF
]h4
[div class=p 
	[b 
		"Wallclimbing
	]b
	" is, quite simply, walking onto a climbable wall. Altair will climb on walls next to him if you hold the relative direction to them. If Altaïr has the walljump, he can walljump off a wallclimbed wall.
	$LF
	"Grabbable walls will make Altaïr 
	[b 
		"cling
	]b
	" to them for 22 frames if he jumps/double jumps/triple jump/crouch jump instead of walking up to the wall (this does not work with a high jum) before falling and going into the wallhugging state.  From a wallgrab, Altaïr can 
	[b 
		"walljump
	]b
	" and grab another wall if there is one, essentially allowing for infinite walljumping be it two grabbable opposite walls. This is abused in the movie severly.
	$LF
]div
[div class=p 
	[b 
		"Glitched wall climbing
	]b
	" may be the single most important trick in the game: due to a programming error, you can wallclimb up the wall you are wallgrabbing! Thanks to most of the boundiary walls being.. not exactly high, in a lot of cases, you can do a double jump into a wallgrab and a glitched wallclimb, which is most of the time enough to reach the top of the wall and grab its edge, essentially giving you out of bounds access.
	$LF
]div
[div class=p 
	"When Altaïr reachs the top of an grabbable wall, he will be 
	[b 
		"edge grabbing
	]b
	", taking three frames, then 
	[b 
		"edge hanging
	]b
	". In the edge hanging state, Altair can move all around the edge of the wall. To be able to 
	[b 
		"edge climb
	]b
	", hovewer, there must not be an obstructing element that allows Altair to not stand up once he climbs the edge of the wall, such as another wall or an enemy. Falling from edge hanging makes Altaïr take noticably less fall damage.
	$LF
]div
[h4 id=LadderAndNetClimbing 
	" Ladder and net climbing
	$LF
]h4
[div class=p 
	"Climbing ladders and nets are noticably different from wall climbing. Ladder climbing is extremely fast and upwards; upon reaching the top of the ladder, Altair will be in the ladder climbed state, going on the edge adjacent to the ladder. Jumping perfectly at the 
	$LF
]div
[div class=p 
	[b 
		"Net climbing
	]b
	" is much more tedious: you move very slowly in one direction. The fastest way of movement is just normally climbing the net. Altaïr can also do a 
	[b 
		"net jump
	]b
	": this does not move him any faster, but gives him a burst of speed.
	$LF
]div
[h4 id=KickingTriggeringEnemyGrappling 
	" Kicking, triggering, enemy grappling
	$LF
]h4
[div class=p 
	"When pressing A while any other action requiring the use of A is not on screen (triggering or enemy grappling), Altair will do a 
	[b 
		"kick
	]b
	". This action is extremely useful in normal play because unlike many other states, enemies cannot attack you  in this state. However, it isn't useful in a TAS.
	$LF
]div
[div class=p 
	[b 
		"Triggering
	]b
	" is using A to execute a scripted animation (pushing or kicking). It is defined when the A button is on screen.  
	[b 
		"Enemy grappling
	]b
	" is the same, except Altaïr will grapple an enemy instead. 
	$LF
]div
[h4 id=FallDamage 
	" Fall damage
	$LF
]h4
[div class=p 
	"The fall damage state is glitched: you only do it upon landing much larger distances than intended, at a minimum of 5.9 health damage taken upon falling. This has Altaïr recovering for quite a little bit of time.
	$LF
]div
[h4 id=BoxMechanics 
	" Box mechanics
	$LF
]h4
[div class=p 
	"There are two types of boxes: wooden and metal. Their main differences is that wooden boxes are 
	[b 
		"carried
	]b
	", while metal boxes are 
	[b 
		"pushed
	]b
	" and 
	[b 
		"pulled
	]b
	".
	$LF
]div
[div class=p 
	"Wooden boxes are beyond broken: once Altaïr carries one, he becomes a lawnmower of death. Every enemy he comes across is knocked to the ground and Altaïr is immune to archer shots. The best part? By dropping the box over unsuspecting enemies, 
	[b 
		"every single enemy in the game
	]b
	" is instant killed! This is because when Altaïr or an enemy doens't have enough space to stand up, they get instant killed. 
	$LF
]div
[div class=p 
	"As such, the wooden box is effectively the best weapon in the entire game, being the fastest, granting you immunity to all attacks and also serving as a platform.
	$LF
]div
[div class=p 
	"Metal boxes, compared to these behemoths, are a lot more lame: you can only push them around, and it is much slower. On top of that, grabbing a metal box requires being in the idle (!!!) animation.
	$LF
]div
[div class=p 
	"Thankfully, a glitch called quick grabbing exists: after ungrabbing a box, you can grab another one for the next 22 frames, as long as your direction doens't change. This is intended to regrab the same box, but you can use it to grab another metal box very quickly.
	$LF
]div
[h4 id=PassingOver 
	" Passing over
	$LF
]h4
[div class=p 
	[b 
		"Passing over
	]b
	" is a very pointless state, used on barrels. When approaching a barrel and walking up them, Altaïr will do a small hop over it. 
	$LF
]div
[h3 id=ExpertMovementTechniques 
	" Expert movement techniques
	$LF
]h3
[h4 id=Slopes 
	" Slopes
	$LF
]h4
[div class=p 
	"Slopes are one of the more abusable mechanics. When Altaïr encounters a slope (which is much more common than you may thing: every terrain that's bent in this game is a slope): he can either run up it, which will give him a speed boost that is extremely big, or 
	[b 
		"slide 
	]b
	" off it, which is nothing really special. The main attraction of slopes is that you cannot hang off them: this is very useful when trying to make your way up something if a slope is present. Just hitting the slope will instantanely warp Altaïr up without any effort, saving having to edge grab instead. Doing a slope warp like this also resets your jump timer.
	$LF
]div
[h4 id=AdvancedJumpingTechniques 
	" Advanced jumping techniques
	$LF
]h4
[div class=p 
	"We stated how to jump earlier; however, there's a bit more to it.. The direction of your jump influences a lot of things: this is the direction that was pressed at the same time as the B input. Once Altaïr jumps in a direction, nothing can change it until the jump ends or is interrupted. However, while the facing direction can be changed, the direction in which Altaïr's momentum is going can be redirected by simply holding different directions during the jump. A long jump facing right but with Left held the full time will be considerably slowed down, while a long jump facing right and holding Right will go noticably farther.
	$LF
]div
[div class=p 
	"This brings jumping to the next important part, and one that saves a lot of time: avoiding edgegrabs and edgeclimbs. When Altaïr jumps onto a wall and an edge is nearby, instead of simply landing on the top of the wall, he will grab the edge of that wall instead and climb it, wasting a considerable amount of time. There is one abusable fact about this: an edge cannot be grabbed if you are not facing the opposite direction to the wall. For example, you can only grab the edge of a wall that's facing south by facing up, the opposite direction. If you come at the wall with any other direction, like up left or up right, you will not grab the edge.
	$LF
]div
[div class=p 
	"What does this allow us to do? With these jumps, we can approach the top of a wall while completely ignoring the edge grab boundiary, which is quite large. This also allows us to do slightly lower jumps, since if Altair is close to the edge of a wall but cannot grab it, he will simply clip up that wall.
	$LF
]div
[div class=p 
	"Another trick, used often, is retaining momentum. Suppose Altaïr does a jump up right; if we follow up with a frame perfect jump the moment Altaïr lands, Altaïr will continue going in that direction with his jump, no matter the facing direction of the jump. This is a double-edged sword: while it is useful in some cases to not waste time turning, in other cases, it will be detrimental, and there will be a need to 'wait out' a frame so that Altaïr's next jump doens't retain momentum.
]div
