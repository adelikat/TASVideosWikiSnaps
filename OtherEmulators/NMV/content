12
[div class=p 
	[code 
		"nmv
	]code
	" is the movie capture format of 
	(__wikiLink|displaytext=Nintendulator|href=/OtherEmulators)
	", a NES emulator.
	$LF
]div
[h3 id=NmvFileFormatDescription 
	" NMV file format description
	$LF
]h3
[div class=p 
	"NMV file consists of a 16-byte header and various blocks that depend on settings. The same file format is used for savestates.
	$LF
]div
[div class=p 
	"Header format:
	$LF
]div
[pre 
	"  000 4-byte signature: 4E 53 53 1A "NSS\x1A"
	$LF
	"  004 4-byte version string (example "0960")
	$LF
	"  008 4-byte file size, not including the 16-byte header
	$LF
	"  00C 4-byte file type string
	$LF
	"     "NSAV" - standard savestate
	$LF
	"     "NREC" - savestate saved during movie recording
	$LF
	"     "NMOV" - standalone movie file
	$LF
]pre
[div class=p 
	"Individual blocks begin with an 8-byte header, consisting of a 4-byte signature and a 4-byte length (which does not include the length of the block header).
	$LF
]div
[div class=p 
	"If the movie begins with a savestate, all of the savestate blocks (CPUS, PPUS, APUS, CTRL, NPRA, NCRA, MAPR, GENI, and DISK) will be located here.
	$LF
]div
[div class=p 
	"The final block in the file is of type "NMOV" and contains the following data:
	$LF
]div
[pre 
	"  000 1-byte controller #1 type (see below)
	$LF
	"  001 1-byte controller #2 type (or four-score mask, see below)
	$LF
	"  002 1-byte expansion port controller type
	$LF
	"  003 1-byte number of bytes per frame, plus flags
	$LF
	"     bit 6: Game Genie active
	$LF
	"     bit 7: Framerate
	$LF
	"         if "0", NTSC timing
	$LF
	"         if "1", PAL timing
	$LF
	"  004 4-byte little-endian unsigned int: rerecord count
	$LF
	"  008 4-byte little-endian unsigned int: length of movie description
	$LF
	"  00C (variable) null-terminated UTF-8 text, movie description (currently not implemented)
	$LF
	"  ... 4-byte little-endian unsigned int: length of controller data in bytes
	$LF
	"  ... (variable) controller data
	$LF
]pre
[div class=p 
	"The controller data contains <number_of_bytes> / <bytes_per_frame> frames.
	$LF
]div
[div class=p 
	"Note that the savestate data must come 
	[em 
		"before
	]em
	" controller data.
	$LF
]div
[div class=p 
	"Controller data is variant, depending on which controllers are attached at the time of recording. The following controllers are implemented:
	$LF
]div
[pre 
	"0 - Unconnected
	$LF
	"1 - Standard Controller (1 byte)
	$LF
	"2 - Zapper (3 bytes)
	$LF
	"3 - Arkanoid Paddle (2 bytes)
	$LF
	"4 - Power Pad (2 bytes)
	$LF
	"5 - Four-Score (special)
	$LF
	"6 - SNES controller (2 bytes) - A/B become B/Y, adds A/X and L/R shoulder buttons
	$LF
	"7 - Vs Unisystem Zapper (3 bytes)
	$LF
]pre
[div class=p 
	"When a Four-Score is indicated for Controller #1, the Controller #2 byte becomes a bit mask to indicate which ports on the Four-Score have controllers connected to them. Each connected controller stores 1 byte per frame. Nintendulator's Four-Score recording is seemingly broken.
	$LF
]div
[div class=p 
	"The expansion port can potentially have an additional controller connected. The following expansion controllers are implemented:
	$LF
]div
[pre 
	"0 - Unconnected
	$LF
	"1 - Famicom 4-player adapter (2 bytes)
	$LF
	"2 - Famicom Arkanoid paddle (2 bytes)
	$LF
	"3 - Family Basic Keyboard (currently does not support demo recording)
	$LF
	"4 - Alternate keyboard layout (currently does not support demo recording)
	$LF
	"5 - Family Trainer (2 bytes)
	$LF
	"6 - Oeka Kids writing tablet (3 bytes)
	$LF
]pre
[div class=p 
	"Standard controllers store data in the following format:
	$LF
]div
[pre 
	"01: A
	$LF
	"02: B
	$LF
	"04: Select
	$LF
	"08: Start
	$LF
	"10: Up
	$LF
	"20: Down
	$LF
	"40: Left
	$LF
	"80: Right
	$LF
]pre
[div class=p 
	"Other controllers store data in their own formats, and are beyond the scope of this document.
	$LF
]div
[div class=p 
	"Depending on the mapper used by the game in question, an additional byte of data may be stored during each frame. This is most frequently used for FDS games (storing either the disk number or 0xFF to eject) or VS Unisystem coin/DIP switch toggles (limited to 1 action per frame). This byte exists if the bytes per frame do not match up with the amount of bytes the controllers take up.
	$LF
]div
[div class=p 
	"Controller update data is emitted to the movie file during every frame.
	$LF
]div
[hr 
]hr
[div class=p 
	"See also: 
	(__wikiLink|href=/EmulatorResources|implicitdisplaytext=EmulatorResources)
	", 
	(__wikiLink|displaytext=frequently asked questions|href=/FAQ)
]div
