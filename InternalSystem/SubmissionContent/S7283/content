15
[div class=p 
	[img class=embed mw-100 src=https://i.imgur.com/VI4QGhu.png 
	]img
	$LF
	[img class=embed mw-100 src=https://i.imgur.com/7MY7J36.png 
	]img
	$LF
]div
[pre 
	$LF
]pre
[h3 id=GameObjectives 
	" Game objectives
	$LF
]h3
[ul 
	[li 
		" Emulator used: BizHawk 2.7.0
		$LF
	]li
	[li 
		" Aims for fastest time
		$LF
	]li
	[li 
		" when you walkin
		$LF
	]li
	[li 
		" when you walkin
		$LF
	]li
	[li 
		" when you walkin
		$LF
	]li
	[li 
		" when you walkin
		$LF
	]li
	[li 
		" when you walkin
		$LF
	]li
	[li 
		" when you walkin
		$LF
	]li
	[li 
		" when you walkin
		$LF
	]li
	[li 
		" when you walkin
		$LF
	]li
	[li 
		" when you walkin
		$LF
	]li
	[li 
		" when you walki
		[a href=https://www.youtube.com/watch?v=d_dLIy2gQGU rel=noopener external nofollow 
			"n
		]a
		$LF
	]li
	[li 
		" 
		[img class=embed mw-100 src=https://i.imgur.com/xycU1cu.png 
		]img
		$LF
	]li
]ul
[h3 id=Comments 
	" Comments
	$LF
]h3
[div class=p 
	"Large, slow, and ready to profess his love for everyone at a moment's notice, Barney aimlessly wanders around as fast as his legs can take him. When you're done watching that episode of The Simpsons, though, I'd like to tell you about this video game.
	$LF
]div
[div class=p 
	"Barney's Hide & Seek Game is wonderful, because it allows me to do one of my favorite bits, the one where I replace "and" with as many variations as possible. Barney's Hide b/w Seek Game tells the tale of Barney the Dinosaur (short for Barnold the Dinosaurold), a nightmarish creature who preys on the hopes of young children. The children hide from it, terrified. They, too, pray, except this time, it's for their lives. This joke works better when spoken. Instead of playing Barney's Hide alongside Seek Game normally, which presumably involves hiding and perhaps even seeking if you've eaten all your vegetables, Barnold decides instead to just put the fear of God into these children by walking by and quite obviously pretending it doesn't see them.
	$LF
]div
[div class=p 
	"Barney's Hide with a side of Seek Game is another in a long line of video-type game experiences that I, Samsara, actually owned and played as a small child. I remember that being a lot more of a pleasant experience than TASing it, but then again I also remember CBT a bit more fondly than the time I spent TASing Barney's Hide, perchance to Seek Game. I'll leave it up to you which CBT I mean. The reason this run exists is because I was kinda drunk.
	$LF
]div
[div class=p 
	"This TAS of Player Unknown's Barney Game is about 3 seconds faster than 
	(__wikiLink|displaytext=the previous record by HappyLee|href=/1715M)
	".
	$LF
]div
[h3 id=YouGuessedItBoysThereSBarneySpeedtech 
	" You Guessed It, Boys! There's Barney Speedtech!
	$LF
]h3
[div class=p 
	"Just what we all needed!
	$LF
]div
[h4 id=Walkin 
	" walkin
	$LF
]h4
[div class=p 
	"when you
	$LF
]div
[h4 id=Walkin_2 
	" walkin
	$LF
]h4
[div class=p 
	"Picture a scene in your mind: You are TASing EveryBarney's Gone to the Rapture, and you notice that walking forward for a long period of time is slower than a different file in which you have walked forward for a long period of time. You realize that, sometimes, releasing the direction for a frame will save several frames in turn. You have no idea when, why, how, what, where, or who this happens, you just know that it does. Congratulations, you now know why this TAS has a 5 digit rerecord count.
	$LF
]div
[h4 id=Walkin_3 
	" walkin
	$LF
]h4
[div class=p 
	"Actual speedtech tho involving walkin' on turtles to build speed before falling off of them. Open The Door, Get On The Floor, EveryBarney Walk The Dinosaur is really just a game about walkin' at the end of the day. Maybe not the end of the day. Most of this game takes place in the middle of the day if anything.
	$LF
]div
[h4 id=Cancellin 
	" cancellin
	$LF
]h4
[div class=p 
	"oh crap whered this come from
	$LF
]div
[div class=p 
	"You can cancel some animations when pressing down. Notably, you can cancel the jump animation, which actually reduces a little bit of lag, but more notably allows you to accelerate in the air. That's right: For once, cancelling actually works!
	$LF
]div
[h3 id=StageByStageComments 
	" Stage by stage comments
	$LF
]h3
[h4 id=StageOne 
	" Stage One
	$LF
]h4
[div class=p 
	"walkin
	$LF
]div
[h4 id=StageTwo 
	" Stage Two
	$LF
]h4
[div class=p 
	"walkin
	$LF
]div
[h4 id=StageThree 
	" Stage Three
	$LF
]h4
[div class=p 
	"look
	$LF
]div
[div class=p 
	"it is turtles,
	$LF
]div
[h4 id=StageFour 
	" Stage Four
	$LF
]h4
[div class=p 
	"walkin
	$LF
]div
[hr 
]hr
[h3 id=ActualSpeedtech 
	" Actual Speedtech?
	$LF
]h3
[h4 id=Walkin_4 
	" walkin
	$LF
]h4
[div class=p 
	"Barney's good ol' walkin' speed increases and decreases in increments of 12, with a "maximum" of 355. Below 355, speed will increase by 12 units per frame. Above 355, speed will decrease by 12 units per frame. What this means is that when you reach 355 speed, your speed will be constantly oscillating by 12 units, as it goes above and then below 355 every frame. What this means for a TAS is that you can in fact slightly change your max speed when you walkin' by carefully controlling your movement. The lowest speed you can get is an oscillation between 344 and 356, the highest you can get is 354 and 366. For the sake of making things easier for once in my life, I'll just split the difference and call these 350 and 360. This is a staggering 2.857% increase in speed. Imagine how much faster it would be to walk from Warsaw to Madrid if you were walkin' 2.857% faster! 15 hours. It'd take 15 less hours. I calculated this. Don't ask why.
	$LF
]div
[h4 id=Jumpin 
	" jumpin
	$LF
]h4
[div class=p 
	"Jumpin' is weird. For starters, I put together a helpful infographic to explain how jumpin' in this game works:
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.imgur.com/NStTuf6.png 
	]img
	$LF
]div
[div class=p 
	"Basically, LeBarn James over here will only ever jump if there's a platform he can jump up to, and his movement is determined by where you are in relation to the platform. Now, hopefully, nobody will ask why I'm not constantly jumping, especially when I say it's the fastest form of movement in the game. Jumpin' gives Barney Cable a whopping 416 speed for the duration of the jump. Normally, this is pretty great, but there are two things wrong with jumpin' under normal circumstances. One, you tend to get a fair bit more lag on higher ground, so each platform needs to be tested thoroughly in order to find which ones negatively affect lag the least. The other is probably obvious to people who frequent the math challenges thread and read the previous section: Barney Mines decelerates 12 units of speed per frame if he's above 355 speed. From 416, he will decelerate 12 units at a time, which puts him at the lowest walkin' speed value.
	$LF
]div
[div class=p 
	"Also, I just found out that there are only two drafted NBA players in history named Barney, and they were both drafted from the same college. It's a small world after all. Wait, wrong repetitive nightmare song.
	$LF
]div
[div class=p 
	"All that being said...
	$LF
]div
[h4 id=Cancellin_2 
	" cancellin
	$LF
]h4
[div class=p 
	"I did actually explain this one semi-legitimately above, but I'll reiterate here anyway. Pressing Down will put Barney into autoplay mode until you press some other dang directions again. This is extremely useful for completely unintended reasons! First, this can actually reduce lag when you walkin'. It does briefly stop Barney for a frame, so it has to reduce multiple frames of lag in order to save time, but it does a pretty good job of lag reduction in cases where the game isn't already lagging a lot. Second, and far more importantly, this cancels the jumpin' animation, which allows for some fun midair tech. This will always reduce lag, so that's great, but there's a much bigger benefit to it: You're normally Simon Belmont'd into your jumping arc, but cancelling the animation allows you to accelerate or decelerate in midair like a normal human being. This ends up saving a significant amount of time in stage 3, because there's a lot of jumpin' and needing to move in different directions after jumpin'.
	$LF
]div
[div class=p 
	"Most notably, though, is that this lets you easily reach max speed after every jump, simply by adding in one frame of movement in the opposite direction before landing, as it changes your speed ever so slightly enough that it decelerates down to the maximum value instead of the minimum. Video games!
	$LF
]div
[h3 id=OkayUhLetMeExplain 
	" Okay, uh, let me explain
	$LF
]h3
[div class=p 
	"This is actually not a joke submission, despite my allegedly award-winning writing. This does beat the current RTA record of 4:20 (lmao) with a time of 4:17 (significantly less funny), and improves the 
	(__wikiLink|displaytext=previous rejected submission|href=/5780S)
	" of this game, which was created before the record of 4:20 (lmao) was achieved, by about 6 seconds. There actually was a lot of effort put into optimizing, mainly through brute forcing optimal walking inputs by hand. This can almost certainly be improved through better understanding of exactly when and where to change up the inputs, but much like everything else I try to TAS, I lack the technical knowhow to be able to figure that out myself. 
	[del 
		"yall really made me senior judge even though i am a large idiot huh
	]del
	$LF
]div
[div class=p 
	"Despite my name being first, Spike was the one who started looking into this game. I just had enough alcohol in my system to look into it even further and discover all of the weird little ways to optimize it. Ultimately, while working, I gained a goal with this run, and that's to bully the Judge team into accepting it or else they're all fired. Wait, sorry, I meant "prove that triviality is something we need to move past as a judgement metric". The keys are right next to each other, I swear. Even games that look simple on the outside, including this baby game that literally plays itself if you let it, can be non-trivial to optimize.
	$LF
]div
[div class=p 
	"I feel like there could be a big breakthrough in this game, weirdly enough. It's very on-rails, but there's just barely enough weirdness to be able to mess with it a little bit here and there. I would highly encourage anyone interested in literal baby games to give this a look, and I'm looking forward to the results in 2025 when I get back around to it. Look forward to my next TAS, where I roll a fat one, in Fatty Bear's Birthday Surprise.
	$LF
]div
[h3 id=SuggestedScreenshot 
	" Suggested Screenshot
	$LF
]h3
[div class=p 
	[img class=embed mw-100 src=https://i.imgur.com/xycU1cu.png 
	]img
	$LF
]div
[h3 id=OkFine 
	" ok fine
	$LF
]h3
[div class=p 
	[img class=embed mw-100 src=https://i.imgur.com/izMvo37.png 
	]img
	$LF
]div
[h3 id=OkFine_2 
	" OK FINE
	$LF
]h3
[div class=p 
	"Frame 11317:
	$LF
	[br 
	]br
	[img class=embed mw-100 src=https://i.imgur.com/UpVNB0K.png 
	]img
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": when you judgin
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": Setting to Delayed, per author request.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": File replaced with a 120 frames improvement.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": Hello and welcome to TASVideos senior staff, Samsara!
	$LF
]div
[div class=p 
	"This submission proves that even a literal baby game can turn into a compelling optimization challenge. Great job! Accepting for Standard.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/EZGames69 
		"EZGames69
	]a
	": Processing...
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": I apologize if I've caused any confusion, since there is one important thing that I forgot to address in my judgement. This game does eventually reach the credits on its own if no inputs are provided, which would effectively result in a zero length TAS. Since that would be absolute trivial, it's mandatory to aim for fastest real-time instead. And even though the site does still display movie length depending on input frames, we still consider real-time completion as an acceptable definition of fastest completion, for which we already have precedents, like 
	(__wikiLink|displaytext=this one|href=/7179S)
	". I also want to note that the difference between this submission and the relative RTA WR is about 3 seconds, which is much more than the difference between the SMB TAS record and the relative RTA record. This alone should dispel any doubt about the superplay value of this submission.
]div
