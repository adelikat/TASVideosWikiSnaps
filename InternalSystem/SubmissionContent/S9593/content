8
[div class=p 
	[small 
		"Since this article is being written about a year and a half after I finished making this TAS, it may contain ambiguous expressions. Also, the author is a novice in TAS and may have written some incorrect things. Please forgive me.
	]small
	$LF
]div
[div class=card mb-2 
	[div class=card-header 
		[strong 
			"Table of contents
		]strong
	]div
	[div class=card-body 
		[ul 
			[li 
				[a href=#WhatIsUnintendedExits 
					"What Is "unintended exits"?
					$LF
				]a
			]li
			[li 
				[a href=#GameObjectives 
					"Game Objectives
					$LF
				]a
			]li
			[li 
				[a href=#PathwayOverview 
					"Pathway Overview 
					$LF
				]a
				[ul 
					[li 
						[a href=#WhyNotViaDgh 
							"Why not via DGH? 
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#DetailsOfEachLevel 
					"Details Of Each Level
					$LF
				]a
				[ul 
					[li 
						[a href=#Yi21 
							"YI2(1)
							$LF
						]a
					]li
					[li 
						[a href=#Yi3 
							"YI3
							$LF
						]a
					]li
					[li 
						[a href=#Yi4 
							"YI4
							$LF
						]a
					]li
					[li 
						[a href=#Yi1 
							"YI1
							$LF
						]a
					]li
					[li 
						[a href=#C1 
							"C#1
							$LF
						]a
					]li
					[li 
						[a href=#Dp11 
							"DP1(1)
							$LF
						]a
					]li
					[li 
						[a href=#Yi22 
							"YI2(2)
							$LF
						]a
					]li
					[li 
						[a href=#Ds1 
							"DS1
							$LF
						]a
					]li
					[li 
						[a href=#Dp12 
							"DP1(2)
							$LF
						]a
					]li
					[li 
						[a href=#Dsh 
							"DSH
							$LF
						]a
					]li
					[li 
						[a href=#Ds2 
							"DS2
							$LF
						]a
					]li
					[li 
						[a href=#Dp3 
							"DP3
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#AceBrkMethod 
					"ACE: BRK-method
					$LF
				]a
				[ul 
					[li 
						[a href=#Yi22_2 
							"YI2(2)
							$LF
						]a
					]li
					[li 
						[a href=#Dp12_2 
							"DP1(2)
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#DetailsOfMinorGlitches 
					"Details Of Minor Glitches 
					$LF
				]a
				[ul 
					[li 
						[a href=#StoringBerryGlitch 
							"Storing Berry Glitch 
							$LF
						]a
					]li
					[li 
						[a href=#YoshiRelatedGlitches 
							"Yoshi-related Glitches 
							$LF
						]a
					]li
					[li 
						[a href=#NullSpriteOverload 
							"Null Sprite Overload 
							$LF
						]a
					]li
				]ul
			]li
		]ul
	]div
]div
[h2 id=WhatIsUnintendedExits 
	"What Is "unintended exits"?
	$LF
]h2
[div class=p 
	"Even though SMW has so many interesting glitches, only a few of them are available for speed runs, which is very unfortunate. So, I have devised a regulation to make the most of the interesting glitches inherent in SMW and make it work as a speed run (not an official regulation).  
	$LF
]div
[div class=p 
	"The rule is: “Complete the game without any game strategies intended by the game developer.” 
	[br 
	]br
	$LF
	"In other words, you are not allowed to use the goal tape sprites that have already been intentionally placed to clear the course or defeat bosses, including Bowser, in order to advance. 
	$LF
]div
[div class=p 
	"I didn't want to use ACE at all, but it would have been a little boring without “ACE can only be used when recovering from a crash”.
	[br 
	]br
	$LF
	"So far, the rules are vague... 
	$LF
]div
[h2 id=GameObjectives 
	"Game Objectives
	$LF
]h2
[ul 
	[li 
		"Emulator used ：BizHawk 2.6.1 
		$LF
	]li
	[li 
		"Rules... Clear the game by prohibiting any game strategy intended by the game developer /ACE can only be used when recovering from a crash 
		$LF
	]li
	[li 
		"Clear as soon as possible 
		$LF
	]li
	[li 
		"Packing a variety of glitches to the max
		$LF
	]li
	[li 
		"Make it interesting TAS 
		$LF
	]li
	[li 
		"Allow L+R / U+D 
		$LF
	]li
]ul
[div class=p 
	[small 
		"I used two controllers (the ACE part) because I wasn't sure how to use the 8 controllers of the multitap in BizHawk. (If anyone knows more about this, please let me know...
	]small
	")
	$LF
]div
[h2 id=PathwayOverview 
	"Pathway Overview 
	$LF
]h2
[div class=p 
	"Indentation is the level used for setup 
	$LF
]div
[ul 
	[li 
		"YI2(1)...Reznor-kill 
		$LF
	]li
	[li 
		"YI3...wings	 
		$LF
	]li
	[li 
		"YI4...Reznor-kill 
		$LF
		[ul 
			[li 
				"YI1...get an ORB in item reserve and die (not ACE) 
				$LF
			]li
		]ul
	]li
	[li 
		"C#1...use the ORB 
		$LF
	]li
	[li 
		"DP1(1)...goal tape modification (secret exit) 
		$LF
		[ul 
			[li 
				"YI2(2)...get a key in item reserve (ACE) 
				$LF
			]li
		]ul
	]li
	[li 
		"DS1...use stun glitch to spawn a keyhole and use the key (secret exit) 
		$LF
		[ul 
			[li 
				"DP1(2)...get ORB and cape (ACE) 
				$LF
			]li
		]ul
	]li
	[li 
		"DSH...get flower and use the ORB 
		$LF
	]li
	[li 
		"DS2...Reznor-kill 
		$LF
	]li
	[li 
		"DP3...gray platform glitch (credits) 
		$LF
	]li
]ul
[h3 id=WhyNotViaDgh 
	"Why not via DGH? 
	$LF
]h3
[div class=p 
	[img class=embedright mw-100 src=https://i.imgur.com/W2RZw4g.jpeg width=200 
	]img
	$LF
	"If you make a normal goal at DGH, you will go to TSA and there is no way to proceed to DP3! (Since $187B is in the Miscellaneous sprite table and Goal tape sprite use it as Goal types (#$00-#$03 = normal; #$04-#$07 = secret) so it seems that secret exit and normal exit are reversed in the actual game processing.) 
	$LF
]div
[h2 id=DetailsOfEachLevel 
	"Details Of Each Level
	$LF
]h2
[div class=p 
	"The configuration is as follows
	$LF
]div
[ul 
	[li 
		"n) number of the corresponding frame
		$LF
		[ul 
			[li 
				"description around n to n+1
				$LF
			]li
			[li 
				"Subscripts match the subscripts in the image.
				$LF
			]li
		]ul
	]li
	[li 
		"n+1)...
		$LF
	]li
]ul
[h3 id=Yi21 
	"YI2(1)
	$LF
]h3
[div class=p 
	[img class=embedright mw-100 src=https://i.imgur.com/W8OpLIr.jpeg width=200 
	]img
	$LF
]div
[ul 
	[li 
		"0)1634
		$LF
		[ul 
			[li 
				"slot number adjustment by juggling shells
				$LF
			]li
		]ul
	]li
	[li 
		"1)2149
		$LF
		[ul 
			[li 
				"Duplicate the item box to produce three Yoshi’s.
				$LF
			]li
		]ul
	]li
	[li 
		"2)2335
		$LF
		[ul 
			[li 
				"Yoshi#5...store#2(avoid becoming invisible when the tongue is at its minimum length because you will not be able to eat-cancel with 8) 
				$LF
			]li
			[li 
				"Yoshi#4...(slot number adjustment) 
				$LF
			]li
			[li 
				"Yoshi#3...(lose interaction with the object by using null sprite overload later) 
				$LF
			]li
		]ul
	]li
	[li 
		"3)2483
		$LF
		[ul 
			[li 
				"Carry shell#1.
				$LF
			]li
			[li 
				"Eat ten berries.
				$LF
			]li
			[li 
				"Take the checkpoint and get bigger.
				$LF
			]li
		]ul
	]li
	[li 
		"4)3511
		$LF
		[ul 
			[li 
				"Over 2f feet, yoshi#5 (the highest slot) gives birth off screen.
				$LF
			]li
			[li 
				"Take advantage of freeze and do double tongue glitch.
				$LF
			]li
		]ul
	]li
	[li 
		"5)3580
		$LF
		[ul 
			[li 
				"null sprite overload→ object interaction of yoshi#3 disappears.
				$LF
			]li
		]ul
	]li
	[li 
		"6)3858
		$LF
		[ul 
			[li 
				"Do stun glitch with P-switch.
				$LF
			]li
			[li 
				"Set a stun timer on the fish using the bounce block above. 
				$LF
			]li
			[li 
				"Yoshi#3...Despawn him by swallowing the shell. (Whether or not Yoshi is stuffing his mouth with food is succeeded by the next visible Yoshi.) 
				$LF
			]li
		]ul
	]li
	[li 
		"7)3893
		$LF
		[ul 
			[li 
				"Yoshi#4...He's just for slot number adjustment, so despawn him. 
				$LF
			]li
		]ul
	]li
	[li 
		"8)3920
		$LF
		[ul 
			[li 
				"Yoshi#5...Finish setup with eat-cancel.
				$LF
			]li
		]ul
	]li
	[li 
		"9)4140
		$LF
		[ul 
			[li 
				"set up of stun glitch
				$LF
			]li
		]ul
	]li
	[li 
		"10)4323
		$LF
		[ul 
			[li 
				"kill Reznor
				$LF
			]li
		]ul
	]li
]ul
[h3 id=Yi3 
	"YI3
	$LF
]h3
[div class=p 
	"See 
	[a href=https://tasvideos.org/6613S rel=noopener external nofollow 
		"warpsTAS by bruno visnadi.
	]a
	[br 
	]br
	$LF
	"Due to lack of ability, I was not able to fully imitate his methods. There is room for improvement. I did not know this when I created this, but there seems to be a frame rule that when duplicating a block, only the left side succeeds on even frames and the right side on odd frames (
	[a href=https://x.com/Kaizoman666/status/1749544577676321044 rel=noopener external nofollow 
		"kaizoman told me this
	]a
	"). 
	$LF
]div
[pre 
	$LF
]pre
[h3 id=Yi4 
	"YI4
	$LF
]h3
[div class=p 
	"See 
	[a href=https://tasvideos.org/6613S rel=noopener external nofollow 
		"warpsTAS by bruno visnadi.
	]a
	$LF
]div
[h3 id=Yi1 
	"YI1
	$LF
]h3
[div class=p 
	"See 
	[a href=https://tasvideos.org/6613S rel=noopener external nofollow 
		"warpsTAS by bruno visnadi.
	]a
	$LF
]div
[h3 id=C1 
	"C#1
	$LF
]h3
[div class=p 
	"See 
	[a href=https://tasvideos.org/6613S rel=noopener external nofollow 
		"warpsTAS by bruno visnadi.
	]a
	$LF
]div
[h3 id=Dp11 
	"DP1(1)
	$LF
]h3
[div class=p 
	[img class=embedright mw-100 src=https://i.imgur.com/xP9Vksd.jpeg width=200 
	]img
	$LF
]div
[ul 
	[li 
		"0)13763
		$LF
		[ul 
			[li 
				"Get two feathers.
				$LF
			]li
			[li 
				"Carry Shell#5.
				$LF
			]li
			[li 
				"Scroll right to adjust the position of the blue shell-less koopa.
				$LF
			]li
		]ul
	]li
	[li 
		"1)15015
		$LF
	]li
]ul
[div class=p 
	"(Change tweakers of #1 and #3 using null sprite overload later.)
	$LF
]div
[ul 
	[li 
		[ul 
			[li 
				"Yoshi#3...store #8 (Drop without despawning under the ground later.) 
				$LF
			]li
			[li 
				"Yoshi#2...(slot number adjustment) 
				$LF
			]li
			[li 
				"Yoshi#1...(Finally, despawn at the edge of the screen, the role of the trigger.)
				$LF
			]li
		]ul
	]li
	[li 
		"2)15159
		$LF
		[ul 
			[li 
				"To do double tongue glitch, take the damage and release the item in the reserve.
				$LF
			]li
		]ul
	]li
	[li 
		"3)15209
		$LF
		[ul 
			[li 
				"If Yoshi#2 is there, you can't do 7, so run him left, drop him in the hole, and despawn him. 
				$LF
			]li
		]ul
	]li
	[li 
		"4)15327
		$LF
		[ul 
			[li 
				"Do double tongue glitch.
				$LF
			]li
		]ul
	]li
	[li 
		"5)15385
		$LF
		[ul 
			[li 
				"null sprite overload 
				$LF
			]li
		]ul
	]li
	[li 
		"6)15516
		$LF
		[ul 
			[li 
				"Get off Yoshi#1 and #3 at the maximum speed of 49 
				$LF
			]li
			[li 
				"Yoshi#3(invisible) slips through the object and is projected horizontally to the right with speed 49 
				$LF
			]li
			[li 
				"Eat shell-less koopa (slot number adjustment) 
				$LF
			]li
		]ul
	]li
	[li 
		"7)15859
		$LF
		[ul 
			[li 
				"Place Yoshi#1 on the left edge of the screen just before the despawn zone and the goal tape on the right edge of the screen just before the spawn zone. 
				$LF
			]li
			[li 
				"Wait until Yoshi#3's tongue is directly below Mario.
				$LF
			]li
		]ul
	]li
	[li 
		"8)15930
		$LF
		[ul 
			[li 
				"Go right to despawn Yoshi#1. 
				$LF
			]li
			[li 
				"Yoshi#3 becomes visible and 3f later, goal tape#8 spawns and be eat-canceled at the same time Yoshi#3 despawns.
				$LF
			]li
			[li 
				"The coordinates of the goal tape are modified to make it a secret exit.
				$LF
			]li
			[li 
				"Mario is jumping because the hit box of the tape appears slightly above the ground.
				$LF
			]li
		]ul
	]li
]ul
[h3 id=Yi22 
	"YI2(2)
	$LF
]h3
[div class=p 
	"If you eat Chuck (chargin') with Yoshi when he is a feather Mario, you will get the key in item reserve with a crash. 
	[br 
	]br
	$LF
	"See BRK-method for recovery from crash. 
	$LF
]div
[h3 id=Ds1 
	"DS1
	$LF
]h3
[div class=p 
	[img class=embedright mw-100 src=https://imgur.com/CSDHylt.jpeg width=200 
	]img
	$LF
]div
[ul 
	[li 
		"0)19872
		$LF
		[ul 
			[li 
				"Use Yoshi to climb up the wall.
				$LF
			]li
		]ul
	]li
	[li 
		"1)20714
		$LF
		[ul 
			[li 
				"Fill empty slots with 1up (the goal is to put 1up in #1)
				$LF
			]li
		]ul
	]li
	[li 
		"2)21023
		$LF
		[ul 
			[li 
				"Put flower in #a and #b.
				$LF
			]li
			[li 
				"Store #10 with tongue.
				$LF
			]li
			[li 
				"Flip 1up with a feather. (to avoid despawning at the bottom of the screen) 
				$LF
			]li
		]ul
	]li
	[li 
		"3)21024
		$LF
		[ul 
			[li 
				"release the item in reserve (Spawn in #a as slots are filled.) (At this point, the tweaker bugs out.)  
				$LF
			]li
			[li 
				"Yoshi spits it out and resets the sprite.
				$LF
			]li
		]ul
	]li
	[li 
		"4)21107
		$LF
		[ul 
			[li 
				"double tongue glitch 
				$LF
			]li
		]ul
	]li
	[li 
		"5)21353
		$LF
		[ul 
			[li 
				"null sprite overload (The key is just thrown forward.)  
				$LF
			]li
			[li 
				"Recover unwanted 1ups. (to prevent processing failure) 
				$LF
			]li
		]ul
	]li
	[li 
		"6)21358
		$LF
		[ul 
			[li 
				"Spawn two invisible shells.
				$LF
			]li
		]ul
	]li
	[li 
		"7)21459
		$LF
		[ul 
			[li 
				"double tongue glitch
				$LF
			]li
		]ul
	]li
	[li 
		"8)21623
		$LF
		[ul 
			[li 
				"set up of stun glitch 
				$LF
			]li
		]ul
	]li
	[li 
		"9)21684
		$LF
		[ul 
			[li 
				"double tongue glitch 
				$LF
			]li
		]ul
	]li
	[li 
		"10)21728
		$LF
		[ul 
			[li 
				"set up of stun glitch 
				$LF
			]li
		]ul
	]li
	[li 
		"11)22204
		$LF
		[ul 
			[li 
				"Dino Rhino spawns
				$LF
			]li
		]ul
	]li
	[li 
		"12)22261
		$LF
		[ul 
			[li 
				"keyhole spawns
				$LF
			]li
		]ul
	]li
]ul
[h3 id=Dp12 
	"DP1(2)
	$LF
]h3
[div class=p 
	[img class=embedright mw-100 src=https://i.imgur.com/zFDQrre.jpeg width=200 
	]img
	$LF
]div
[ul 
	[li 
		"0)22950
		$LF
		[ul 
			[li 
				"Get two mushrooms and release them. (Beware of 6)
				$LF
			]li
		]ul
	]li
	[li 
		"1)23957
		$LF
		[ul 
			[li 
				"It is slightly faster to clip the corner.
				$LF
			]li
			[li 
				"Despawn Yoshi#9 with tongue sticking out to complete the setup. 
				$LF
			]li
		]ul
	]li
	[li 
		"2)24138
		$LF
		[ul 
			[li 
				"The mushroom was released to put Yoshi in #8 
				$LF
			]li
		]ul
	]li
	[li 
		"3)24251
		$LF
		[ul 
			[li 
				"Yoshi#8...store#2 
				$LF
			]li
			[li 
				"Yoshi#4...store#7 
				$LF
			]li
			[li 
				"Yoshi#3...visible
				$LF
			]li
		]ul
	]li
	[li 
		"4)24332
		$LF
		[ul 
			[li 
				"Yoshi#8 stores #2
				$LF
			]li
		]ul
	]li
	[li 
		"5)24396
		$LF
		[ul 
			[li 
				"Yoshi#4 stores #7
				$LF
			]li
		]ul
	]li
	[li 
		"6)24644
		$LF
		[ul 
			[li 
				"get bull in stock (ACE)  
				$LF
			]li
			[li 
				"jml [$00e0] = jml $019ecd...So, for the y-coordinate in this frame,
				$LF
				[ul 
					[li 
						"$e0 == cd (yoshi#8) 
						$LF
					]li
					[li 
						"$e1 == 9e (mushroom#9) 
						$LF
					]li
					[li 
						"$e2 == 01 (mushroom#A) 
						$LF
					]li
				]ul
			]li
			[li 
				"Adjust the y-coordinate of the mushroom to get these values.
				$LF
			]li
			[li 
				"In addition, the following conditions must be met
				$LF
				[ul 
					[li 
						"$1a == dc (Layer 1 X position)
						$LF
					]li
					[li 
						"$1c == 9c (Layer 1 Y position)
						$LF
					]li
					[li 
						"(stun timer of chuck#7) < #$18
						$LF
					]li
				]ul
			]li
		]ul
	]li
	[li 
		"7)24963
		$LF
		[ul 
			[li 
				"Spawn a feather in #2 to take after this. 
				$LF
			]li
		]ul
	]li
	[li 
		"8)25084
		$LF
		[ul 
			[li 
				"Eat Chuck (clappin') in reserve using Item swap and get ORB. (Mario must be state of flower)
				$LF
			]li
		]ul
	]li
	[li 
		"9)25165
		$LF
		[ul 
			[li 
				"Crushed to death and yoshi#8 eats the feather from earlier and resurrects. (Wanted to take the feathers while holding item in reserve.) 
				$LF
			]li
			[li 
				"Ride Yoshi#8 and go out of the course. 
				$LF
			]li
		]ul
	]li
]ul
[h3 id=Dsh 
	"DSH
	$LF
]h3
[div class=p 
	"Get flower and use the ORB
	$LF
]div
[h3 id=Ds2 
	"DS2
	$LF
]h3
[div class=p 
	[img class=embedright mw-100 src=https://i.imgur.com/kDhRWTT.jpeg width=200 
	]img
	$LF
]div
[ul 
	[li 
		"0)27584
		$LF
		[ul 
			[li 
				"scroll left 
				$LF
			]li
		]ul
	]li
	[li 
		"1)27831
		$LF
		[ul 
			[li 
				"Duplicate green shell.
				$LF
			]li
		]ul
	]li
	[li 
		"2)27869
		$LF
		[ul 
			[li 
				"Get the coin. (slot number adjustment) 
				$LF
			]li
		]ul
	]li
	[li 
		"3)27957
		$LF
		[ul 
			[li 
				"shell-less koopa...(slot number adjustment) 
				$LF
			]li
			[li 
				"glowing vine...(slot number adjustment)
				$LF
			]li
		]ul
	]li
	[li 
		"4)28166
		$LF
		[ul 
			[li 
				"Get the coin. (slot number adjustment)
				$LF
			]li
		]ul
	]li
	[li 
		"5)28221
		$LF
		[ul 
			[li 
				"Scroll left to drop the shell-less koopa at the desired location. 
				$LF
			]li
		]ul
	]li
	[li 
		"6)28256
		$LF
		[ul 
			[li 
				"Release the flower in reserve in the middle of the scroll. 
				$LF
			]li
		]ul
	]li
	[li 
		"7)28381
		$LF
		[ul 
			[li 
				"Throw the shell toward the item box.
				$LF
			]li
		]ul
	]li
	[li 
		"8)28413
		$LF
		[ul 
			[li 
				"double tongue glitch
				$LF
			]li
		]ul
	]li
	[li 
		"9)28430
		$LF
		[ul 
			[li 
				"Spawn directional coins#4 before the growing vine despawns.
				$LF
			]li
		]ul
	]li
	[li 
		"10)28444
		$LF
		[ul 
			[li 
				"set up of stun glitch 
				$LF
			]li
		]ul
	]li
	[li 
		"11)28555
		$LF
		[ul 
			[li 
				"double tongue glitch 
				$LF
			]li
		]ul
	]li
	[li 
		"12)28573
		$LF
		[ul 
			[li 
				"set up of stun glitch 
				$LF
			]li
		]ul
	]li
	[li 
		"13)28694
		$LF
		[ul 
			[li 
				"double tongue glitch 
				$LF
			]li
		]ul
	]li
	[li 
		"14)28725
		$LF
		[ul 
			[li 
				"set up of stun glitch 
				$LF
			]li
		]ul
	]li
	[li 
		"15)28940
		$LF
		[ul 
			[li 
				"kill Reznor
				$LF
			]li
			[li 
				"The condition to kill Reznor at this time is (sum of 4 bytes from $1520) == #$4, (x = 4, 5, 6, 7) 
				$LF
				[ul 
					[li 
						"directional coin#4...$151c,4 == #$3(right) 
						$LF
					]li
					[li 
						"Reznor#7...$151c,7 == #$1 (seems to be 1 when spawned using stun glitch) 
						$LF
					]li
				]ul
			]li
			[li 
				"These allow the reznor-kill to succeed. 
				$LF
			]li
		]ul
	]li
]ul
[h3 id=Dp3 
	"DP3
	$LF
]h3
[div class=p 
	"Summon credits using gray platform glitch.
	[br 
	]br
	$LF
	"It seems that details about the gray platform glitch have not been posted yet. I don't fully understand it myself and have taken the trace log of the already posted run that summons credits and analyzed it. 
	$LF
]div
[div class=p 
	"The part of the trace log for this run that is noteworthy is below 
	$LF
]div
[pre 
	"01f1fc:  lda  $e4,x     [0000e8]   A:f1d2 X:0004 Y:0000 S:01d8 D:0000 DB:01 nVMXdiZC V: 80 H:247 // A = x position of yoshi#4 low byte (= #$49)
	$LF
	"01f1fe:  clc                       A:f149 X:0004 Y:0000 S:01d8 D:0000 DB:01 nVMXdizC V: 80 H:254
	$LF
	"01f1ff:  adc  $f305,y   [01f305]   A:f149 X:0004 Y:0000 S:01d8 D:0000 DB:01 nVMXdizc V: 80 H:258 // A = A + #$10 (direction)
	$LF
	"01f202:  ply                       A:f159 X:0004 Y:0000 S:01d8 D:0000 DB:01 nvMXdizc V: 80 H:266
	$LF
	"01f203:  sta  $00e4,y   [0101e3]   A:f159 X:0004 Y:00ff S:01d9 D:0000 DB:01 NvMXdizc V: 80 H:273 // $01e3(stack) = A (= #$59, must be >= #$1C)...*1
	$LF
]pre
[pre 
	"01ea8a:  pla                       A:f120 X:0004 Y:00ff S:01e2 D:0000 DB:00 nvMXdiZc V: 81 H:327 // A = $01e3 (= #$59)
	$LF
	"01ea8b:  sta  $15e9     [0015e9]   A:f159 X:0004 Y:00ff S:01e3 D:0000 DB:00 nvMXdizc V: 81 H:333 // $15e9 = A (= #$59)
	$LF
]pre
[pre 
	"0086f7:  jmp  
	"[$0000]
	"   [000000]   A:8172 X:001c Y:0000 S:01f5 D:0000 DB:01 nvMXdiZc V:151 H: 97
	$LF
	"018172:  lda  #$08                 A:8172 X:001c Y:0000 S:01f5 D:0000 DB:01 nvMXdiZc V:151 H:109
	$LF
	"018174:  sta  $14c8,x   [0114e4]   A:8108 X:001c Y:0000 S:01f5 D:0000 DB:01 nvMXdizc V:151 H:113
	$LF
	"018177:  lda  $9e,x     [0000ba]   A:8108 X:001c Y:0000 S:01f5 D:0000 DB:01 nvMXdizc V:151 H:122 // A = x speed of yoshi#4 (must be = #$0e)
	$LF
	"018179:  jsl  $0086df   [0086df]   A:810e X:001c Y:0000 S:01f5 D:0000 DB:01 nvMXdizc V:151 H:130
	$LF
	"0086df:  sty  $03       [000003]   A:810e X:001c Y:0000 S:01f2 D:0000 DB:01 nvMXdizc V:151 H:155
	$LF
	"0086e1:  ply                       A:810e X:001c Y:0000 S:01f2 D:0000 DB:01 nvMXdizc V:151 H:161
	$LF
	"0086e2:  sty  $00       [000000]   A:810e X:001c Y:007c S:01f3 D:0000 DB:01 nvMXdizc V:151 H:168
	$LF
	"0086e4:  rep  #$30                 A:810e X:001c Y:007c S:01f3 D:0000 DB:01 nvMXdizc V:151 H:174
	$LF
	"0086e6:  and  #$00ff               A:810e X:001c Y:007c S:01f3 D:0000 DB:01 nvmxdizc V:151 H:180
	$LF
	"0086e9:  asl  a                    A:000e X:001c Y:007c S:01f3 D:0000 DB:01 nvmxdizc V:151 H:186 // A = 2A (= #$0e x 2)
	$LF
	"0086ea:  tay                       A:001c X:001c Y:007c S:01f3 D:0000 DB:01 nvmxdizc V:151 H:189 // Y = A (= #$1c)
	$LF
	"0086eb:  pla                       A:001c X:001c Y:001c S:01f3 D:0000 DB:01 nvmxdizc V:151 H:193
	$LF
	"0086ec:  sta  $01       [000001]   A:0181 X:001c Y:001c S:01f5 D:0000 DB:01 nvmxdizc V:151 H:202
	$LF
	"0086ee:  iny                       A:0181 X:001c Y:001c S:01f5 D:0000 DB:01 nvmxdizc V:151 H:210
	$LF
	"0086ef:  lda  
	"[$00]
	",y   [018199]   A:0181 X:001c Y:001d S:01f5 D:0000 DB:01 nvmxdizc V:151 H:213
	$LF
	"0086f1:  sta  $00       [000000]   A:e1b8 X:001c Y:001d S:01f5 D:0000 DB:01 Nvmxdizc V:151 H:227
	$LF
	"0086f3:  sep  #$30                 A:e1b8 X:001c Y:001d S:01f5 D:0000 DB:01 Nvmxdizc V:151 H:235
	$LF
	"0086f5:  ldy  $03       [000003]   A:e1b8 X:001c Y:001d S:01f5 D:0000 DB:01 NvMXdizc V:151 H:241
	$LF
	"0086f7:  jmp  
	"[$0000]
	"   [000000]   A:e1b8 X:001c Y:0000 S:01f5 D:0000 DB:01 nvMXdiZc V:151 H:247
	$LF
	"01e1b8:  lda  $e4,x     [000100]   A:e1b8 X:001c Y:0000 S:01f5 D:0000 DB:01 nvMXdiZc V:151 H:259 // A = $100(game mode) (= #$14) 
	$LF
	"01e1ba:  clc                       A:e114 X:001c Y:0000 S:01f5 D:0000 DB:01 nvMXdizc V:151 H:266
	$LF
	"01e1bb:  adc  #$08                 A:e114 X:001c Y:0000 S:01f5 D:0000 DB:01 nvMXdizc V:151 H:270 // A = A + #$08 (= #$1C)
	$LF
	"01e1bd:  sta  $e4,x     [000100]   A:e11c X:001c Y:0000 S:01f5 D:0000 DB:01 nvMXdizc V:151 H:274 // $100 = A (= #$1C)
	$LF
]pre
[div class=p 
	"The glitch starts by rewriting $15e9 (sprite index for the current sprite that is being processed) to a free value, and CPU decrements this value as it processes the sprite for that slot number. 
	$LF
]div
[div class=p 
	"It appears that the above process is done during the #1c process. I am surprised at the last 4 lines... 
	$LF
]div
[div class=p 
	"If you want to know more, please refer to 
	[a href=https://youtu.be/052UZbhIgtI?si=XIpHWOMF00u1UMKP rel=noopener external nofollow 
		"amaraticando's youtube
	]a
	", etc. 
	$LF
	[em 
	]em
	"*
	[em 
	]em
	"1 There is a limited number of available GRAY platforms for this. 
	$LF
]div
[h2 id=AceBrkMethod 
	"ACE: BRK-method
	$LF
]h2
[div class=p 
	"This is a method I developed because I can only use two controllers and therefore can only use two trollers. In this article, I will write “BRK-method”. 
	$LF
]div
[ol 
	[li 
		"When the BRK instruction is executed, the 3-byte return addr and 1-byte processor flag are pushed in sequence, and the program jumps to the BRK vector address (2 bytes) stored in ROM$00FFE6. In the North American version, the vector address is $FFFF, so the jump is made to $00FFFF.  
		$LF
	]li
]ol
[ol 
	[li 
		"In the North American version, $00FFFF = #$82, which executes the BRL instruction.  Here, the cpu returns to $000000 and reads the 2-byte operand. 
		$LF
	]li
]ol
[div class=p 
	"By the way, $00, $01 are scrach RAM and are used for very many purposes. That is, when a crash occurs and the BRK instruction is executed, where the values of $00 and $01 can be manipulated, the program can jump to any location.  
	[br 
	]br
	$LF
]div
[div class=p 
	"Two concrete examples of YI2(2) and DP1(2) are shown below.
	$LF
]div
[h3 id=Yi22_2 
	"YI2(2)
	$LF
]h3
[ul 
	[li 
		"1st frame
		$LF
	]li
]ul
[div class=p 
	"Just before BRK
	$LF
]div
[pre 
	"03b6f0:  lda  $03b56c,x [03b56c]   A:0000 X:0000 Y:0000 S:01e7 D:0000 DB:01 nVmXDIZc V: 24 H:216
	$LF
	"03b6f4:  bpl  $b6f8     [03b6f8]   A:0202 X:0000 Y:0000 S:01e7 D:0000 DB:01 nVmXDIzc V: 24 H:228
	$LF
	"03b6f8:  clc                       A:0202 X:0000 Y:0000 S:01e7 D:0000 DB:01 nVmXDIzc V: 24 H:233
	$LF
	"03b6f9:  adc  $00e4,y   [0100e4]   A:0202 X:0000 Y:0000 S:01e7 D:0000 DB:01 nVmXDIzc V: 24 H:237 // $e4 == 17, (Reason for adjusting x and y coordinates for shell #0) 
	$LF
	"03b6fc:  sta  $00       [000000]   A:0919 X:0000 Y:0000 S:01e7 D:0000 DB:01 nvmXDIzc V: 24 H:247 // $00 = 19
	$LF
	"03b6fe:  lda  $14e0,y   [0114e0]   A:0919 X:0000 Y:0000 S:01e7 D:0000 DB:01 nvmXDIzc V: 24 H:255
	$LF
	"03b701:  adc  $0f       [00000f]   A:0204 X:0000 Y:0000 S:01e7 D:0000 DB:01 nvmXDIzc V: 24 H:265
	$LF
	"03b703:  sta  $08       [000008]   A:0204 X:0000 Y:0000 S:01e7 D:0000 DB:01 nvmXDIzc V: 24 H:273
	$LF
	"03b705:  lda  $03b5a8,x [03b5a8]   A:0204 X:0000 Y:0000 S:01e7 D:0000 DB:01 nvmXDIzc V: 24 H:281
	$LF
	"03b709:  sta  $02       [000002]   A:0c0c X:0000 Y:0000 S:01e7 D:0000 DB:01 nvmXDIzc V: 24 H:293
	$LF
	"03b70b:  stz  $0f       [00000f]   A:0c0c X:0000 Y:0000 S:01e7 D:0000 DB:01 nvmXDIzc V: 24 H:301
	$LF
	"03b70d:  lda  $03b5e4,x [03b5e4]   A:0c0c X:0000 Y:0000 S:01e7 D:0000 DB:01 nvmXDIzc V: 24 H:309
	$LF
	"03b711:  bpl  $b715     [03b715]   A:0303 X:0000 Y:0000 S:01e7 D:0000 DB:01 nvmXDIzc V: 24 H:321
	$LF
	"03b715:  clc                       A:0303 X:0000 Y:0000 S:01e7 D:0000 DB:01 nvmXDIzc V: 24 H:326
	$LF
	"03b716:  adc  $00d8,y   [0100d8]   A:0303 X:0000 Y:0000 S:01e7 D:0000 DB:01 nvmXDIzc V: 24 H:329 // $d8 == 39, (Note that the addition is done under decimal mode.) 
	$LF
	"03b719:  sta  $01       [000001]   A:4342 X:0000 Y:0000 S:01e7 D:0000 DB:01 nvmXDIzc V: 24 H:339 // $01 = 42
	$LF
]pre
[div class=p 
	"The BRK part
	$LF
]div
[pre 
	"01ac97:  asl  $c0,x     [0001ae]   A:0000 X:00ee Y:0000 S:01ea D:0000 DB:01 nvmXDIZc V: 25 H:323
	$LF
	"01ac99:  sbc  $a905f0,x [a906de]   A:0000 X:00ee Y:0000 S:01ea D:0000 DB:01 NvmXDIzc V: 25 H:338
	$LF
	"01ac9d:  brk  #$99                 A:9999 X:00ee Y:0000 S:01ea D:0000 DB:01 NvmXDIzc V: 26 H: 10
	$LF
	"00ffff:  brl  $421b     [00421b]   A:9999 X:00ee Y:0000 S:01e6 D:0000 DB:01 NvmXdIzc V: 26 H: 26 // Advance by 2 bytes when BRK is executed 
	$LF
	"00421b:  brk  #$00                 A:9999 X:00ee Y:0000 S:01e6 D:0000 DB:01 NvmXdIzc V: 26 H: 33 // jmp ($0000) = jmp $4219
	$LF
	"004219:  brk  #$00                 A:9999 X:00ee Y:0000 S:01e6 D:0000 DB:01 NvmXdIzc V: 26 H: 42 // sep #$20
	$LF
	"00421b:  brk  #$00                 A:9999 X:00ee Y:0000 S:01e6 D:0000 DB:01 NvMXdIzc V: 26 H: 46 // jmp ($0000)
	$LF
	"004219:  brk  #$00                 A:9999 X:00ee Y:0000 S:01e6 D:0000 DB:01 NvMXdIzc V: 26 H: 55 // sep #$20...
	$LF
	"00421b:  brk  #$00                 A:9999 X:00ee Y:0000 S:01e6 D:0000 DB:01 NvMXdIzc V: 26 H: 59
	$LF
	"004219:  brk  #$00                 A:9999 X:00ee Y:0000 S:01e6 D:0000 DB:01 NvMXdIzc V: 26 H: 68
	$LF
	"00421b:  brk  #$00                 A:9999 X:00ee Y:0000 S:01e6 D:0000 DB:01 NvMXdIzc V: 26 H: 72
	$LF
	"004219:  brk  #$00                 A:9999 X:00ee Y:0000 S:01e6 D:0000 DB:01 NvMXdIzc V: 26 H: 81
	$LF
]pre
[div class=p 
	"(4 bytes from $004218 are as follows.)
	[br 
	]br
	$LF
	[code 
		"00 e2 20 6c
	]code
	$LF
]div
[ul 
	[li 
		"2nd frame
		$LF
	]li
]ul
[div class=p 
	"Return portion
	$LF
]div
[pre 
	"0082bc:  rep  #$30                 A:0200 X:0000 Y:0024 S:01da D:0000 DB:00 nvMXdIZc V:247 H: 31
	$LF
	"0082be:  plb                       A:0200 X:0000 Y:0024 S:01da D:0000 DB:00 nvmxdIZc V:247 H: 37
	$LF
	"0082bf:  ply                       A:0200 X:0000 Y:0024 S:01db D:0000 DB:01 nvmxdIzc V:247 H: 44
	$LF
	"0082c0:  plx                       A:0200 X:0000 Y:0000 S:01dd D:0000 DB:01 nvmxdIZc V:247 H: 53
	$LF
	"0082c1:  pla                       A:0200 X:00ee Y:0000 S:01df D:0000 DB:01 nvmxdIzc V:247 H: 62
	$LF
	"0082c2:  plp                       A:9999 X:00ee Y:0000 S:01e1 D:0000 DB:01 NvmxdIzc V:247 H: 71
	$LF
	"0082c3:  rti                       A:9999 X:00ee Y:0000 S:01e2 D:0000 DB:01 NvMXdIzc V:247 H: 78
	$LF
	"004219:  brk  #$00                 A:9999 X:00ee Y:0000 S:01e6 D:0000 DB:01 NvMXdIzc V:247 H: 91 // jmp $f050 *2
	$LF
	"00f050:  cmp  $00eac1,x [00ebaf]   A:9999 X:00ee Y:0000 S:01e6 D:0000 DB:01 NvMXdIzc V:247 H: 95
	$LF
	"00f054:  beq  $f05a     [00f05a]   A:9999 X:00ee Y:0000 S:01e6 D:0000 DB:01 nvMXdIzC V:247 H:105
	$LF
	"00f056:  dex                       A:9999 X:00ee Y:0000 S:01e6 D:0000 DB:01 nvMXdIzC V:247 H:109
	$LF
	"00f057:  bpl  $f050     [00f050]   A:9999 X:00ed Y:0000 S:01e6 D:0000 DB:01 NvMXdIzC V:247 H:113
	$LF
	"00f059:  clc                       A:9999 X:00ed Y:0000 S:01e6 D:0000 DB:01 NvMXdIzC V:247 H:117
	$LF
	"00f05a:  plx                       A:9999 X:00ed Y:0000 S:01e6 D:0000 DB:01 NvMXdIzc V:247 H:120 // PLX
	$LF
	"00f05b:  rtl                       A:9999 X:009c Y:0000 S:01e7 D:0000 DB:01 NvMXdIzc V:247 H:127 // RTL
	$LF
	"01aca0:  ora  $c89e,y   [01c89e]   A:9999 X:009c Y:0000 S:01ea D:0000 DB:01 NvMXdIzc V:247 H:148
	$LF
	"01aca3:  trb  $60       [000060]   A:999f X:009c Y:0000 S:01ea D:0000 DB:01 NvMXdIzc V:247 H:156
	$LF
	"01aca5:  lda  $167a,x   [011716]   A:999f X:009c Y:0000 S:01ea D:0000 DB:01 NvMXdIZc V:247 H:166
	$LF
	"01aca8:  and  #$04                 A:9900 X:009c Y:0000 S:01ea D:0000 DB:01 nvMXdIZc V:247 H:175
	$LF
	"01acaa:  bne  $aca4     [01aca4]   A:9900 X:009c Y:0000 S:01ea D:0000 DB:01 nvMXdIZc V:247 H:179
	$LF
]pre
[ul 
	[li 
		"In the 2nd frame, the controller input seems to be updated properly. Could it have something to do with the fact that $10 == #$00?
		$LF
	]li
	[li 
		"The fact that line *2 starts at $004219 and not at $00421b may depend on the number of f instructions before this frame. (I assume from the fact that it sometimes crashes with only a slight change in input to the frame immediately before the frame that crashes.) 
		$LF
	]li
	[li 
		"For 1st and 2nd frame, the direct cause was thought to be a misreading of the program due to the M flag being cleared, so I set it, pulled the 1-byte processor register loaded on the stack, and excused RTL to recover. 
		$LF
	]li
	[li 
		"Normally, it would be sufficient to return from a safe return address on the stack that had not been destroyed by the time any code could be executed after the crash, but the fact that the above method worked may have been somewhat coincidental. It may be that I was thinking about various things when they created it...
		$LF
	]li
]ul
[h3 id=Dp12_2 
	"DP1(2)
	$LF
]h3
[div class=p 
	"(only one frame)
	$LF
]div
[pre 
	"01c4bf:  lda  $1540,x   [011547]   A:f398 X:0007 Y:0007 S:01e8 D:0000 DB:01 nvMXdizC V: 15 H: 10 // $1540,x (stun timer of chuck#7) must be < #$18
	$LF
	"01c4c2:  cmp  #$18                 A:f313 X:0007 Y:0007 S:01e8 D:0000 DB:01 nvMXdizC V: 15 H: 18
	$LF
	"01c4c4:  bcs  $c4fa     [01c4fa]   A:f313 X:0007 Y:0007 S:01e8 D:0000 DB:01 NvMXdizc V: 15 H: 22
	$LF
	"01c4c6:  stz  $14c8,x   [0114cf]   A:f313 X:0007 Y:0007 S:01e8 D:0000 DB:01 NvMXdizc V: 15 H: 26
	$LF
]pre
[pre 
	"0086f7:  jmp  [$0000]   [000000]   A:9eb5 X:0007 Y:0093 S:01e8 D:0000 DB:01 NVMXdizc V: 15 H:234 // This is where the crash occurs(?)
	$LF
	"019eb5:  cpx  #$14                 A:9eb5 X:0007 Y:0093 S:01e8 D:0000 DB:01 NVMXdizc V: 15 H:246
	$LF
]pre
[pre 
	"01a3d0:  lda  $e4,x     [0000eb]   A:c09c X:0007 Y:00bc S:01ee D:0000 DB:01 NvMXdizc V: 18 H:173
	$LF
	"01a3d2:  sec                       A:c0f3 X:0007 Y:00bc S:01ee D:0000 DB:01 NvMXdizc V: 18 H:181
	$LF
	"01a3d3:  sbc  $1a       [00001a]   A:c0f3 X:0007 Y:00bc S:01ee D:0000 DB:01 NvMXdizC V: 18 H:184 // $1a (Layer 1 X position) == #$dc
	$LF
	"01a3d5:  sta  $00       [000000]   A:c017 X:0007 Y:00bc S:01ee D:0000 DB:01 nvMXdizC V: 18 H:190 // $00 = 17
	$LF
	"01a3d7:  lda  $d8,x     [0000df]   A:c017 X:0007 Y:00bc S:01ee D:0000 DB:01 nvMXdizC V: 18 H:196
	$LF
	"01a3d9:  sec                       A:c0de X:0007 Y:00bc S:01ee D:0000 DB:01 NvMXdizC V: 18 H:204
	$LF
	"01a3da:  sbc  $1c       [00001c]   A:c0de X:0007 Y:00bc S:01ee D:0000 DB:01 NvMXdizC V: 18 H:207 // $1c (Layer 1 Y position) == #$9c
	$LF
	"01a3dc:  sta  $01       [000001]   A:c042 X:0007 Y:00bc S:01ee D:0000 DB:01 nvMXdizC V: 18 H:213 // $01 = 42
	$LF
	"01a3de:  rts                       A:c042 X:0007 Y:00bc S:01ee D:0000 DB:01 nvMXdizC V: 18 H:219
	$LF
	"0120ec:  brk  #$00                 A:c042 X:0007 Y:00bc S:01f0 D:0000 DB:01 nvMXdizC V: 18 H:230 // Where the stacks are shallowest
	$LF
	"012020:  brk  #$00                 A:c042 X:0007 Y:00bc S:01ee D:0000 DB:01 nvMXdizC V: 18 H:240
	$LF
	"012023:  brk  #$00                 A:c042 X:0007 Y:00bc S:01ee D:0000 DB:01 nvMXdizC V: 18 H:250
	$LF
]pre
[pre 
	"01212c:  brk  #$00                 A:c05b X:0007 Y:00bc S:01ee D:0000 DB:01 nvMXdizc V: 21 H:  4
	$LF
	"012130:  brk  #$00                 A:c05b X:0007 Y:00bc S:01ee D:0000 DB:01 nvMXdizc V: 21 H: 12
	$LF
	"012134:  brk  #$00                 A:c05b X:0007 Y:00bc S:01ee D:0000 DB:01 nvMXdizc V: 21 H: 20
	$LF
	"00ffff:  brl  $4219     [004219]   A:c05b X:0007 Y:00bc S:01ea D:0000 DB:01 nvMXdIzc V: 21 H: 35 // BRK executed.
	$LF
	"004219:  brk  #$00                 A:c05b X:0007 Y:00bc S:01ea D:0000 DB:01 nvMXdIzc V: 21 H: 43
	$LF
	"019ecd:  lsr  a                    A:c05b X:0007 Y:00bc S:01ea D:0000 DB:01 nvMXdIzc V: 21 H: 53 // jml [$0000] = jml $019ecd, (#$cd is the y-coordinate of the idling Yoshi, and I found a subroutine that fits this number and matched the y-coordinate of the mushroom to it. )
	$LF
]pre
[div class=p 
	"(4 bytes from $004218 are as follows.)
	[br 
	]br
	$LF
	[code 
		"00 dc e0 00
	]code
	$LF
]div
[pre 
	"019ef2:  pla                       A:c0b5 X:0007 Y:00c0 S:01ea D:0000 DB:01 nvMXdIzC V: 22 H:237
	$LF
	"019ef3:  sta  $157c,x   [011583]   A:c030 X:0007 Y:00c0 S:01eb D:0000 DB:01 nvMXdIzC V: 22 H:244
	$LF
	"019ef6:  pla                       A:c030 X:0007 Y:00c0 S:01eb D:0000 DB:01 nvMXdIzC V: 22 H:254
	$LF
	"019ef7:  sta  $15ea,x   [0115f1]   A:c036 X:0007 Y:00c0 S:01ec D:0000 DB:01 nvMXdIzC V: 22 H:261
	$LF
	"019efa:  pla                       A:c036 X:0007 Y:00c0 S:01ec D:0000 DB:01 nvMXdIzC V: 22 H:270
	$LF
	"019efb:  sta  $14e0,x   [0114e7]   A:c021 X:0007 Y:00c0 S:01ed D:0000 DB:01 nvMXdIzC V: 22 H:277
	$LF
	"019efe:  pla                       A:c021 X:0007 Y:00c0 S:01ed D:0000 DB:01 nvMXdIzC V: 22 H:287
	$LF
	"019eff:  sta  $e4,x     [0000eb]   A:c001 X:0007 Y:00c0 S:01ee D:0000 DB:01 nvMXdIzC V: 22 H:294
	$LF
	"019f01:  pla                       A:c001 X:0007 Y:00c0 S:01ee D:0000 DB:01 nvMXdIzC V: 22 H:301
	$LF
	"019f02:  sta  $14d4,x   [0114db]   A:c0ee X:0007 Y:00c0 S:01ef D:0000 DB:01 NvMXdIzC V: 22 H:308
	$LF
	"019f05:  pla                       A:c0ee X:0007 Y:00c0 S:01ef D:0000 DB:01 NvMXdIzC V: 22 H:318
	$LF
	"019f06:  sta  $d8,x     [0000df]   A:c020 X:0007 Y:00c0 S:01f0 D:0000 DB:01 nvMXdIzC V: 22 H:324
	$LF
	"019f08:  rts                       A:c020 X:0007 Y:00c0 S:01f0 D:0000 DB:01 nvMXdIzC V: 22 H:331 // Return from a secure (safe) stuck position with RTS.
	$LF
]pre
[h2 id=DetailsOfMinorGlitches 
	"Details Of Minor Glitches 
	$LF
]h2
[div class=p 
	[small 
		"I will add to it as needed.
	]small
	$LF
]div
[h3 id=StoringBerryGlitch 
	"Storing Berry Glitch 
	$LF
]h3
[div class=p 
	"You can "store" a berry to Yoshi's tongue by picking up a berry with Yoshi's mouth, but canceling it by sticking out Yoshi's tongue and turning away. You can tell if it was done correctly if the berry doesn't turn into a sprite, but the game still freezes for a frame as if Yoshi ate it. As a result, the next sprite Yoshi swallows will add to his berry count, and can be repeated on a single berry indefinitely. A small additional side effect is that any sprite berries will inherit the palette of the stored berry until it is used.(
	[a href=https://github.com/Ankouno/SMW-Data/blob/master/Glitch%20List.md  rel=noopener external nofollow 
		"source
	]a
	") 
	$LF
]div
[h3 id=YoshiRelatedGlitches 
	"Yoshi-related Glitches 
	$LF
]h3
[ul 
	[li 
		"Yoshi does not despawn under the ground while Mario is on it. 
		$LF
	]li
	[li 
		"When multiple Yoshi eggs are produced with no Yoshi present, only the Yoshi in the lowest slot is visible and behaves normally, while the Yoshi in the other slots are invisible and behave strangely.  
		$LF
	]li
	[li 
		"When Visible-yoshi despawns, the Yoshi in the lowest remaining slot becomes visible. It takes over whether or not Yoshi is stuffing his mouth with food.
		$LF
	]li
	[li 
		"Eggs are laid by Yoshi with the highest slot number.
		$LF
	]li
	[li 
		"Invisi-yoshi's coordinates are fixed when you gets on. When you get off, 
		$LF
		[ul 
			[li 
				"Y speed of Yoshi = 0
				$LF
			]li
			[li 
				"X speed of him = X speed of Mario
				$LF
			]li
			[li 
				"Y coordinate of Mario = Y coordinate of Yoshi
				$LF
			]li
		]ul
	]li
	[li 
		"When on an Invisi-Yoshi, if he contacts a sprite(?) with a higher slot number than it, it escapes.
		$LF
	]li
]ul
[h3 id=NullSpriteOverload 
	"Null Sprite Overload 
	$LF
]h3
[div class=p 
	"The characteristics of #1 and #3 change.
	$LF
]div
[ul 
	[li 
		[em 
		]em
		"#
		[em 
		]em
		"1 omitted 
		$LF
	]li
	[li 
		[em 
		]em
		"#
		[em 
		]em
		"3 will have the bits "Being eaten" set and "Interaction with Objects" cleared.   
		$LF
	]li
]ul
[div class=p 
	"As a result, they will be able to penetrate walls and floors. (Invisible Yoshi will not despawn?) 
	$LF
]div
[div class=p 
	[b 
		"Finally, I would like to thank those who have seen this run and read this article. 
	]b
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/eien86 
		"eien86
	]a
	": Claiming for judging.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/eien86 
		"eien86
	]a
	": I would be lying if I said I understood what happened here. This movie is evidently chock-full of memory/code manipulation and glitches to end each necessary stage in an unorthodox to reach the end of the game. This is, of course, a self imposed limitation that is not part of the game's own challenge.
	$LF
]div
[div class=p 
	"The goal does not fit in any of the well-established 
	[a href=https://tasvideos.org/Standard rel=noopener external nofollow 
		"Standard
	]a
	" goals. Nevertheless, it is well defined and interesting. The feedback from the community (both in forum and YT comments) have been overwhelmingly positive. It would therefore go against the site's interest to reject this movie just because it doesn't fit any predetermined boxes.
	$LF
]div
[div class=p 
	"Fortunately, we do have a category to publish these kind of movies: 
	[a href=https://tasvideos.org/MovieRules#Alternative rel=noopener external nofollow 
		"Alternative
	]a
	". Specifically, the excerpt "Good examples include restrictive challenge runs that completely change how the game is played" apply perfectly to this movie. 
	$LF
]div
[div class=p 
	"The execution is evidently of the utmost quality. To my untrained eye, some sections appear to trade speed for entertainment value. Perhaps this is not the case but, even if it was, it is perfectly acceptable within the category and defined goal. More importantly: I had a blast watching it.
	$LF
]div
[div class=p 
	"Accepting to Alternative "unintended exits"
	$LF
]div
[div class=p 
	"Thanks to InputEvelution for the sync!
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/despoa 
		"despoa
	]a
	": Processing...
]div
