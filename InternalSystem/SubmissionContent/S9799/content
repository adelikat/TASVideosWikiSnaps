6
[h3 id=Introduction 
	"Introduction
	$LF
]h3
[div class=p 
	"The Ultimate Doom is an FPS released by iD Software in 1995, an expanded version of the 1993 release Doom. This TAS uses the Ultra-Violence difficulty setting and is completed in the No Monsters category, a special category where the objective is to go as fast as possible, ignoring item collection, secret exploration, and secret maps (applicable for episode runs, such as this one), without any monsters being present (possible with the -nomonsters parameter included in the original release). It is important to note that it is a requirement for no monsters category runs to be played on the Ultra-Violence difficulty (through -skill 4), causing the same items to spawn in as they would in a typical UV-Speed run (Doom's equivalent of an any% category).
	$LF
	"This is the first complete TAS of The Ultimate Doom's first episode, "Knee-Deep in the Dead", in the No Monsters category.
	$LF
]div
[div class=p 
	"The TAS was built frame-by-frame using XDRE. XDRE produces standard vanilla-compatible .lmp files, (also known as demo files or demos) with an addition of a small info footer. DSDA-Doom was also used for brute forcing purposes. 
	$LF
	"This TAS was made following the conventions of the classic Doom speedrunning. Tricks and glitches are allowed, but cheat codes are not. Any behavior not included in the original release is not allowed. RTA is *not* priortized, IGT is. This is why there is some time present during the intermission screens between maps.
	$LF
]div
[div class=p 
	"I had finished this TAS on September 27, 2024, with it being uploaded to Doom's Speed Demo Archive (DSDA, found at dsdarchive.com) the following day. I am submitting it to tasvideos.org now because with the recent Plutonia TAS movie submission by almostmatt1 and myself, I figured I'd fill out my profile just a tad bit more.
	$LF
]div
[h3 id=LevelTimes 
	"Level Times
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Level
			]th
			[th 
				"Map
			]th
			[th 
				"Time
			]th
		]tr
		[tr 
			[td 
				"Hangar
			]td
			[td 
				"E1M1
			]td
			[td 
				"0:07.80
			]td
		]tr
		[tr 
			[td 
				"Nuclear Plant
			]td
			[td 
				"E1M2
			]td
			[td 
				"0:17.31
			]td
		]tr
		[tr 
			[td 
				"Toxin Refinery
			]td
			[td 
				"E1M3
			]td
			[td 
				"0:29.34
			]td
		]tr
		[tr 
			[td 
				"Command Control
			]td
			[td 
				"E1M4
			]td
			[td 
				"0:10.37
			]td
		]tr
		[tr 
			[td 
				"Phobos Lab
			]td
			[td 
				"E1M5
			]td
			[td 
				"0:25.77
			]td
		]tr
		[tr 
			[td 
				"Central Processing
			]td
			[td 
				"E1M6
			]td
			[td 
				"0:31.97
			]td
		]tr
		[tr 
			[td 
				"Computer Station
			]td
			[td 
				"E1M7
			]td
			[td 
				"0:48.37
			]td
		]tr
		[tr 
			[td 
				"Phobos Anomaly
			]td
			[td 
				"E1M8
			]td
			[td 
				"0:10.69
			]td
		]tr
		[tr 
			[td 
				"Total
			]td
			[td 
				" 
			]td
			[td 
				"2:57
			]td
		]tr
	]tbody
]table
[h3 id=WhatSNew 
	"What's New
	$LF
]h3
[div class=p 
	"This TAS...
	$LF
]div
[ul 
	[li 
		"skips E1M6's door-closing line in the red key room in both directions without damage boosts
		$LF
	]li
	[li 
		"implements almostmatt1's E1M8 void entry into an episode TAS
		$LF
	]li
	[li 
		"contains more refined movement than other episode 1 TASes (across categories).
		$LF
	]li
]ul
[h3 id=MovementTricks 
	"Movement & Tricks
	$LF
]h3
[h4 id=Introduction_2 
	"Introduction
	$LF
]h4
[div class=p 
	"There are many great write-ups on Doom's movement, so this will simply be a very brief collection of tricks used. Technical explanations are not to be found here.
	$LF
	"However, it is not to be ignored that Doom's movement is incredibly precise. The player is a 32x32 unit square that never rotates (changing direction simply changes the direction the player box is moving, not its orientation). There are 256 possible angles when recording a demo (many more are available in casual play, but demo recording restricts how many angles are possible). Doom uses 16 bits for decimal precision, covering from x.00000 to x.65535. The smallest possible change in movement is consequently equal to 0.00001 units. This results in an incredibly large amount of possible locations for the player to be occupy in even just a 1x1 unit square: 4,294,967,296, to be exact. Many tricks can require precision down to 3 decimal points, with many more requiring even more than that (with full 5 digit precision being needed too!). 
	$LF
	"Doom maps primarily consist of linedefs (lines that make up a map. Can be a wall, fence, switch, or invisible tripwire-like method for triggering specials that can effect map geometry, like opening or closing a door), and things (players, enemies, items).
	$LF
]div
[h4 id=Straferunning 
	"Straferunning
	$LF
]h4
[div class=p 
	"By strafing and running at the same time, the player is able to run faster, since the game calculates forward thrust and sideways thrust separate from each other.
	$LF
]div
[h4 id=Wallrunning 
	"Wallrunning
	$LF
]h4
[div class=p 
	"The player is able to double their distance traveled per frame while running against an axis-aligned wall in the north and east directions. Rarely possible going south and west, because it has specific requirements to enable it to occur, as well as it often actually being less optimal than ignoring the wallrun altogether.
	$LF
]div
[h4 id=DiagonalWallrunning 
	"Diagonal Wallrunning
	$LF
]h4
[div class=p 
	"Diagonal wallrunning is much less predictable than standard wallrunning, because it is moreso a series of bumps against the wall, rather than cleanly touching it every frame like a standard wallrun. Diagonal walls will usually allow the player to move farther and gain momentum, but it does not always positively effect both. For example, sometimes the player may gain lots of distance by hitting the diagonal wall, but suffer a great loss to their momentum, ultimately resulting in the player slowing down after the initial boost. It is extremely frustrating to optimize, but can often yield great results given enough time and effort. Brute force is often, but not always, used for this trick.
	$LF
]div
[h4 id=Thingrunning 
	"Thingrunning
	$LF
]h4
[div class=p 
	"Things are techincally any object in Doom that is placed in the map upon loading. Here though, a thing means anything the player cannot pick up, like an enemy, barrel, or torch. Thingrunning is essentially the same as standard wallrunning, but because things do not kill your momentum in the direction towards it, it is infinitely less precise.
	$LF
]div
[h4 id=MomentumPreservation 
	"Momentum Preservation
	$LF
]h4
[div class=p 
	"The player is able to preserve their momentum by running into certain 90 degree corners at a precise angle, allowing them to move at full speed afterward, similar to running into a thing that then moves out of the way. It is often used for running through opening doors and raising lifts without losing speed. It can also be done in some other ways, but the method described above is the easiest.
	$LF
]div
[h4 id=00000Trick 
	"The .00000 Trick
	$LF
]h4
[div class=p 
	"By getting as close as possible to a south or west facing wall, the player can accumulate up to 14.5 units of momentum towards that wall. Any more, and it'll reset. An exception is that if the wall is aligned with the blockmap, an infinite 16x16 grid that covers the map (used for collisions), then the trick is doable in any direction without any momentum "cap".
	$LF
]div
[h4 id=AirControl 
	"Air Control
	$LF
]h4
[div class=p 
	"The player has no air control. This is useful for smoothening out the appearance of turns mid-air.
	$LF
]div
[h4 id=DamageBoosts 
	"Damage Boosts
	$LF
]h4
[div class=p 
	"When the player takes damage, they are pushed opposite of the direction they took damage from. Barrel explosions, enemy attacks, and player rockets can all cause damage boosts.
	$LF
]div
[h4 id=VoidEntry 
	"Void Entry
	$LF
]h4
[div class=p 
	"The player is able to enter the "void", the area of the map that is not within walls, by gaining enough speed to completely phase through a wall. This is extremely difficult because you need enough momentum to pass through a wall in one frame. This is only doable by using diagonal walls. Some void glides are done by getting caught in a position between diagonal walls that causes a positive feedback loop of gaining more momentum than should be possible until it is enough to pass through. This demo uses a different method. In E1M5, the player uses a rocket boost into a diagonal wall to get into the void without taking any time to get "stuck". It is also the only viable way (in that corner) since one of the walls is axis aligned. It is very precise and it a TAS-only trick. That specific trick is nothing new, it was discovered by Zero Master.
	$LF
]div
[h4 id=MapReEntry 
	"Map Re-Entry
	$LF
]h4
[div class=p 
	"The same concept as void entry. However, collisions differ in the void, and to pull the trick off, you need to find a position that allows you to collide with the *interior* of the map. This is done by rocket boosting while in a very specific position (TAS-only method). The re entry shown in E1M5 was also discovered by Zero Master (who had paired the two together in his Episode 1 UV Speed TAS).
	$LF
]div
[h4 id=FenceClips 
	"Fence Clips
	$LF
]h4
[div class=p 
	"The same concept as void entry, but instead of passing through a wall into the void, you just pass through a fence, or an impassable line that is within the interior of the map. An example in this TAS would be in E1M6. The trick was discovered by Zero Master.
	$LF
]div
[h4 id=ElasticCollision 
	"Elastic Collision
	$LF
]h4
[div class=p 
	"A rare occurrence that can cause the player's momentum to "flip". It usually relies on specific geometry, but can also (unpredictably) occur on diagonal walls, which is what happens in E1M6 before entering the closet that leads to the blue door and yellow key.
	$LF
]div
[h4 id=Lineskips 
	"Lineskips
	$LF
]h4
[div class=p 
	"A lineskip refers to when the player "skips" a special line, by moving fast enough to avoid the game detecting the player passing it. This can be used to avoid special triggers (like doors closing, floors raising, etc.). This is easier in the south and west directions, but still doable north and east given enough speed/distance moved on frame of what would normally be detected. An example in this TAS is in E1M6, which is actually a diagonal lineskip. It is very precise to skip a diagonal line, but still possible. Skipping this line without damage boosts in both directions in a demo had not been done (to my knowledge) until this TAS.
	$LF
]div
[h4 id=SectorEffect11InstantExit 
	"Sector Effect 11 Instant Exit
	$LF
]h4
[div class=p 
	"Including this here for the sake of completeness.
	$LF
	"In E1M8, the player seems to exit right away after passing through the void. This is because there is a sector in the map that has a special effect of damaging the player until their health drops below 11, at which point the player exits the map. If the player enters the sector with less than 11 health, they exit immediately.
	$LF
	"Sectors' properties can leak out of bounds, so even though the player is in the void, the sector effect can still reach them, and causes the player to exit the level.
	$LF
]div
[h3 id=MapComments 
	"Map Comments
	$LF
]h3
[div class=p 
	"Note: these comments are taken straight from the .txt file included in the original submission to dsdarchive.com, the site used for hosting doom speed demos.
	$LF
]div
[h4 id=E1m1 
	"E1M1
	$LF
]h4
[div class=p 
	"Didn't take the barrel boost to save health, but it didn't really matter.
	$LF
]div
[h4 id=E1m2 
	"E1M2
	$LF
]h4
[div class=p 
	"16s seems extremely difficult. May not even be possible. For some reason, at the very start, I could not get an east wallrun on that right wall to work for longer than 3 tics. Even when combining that with a 14.5 speedcap wallrun, it still opened the door a tic later than just running straight to it, due to a poor diagonal collision after getting past the straight wall. A little disapointing, but I put lots of effort into getting it to work, and it just refused to.
	$LF
]div
[h4 id=E1m3 
	"E1M3
	$LF
]h4
[div class=p 
	"Not only did the barrel boost not really do anything, it also made it impossible for this to sync in an IL. Lovely.
	$LF
]div
[h4 id=E1m4 
	"E1M4
	$LF
]h4
[div class=p 
	"9s is impossible.
	$LF
]div
[h4 id=E1m5 
	"E1M5
	$LF
]h4
[div class=p 
	"Not sure what I was thinking when I built the yellow key grab. Why did I not just slow down?? Doesn't matter, didn't lose enough time for that silly mistake to matter. That thick door that opens up after grabbing the secret rocket luncher is super annoying because of the floor/ceiling height difference. I have to get stuck for one tic. The rocket glide was a bit easier than I had expected. I struggle with those much more than re-entries.
	$LF
]div
[h4 id=E1m6 
	"E1M6
	$LF
]h4
[div class=p 
	"The lineskips were trivial. I'm pretty sure you need to go around like that to get a damageless skip on the way back. The second one is definitely harder than the first. That elastic collision at the line to lower the secret blue door was quite easy due to geometry, but covering enough distance to actually hit it was quite annoying, took a bit of rebuilding and optimization. The fence glide was quite difficult to get, but the result was really quite fast, so I was very happy with it. Couldn't zero press that last switch. There's also some really strange geometry in its little hall, which made for all sorts of strange collisions, despite it just being simple straight walls. No idea why. I initially landed on a 32.06, so I rebuilt everything after the fence clip to save a few frames. I lose one extra frame at the end to grab a medikit.
	$LF
]div
[h4 id=E1m7 
	"E1M7
	$LF
]h4
[div class=p 
	"This took forever. It was a very easy decision to not try and rebuild this for a 47. One weird bit is when I go for a midair .000000 after grabbing the yellow key. Because my x pos before leaving the ledge is 1232.000000, it's actually impossible to to travel 64.000000 units to get to 1168.000000 across something like 3 or 5 tics. I had to get an x momentum of exactly -16.000000, so I could go 1232->1216->1200->1184->1168. It also just so happens to be the highest speed you can maintain while having a midair .000000, so I think it's a pretty cool little part, even if it's not too noticeable. The lift to the red key is a bit strange, I realized it may be faster to actually lower the lift as soon as it raises, so that it is already down when you come back. Turns out it saves a handful of frames, not sure the exact number, but it wasn't anything crazy (I think something like 2-5 sounds right). It looks kind of strange, but it works. That rocket boost after hitting the last switch is just quite useless apart from damaging myself before e1m8. Also, the wallrun to the exit door is bad. For some reason, east wallruns on a right wall utilizing a .000000 just refuse to work for more than 1-3 tics. I had the same problem in e1m2, as I said above. This map was just quite boring to build, partly due to some burnout, and partly due to the length of it.
	$LF
]div
[h4 id=E1m8 
	"E1M8
	$LF
]h4
[div class=p 
	"Funny how a 3.03 door is still possible from a worse barrel boost. I think it's due to the better curve that's possible. The wallclip was easy enough, but that final glide Matt used in e1m1ox1074 was a pain. I basically just kept getting to a somewhat viable position, setup (diagonal collision on the frame of what would be the glide), what seemed like enough speed, and ran a very large brute force for it. Then, I would repeat, making sure to have a different setup, position, speed, etc. and just kept repeating until I had like 6 brute forces going, all with very large checks on different approaches. Few hours later, one of them actually found it! Honestly, if it wasn't going to work, I was probably just going to rebuild the end of m7 to not include that useless rocket boost, and use it in here instead. But I was stubborn, lazy, and lucky enough to see this work. It's a very cool trick. My gut wants me to build this in an IL to beat Matt's 10.74, but as of right now I'm too burnt out for that. Soon, not so soon, or never :)
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/nymx 
		"nymx
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/nymx 
		"nymx
	]a
	": Un-claiming . I need to finish up on this other long TAS, which is taking longer than I had hoped.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/eien86 
		"eien86
	]a
	": Claiming for judging.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/eien86 
		"eien86
	]a
	": Another jawdroppingly amazing nomonsters demo, this time of the original game's first episode. The RNG manipulation, void glide, and explosion boosts are some of the visible techniques used here.
	$LF
]div
[div class=p 
	"Accepting to Standard Ep1, "No Monsters" goal
]div
