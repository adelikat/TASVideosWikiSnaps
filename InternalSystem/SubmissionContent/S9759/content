8
[div class=p 
	[em 
		"Flicky
	]em
	" is an arcade-style Genesis game in which a flightless blue bird named Flicky must rescue her Chirps dispersed throughout the 48 rounds and bring them safely to the exit. Along the way, Tiger and Iggy will try to stop her. Luckily, there are miscellaneous items on the ground Flicky can throw to really send them rolling!
	$LF
]div
[h4 id=Highlights 
	"Highlights
	$LF
]h4
[ul 
	[li 
		" 100% Completion
		$LF
	]li
	[li 
		" Second Quest
		$LF
	]li
]ul
[h4 id=SecondLoopRounds4996 
	"The Second Loop (Rounds 49-96)
	$LF
]h4
[div class=p 
	"After the credits play out, the second loop begins once you hit Start to "challenge the next stage". The only differences in this second loop of stages are that the Tigers will have higher movement speeds and Iggy will be present in the first 9 rounds. This is not a major difficulty spike; in fact, many rounds have their inputs copy/pasted from the first loop. The difficulty does not increase any further after Loop 2.
	$LF
]div
[h4 id=FirstLoopRounds148Improvements 
	"First Loop (Rounds 1-48) Improvements 
	$LF
]h4
[div class=p 
	"In the first loop, specifically Round 46, I did find one 24-frame improvement over the currently published TAS, which only plays the first loop.
	$LF
]div
[h4 id=MovementStats 
	"Movement Stats
	$LF
]h4
[div class=p 
	"These values assume 1 pixel = 256 subpixels.
	$LF
]div
[ul 
	[li 
		" Soft speed cap: 1 pixel, 128 subpixels/frame (or 1.5 pixels/frame)
		$LF
	]li
	[li 
		" Hard speed cap: 1 pixel, 254 subpixels/frame
		$LF
	]li
	[li 
		" Velocity gain from wall bounce: 48 pixels/frame
		$LF
	]li
	[li 
		" Acceleration/deceleration on floor/air, holding left/right: 24 subpixels/frame^2
		$LF
	]li
	[li 
		" Deceleration on floor, holding nothing: 6 subpixels/frame^2
		$LF
	]li
	[li 
		" Deceleration in air, holding nothing (aka air drag): 0
		$LF
	]li
]ul
[h4 id=BasicMovementTech 
	"Basic Movement Tech
	$LF
]h4
[div class=p 
	"Holding left or right will accelerate Flicky by 24 subpixels/frame^2 until she reaches 1px, 128sbpx speed. However, this is only a soft speed cap. Once reaching the max speed and assuming we are standing on a floor, we can let go of the d-pad for one frame to decelerate by 6 subunits to 1px, 122sbpx speed. If we are to hold in the direction of our heading 
	[em 
		"now,
	]em
	" we will see our speed increase by 24 subunits to 1px, 146sbpx speed, 18 subunits higher than the soft speed cap! We now have several options:
	$LF
]div
[ul 
	[li 
		"We can hold the d-pad in the direction of our heading but doing this at any speed higher than 1px, 128sbpx speed will instantly set the speed to 1px, 128sbpx—hence why this speed is dubbed the 
		[em 
			"soft speed cap
		]em
		".
		$LF
	]li
	[li 
		"We can jump and hold nothing and since there is no air drag, we will retain the faster 1 px, 146sbpx speed over the course of our entire jump!
		$LF
	]li
	[li 
		"If we must stay on the ground, we can then alternate d-pad presses away from then toward our heading to perpetually oscillate between subpixel speeds of 122 and 146 for an average ground speed of 1px, 134sbpx (6 sbpx higher than the soft speed cap).
		$LF
	]li
	[li 
		"If on the ground, we can also just let go of everything to slowly decelerate our subpixel speed in intervals of 6: 146, 140, 134, 122—at which point we would hold in the direction of heading to bring the subpixel speed back to 146. This method achieves the exact same average speed as the previous: 1px, 134sbpx. I don't use this method as often in the TAS.
		$LF
	]li
]ul
[h4 id=WallBounces 
	"Wall Bounces
	$LF
]h4
[div class=p 
	"Bouncing off walls while not holding the d-pad not only gives Flicky an instant speed boost of 48 pixels/frame, but it bypasses the soft speedcap! Chain multiple wall bounces together and you can attain up to 1px, 254sbpx speed (the hard speed cap). 
	$LF
]div
[h4 id=FloorClips 
	"Floor Clips
	$LF
]h4
[div class=p 
	"A floor clip involves a precise jump into a platform edge which instantly magnetizes Flicky to the floor of the platform. This has the following advantages:
	$LF
]div
[ul 
	[li 
		"Instantly sets up for a new jump
		$LF
	]li
	[li 
		"Faster vertical position gain (via the small zip which occurs)
		$LF
	]li
	[li 
		"Faster horizontal position gain (can start moving left/right across the platform sooner)
		$LF
	]li
]ul
[h4 id=BikiniGirlBonusSkips 
	"Bikini Girl Bonus Skips
	$LF
]h4
[div class=p 
	"It is possible to get an extra bonus (the one where the bikini girl appears in the window) on rounds 10, 18, 26, 34, 42, 50, and every 8 rounds thereafter if you did the following on the previous 8 levels:
	$LF
]div
[ul 
	[li 
		"Beat all of them in under 40 seconds (at least a 5000-pt time bonus)
		$LF
	]li
	[li 
		"Deliver all your chirps to the exit in a single chain
		$LF
	]li
]ul
[div class=p 
	"This extra bonus costs a little under 3 seconds each time. In this run, we skipped all five of these bonuses by specifically doing the following:
	$LF
]div
[ul 
	[li 
		"In Round 4, we intentionally progress through the level slower than usual to line up one of the chirps to hit the tiger and fall right on top of the exit door. This makes for an extremely fast recollection after dropping off the first chain of chirps.
		$LF
	]li
	[li 
		"In Round 13, thanks to a completely re-worked route, we now pass by the exit door on our way to the last chirp, where we deliver the first seven chirps.
		$LF
	]li
	[li 
		"In Round 24, falling down the shaft towards the last chirp passes right by the exit door where we make a pit stop. Notice how we lost one of our sunglass chirps earlier in the level and recollect it while delivering the first group of chirps. While this didn't lose or save time, it shows that all counted as one chirp delivery.
		$LF
	]li
	[li 
		"In Round 33, we must pass by the exit door on our way to the upper level, which is a great time to deposit the chirps.
		$LF
	]li
	[li 
		"In Round 38, before turning around to jump and collect the next group of chirps, we first drop off the ones we have. Since this instantly stops our horizontal speed, we also have a faster effective turnaround time.
		$LF
	]li
	[li 
		"In Round 49, we simply deposit the chirp right at the start in to the exit door first.
		$LF
	]li
]ul
[h4 id=ExtraLifePauseSkips 
	"Extra Life Pause Skips
	$LF
]h4
[div class=p 
	"There are five extra lives awarded at 30, 80, 160, 240, and 320 thousand points. A sound effect will play when getting each. The end-of-round text will not appear until said sound effect finishes playing. Therefore, it is desirable to obtain extra lives during round play or early in the final chirp chain delivery, which are far enough from the end-of-round text temporally. Each full skip of the extra life pause would save 27 frames. In practice however, since the bulk of points acquired during a speedrun are awarded at or near the end-of-round text, it is impossible to route anything which takes full advantage of all five opportunities. After extensive analysis, I determined the 3rd and 5th extra lives had the best 
	[em 
		"potential
	]em
	" for being fully skipped. When all was said and done, this TAS saves:
	$LF
]div
[ul 
	[li 
		"17 frames off the 3rd life in Round 8, obtained when the 4th chirp is delivered
		$LF
	]li
	[li 
		"7 frames off the 5th life in Round 14, obtained when the 6th chirp is delivered
		$LF
	]li
]ul
[div class=p 
	"Q: In Round 8, if you had just 200 extra points, you could have obtained the extra life when the 3rd chirp is delivered, which would save 22 frames instead of 17, right?
	$LF
	"A: Exactly, but adjusting the score by this small an amount requires hitting more Tigers or Iggys, or collecting gems. None of these took less than 5 extra frames to carry out, making that implementation not worthwhile.
	$LF
]div
[div class=p 
	"Q: What about bonus rounds? You could easily and substantially manipulate your score there to potentially acquire the extra lives in more favorable places.
	$LF
	"A: I played around with this quite a bit, and it happens that maxing out the score in all the relevant bonus rounds lines up the best opportunities for extra life skips.
	$LF
]div
[h4 id=NotesForTheJudge 
	"Notes for the Judge
	$LF
]h4
[ul 
	[li 
		" Please set the rerecord count to 111,437 to account for rerecords spent on the first loop TAS.
		$LF
	]li
	[li 
		" If accepted, will this submission obsolete the currently published TAS or will only the second loop be published as a "Second quest/post-game completion TAS"? I do have a .bk2 file of just the first loop that's all ready to go for submission in the event of the latter.
		$LF
	]li
]ul
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/InputEvelution 
		"InputEvelution
	]a
	": Replacing with 
	(__wikiLink|displaytext=a 4 frame improvement|href=/UserFiles/Info/638861630868833774)
	" by the author.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/nymx 
		"nymx
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/nymx 
		"nymx
	]a
	": Uploading the "Re-record Count" requested by 
	[a class=intlink href=/Users/Profile/Winslinator 
		"Winslinator
	]a
	". Also, corrected the emulator usage from 2.9.1 to 2.10...as 2.9.1 doesn't sync all the way through.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/nymx 
		"nymx
	]a
	": Well, this has been a very interesting situation to ponder. I took this up with our staff and we got some answers that pretty much align with my original thoughts on categorizing this submission. From how the game is presented, it appears that the previous publication is missing content that is supported by our rules:
	$LF
]div
[ul 
	[li 
		"If there's no clear ending, end after completing the first full game loop. However you may play further and end after any of the following:
		$LF
		[ul 
			[li 
				"All unique content (enemies, level layouts, game mechanics, etc.) is exhausted and completed.
				$LF
			]li
			[li 
				"The loop with the hardest in-game difficulty (enemy speed, AI, etc.) is completed.
				$LF
			]li
		]ul
	]li
]ul
[div class=p 
	"So here, the situation is "the Tigers will have higher movement speeds and Iggy will be present in the first 9 rounds"...meaning it would supersede any previous gameplay.  Additionally, it would be proper to play out the next 48 rounds to complete exactly 2 loops. One example, from my own collection that supports this, is 
	(__wikiLink|href=/4319M|implicitdisplaytext=4319M)
	"...where rounds 65 through 96 are repeated, but much faster...dramatically alternating the tactics for completing each puzzle.
	$LF
]div
[div class=p 
	"In finalizing this, I applaud you for furthering the 1st loop by 24 frames. Everything looks great here and I love how you end input at the very end so early. Taking advantage of the wall bouncing was very clever on ending it out.
	$LF
]div
[div class=p 
	"Accepting over 
	(__wikiLink|href=/4977M|implicitdisplaytext=4977M)
	".
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/inconsistent 
		"inconsistent
	]a
	": Processing...
]div
