4
[div class=p 
	"Red Remover is a 2009 Flash puzzle game where you have to remove the red objects from the screen while keeping the green ones. It was made by Gaz from The Game Homepage, which is a game website that unfortunately no longer exists.
	$LF
	"The encode in this submission is also outdated, the movie submitted is several frames faster after saving frames on level 25.
	$LF
]div
[h4 id=Emulation 
	" Emulation
	$LF
]h4
[ul 
	[li 
		" Operating system: Ubuntu 22.04.1
		$LF
	]li
	[li 
		" Emulators: libTAS v1.4.4 with ruffle-nightly-2023_12_01 (Newest versions of Ruffle don't work and libTAS v1.4.5 breaks Ruffle)
		$LF
	]li
	[li 
		" MD5 hash: e4f77b90d5ced81e54a71483c92306ed
		$LF
	]li
	[li 
		" FPS: 40
		$LF
	]li
]ul
[div class=p 
	"There is also a non deterministic ad player in the loading screen. To remove it, you can use JPEXS Flash Decompiler and delete the ad box at 
	[code 
		"sprites > DefineSprite (20: preloader_mc) > frame 1 > PlaceObject2 (19) Depth: 12 (adBox)
	]code
	". The movie will still work most of the time without deleting it, however.
	$LF
]div
[div class=p 
	"The object outlines are also messed up in the used version of Ruffle, but there is no gameplay impact.
	$LF
]div
[h4 id=Objective 
	" Objective
	$LF
]h4
[ul 
	[li 
		" Complete all of the 40 main levels as fast as possible
		$LF
		[ul 
			[li 
				" The 5 bonus levels are unlocked by completing all levels with bonus mode on, which just adds a spotlight around your cursor and nothing else.
				$LF
			]li
		]ul
	]li
]ul
[h2 id=Comments 
	" Comments
	$LF
]h2
[div class=p 
	"In Red Remover, a major consideration when optimizing for time is that the game can only check for level completion once all objects on the screen are completely still. This means you need to not only remove the red objects quickly, but also find the fastest way for all objects to remain still afterwards. One trick you can see used commonly is popping objects (mainly blue ones) once they no longer have a use in reaching a still state, so time isn't wasted waiting for them to fall off the screen/settle. Also worth noting is that there is a short timer (~3 seconds) where completion checks don't begin, so while some short levels may have faster solutions than others, using them won't make a difference.
	$LF
]div
[h4 id=LevelSpecificCommentary 
	" Level-specific commentary
	$LF
]h4
[div class=p 
	"Interesting things worth mentioning:
	$LF
]div
[ul 
	[li 
		" 
		[b 
			"Level 8:
		]b
		" Dropping the blue block at the time I do is slightly faster than dropping it at other times, because the upwards bounce counteracts the green ball's spin, causing them to stay still faster.
		$LF
	]li
	[li 
		" 
		[b 
			"Level 22:
		]b
		" This is a tricky level. It looks like you should be able to let the blocks fall down at full speed, but creating a stable solution is very sensitive, so a bit of waiting had to occur.
		$LF
	]li
	[li 
		" 
		[b 
			"Level 24:
		]b
		" Normally, you're supposed to pop a few blue blocks to lower the tower and save it from the red balls. That's too slow though, so with some extremely random frame perfect pops, I was able to make the towers fall onto the balls to make them roll off faster. This saves around two seconds over the speedrun world record (and all runs in general)
		$LF
	]li
	[li 
		" 
		[b 
			"Level 29:
		]b
		" The falling red balls may look suboptimal, but it's impossible to make all of them disappear at the top of the screen, unlike with the ones at the left side.
		$LF
	]li
	[li 
		" 
		[b 
			"Level 32:
		]b
		" Only one blue rectangle must be used otherwise there's probably going to be collisions in the center which would lose time.
		$LF
	]li
	[li 
		" 
		[b 
			"Level 38:
		]b
		" The order in which red blocks are popped are chosen that way because releasing the top left blocks too early will always cause a couple of blocks to fall off.
		$LF
	]li
	[li 
		" 
		[b 
			"Level 40:
		]b
		" Another tricky level, the green blocks need to fall quickly but also without interference from red ones.
		$LF
	]li
]ul
[h4 id=MoreOptimization 
	" More optimization?
	$LF
]h4
[div class=p 
	"The levels 22, 38, and 40 probably have a slightly faster solution due to the number of ways the level can be approached. In level 24, there could be a way to get the bottom tower to fall onto the red ball faster/with a better push, but searching for ways to do this is up to random chance. (I spent a while manually brute forcing that level. Maybe automatic brute forcing could yield some results.)
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/eien86 
		"eien86
	]a
	": Claiming for judging.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/eien86 
		"eien86
	]a
	": A fun little game I actually played back in the day. This submission includes blazingly fast solutions to each of the levels and reaches the end much faster than the current 
	[a href=https://www.speedrun.com/rr/runs/yl195orm rel=noopener external nofollow 
		"RTA record
	]a
	". 
	$LF
]div
[div class=p 
	"Encoder Notes: Do not use the 
	[code 
		"--no-gui
	]code
	" argument to launch Ruffle because this will offset the mouse clicks in the wrong way. Also, it is not necessary to remove the ad for the movie to sync. If you wish to do so for the encode, the instructions provided by the author are sufficient to do it.
	$LF
]div
[div class=p 
	"Accepting to Standard
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/despoa 
		"despoa
	]a
	": Processing...
]div
