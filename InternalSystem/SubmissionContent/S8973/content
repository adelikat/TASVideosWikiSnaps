5
[div class=p 
	"I finally had another look at NES Monopoly, after thinking about 
	(__wikiLink|displaytext=adelikat's TAS|href=/4104M)
	" (was it really 4 years ago?). I eventually put together a plan to make this TAS.
	$LF
]div
[div class=p 
	"This TAS aims for fastest input. It improves my own 
	(__wikiLink|displaytext=previous fastest-input TAS|href=/1166S)
	" from a long time ago by 1625 - 1564 = 61 frames.
	$LF
]div
[h4 id=Goals 
	" Goals:
	$LF
]h4
[ul 
	[li 
		" Aims for fastest input (minimum input frames)
		$LF
	]li
	[li 
		" 1 human player vs CPU
		$LF
	]li
]ul
[h4 id=StrategyUsed 
	" Strategy used
	$LF
]h4
[div class=p 
	"adelikat's TAS showed that you can trade (I'm assuming with Ollie, who gives away money like free candy), select No, and once the other player selects Yes, mortgage the properties you put up for trade and then agree to the trade. This I am sure is illegal in an actual Monopoly game, but NES Monopoly doesn't care.
	$LF
]div
[div class=p 
	"Anyway, Ollie gives up to $1360 for both utilities, enough to scheme a plan where he goes bankrupt on his turn. Actually it is a little faster (for minimum input frames) to get $1304 from him. When zooming the amount up on the trade interface, the trade amount goes from $1291 to $1391. So it is faster to mash up from $1291 to $1304, than to mash down from $1391 to $1360. Now if you're wondering why $1304, there is a reason, but you'll need to watch the video to find out.
	$LF
]div
[h4 id=LuaCode 
	" Lua code
	$LF
]h4
[div class=p 
	"As old as it was, the C++ code I used a long time ago, posted on 
	(__wikiLink|displaytext=this page|href=/HomePages/FractalFusion/Source/Monopoly)
	", was instrumental in helping me remember what I was trying to do in the first place. I was able to create a Lua version which is a bit cleaner than the C++ code. I posted the code on the same page (
	(__wikiLink|href=/HomePages/FractalFusion/Source/Monopoly|implicitdisplaytext=HomePages/FractalFusion/Source/Monopoly)
	"). Points of emphasis include creating a lookup table of RNG1 values and addressing them by index, so as to not force the program to run RNG1-calculating code a zillion times over. Of course the code can still be improved.
	$LF
]div
[div class=p 
	"Anyway, I used the code to find the delays and get the dice rolls I wanted (6+6, then either 4+6 or 6+4, then Ollie's 1+1 & 1+1). For the dice rolls, I only needed 12 total frames of delay.
	$LF
]div
[div class=p 
	"I also made a dump of Chance and Community Chest card order based on RNG, so I can manipulate the correct cards. The decks are set after pressing A to start a new game. I also went through a number of scenarios during the naming screen (the fastest way to scroll RNG) to manipulate RNG1 to the correct value as soon as possible. It turns out to be faster by taking Player 2.
	$LF
]div
[h4 id=NotableStrategies 
	" Notable strategies
	$LF
]h4
[div class=p 
	"The two key strategies are:
	$LF
]div
[ul 
	[li 
		" Instead of walking all the way to Water Works, let the nearest utility Chance card take you there. (And it allows you to get both utilities in two turns.)
		$LF
	]li
	[li 
		" When trading with Ollie, raise Ollie's cash offer first before attaching the utilities; this turns out to be faster.
		$LF
	]li
]ul
[h4 id=WhatAboutTheMinimumTimeToActualEndingTas 
	" What about the minimum time to actual ending TAS?
	$LF
]h4
[div class=p 
	(__wikiLink|displaytext=adelikat already has this TAS|href=/4104M)
	". But if you were wondering, I have a movie which improves on it, based on the above two strategies. And it can still be improved.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/ViGadeomes 
		"ViGadeomes
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/ViGadeomes 
		"ViGadeomes
	]a
	": The new strategy used here is clever ! 
	$LF
]div
[div class=p 
	"After discussions with the staff, we originaly came to the conclusion that both 
	(__wikiLink|displaytext=adelikat's TAS|href=/4104M)
	" and this submission should be treated as different branches as the different end goals chosen (fastest input vs. fastest bankrupty) leads indeed to different gameplay & strategies different enough that they can coexist. This submission should have then been accepted to Alternative. 
	$LF
]div
[div class=p 
	"But then FractalFusion uploaded an userfile using the same strategy as this submission but with the same end metric as the current publication so the Alternative solution isn't one anymore because strategies are almost the same now. We are then back to the original plan: replace the submission file with the userfile given by the author and use the current submission file as an alternate movie on the publication.
	$LF
]div
[div class=p 
	"Replacing submission file with 
	(__wikiLink|href=/Forum/Posts/529900|implicitdisplaytext=Forum/Posts/529900)
	" and uploading original submission file to 
	(__wikiLink|displaytext=userfile|href=/UserFiles/Info/638551753260885073)
	".
	$LF
]div
[div class=p 
	"Accepting to obsolete 
	(__wikiLink|href=/4104M|implicitdisplaytext=4104M)
	" with 
	(__wikiLink|displaytext=this movie|href=/UserFiles/Info/638551753260885073)
	" as an alternate movie file.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/fsvgm777 
		"fsvgm777
	]a
	": Processing.
]div
