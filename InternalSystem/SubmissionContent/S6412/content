1
[div class=p 
	"Hello Everyone. After my TAS of The Lion King for the NES was published, I had a nagging feeling that the waterfall section in the 6th level of the game could have been done faster. However, I was busy working on other projects, so I decided to come back and investigate this later. About a week ago, I re-TASed the waterfall section of the game and was able to save 100 frames over my published run. As a result of this, I decided to go back to my tasproject file of the game and search for any other spots that I could have improved upon. The number of improvements I ended up finding besides just the waterfall left me stunned, and I was able to save enough time that it merited a new submission for this game. Down below, I'm going to summarize what I did in each of the 6 levels of the game. But before I can do that, I need to provide a quick summary of the game I am talking about
	$LF
]div
[h4 id=GameDescription: 
	" Game Description:
	$LF
]h4
[div class=p 
	"The Lion King was the last game to be officially released for the NES, coming out in 1995 (though the title screen says 1994 on it). This game was released in Europe only, and intended to copy the gameboy port of the Lion King, which itself was trying to copy the SNES version of the game. This, combined, with the rushed nature of the game's release, led to the game having terrible music, terrible controls (which only register inputs once every 3 frames and drop inputs on the other 2 frames) and only half the levels of the SNES version of the game (the game ends before you become adult Simba, and the game's box says that the game has 10 levels, when in reality the game only has 6 levels). This game is a platformer that mostly allows for free movement, except for 2 sections of the game that are autoscrollers (one of which is a part of a level, and one of which is a whole level).
	$LF
]div
[div class=p 
	"With that out of the way, let's get on to the improvements!
	$LF
]div
[h4 id=Level1: 
	" Level 1:
	$LF
]h4
[div class=p 
	"Surprisingly, I didn't find any improvements for this level compared to my previous TAS, making this the only non-autoscroller level in the game that I didn't find any timesaves in. Thus, this level looks the same as it did in my original TAS: climb up to the top-right of the level, kill the hyena, and move on to the next level.
	$LF
]div
[div class=p 
	"Frames Saved In This Level: 0
	$LF
]div
[h4 id=Level2: 
	" Level 2:
	$LF
]h4
[div class=p 
	"Level 2 is a short level, about a third of which is an autoscroller section riding on an Ostrich. Because of this, I figured I wouldn't be able to find any timesaves here. Suprisingly however, there turned out to be a lot of new strategies and better movement that I could implement in this level to save time. Below is a list of all timesaves in this level:
	$LF
]div
[ul 
	[li 
		" At the start of the level, I jump onto the Rhino's horn while moving left, which saves a few frames over running left and doing a jump from a standstill like in my original TAS.
		$LF
	]li
	[li 
		" I hold right for longer before I land on the first Giraffe's head so that I am further to the right when I hit the ground
		$LF
	]li
	[li 
		" In the section with 3 rhinos in a row, I found an earlier frame that I can jump off of the first Rhino's tail.
		$LF
	]li
	[li 
		" I waited a few frames before jumping off the third rhino's tail, which boosted me forward by about 20 pixels
		$LF
	]li
	[li 
		" On the Rhino after this, I jump into its tail to boost me up to its horn instead of jumping to its horn from under it. I actually knew about this timesave before submitting my last TAS, but at the frame I reached the rhino in my last TAS, I was too slow to use the tail, and would have had to wait around 60 frames before the tail would swing the other way to push me forward. However, I saved enough time earlier on for this to work here.
		$LF
	]li
	[li 
		" Now comes the biggest timesave of level 2. After the rhino horn boosts me up, I hold left to skip getting thrown into the first monkey. The game keeps moving you up if you miss the first monkey, which allows me to reach the second one. This skips the animation of Simba getting thrown by the monkey, which saves about half a second. Given how easy this strategy is, I'm suprised that neither me nor the RTA WR holder of this game thought to use this strategy earlier!
		$LF
	]li
]ul
[div class=p 
	"With this, I exit level 2 and venture onwards to level 3.
	$LF
]div
[div class=p 
	"Frames saved in this level: 84
	$LF
]div
[h4 id=Level3 
	" Level 3
	$LF
]h4
[ul 
	[li 
		" To start this level off, I delay pressing A to start the level by 2 frames compared to the earliest frame that I could have pressed it. This changes the pattern of the hyena so that he does a short jump and immediately becomes stunned and vulnerable to attack right after he lands. This pattern is faster than waiting for the hyena to land from jumping a second time, which he does in my original TAS. All in all, this saves around 115 frames. The hyena's behavior seems to be mainly based on a global timer, so I was forced to sacrifice 2 frames to the RNG gods in order to get through this fight quickly :(
		$LF
	]li
	[li 
		" I was able to move faster to set up the double vulture boost skip (the boost off of two vultures that I do at 1:57 in my encode to reach a high up platform and skip half the level), which also saved me a sizable chunk of time.
		$LF
	]li
	[li 
		" After landing from the double vulture boost, I jump to the next platform without turning around (I turn around as I jump, which makes Simba change directions in mid-air). This skips the slow animation of Simba turning around, which saves somewhere between 10-15 frames.
		$LF
	]li
]ul
[div class=p 
	"After this, the level is the same as the original TAS: roll through the top of the level, kill the hyena, and move on to the next level.
	$LF
]div
[div class=p 
	"Total frames saved in this level: 175
	$LF
]div
[h4 id=Level4: 
	" Level 4:
	$LF
]h4
[div class=p 
	"In level 4 I was able to save 3 whole seconds... just kidding! Level 4 is an autoscroller, so there's no way to finish it any faster or slower than I did in my original TAS. I did however make sure to include more dodges of each of the animals in this level to make the TAS more entertaining for viewers.
	$LF
]div
[div class=p 
	"Total frames saved in this level: 0
	$LF
]div
[h4 id=Level5: 
	" Level 5:
	$LF
]h4
[ul 
	[li 
		" Soon after the start of this level, I jump over a porcupine (3:46 in the encode linked below). Do not be deceived by the porcupine's small appearance! The porcupine's hitbox extends upward to twice the porcupine's height, and its hitbox also extends very far in front of and behind it. In effect, this makes the porcupine act like a giant invisible block that does damage to you. Jumping over this first porcupine while he is walking away from you is not only frame perfect. It is in fact sub-frame perfect, as even a frame perfect jump won't work if the porcupine's subpixel is in the wrong spot. I saved a little time here by performing this jump slightly faster.
		$LF
	]li
	[li 
		" I also jump over the second porcupine I encounter in the level. This actually doesn't save or lose any time compared to running through the porcupine and taking damage, but if given a choice with no time advantage one way or another, I'd prefer to avoid taking damage since it makes for a more impressive-looking TAS.
		$LF
	]li
	[li 
		" I save time right after the second porcupine by landing a little past the next enemy on the ground at 3:50 in the encode of my TAS. This avoids Simba slowly bouncing into the air after hitting an enemy and falling back down, which saves around 20 frames. The reason why I didn't do this in my original TAS is that even with a frame-perfect jump, you usually still can't make it over this enemy. Instead, I had to delay my movement by about 3-4 frames when I reached the spot where the first porcupine was. This made the enemy down below load and move forwards for a few frames (to the right) which pushed him just enough pixels out of the way that I could land without hitting him. To make matters worse, this is the one enemy in the game that's invisible until you get right next to it, making it impossible to see if you have manipulated him correctly until you actually reach the spot where you have to jump over him. I like to think that this time around, I beat the game's faulty programming, as opposed to the other way around!
		$LF
	]li
	[li 
		" The last timesave of this level comes from me jumping over the third porcupine, as opposed to running through it and taking damage. Avoiding taking damage here also makes it so that this becomes a damage-less TAS as well, as this was the last place that my original TAS took damage. 
		$LF
	]li
]ul
[div class=p 
	"With the hazards of the last 5 levels safely behind him, Simba bravely moves forward for a final showdown at the top of the waterfall...
	$LF
]div
[div class=p 
	"Total frames saved in this level: 27
	$LF
]div
[h4 id=Level6: 
	" Level 6:
	$LF
]h4
[div class=p 
	"Here comes the majority of this TAS's timesaves!
	$LF
]div
[ul 
	[li 
		" I save a few frames by holding A a few frames earlier on each of the pillars that Simba jumps off of (the ones seen at 4:22 in my encode of the TAS linked below).
		$LF
	]li
]ul
[pre 
	$LF
]pre
[div class=p 
	"Now onto the reason why this whole TAS was made: The waterfall!
	$LF
]div
[h4 id=Thewaterfall: 
	" The waterfall:
	$LF
]h4
[div class=p 
	"I discovered that by slowing down for a few frames before entering the waterfall, I could manipulate where the logs that fall down the waterfall would appear. I also discovered that only 5 logs can appear on screen at a given point in time, and that every new log spawns at the top of the screen at the point when the log is triggered to start moving down by another log going off screen. I pause for 3 frames at 4:41 in my video of the TAS. I also land so that I climb up the first rock on the waterfall. This makes a log appear very close to where I need it to be to make my first jump up the waterfall, so I only need to wait about 3/4 of a second before I can jump to the next log. It's worth noting that the logs push you upwards if you land in the middle of them, which I use to gain a little extra height. In fact, if a log is perfectly positioned, it can make you clip into the rocks when you jump through it. From there, you would be able to jump back out, which could save time. Unfortunately, based on where I was on the game's global timer, no logs appeared in a position where I could have used this trick to save time. From here, I am able to keep jumping until I have reached nearly the top of the waterfall. I have to wait a fraction of a second before jumping onto the last log, but after that, I've made it out of the waterfall!
	$LF
]div
[div class=p 
	"Making this waterfall section was extremely precise. My movement through the waterfall and my delays in movement all had to be perfectly timed to get this pattern. If I just ran straight through without manipulating RNG, this would have been about 650 frames slower!
	$LF
]div
[div class=p 
	"Now then, onto the final stretch of the TAS!
	$LF
]div
[h4 id=Therestoflevel6: 
	" The rest of level 6:
	$LF
]h4
[ul 
	[li 
		" I saved time at 4:58 by jumping straight up to the next ledge without first killing the enemy on the ledge.
		$LF
	]li
]ul
[div class=p 
	"This is where I figured I had found my last timesave in the TAS. Little did I know what I had in store at the end of the level:
	$LF
]div
[h4 id=TheFinalBoss: 
	" The Final Boss:
	$LF
]h4
[div class=p 
	"After navigating through 5 levels plus a treacherous climb up a waterfall, Simba finally reaches his goal: To fight with the Ape on the top of the waterfall. The Ape will try to hurt Simba by throwing rocks at him, but Simba can jump on these rocks to make them bounce back to hurt this fiendish primate.
	$LF
]div
[div class=p 
	"When TASing this section, I discovered that if you land on the opposite side of the ape after hitting him with a rock, he will turn around and immediately throw another rock at you without going through his usual cycle of waiting 3 seconds between each rock throw. This saves an enormous amount of time, and shaved about 10 seconds off the final time of this TAS (meaning it made up more than half of all time-save in this new TAS!).
	$LF
]div
[div class=p 
	"With the malicious ape finally defeated, Simba finally becomes the true lion king, and the game is over (just like in the movie, right?).
	$LF
]div
[div class=p 
	"Total frames saved in this level: 576
	$LF
]div
[div class=p 
	"Total frames saved overall: 862
	$LF
]div
[h4 id=DifficultpartstoTAS: 
	" Difficult parts to TAS:
	$LF
]h4
[div class=p 
	"Finding ways to manipulate random events in the game to my advantage was very difficult, and required a lot of patience. Additionally, the game's poor controls and the huge hitboxes on enemies made a lot of sections difficult to get through quickly. I believe that this TAS would be entertaining to anyone who likes watching TASes of NES platformers (due to how quickly the game is beaten), even if the controls, graphics and music may be subpar in this game. I hope you enjoy watching this TAS!
	$LF
]div
[h4 id=Encode: 
	" Encode:
	$LF
]h4
[div class=p 
	(youtube|v=zCmD0JNT5lc)
	$LF
]div
