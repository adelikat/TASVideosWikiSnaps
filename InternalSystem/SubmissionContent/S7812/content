8
[div class=p 
	"Undertale is a 2D role-playing video game created by Toby Fox. The player controls a child who has fallen into the Underground: a large, secluded region under the surface of the Earth, separated by a magical barrier. 
	$LF
	"Everybody knows about the three main categories: Genocide, True Pacifist and Neutral. But there is a feature in Undertale that people know about but is obscure to those who have only played Undertale once: New Game+. 
	$LF
	"Note: For this TAS to sync, you must check Runtime > Time tracking > clock_gettime(). The game will not function without this.
	$LF
	"You may also need to install some extra dependencies by entering the following command into a terminal: 
	$LF
]div
[table 
	[tbody 
		[tr 
			[td 
				"sudo apt-get install libopenal1:i386 libssl1.0.0:i386 libglu1-mesa:i386
			]td
		]tr
	]tbody
]table
[div class=p 
	"Additionally, this TAS uses an already-completed save file, which can be obtained by playing the 
	[a href=https://tasvideos.org/UserFiles/Info/637840694183159533 rel=noopener external nofollow 
		"verification movie
	]a
	" from start to finish.
	$LF
]div
[div class=p 
	[a href=https://tasvideos.org/UserFiles/Info/637910521609112867 rel=noopener external nofollow 
		"ALTERNATE MOVIE FOR ENCODING
	]a
	$LF
]div
[h2 id=GameObjectives 
	"Game objectives 
	$LF
]h2
[ul 
	[li 
		" Emulator used: libTAS 1.4.3 (32-bit) 
		$LF
	]li
	[li 
		" Plays on version 1.001 
		$LF
	]li
	[li 
		" Reaches the Neutral Ending while having New Game+ activated 
		$LF
	]li
	[li 
		" Avoids taking damage unless it saves time 
		$LF
	]li
]ul
[h2 id=Comments 
	"Comments 
	$LF
]h2
[div class=p 
	"This TAS features the use of heavy RNG manipulation and glitches.
	$LF
	"New Game+, or NG+ for short, cuts the time spent running significantly. It allows you to, in the case of NG+ Neutral, skip fights that you have to do in regular Neutral, such as the Omega/Photoshop Flowey boss fight, which takes an entire ten minutes to complete. 
	$LF
	"This movie aims to complete the Neutral variant of the New Game+ endings. It heavily utilises glitches and RNG manipulation and very optimized movement. 
	$LF
	"Up until Waterfall, we have to rely on time-saving strategies, movement optimization and RNG manipulation. After Spears 1 in Waterfall, we acquire the Punch Card, an item that we can use and abuse to skip cutscenes, wrong warp, and perform other glitches that save a significant amount of time. 
	$LF
]div
[h2 id=TricksUsed 
	"Tricks Used
	$LF
]h2
[h4 id=WallHumping 
	"Wall humping 
	$LF
]h4
[div class=p 
	"Wall humping is a trick that makes the player oscillate between facing up and down every frame. This is sometimes referred to as the ‘geno dance’, as this trick is used heavily in the Genocide route in place of walking back and forth in a room. This is used only for fun in most rooms, and in some circumstances, it can even lose time. If a player is in a room where they are in contact with and between two horizontal walls, the player is moved six units horizontally. For comparison, the player is usually moved by 3 units every frame assuming a direction is being held, so in the case that the player is moved six units every frame, the player goes at double speed. This saves a significant amount of time, and is the product of the two walls moving the player forward simultaneously. 
	$LF
]div
[h4 id=MenuBuffering 
	"Menu buffering 
	$LF
]h4
[div class=p 
	"Menu buffering plays a big role in saving time. It is achieved by opening your menu on the same frame you press a direction key. The most optimal way to menu buffer is as follows: 
	$LF
]div
[ul 
	[li 
		" Frame 1: C, X, (Direction of choice) 
		$LF
	]li
	[li 
		" Frame 2: Nothing 
		$LF
	]li
]ul
[div class=p 
	"This will open the menu, move the player in the direction of your choosing, and close the menu. Doing the inputs shown in Frame 1 and advancing a frame will allow you to chain these to pull off time-saving manoeuvres to get tricks such as Dogi/Dog Marriage Skip. It is also used to hit triggers for rooms while you are at the maximum step count for an encounter to occur. Doing so skips the encounter that you would normally get if you don’t menu buffer into the room trigger. This saves time as you don’t have to wait for the battle to start and then wait for the battle to end. By the time the encounter is over you would be already in the next room or, depending on the room, potentially the room after that. The timesave from menu buffering an encounter can be made even greater if the blcon (BLCON in lowercase) alarm value is the maximum possible value of 20. The blcon’s alarm value ranges from 15 to 20, and the value of the alarm determines the number of frames the game shows the exclamation mark (!) icon (or smiley face icon if you are on the Genocide route) for. Typically, you want this value to be as close to 15 as possible, and anything above 15 wastes 1 to 5 frames over perfect. Fortunately, the blcon’s alarm value can be manipulated using RNG manipulation. 
	$LF
]div
[h4 id=RngManipulation 
	"RNG Manipulation 
	$LF
]h4
[div class=p 
	"RNG Manipulation, or RNG Manip for short, is a trick where you delay a variable number of frames to advance RNG to a seed that is more favourable to the current situation. RNG Manip’ing typically loses time unless you do what is called a zero-frame manip. This is possible in places like Snowdin, where you do Giasfclfebrehber Warp, or when you have to wait for something to happen, such as the bridge seeds forming in Petals 2. RNG is called, and thus advanced, twice every time a character is drawn onto the screen from a GML (Game Maker Language) function such as draw_text(). The most common form of RNG manipulation is varying how many frames text is displayed. This form is used heavily in this TAS, and is the reason I have been able to get many of the most-optimal step counts in rooms (e.g., 140/140 in the Wishing Room/Woshua room in Waterfall just before Spears 1). 
	$LF
]div
[h4 id=Wallclips 
	"Wallclips 
	$LF
]h4
[div class=p 
	"Wallclips involve the player clipping into walls by three units (one movement pixel). They only work when you enter from the top or the bottom, not from the left or the right. This can save time as wallclips decrease the distance required to travel from A to B and can allow movement a frame earlier than normal with certain events such as phone calls. It is not possible to menu buffer while in the wallclipped state so you are required to leave the wallclipped state before you can menu buffer. 
	$LF
]div
[h4 id=PunchCardExploitPce 
	"Punch Card Exploit (PCE) 
	$LF
]h4
[div class=p 
	"PCE refers to a glitch where the player menu buffers onto a trigger without triggering the cutscene, uses the Punch Card from the item menu, and then proceeds to close the Punch Card. This will give your character a global.interact value of 0 which in turn will allow you to move during the cutscene. There happens to be a one-frame window between using the Punch Card and when it is displayed which grants you full movement control. During this frame, the cutscene trigger is activated, beginning the cutscene. Most cutscenes only lock movement in the very beginning of the cutscene, which is most likely the frame the cutscene starts. Due to this, the Punch Card’s ability to set global.interact to 0 and unlock movement can be used to skip the entire cutscene. 
	$LF
	"There also exists a variant of PCE known as PCE slide where the player uses the frame of full control acquired by the punch card to walk onto the trigger of the cutscene which, like a regular PCE, also starts the cutscene and allows you to skip it. 
	$LF
]div
[h4 id=WrongWarpWw 
	"Wrong Warp (WW) 
	$LF
]h4
[div class=p 
	"Wrong warps are used heavily in Undertale speedrunning and this is no exception in TAS. Wrong warps allow you to enter a room, where the game places you at the default location in a room, often marked by a marker object such as obj_markerb. This is always different from the location the door transition puts you at. When the player touches a room transition, the global variable global.interact is usually set to 3, meaning that the game is transitioning you to the next room. Once you are in the next room, the game runs a check to see if global.interact is equal to 3 and if it is, it will run code that relocates the player to the appropriate door marker. This relocation only occurs if global.interact is equal to three, and thus any other global.interact value will place the player at the default location of the room, which is typically nearer the centre of the room, and the game will not run the relocation code. 
	$LF
]div
[h4 id=TextStorageOverflow 
	"Text Storage/Overflow 
	$LF
]h4
[div class=p 
	"Text usually sets global.interact to a value other than 0, which locks free movement. Text storage refers to a glitch where the player regains movement while text is drawn on the screen. You can use this to your advantage as some text sets global.interact to 0 when closing the textbox which enables full control of the player. This is extremely useful especially when in a long cutscene. If the cutscene locks movement and then the textbox closing unlocks movement it will allow you to move during the cutscene, allowing you to skip it entirely. Text storage is also used to wrong warp out of a room. This is known as an overflow wrong warp (OWW) and is used in the room after the bridge cutscene with Monster Kid, just before the Undyne fight. 
	$LF
]div
[h4 id=ChoicerOverflow 
	"Choicer Overflow 
	$LF
]h4
[div class=p 
	"Choicer overflow in the context of Undertale speedrunning refers to a glitch that involves using multiple choicers at once to advance text beyond its normal limits. Choicers are types of textboxes that give the player a choice between two different options. These choicers use a variable called global.msc. When a textbox is created, the object creating the textbox assigns a value to global.msc, which is then used to look up which set of text to display. Then if the set of text includes a choicer, global.msc is incremented by 1, which normally contains the post-choicer text, if any, as well as potentially other code that accompanies the selected choice. If another choicer is then activated, the value global.msc is incremented a second time and the corresponding set of text is displayed. This can be done repeatedly to advance global.msc to any particular value, as long as there are enough choicers available. 
	$LF
	"Choicer overflow refers to a glitch that uses multiple choicers simultaneously to advance text far beyond where it is meant to advance. This glitch is used to get both the Instant Noodles and the Burnt Pan early, in a trick that is known as Early Early Burnt Pan (EEBP). Acquiring the Instant Noodles is mandatory as it precedes the Burnt Pan’s MSC value and you cannot increment the MSC value by more than one every choicer. Choicers use a global variable known as global.msc. When a textbox is created, the parent object of the textbox assigns a value to global.msc, which is then used to lookup which set of text to display. Then if the set of text includes a choicer, global.msc is incremented by 1, which normally contains the post-choicer text, if any, as well as potentially other code that accompanies the selected choice. If another choicer is then activated, the value global.msc is incremented a second time and the corresponding set of text is displayed. This can be done repeatedly to advance global.msc to a particular value, as long as there are enough choicers available.
	$LF
]div
[h4 id=PersistenceGlitch 
	"Persistence Glitch 
	$LF
]h4
[div class=p 
	"In Undertale, every room has a property called persistence, which saves the state of every object in the room. This persistence property is set upon entering a battle and unset once the player exits the battle. It is possible to make the game not unset the persistence property by leaving the room on the frame before a battle starts. This glitch’s only use is in the Mad Dummy fight, where we use this to skip the fight after dying to them. Once we respawn in the room after dying, the post-battle cutscene with Napstablook is played and the fight can no longer be retriggered as the game believes you have completed the fight. The way this works is that the game believes you have completed the fight when you re-enter the room with the persistence property set. 
	$LF
]div
[div class=p 
	"Area comments from Snowdin onward are copied from OceanBagel’s Neutral TAS as it is all the same, with certain areas edited to cover new strats. 
	$LF
]div
[h2 id=AreaComments 
	"Area Comments 
	$LF
]h2
[h4 id=Ruins 
	"Ruins 
	$LF
]h4
[div class=p 
	"In a normal playthrough of Undertale, Flowey will greet you and educate you about battles and LOVE and such. However, with New Game+ we can skip this as Flowey is already dead. This is significant as it saves roughly thirty seconds just before the entrance to the Ruins and saves a heap of time later when we go to fight Photoshop/Omega Flowey. 
	$LF
]div
[div class=p 
	"The first couple rooms of Ruins aren’t particularly interesting, but there is a trick called Triple Switch Overflow three rooms after the entrance of the Ruins. This trick allows you to overflow the sign next to the last working switch in the triple switch puzzle room just before the room with the tutorial about battles with Toriel. With this, you can do an Overflow Wrong Warp (OWW) into the next room, which skips the walk to the dummy and thus saves time. The next few rooms are just about not losing any time and just playing well. We encounter our first real monster, and it is here that RNG (Random Number Generation) starts to play a big role. Upon getting a random encounter, an exclamation mark icon, known in the community as a blcon (BLCON in lowercase) will appear. This lasts for a minimum of 15 frames and a maximum of 20 frames. Typically, you want this value to be as close to 15 as possible else you begin to lose time. I get a blcon value of 16, which is the most optimal here without using a 0-frame manip(ulation). 0-frame manips are possible when you have text on the screen and you have full control of the player. You are able to manipulate RNG without wasting time. This is used in several places in this TAS; however, it was not used here. After walking down the long hallway and talking to Toriel, you can progress into the leaf pile room. From here, we go up to grab some monster candy. This loses a little time for the moment but the timesave in Toriel will more than make up for it. We will store this Monster Candy for the Toriel fight later on in Ruins.  
	$LF
]div
[div class=p 
	"After we’ve fallen down the hole in the first cracked tile puzzle, we can go back up and enter the next room. It is here the first RNG-influencing choice is presented. In the choicer between liking Cinnamon or not, we select No. This is the fastest option by roughly 10 frames (0.3 seconds) and influences RNG. If the choicer is about liking Butterscotch, the movie will desync in the next room as every character drawn onto the screen changes RNG, even if it’s drawn all at once. In the same room, we menu buffer once we reach the maximum step count possible before we get an encounter. Doing this will not advance the step counter, allowing us to skip the encounter and move onto the next room. The next room is the second cracked tile puzzle, this time in the form of a maze. I navigate through the maze using the most optimal route and the fastest speed. 
	$LF
]div
[div class=p 
	"Once we reach the end of the maze, we approach what is known as the Three/Triple Rock room. This room houses a glitch that, by getting an encounter at the right moment, allows for getting text storage to wrong warp into the next room. We use this glitch to gain movement during the goofy rock cutscene where your movement would normally be locked and your global.interact value would be 1. We then interact twice with the rock while it is coming to the end of its sliding animation, which gives us text storage. This text storage will enable us to wrong warp into the next room. The first instance of text corruption is seen here, which involves text being replaced with other text that is assigned later. The encounter in this room is random, and is determined by the battlegroup. Every single monster encounter is given a battlegroup, and we want this battlegroup to correspond to a spareable monster. We manipulate RNG to achieve this, which saves time and also allows for the clearing of the corrupted text once we arrive back into the overworld. If this text is unable to be cleared, it results in a softlock, which would mean that the run is over in a typical speedrun. It is important to get a spareable monster so that we can spare it. Fleeing from it would prevent us from clearing the corrupted text. 
	$LF
]div
[div class=p 
	"After doing an OWW out of the triple rock room and making our way through the mouse hole room, we reach the Napstablook fight. Napstablook, like many other monsters we encounter, has various different attacks. It is not always possible to get the most optimal attack while not manipulating any RNG, and this is the case in this movie. Because of this, we manipulate RNG to get the faster of the two possible attacks. We lose a frame to RNG manipulation however gain several frames due to getting the faster attack. During this first turn we intentionally take damage, which will be important later as it changes the text in the tree room cutscene before entering Toriel’s house as it is based upon how much HP you have. 
	$LF
]div
[div class=p 
	"After Napstablook, we have to traverse a few more rooms, making sure to manipulate RNG as necessary. The only instance of RNG manipulation in these next rooms is the third perspective switch room. I manipulated RNG here to make the step count be high enough so that I don’t get an encounter. 
	$LF
]div
[div class=p 
	"Once we get to Toriel, it is just mashing until we get to the fight in the basement. We make sure to select the right option every time when talking to Toriel as it saves time due to not having to re-interact with Toriel every time. Re-interacting with Torie loses time, so we avoid this by choosing the right option. The basement leads to the fight with Toriel, which is where RNG manipulation comes in handy. To get the hand attack on every turn that is optimal, you will almost certainly need to manipulate RNG until you get the attack you want. This typically involves manipulating RNG in the Toriel fight, but there is a roughly 1 in 13000 chance that you will not have to manipulate RNG at all to get the needed attacks for each turn. These odds make the chances of achieving this incredibly slim and it can be understood why I decided not to shoot for these ridiculous odds. This movie gets every fastest possible hand attack, and we eat the Monster Candy we picked up earlier when we reach 2HP for the first time, which will bring our HP to 12. From here, we run into Toriel’s hands to end the turn and then cancel the last turn with a fire attack. From here, Toriel will blabber on about how she wants to protect us, but we really don’t care, so we just mash her dialogue away as quickly as we can. She says goodbye to us, and then she walks away, leaving us to walk through the door and down another long hallway. From here, we touch another door to leave both Toriel and the Ruins behind for good. 
	$LF
]div
[h4 id=Snowdin 
	"Snowdin 
	$LF
]h4
[div class=p 
	"The first few rooms of Snowdin are just a walking simulator, and then we get to a bridge. We want to trigger the cutscene as quickly as possible while being as high as possible on this bridge so that not only the dark Sans cutscene is triggered earlier, but you spend less time walking upward to the conveniently shaped lamp. This causes Sans to stop his walking animation earlier, saving 4 frames. After this cutscene, we enter Box Road. Here, we must interact with the save point to heal (we're still at 2hp from Toriel) and then interact with the box to retrieve the Tough Glove. We need the Tough Glove so we can get the Stick out of our weapon slot and use it to spare Doggo. Previously, the fastest way to interact with the box was to face upwards, which we could do without letting go of Right for one frame. However, it is possible to abuse the collision and oddities of that collision to reach the box and interact with it without losing any time. We equip the Tough Glove in the next room, as there is a step counter in this room and we will be menu buffering at the end of this room anyways. We RNG manipulate this encounter to be as late as possible and then leave the room without getting the encounter. 
	$LF
]div
[div class=p 
	"After a few more rooms, we come across the word search puzzle room. This is where we perform a glitch called Giasfclfebrehber warp, named after the nonsensical word in the word search list. In order to perform a Giasfclfebrehber warp, we must interact with Sans as we enter the room transition and then close the text to wrong warp into the next room. Next is Dog Marriage Skip/Dogi Skip, which is a glitch that involves getting an encounter on the same step we enter the Dogi cutscene trigger. There are a few routes for this room, including leaving the room to reset the step counter and menu buffering from the switch to the Dogi trigger. Menu buffering is faster so this is what we do. After entering the random encounter, we flee and then walk out of the room before the Dogi cutscene progresses further. 
	$LF
]div
[div class=p 
	"After pressing a few switches and getting through a cutscene, we arrive to the room where we'll perform the next glitch in the run. By interacting with the sign and then stepping on the switch on the next frame, we can regain movement during the cutscene, saving a significant amount of time. We then use this cutscene to wrong warp into the next room, saving a few additional frames. We answer "No" both times Papyrus asks if we understand the rules and then move on. 
	$LF
]div
[div class=p 
	"The ice puzzle room is solved using Misogynist Ice Puzzle Skip (no, I am not making that up; I guess the person naming the trick thought it was misogynist instead of masochist), also known as Masochist 3. This saves one frame and replaces Masochist 2, which is a faster solution than the Masochist Ice Puzzle strat that saves 7 frames. This solution also sets up to skip the cutscene at the end of the ice puzzle. Then we arrive to the Greater Dog room, where we Ignore the dog and then run into the dog attacks that were RNG manipped, cancelling each attack. Ignore gives more attacks but a faster post-battle cutscene, saving time over the standard strat of using the stick and then sparing. 
	$LF
]div
[div class=p 
	"We then proceed to the next room, get through the cutscene, and enter Snowdin town. We interact with the sign as we enter the igloo to gain text storage and use it to OWW into the Papyrus boss room. The strategy for the Papyrus boss fight is to take damage and let Papyrus capture us three times, and then Papyrus will offer us a chance to skip his fight, which we'll gladly accept as doing the full version of the fight costs a significant amount of time. 
	$LF
]div
[h4 id=Waterfall 
	"Waterfall 
	$LF
]h4
[div class=p 
	"Near the beginning of Waterfall, we execute a glitch called Sea-Grass Skip (SGS). This skip is performed by using an item after triggering the cutscene where Undyne sees Frisk moving in the grass. Then by closing this text, we regain movement. We do a faster version where we use the item twice to allow a few extra frames of movement. We then do a Giasfclfebrehber goblin warp (goblin warp meaning a blind wrong warp) off the save point so we can wrong warp into the next room. While waiting for the flower bridge to form, we drop the stick, which both manipulates RNG and makes inventory management faster later on. This RNG manipulation is immediately used in the next room to set the encounter steps as low as possible so we can grind out the encounter at the door and leave the door to skip the encounter. This is the first instance of a scripted encounter skip, where a scripted encounter (in this case a scripted Aaron) is given a much lower step count than later encounters, so by skipping Aaron, the next encounter will have a high enough step count that we will be able to leave the room without getting the encounter. We then manipulate RNG again during the next flower bridge cutscene to get a maximum step count for the next encounter, which we will menu buffer past. 
	$LF
]div
[div class=p 
	"We then arrive to the Spears 1 segment, where Undyne chases you and throws spears at you. There is some RNG in this section, but due to the RNG manips in the previous room, there isn't much we can do to manipulate this RNG without losing time. For the most part we are able to move optimally, and at one point we turn around for a frame to allow us to take a faster path through the next set of spears and save time overall. We reach the end of Spears 1, get through the cutscene, and proceed to the next room. 
	$LF
]div
[div class=p 
	"This next section is a major shift in gameplay compared to the first third of the run. We acquire the Punch Card item, which will be the main way to perform glitches for the rest of the game. Punch Cards have three intended uses: trading three of them for a free Nice Cream, powering up punching attacks in battle, and looking at the card outside of battle. The last effect is by far the most useful for us, as when you look at the Punch Card, the menu closes for a frame before the Punch Card appears. During this one frame, we can activate a cutscene, interact with an object, or even hit a room transition. Then the Punch Card opens on the next frame, allowing us to close the Punch Card and regain movement.
	$LF
]div
[div class=p 
	"After we pick up the Punch Card, we do a wrong warp into the next room and eat the Nice Cream during the room transition. This puts the Punch Card in the first slot, saving one frame whenever we need to menu buffer down and use the Punch Card. The next room has random particles generating nearby, which means we can manipulate RNG by taking a different path through the room. We use this to manipulate the length of the pre-battle cutscene with the exclamation mark, which can last from 15-20 frames. 
	$LF
]div
[div class=p 
	"We wrong warp into the Onionsan room and PCE Onionsan's trigger and then proceed through the room, PCEing other triggers and wrong warping into the next room. The Shyren encounter is actually an event trigger and not a random encounter, so we PCE the trigger and interact with the sign to gain text storage to wrong warp into the next room. 
	$LF
]div
[div class=p 
	"We proceed through the next few rooms, meeting up with Monster Kid and PCEing cutscene triggers as necessary, and wrong warping where it saves time. In the room with the castle in the background, we hold Right+Up+Down to move double speed through this room. This is because there is wall collision both above and below the player and holding both Up and Down causes both wall collision objects to activate their collision code, both of which slide the player along the wall. This causes the player to move twice per frame, resulting in double movement speed. 
	$LF
]div
[div class=p 
	"In the next room, we interact with Monster Kid as soon as we can, which starts a timer. There's nothing we can do to speed up this timer, so while we're waiting, we just do whatever we want. Once the cutscene timer ends, we overflow Monster Kid with the punch card so we don't have to wait for him to finish talking. 
	$LF
]div
[div class=p 
	"After a couple rooms, we reach the Spears 2 section. Unlike the Spears 1 section, this section has minimal RNG and can be completed optimally with no RNG manipulation. We begin by PCEing the first trigger and then continuing on while the cutscene plays out. Immediately following this cutscene, a flag will be set that will prevent us from opening our menu. Before this happens, we get item text on the screen so that we can OWW with it at the end of this section. 
	$LF
]div
[div class=p 
	"As the chase sequence begins, Undyne will try to spawn spears underneath the player. Because the game tries to predict where we're going, we can manipulate where the spears will spawn. The easiest way to do this is to hold an arrow key in the direction of a wall, in which case the game tries to spawn spears in that direction. This results in an open pathway in the opposite direction. We continue through this section in this way, using wallclips to save a couple extra frames of movement. Once we reach the end, we use the text to OWW, we proceed to the right until we activate the next cutscene trigger, then we turn around to progress to the next section. 
	$LF
]div
[div class=p 
	"We proceed to the right and overflow the save point, using the text to OWW and then save in the Mad Dummy room. We then overflow an item in the room and use the text to gain movement on Mad Dummy. We manipulate the camera to continue the cutscene as quickly as possible, then once Mad Dummy spawns at the top of the screen, we start walking down to the bottom of the screen. This sets us up to execute the persistence glitch to skip Mad Dummy. The persistence glitch can be used to store the state of a room by exiting that room on the same frame that a battle starts. Then by dying to the fight, we're able to return to the room in the state that we left it. Since we left the room right before the fight, the game assumes that we have completed the fight. Normally this would be true, but in our case, it allows us to skip the fight entirely, only spending two turns to die to Mad Dummy. 
	$LF
]div
[div class=p 
	"In addition to Mad Dummy Skip, we also set up Bagel Storage at this time. Bagel Storage is opening a punch card as you leave a room to set it as persistent, which allows us to use the punch card upon returning to the room. We use this punch card to regain movement during Napstablook's text. Then by timing when we clear Napstablook's text, we can double overflow the Astronaut Food container so that we have two textboxes with choicers open at once. Having two choicers open at once would normally crash the game, but in this case one of the textboxes has a choicer on the second textbox so we're able to leave it open. These textboxes with choicers will be stored in the persistent room and recalled later, allowing us to use choicer overflow on whatever the last piece of text we encountered was. 
	$LF
]div
[div class=p 
	"After storing the two choicers in the persistent room (performed by simply leaving them open as we exit the room), we then proceed to the left in the next area. We overflow the duck, allowing us to reach the next choicer in the list, the Ancient Artifact. This sets our global.msc value to be the value of the Ancient Artifact text (257). Once we return to the persistent room and use the two choicers, we advance our global.msc value further to the lab fridge (258), then to the lab fridge choice (259) which gives us the noodles, then using the choicer spawned by the lab fridge text, we overflow one more time to the burnt pan text (260). This gives us the Burnt Pan much earlier than usual, which will allow us to use the pan on Undyne to save time. This is known as Early Early Burnt Pan (EEBP). Overall, this route saves about 5 seconds. 
	$LF
]div
[div class=p 
	"Here is a list of what text we use in what order: 
	$LF
]div
[table 
	[tbody 
		[tr 
			[th 
				"Text
			]th
			[th 
				"Choicer
			]th
			[th 
				"global.msc
			]th
		]tr
		[tr 
			[td 
				"Duck text
			]td
			[td 
				"Duck choicer
			]td
			[td 
				"254 → 255
			]td
		]tr
		[tr 
			[td 
				"Duck choice
			]td
			[td 
				"Overflowed second duck choicer
			]td
			[td 
				"255 → 256
			]td
		]tr
		[tr 
			[td 
				"Ancient Artifact text
			]td
			[td 
				"Ancient Artifact choicer
			]td
			[td 
				"256 → 257
			]td
		]tr
		[tr 
			[td 
				"Ancient Artifact choice
			]td
			[td 
				"First stored choicer
			]td
			[td 
				"257 → 258
			]td
		]tr
		[tr 
			[td 
				"Lab Fridge text
			]td
			[td 
				"Second stored choicer
			]td
			[td 
				"258 → 259
			]td
		]tr
		[tr 
			[td 
				"Lab Fridge choice
			]td
			[td 
				"Lab Fridge choicer
			]td
			[td 
				"259 → 260
			]td
		]tr
		[tr 
			[td 
				"Burnt Pan text
			]td
			[td 
				"Burnt Pan choicer
			]td
			[td 
				"260 → 261
			]td
		]tr
		[tr 
			[td 
				"Burnt Pan choice
			]td
			[td 
				" 
			]td
			[td 
				"261
			]td
		]tr
	]tbody
]table
[div class=p 
	"At the end of this sequence, we will have the Instant Noodles in slot 2 and the Burnt Pan in slot 3. 
	$LF
]div
[div class=p 
	"The next few rooms are relatively straightforward. In the room where we encounter Temmie, we overflow the sign near the start of the room so we can use the text to regain movement during the pre-battle cutscene, saving a small amount of time. We don't need the Instant Noodles so we use them here to regain movement a second time before the encounter. We then arrive to the room where Undyne confronts us. We perform a minor camera manip by moving all the way to the right side of this room. We then overflow the echo flower and regain movement during the cutscene, and then wait for Undyne to drag Monster Kid away and progress the cutscene before moving to where the door will unlock. We open item text and use this text to OWW into the next room and then wrong warp into the bridge room. 
	$LF
]div
[div class=p 
	"Here, we PCE the trigger and then perform an SPCA during the wrong warp to leave the room. This unlocks movement in the next room where movement would normally be locked. We then use the text from this cutscene to OWW into the next room. The next skip is known as Onedyne. Normally the player is expected to watch a long cutscene before fighting Undyne, and then a chase sequence begins where you have to constantly flee from Undyne. During casual gameplay, Undyne usually is able to catch the player 4 times in total. However, with Onedyne, we are able to get through this section while only being caught by Undyne once. 
	$LF
]div
[div class=p 
	"We PCE both of Undyne's triggers, skipping both the long cutscene and the first Undyne encounter. We then set up a PCA on the text that appears from the second trigger. This text is unique in that it can't be closed by the player but automatically closes on its own after 30 frames. With the PCA, this text can be used to perform an OWW. This OWW skips the second Undyne encounter. After entering the hallway with the "Welcome to Hotland" sign, we stop at a particular location and let Undyne catch us. By stopping early, we are able to exit the room without being caught by Undyne again, which leaves us with only one Undyne encounter. 
	$LF
]div
[div class=p 
	"Once we're in the Undyne fight, we begin attacking her with the Burnt Pan. The reason is that the first phase can be triggered to end early if Undyne is below a certain damage threshold. At LV1 with the Burnt Pan, we can hit this threshold with three quads and good damage rolls. We are then able to flee on turn 4, which saves three turns over the strat without the Burnt Pan, which flees from Undyne on turn 7. 
	$LF
]div
[div class=p 
	"After fleeing, we continue to the right, PCEing one more trigger for the cutscene where Undyne falls down, and continue into Hotland. 
	$LF
]div
[h4 id=HotlandCore 
	"Hotland/CORE
	$LF
]h4
[div class=p 
	"Hotland is one of the most glitch-heavy segments in the game due to all the puzzles and cutscenes there are to skip. We begin by PCEing the lab cutscene and wrong warping into the next room. We continue through the next couple rooms and flee from Vulkin as we killed Temmie in Waterfall. At this point, we are at LV3, which allows us to save a turn on Asgore. 
	$LF
]div
[div class=p 
	"Throughout Hotland, there will be frequent notifications and phone calls from Alphys, which are usually not skippable because the trigger for these events is solid. However, we can save one frame if we wallclip during these phone notifications due to being able to move one frame earlier after closing the text. We do this on the phone notification immediately after Vulkin and then one more phone call a bit later. 
	$LF
]div
[div class=p 
	"In the floor 1 vent room, we PCE the vents to regain movement while flying through the air, which allows us to reach the end of the room faster, skipping the encounter and two phone calls and wrong warping into the next room. The burnt pan would normally be picked up by going to the room to the bottom right of this vent room, so EEBP saves time by being able to take a shorter path through this room. 
	$LF
]div
[div class=p 
	"As seen in previous TASes, we would normally do Beowulf skip accompanied by Sirius skip, however it was deemed slower for TAS by the community and thus not useful for this TAS. Instead, we menu buffer past the lasers, which saves time as you don’t have to enter an encounter with the lasers to advance. 
	$LF
]div
[div class=p 
	"In the East/West puzzle room, we take a faster cycle on the vent than most RTA runners do and PCE the vent to enter the next room without solving the puzzles. We then PCE the vents as we enter the Cooking Minigame room. In this room, we get text storage on the text and then PCA this text. We then use the stored text to regain movement once we hit the next trigger for the Alphys call. Since there was active text during the whole process, the PCA now applies to the Alphys phone call. The reason this is done is because hitting this trigger removes our ability to use the menu. We then use the PCA to regain movement on the second trigger and leave the room. 
	$LF
]div
[div class=p 
	"We then make a short detour to floor 1, where entering the bridge room gives us our menu back. After this, we return to floor 2, using the punch card to skip the elevator animation. Once we reach floor 2, we proceed to the left and RNG manipulate the pre-encounter animation to take as few frames as possible using text opened during the room transitions. We flee from the encounter and continue to the left. 
	$LF
]div
[div class=p 
	"In the triple switch room, we use the punch card to hit the third switch, which we're normally not supposed to be able to do as we're supposed to be interrupted. This causes a strange-looking glitch where we receive a phone call from Alphys every frame. We mash this text to reduce lag as we proceed into the next room. 
	$LF
]div
[div class=p 
	"On the jump tile puzzle, we simply PCE the vents to skip the puzzle entirely, storing text off the last vent to wrong warp into the next room. We then activate the mouse hole and wrong warp into the Royal Guards room, where we PCE the Royal Guards and clear their text at the right time to double our movement speed, since part of the normal cutscene pushes us to the right. 
	$LF
]div
[div class=p 
	"It is here where we would normally perform a trick called Sirius Skip, however as we are not at 1HP, we cannot make use of this trick. We wait for the cutscene to start and then we move onto the vent. The vent is able to shoot us way off the intended path of the vent, and by holding up and right we are able to go out of bounds where we can navigate our way to the room’s exit. Finally, we use Mettaton's text to OWW into the next room. 
	$LF
]div
[div class=p 
	"After another detour to Floor 1 to get our menu back, we proceed to Floor 3, where we reach the North/South puzzle room. In this room, we once again use the punch card to regain movement on the vents, but with a twist. We switch to the cell phone and use text storage to move on each vent after the first one. The cell phone takes one less frame to activate than item text and saves back the time lost to menuing down. After proceeding through the room, we get out of bounds and are able to leave through the back of the door, interacting with the closed door as we leave to wrong warp into the next room. 
	$LF
]div
[div class=p 
	"We then proceed into Muffet's room and PCE the first trigger. By leaving the text open, this prevents any additional triggers in this room, allowing us to skip Muffet. We then utilize an interesting movement technique on the webs by walking straight down into diagonal collision, which moves us at our normal speed rather than the slower speed of the webs. We use the text from earlier to wrong warp into the next room. 
	$LF
]div
[div class=p 
	"In the musical room, we PCE the trigger and exit the room. This removes our ability to open the menu so we'll need to head back to floor 1 to get it back. However, if we go back now, we won't be able to return to the same floor as the plot flag has not yet been updated. So we instead head up into the Core Transition room and watch the cutscene, which sets the plot flag to an appropriate value so we can return later. We then head down to floor 1 to recover our menu once again and return to the start of the Core. 
	$LF
]div
[div class=p 
	"We begin the Core by skipping the scripted Madjick encounter and wrong warping into the first lasers room. We menu buffer through the blue lasers and PCE the phone call at the end of the room and use this call to OWW into the next room. In this next room, we're unable to PCE the phone calls so we mash through the text and proceed to the next room. 
	$LF
]div
[div class=p 
	"The second lasers room uses a slight variation of the standard RTA strat. In this room, we PCE the first phone call trigger and then instead of using PCA on this phone call, we PCE the second trigger and use the second phone call to OWW out of the room. 
	$LF
]div
[div class=p 
	"With a couple more wrong warps, we reach the Core puzzle room. This puzzle is one of three ways to unlock the end of Core and is the fastest of the three. The strat here is to use the punch card to interact with the puzzle multiple times, giving us extra shots so we can "solve" the puzzle faster. Once this is completed, we use the puzzle cutscene to wrong warp out of the room. 
	$LF
]div
[div class=p 
	"The next thing we need to do is reach the end of the Core. Normally, players are expected to proceed forward through the Core to reach the end. However, there is a faster route called Snowie Core, where we wrong warp backwards to the beginning of Core and take the now-unlocked elevator to the end. Once we do this, we reach Mettaton's boss room, where we unceremoniously PCE his trigger and skip his entire fight. 
	$LF
]div
[div class=p 
	"In the next hallway, we PCE Alphys's trigger and then wrong warp into the Long Elevator. We use the punch card on the elevator panel to avoid having to sit through the Long Elevator cutscene and exit with a wrong warp into New Home. 
	$LF
]div
[h4 id=NewHome 
	"New Home 
	$LF
]h4
[div class=p 
	"The beginning of New Home is just some long hallways until we reach Asgore’s house. We first enter the left door, which takes us to the living room. There is a scripted encounter just left of the chair, and this normally takes a long time to go through. Instead, we do a trick called Geo Bagel Skip, or GBS for short, in which we PCE the bookshelf and interact with the chair. Dismissing the bookshelf text allows us to regain movement until the soul flash, at which point we dismiss the chair text to regain movement once again. From here, we make our way up and into the door to skip the cutscene. We grab the key and wrong warp out to get back into the dining room. We will get an encounter here so we make sure to get the highest blcon value of 20 before equipping the Tough Glove right as the blcon alarm goes to 0 and the soul flash starts. We go as far as we can, hitting the door trigger before we are forced into the story battle. We then wrong warp into the main walkway of Asgore’s house before proceeding to the right to get the second key, which we need to unlock the chain that blocks access to the basement. We wrong warp into the room and proceed toward the key. We PCE the encounter trigger and grab the key before holding up and right to go into the room. After we transition into Asgore’s room, we immediately wrong warp back out to take us to the start of the hallway. This bypasses the need to walk back and then perform Magalor Skip. From here, we proceed back into the walkway room, unlock the chain and head to the basement, equipping the burnt pan during the transition for the Asgore fight. 
	$LF
]div
[div class=p 
	"In the basement, we PCE the first encounter and menu down to CELL. This loses time initially but saves a frame with every encounter. The timesave is evident in rooms with lots of encounters, for example `room_lastruins_corridor`, and it allows us to save a frame with every encounter as it takes less time to call Toriel than it does to open the punch card. At the end of rooms with multiple encounters, we menu back up to ITEM during the room transition in order to PCE the first encounter and repeat the process again until we reach Judgement Hall.
	$LF
]div
[div class=p 
	"In Judgement Hall, we see Sans and completely disregard his existence, PCEing the cutscene trigger and walking past him like he’s not even there. Usually, in this room, he will judge you for what you’ve done over the course of the playthrough. This loses about thirty seconds or more so this is not something that can be experienced in a TAS. Once we reach the end of the room, we wrong warp out of the room to the Throne Room entrance. This is our first wrong warp in a string of three called Rhombu Combu, which is a strategy that sees you wrong warp out of Judgement Hall, then wrong warp into the Throne Room, then wrong warp into the room before the barrier sequentially. 
	$LF
]div
[div class=p 
	"Asgore isn’t anything too special, just quad after quad until we defeat him. We choose to kill him and then Flowey finishes him off. How he does this is astounding, since in New Game+ speedruns, Flowey is dead. But he comes back anyways to confuse players because, well… he can. That’s apparently what determination can allow for. 
	$LF
]div
[h4 id=End 
	"End 
	$LF
]h4
[div class=p 
	"Next comes the most RNG-heavy aspect of the game: the Omega Flowey boss fight. Once Flowey brutally destroys his own father, he looks to gain ultimate power by absorbing the six human souls. Here comes the largest difference between NG+ and non-NG+ runs. When Flowey appears, he does not fight us, and we end up in the room that we would normally end up after either sparing or killing Flowey after defeating Omega Flowey. This is exclusive to NG+ and is the largest difference, of approximately 10 minutes, between normal playthroughs and NG+ playthroughs. Once we appear in the room, we navigate to the door and touch it to finish the run.
	$LF
]div
[h2 id=OtherComments 
	"Other comments
	$LF
]h2
[div class=p 
	"There are some known improvements that were found after the creation of the TAS, and some more favorable RNG with better manips, particularly for the single rock room and the triple rock room in Ruins. This run is not perfect, and I’m aware of this, so much so that I’ll end up improving this in the future.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": We've recently implemented to 
	(__wikiLink|href=/Standard|implicitdisplaytext=Standard)
	" the possibility to start from SRAM instead than from power-on, for the purpose of playing an unlockable mode or a New Game+. In the case of this submission, it's the latter.
	$LF
]div
[div class=p 
	"The TAS itself looks very optimized and seems to have implemented all available known techniques. Accepting as a new Standard branch.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/EZGames69 
		"EZGames69
	]a
	": Processing...
]div
