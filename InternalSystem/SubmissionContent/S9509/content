8
[h2 id=GameObjectives 
	" Game objectives
	$LF
]h2
[ul 
	[li 
		" Emulator used: libTAS v1.4.5 (32-bit)
		$LF
	]li
	[li 
		" Plays on version v1.001
		$LF
	]li
	[li 
		" Reaches the True Pacifist ending
		$LF
	]li
	[li 
		" Avoids taking damage, unless it saves time or is entertaining without losing time.
		$LF
	]li
]ul
[h2 id=SpecialThanks 
	" Special thanks
	$LF
]h2
[div class=p 
	"There are numerous people without whom this TAS would be impossible. Firstly, I want to make a special note of my coauthors; Svool_Gsviv_, who TASed the Flowey fight, and  duuuuude5, who TASed the first 2 minutes of the game. Both of these segments were originally created for other TASes, however I was able to reuse them for this TAS, significantly expediting the process. Flowey in particular is a massive pain to TAS, so not having to TAS these segments by myself was an immense help.
	$LF
]div
[div class=p 
	"I would also like to thank OceanBagel. He has provided a mountain of tooling that has made the process of TASing much easier, allowed me to borrow large segments of text from his previous submissions for this submission text, helped me immensely with the complex and counterintuitive merging process, proofread the submission text for accuracy, and provided an uncountable amount of constructive feedback on how to make this TAS the best it could possibly be. 
	$LF
]div
[div class=p 
	"As well, the following people have contributed in some way big or small to the completion of this TAS:
	$LF
]div
[ul 
	[li 
		" Colinator27 for his work on seed finding that allowed for the TAS merging process
		$LF
	]li
	[li 
		" I’m an issue, for his awesome TAS mod
		$LF
	]li
	[li 
		" mrlink2k, for premiering the TAS live on stream
		$LF
	]li
	[li 
		" The entire USRC community, for almost a decade of strat and routing optimizations. I stand on the shoulders of giants. 
		$LF
	]li
]ul
[h2 id=VersionChoice 
	" Version Choice
	$LF
]h2
[div class=p 
	"There are a few relevant versions to consider when deciding which version to use for a TPE Glitchless TAS:
	$LF
]div
[ul 
	[li 
		" Version 1.0 is the original release of the game. It is significantly more notable in glitched categories, but in glitchless the only relevant timesave in glitchless is a single trigger that wasn’t placed properly, which means we could walk around it to save a few frames
		$LF
	]li
	[li 
		" Version 1.001 Linux is the most popular release of the game for RTA runners because it has the best input handling system. It is also fastest for most glitched categories because of a glitch called Mad Dummy Skip. Sadly, in glitchless it isn’t a particularly fast option.
		$LF
	]li
	[li 
		" Version 1.05 is the first official PC release version of the game to support Japanese text. This makes it the fastest version for glitchless. However, its input system, and the input system of all subsequent releases, is completely butchered. 
		$LF
	]li
]ul
[div class=p 
	"1.05 was ruled out for a few reasons. Firstly, the versions of the game with good input handling are significantly more popular with RTA runners, and so this TAS would be a more apt comparison to RTA if it was run on 1.0 or 1.001. Secondly, there is a unique and interesting strat 2/3rds of the way into the run called Essay Skip Skip Skip that is rendered impossible by 1.05’s bad input system. Despite not saving as much time as Japanese text, this strategy is much more interesting and I wanted to show it off. Thirdly, the vast majority of existing tooling to assist in creating TASes is made for version 1.001 linux, so progress for the TAS would have been much slower if I were to run on 1.02+.
	$LF
]div
[div class=p 
	"There are many retroactive justifications for not running on 1.0 despite it being a few frames faster, notably the amount of tooling that exists for 1.001 linux compared to 1.0, but the honest reason is that I didn’t know 1.0 was faster until I had already completed about 3 quarters of the TAS, and because the RNG algorithm is different I would have had to restart from the beginning if I wanted to switch to 1.0. 
	$LF
]div
[div class=p 
	"This leaves the 1.001 linux release as being chosen mostly by default to take advantage of existing tooling and knowledge. 
	$LF
]div
[h2 id=Comments 
	" Comments
	$LF
]h2
[div class=p 
	"One of the things that makes this TAS interesting is the amount of RNG manipulation involved. Many events throughout the TAS need to be manipulated; sometimes for impressive results and sometimes for results that are near invisible but save time nonetheless. Finding ways to manipulate the RNG without wasting time was a fascinating challenge throughout this route, and it should be possible for someone with more dedication to attempt to do so even more. This TAS is unique in that I’ve tracked the total amount of time lost to RNG manipulation.The spreadsheet can be found at 
	[a href=https://docs.google.com/spreadsheets/d/15LTMsU7ucPEkjixFZrkwfOATGGzzR3Cy_OoL8H6ghq8/edit?gid=0#gid=0 rel=noopener external nofollow 
		"https://docs.google.com/spreadsheets/d/15LTMsU7ucPEkjixFZrkwfOATGGzzR3Cy_OoL8H6ghq8/edit?gid=0#gid=0
	]a
	" . As of release, there are 54 frames (plus a few microseconds) lost to RNG for just under two total seconds, 3 seconds lost to a trick that was discovered during the premiere, and a few more seconds lost to not implementing a specific difficult trick. This TAS also shares various segments of gameplay with the neutral route. In those segments, I have quoted directly from OceanBagel's Neutral TAS submission. The “Tricks Used” section is copied from OceanBagel’s submission, with the tricks that are considered glitches removed from the explanation because we don’t use them here.
	$LF
]div
[h2 id=TricksUsed 
	" Tricks Used
	$LF
]h2
[div class=p 
	"For additional definitions of various strat names used in Undertale speedrunning, see the USRC Dictionary by Jean Poilu.
	$LF
]div
[h3 id=WallHumping 
	" Wall Humping
	$LF
]h3
[div class=p 
	"Wall humping is a movement technique where the player oscillates between facing up and facing down each frame. This technique is performed by holding Up and Down simultaneously while against the bottom side of a wall. This can be useful in certain circumstances such as when you are moving left or right but need to be facing up or down. In rooms where the player is in contact with and between two horizontal walls, this technique will cause the player to move at double speed, as the two walls both move the player simultaneously.
	$LF
]div
[h3 id=MenuBuffering 
	" Menu Buffering
	$LF
]h3
[div class=p 
	"Menu buffering is a movement technique where the player opens the menu and presses an arrow key on the same frame. This type of movement does not count as a step for random encounters and is not considered movement by blue lasers. Although menu buffering causes the player to move at half speed (alternating between the menu buffer and closing the menu), this technique can save time in certain circumstances where additional steps are not desirable.
	$LF
]div
[h3 id=WallClips 
	" Wall Clips
	$LF
]h3
[div class=p 
	"Wall clips refer to the ability of the player to clip into vertical walls by one movement pixel when entered from the top or bottom. This can save time in some circumstances due to shortening the distance traveled and can allow movement after certain events one frame earlier than normal. Note that it is not possible to menu buffer while wallclipping.
	$LF
]div
[h3 id=RngManipulation 
	" RNG Manipulation
	$LF
]h3
[div class=p 
	"Undertale's RNG is determined by a seed that advances each time RNG is called. By calling RNG a different number of times, different outcomes can be achieved. Text calls RNG twice per character per frame and so changing how many frames text is displayed is the most common method of RNG manipulation. RNG is manipulated for various reasons such as getting particular attacks and determining which step count random encounters will occur on. One thing to note is that the function randomize() is called upon loading into the game and this function sets the RNG seed based on the system time. However, after this initial seed, RNG is no longer affected by system time until the save file is reloaded or the game is restarted.
	$LF
]div
[h4 id=Requirements 
	" Requirements
	$LF
]h4
[div class=p 
	"In order to complete the True Pacifist Ending, we have to complete the True Lab area of the game and then fight the final boss, Asriel. The True Lab is unlocked by proceeding through the Alphys date cutscene, which in turn is unlocked by a letter that Undyne gives you if you meet the following requirements.
	$LF
]div
[ul 
	[li 
		" Finish the Neutral Ending
		$LF
	]li
	[li 
		" Date Papyrus
		$LF
	]li
	[li 
		" Date Undyne
		$LF
	]li
	[li 
		" Kill No Monsters
		$LF
	]li
	[li 
		" Advance past the cutscene with Alphys outside the long elevator
		$LF
	]li
]ul
[h2 id=AreaComments 
	" Area comments
	$LF
]h2
[h3 id=Ruins 
	" Ruins
	$LF
]h3
[div class=p 
	"“Ruins is the first section of the game and is known as the most RNG-heavy part of the game. RNG manipulation is used throughout the Ruins and for the most part this is accomplished by delaying clearing text by a frame or two. While this does lose a small amount of time each time it's done, the various timesaves afforded by manipulating RNG more than make up for the few frames lost in the process. We begin with the first Flowey encounter where the speed of the friendliness pellet is RNG manipulated to be as fast as possible. Although we could also RNG manipulate the angle, this is unnecessary as the angle can also be controlled by the player's position when the pellet is fired.”
	$LF
]div
[div class=p 
	"We complete a few rooms normally, wall humping against the switches in the switch room to be able to activate them while still moving to the right. 
	$LF
]div
[div class=p 
	"Before fighting most enemies, the game displays an (!) symbol above Frisk’s head. This is called a blcon (with a lowercase l) and has a random duration between 15 and 20 frames. Because of this, every blcon in the game has to be manipulated, except in special circumstances that do not occur in this TAS. We waste a frame to force a 15 frame blcon on the First Froggit fight. Sparing the first Froggit doesn’t give any gold, so we flee it.
	$LF
]div
[div class=p 
	"We grab a monster candy for the Toriel fight later on. 
	$LF
]div
[div class=p 
	"Our next goal is to buy the spider donut. There is a long boss fight in the middle of Hotland called Muffet, however this fight can be skipped with the Spider Donut item. It costs 7G. In the first three rooms, we run into random encounters. “Random encounters work by generating a random number when you enter the room and then generating a random encounter once you take more steps than this random number.” We manipulate all three of these encounters to be Froggits. This is because froggits have an attack that can be ended early by getting hit. For each of these froggits we have to manipulate
	$LF
]div
[ul 
	[li 
		" That the encounter’s step count is low enough that we trigger it before we leave the room
		$LF
	]li
	[li 
		" That the encounter blcon lasts as close to the minimum time as possible
		$LF
	]li
	[li 
		" That the encounter is a froggit
		$LF
	]li
	[li 
		" That the froggit uses its cancelable attack.
		$LF
	]li
]ul
[div class=p 
	"In total, we lose 8 frames to manipulate these first three Froggits. It is almost definitely possible to find a way to lose fewer frames to manipulating these, but doing so would be somewhat difficult and tedious.
	$LF
]div
[div class=p 
	"In the maze room, we take advantage of lenient hitboxes to solve the puzzle unusually quickly.
	$LF
]div
[div class=p 
	"In the three rock room, we have a glitch. In our glitchless TAS. I could go to jail for this. In all seriousness, this glitch is called rock skip and it has the distinguishing feature of randomly happening about 10 percent of the time. Because of the random nature of this glitch and the relatively minimal amount of time it saves, it was decided to allow it in real-time runs of the game to avoid having 10% of runs become invalid due to random chance. This put me as a TASer in an awkward spot because leaving out the glitch would mean that the TAS does not match the expectations of RTA runners, but putting it in would have a glitch in a glitchless TAS. I ultimately decided, after consulting with the community, to leave it in. Notably, the fastest version of rock skip requires a perfect step count. I was unable to get this perfect step count so got as close as I could and then took extra steps to line the step count up. 
	$LF
]div
[div class=p 
	"As for what rock skip itself does, by having a random encounter happen during specific parts of the rock cutscene, you are able to move independently while the rock does, allowing you to complete the room slightly gaster. Notably, we still only have 6G so we also have to manipulate this random encounter. This room has a different encounter pool so getting a Froggit is no longer possible. Instead, we manipulate a Froggit/Whimsun Pair. We immediately spare the whimsun, despite the fact that sparing Whimsun without terrorizing it gives no gold. This is so we can continue to get fast Froggit attacks. We then act on the Froggit and Spare it to get the last gold we need to purchase the donut.
	$LF
]div
[div class=p 
	"There is an alternative strategy used in some high-level RTA runs where you hope to get no encounters in the first half of ruins (except in the 1 rock and 3 rock rooms where encounters are effectively mandatory) and instead get the gold from the Loox enemy in the next room. This strat is faster normally, but slower in TAS because of the guaranteed fast froggit attacks.
	$LF
]div
[div class=p 
	"After buying the Spider Donut, we continue onwards to Napstablook. Npstablook’s first attack is random between a quick attack and a slow one, and we were unlucky enough to need to waste a frame in order to get the quick attack instead. After this, we simply Cheer up Napstablook 4 times and continue. We get hit by Napstablook in order to manipulate RNG.
	$LF
]div
[div class=p 
	"In the second half of the ruins, the name of the game is avoiding encounters. I was luckily able to avoid all of the encounters, except for the encounter in the last room. To avoid that one I had to waste a frame.
	$LF
]div
[div class=p 
	"We grab the butterscotch pie for use on Asgore and for the Asriel fight.
	$LF
]div
[div class=p 
	"Next, we go on to fight Toriel. “The fastest way to progress through this fight involves canceling attacks as fast as possible. Certain attacks have one or two hands that move across the screen, and running into these hands ends the attack immediately and damages us slightly. The bottom hand is slower than the top hand but deals less damage, so we route an optimal combination of top and bottom hands to maximize the number of hands. Any attack will end the turn once we're at 3hp so we get hit by a different, faster attack. We then use the Monster Candy to recover hp to be able to run into more hands at the cost of extending the battle by one turn. By the end of the battle, we will have canceled 13 attacks. We proceed through the next few cutscenes and exit the Ruins.”
	$LF
]div
[div class=p 
	"In total 25 frames or about 833 milliseconds were lost due to RNG in ruins. This segment has by far the most time lost due to RNG, but there are still a few spots later on where time is lost. I won’t go into them unless they are particularly interesting.
	$LF
]div
[h3 id=Snowdin 
	" Snowdin
	$LF
]h3
[div class=p 
	"“Near the start of Snowdin, there's a movement optimization known as "gamer pixel" where you slide across the wall collision on the top side of the small bridge to stop a pixel further to the left than normal. This causes Sans to stop his walking animation earlier, saving 4 frames. After this cutscene, we enter Box Road. Here, we must interact with the save point to heal (we're still at 2hp from Toriel) and then interact with the box to retrieve the Tough Glove. We need the Tough Glove so we can get the Stick out of our weapon slot and use it to spare Doggo.” Because we have more items, we do additional menuing in the box to organize our inventory. “We equip the Tough Glove in the next room, as there is a step counter in this room and we will be menu buffering at the end of this room anyway. We RNG manipulate this encounter to be as late as possible and then leave the room without getting the encounter.”
	$LF
]div
[div class=p 
	"We traverse a few rooms normally, with the most notable moments being the random encounter in the Dogi room, which needs a blcon manipulation, and the dogi themselves, who have a random attack that also needs to be manipulated. As well, there is the colored tile puzzle room, where we answer No both times to avoid the cutscene of the tile maze being generated.
	$LF
]div
[div class=p 
	"Next we enter the Ice Puzzle Room. The fastest way of completing Ice Puzzle is known as Masochist 2 or Misogynist. However, Masochist 2 has the side effect of skipping the bridge building cutscene at the end of the ice puzzle, which is a glitch and therefore not allowed. To solve this problem, we brush up against the slope on the bottom of the room. This pushes us to the right slightly less than the amount Frisk walks in one frame, which barely allows us to hit the button without triggering the glitch. This strategy has the entertainingly long name of Pseudomisogynybreaker Ice Puzzle. 
	$LF
]div
[div class=p 
	"We make a pit stop in the Snowdin Town Shop to buy a Bisicle and the Manly Bandana, both of which will be used later in the run, before proceeding to the Papyrus fight. “The strategy for the Papyrus boss fight is to take damage and let Papyrus capture us three times, and then Papyrus will offer us a chance to skip his fight, which we'll gladly accept as doing the full version of the fight costs a significant amount of time.” After this we return to Papyrus’ house to date him, as doing so is a requirement of the True Pacifist Ending. The papyrus date itself is mostly just mashing, however there is one choicer midway through where saying no saves a few seconds.
	$LF
]div
[h3 id=Waterfall 
	" Waterfall
	$LF
]h3
[div class=p 
	"The first thing we do in Waterfall is grab the Old Tutu for later. While waiting for the flower bridge to form, we info and use various items in our inventory to manipulate RNG without losing time. “This RNG manipulation is immediately used in the next room to set the encounter steps as low as possible so we can grind out the encounter at the door and leave the door to skip the encounter. This is the first instance of a scripted encounter skip, where a scripted encounter (in this case a scripted Aaron) is given a much lower step count than later encounters, so by skipping Aaron, the next encounter will have a high enough step count that we will be able to leave the room without getting the encounter. We then manipulate RNG again during the next flower bridge cutscene to get a maximum step count for the next encounter, which we will menu buffer past.”
	$LF
]div
[div class=p 
	"“We then arrive to the Spears 1 segment, where Undyne chases you and throws spears at you. There is some RNG in this section, but due to the RNG manips in the previous room, there isn't much we can do to manipulate this RNG without losing time.” Fortunately, we were lucky enough to get an optimal spears 1, so we did not lose time here.
	$LF
]div
[div class=p 
	"We walk right past the punch card because we aren’t allowed to use it, and head into the next room. “The next room has random particles generating [throughout the room], which means we can manipulate RNG by taking a different path through the room.” This is useful because the random encounter in this room has a blcon which needs to be manipulated. 
	$LF
]div
[div class=p 
	"We continue onwards through a few rooms with large numbers of cutscenes. “In the room with the castle in the background, we hold Right+Up+Down to move double speed through this room. This is because there is wall collision both above and below the player and holding both Up and Down causes both wall collision objects to activate their collision code, both of which slide the player along the wall. This causes the player to move twice per frame, resulting in double movement speed.” This is not considered a glitch. “In the next room, we interact with Monster Kid as soon as we can, which starts a timer. There's nothing we can do to speed up this timer,” but we have a skip coming up that requires an insane amount of RNG manipulation, so we use the 4 seconds provided to set up that manipulation. 
	$LF
]div
[div class=p 
	"“After a couple rooms, we reach the Spears 2 section. Unlike the Spears 1 section, this section has minimal RNG and can be completed optimally with no RNG manipulation. 
	"[Oceanbagel describes a glitch we aren’t allowed to use]
	" As the chase sequence begins, Undyne will try to spawn spears underneath the player. Because the game tries to predict where we're going, we can manipulate where the spears will spawn. The easiest way to do this is to hold an arrow key in the direction of a wall, in which case the game tries to spawn spears in that direction. This results in an open pathway in the opposite direction. We continue through this section in this way, using wallclips to save a couple extra frames of movement. Once we reach the end, 
	"[OceanBagel describes another glitch we aren’t allowed to use]
	" we proceed to the right until we activate the next cutscene trigger, then we turn around to progress to the next section.” 
	$LF
]div
[div class=p 
	"Up next is the single most difficult part of the run to TAS, Mad Dummy. Mad Dummy has an internal health bar separate from the normal health bar every monster has, and this health bar gets depleted by maneuvering the cotton balls Mad Dummy throws at you to hit her instead. The second phase of the Mad Dummy fight will only start once this health bar is sufficiently depleted. Normally, it is possible to complete the first phase in 6 turns. However, by missing certain cotton balls on the first and second turns, you are able to cause the third turn to feature a different attack with more cotton balls, allowing you to complete the first phase in only 5 turns. This is called the 5-cycle and it is done by RTA runners. However, if you hit all of the cotton balls during the third and fourth turn, you will deal just enough damage to complete the first phase of the fight in 4 turns. There is a very slight amount of leeway on this, with you being allowed to miss up to 3 cotton balls - however this leeway only takes the trick from all but impossible to the very edge of possibility. This is the bagel cycle.
	$LF
	"The difficulty comes from the fact that the positions of the third turn dummies are randomized. In order to successfully pull off the bagel cycle, all of the dummies need to be low enough on screen to be able to hit Mad Dummy. The probability of this happening is estimated at one in ten thousand. In order to do this I was able to use a game mod developed by OceanBagel to export the results of all future RNG calls into a file. From there I was able to use a Python script developed by myself to find runs of RNG that looked promising, set them up in game, and try to pull off the bagel cycle. This took about 3 hours of active work to do, with a few seemingly promising runs turning out to be junk. I decided to do a small amount of RNG manipulation during the fight. This made the trick slightly easier at the cost of being 3 frames slower, however when compared to glitched runs I had significantly fewer options for RNG manipulation without losing time, and as such this was probably necessary to allow the trick to work at all, and definitely necessary to allow me to get it without losing my sanity. 
	$LF
]div
[div class=p 
	"On the very first turn of the fight, I was able to sling a cotton ball at the Mad Dummy to cause her to start her text slightly earlier. This is also Not A Glitch™. 
	$LF
]div
[div class=p 
	"The second phase is much simpler. Mad Dummy shoots rockets at us. We get hit by the rockets on the last turn to manipulate RNG. 
	$LF
]div
[div class=p 
	"At the end of the mad dummy fight, we get our movement back but are unable to continue forward until after Napstablook leaves the room. We use this time to eat one half of the Bisicle, which both heals us for Undyne and provides RNG manipulation for Temmie.
	$LF
]div
[div class=p 
	"After this, we buy the Cloudy Glasses from Gerson. It’s a surprise tool that will help us later.
	$LF
]div
[div class=p 
	"After a few more regular rooms, we have the Undyne fight. We complete this in the fastest way possible. We intentionally get repeatedly hit by Undyne, pausing in the middle to eat the Unisicle to regain our health. This angers Undyne, causing her to go on a rant about how she’s “NOT [our] FREAKING KINDERGARTEN TEACHER” (hence why this strat is called Kindergarten) and then throws a bunch of spears at us and skips her second phase. This saves about 10.5 seconds over fighting her normally. At the end of the fight, we take intentional damage to set our HP to 1 . This will be important later.
	$LF
]div
[h3 id=Hotland 
	" Hotland
	$LF
]h3
[div class=p 
	"The first thing of note is Mettaton’s game show. We answer the first question wrong on purpose, prompting mettaton to shock us. Because we are already at 1HP, this attack doesn’t damage us but instead skips ahead to the last question. We mash this away and continue. We come across a room with lasers in it, but fortunately, menu buffering through lasers is Not a Glitch™. We then grab the Burnt Pan. This is the second best weapon accessible in TPE because of the critical hit bonus. The Empty Gun is technically better, but the amount of extra damage done by the gun is so small that it rarely makes any difference beyond the attack animation being one frame faster. In our case, we don’t have enough money to buy the gun anyway so it’s a moot point.
	$LF
]div
[div class=p 
	"During the east west puzzles, there are a few times where we have to wait for the vent to point in the right direction. We use this time to equip the burnt pan and manage our inventory a bit before Mettaton.
	$LF
]div
[div class=p 
	"Inventory management is actually a very interesting problem. When using items in the field, we are usually doing so during a time when we’re waiting for something to happen anyway. However, when using items in battle, each item slot takes a different amount of time to access. Slots 1 and 3 are a baseline, with slots 2, 4, 5, and 7 taking 1 extra frame each to access, and slots 6 and 8 taking 2 extra frames. Because of this, we want the stick and the pie, which we use often, to be in slots 1 and 3. We want the four armor pieces, which we use for mettaton, to end up in slots 2,4,5, and 7. Since slot 6 is the slowest to access, we leave a dummy item there.
	$LF
]div
[div class=p 
	"Another optimization we can do with the inventory management here relates to the spider donut. Because the spider donut is consumed when used, we can put it in the first slot, and make sure that the stick and pie end up in the right slots when it’s gone; that way we can use the 2 fast slots for 3 total items.
	$LF
]div
[div class=p 
	"After this, we proceed to the cooking show. This plays out normally. We intentionally get hit a few times to manipulate where Mettaton is on the screen at the end of the cooking show minigame, slightly speeding up the end cutscene. We then continue onwards.
	$LF
]div
[div class=p 
	"After an uneventful Royal Guards fight, we come across the News Show. We defuse the bombs in a specific order that allows the water glass to be in an optimal position and continue forwards. During the defusing of the script bomb, we mess around on the menu while waiting for the bomb to hit the Defuse Zone. This manipulates RNG later on.
	$LF
]div
[div class=p 
	"We solve the puzzles in the North and South rooms. There is a random encounter before the North room, which we avoid by manipulating a high step count and menu buffering past. 
	$LF
]div
[div class=p 
	"After using the Spider Donut to skip the Muffet fight, we return to the save point before Muffet and save there. We then trigger the Mettaton cutscene and immediately reload the game. This sets a flag that says we’ve seen the Mettaton cutscene before, which allows Mettaton to notice we look bored and skip through the first half of the musical sequence. We then solve the colored tile puzzle, buy ourselves a Glamburger for later, and continue onto Core.
	$LF
]div
[div class=p 
	"Core is pretty standard. We use the stick on Madjick to spare it immediately, solve the puzzle as it’s the fastest way to progress, manipulate a few blcons, menu buffer through a few lasers, and come up on the Mettaton room.
	$LF
]div
[div class=p 
	"The first phase of Mettaton’s fight doesn’t have much going on. Mainly we’re simply stalling him out and waiting for the second phase.  
	$LF
]div
[div class=p 
	"The second phase is where things get interesting. In the top left corner there is a display of ratings. The end goal of the fight is to get the ratings to 12,000. We can do this by shooting things, using certain items, getting hit, and most importantly, equipping armor. We start with 4,000 ratings. In total we get 4500 ratings from equipping 3 pieces of armor, 700 ratings from throwing a stick, 500 for eating a glamburger, and 140 for getting hit 7 times. This gives us 9840 ratings, with the remaining 2160 needed to be obtained by shooting things. In order to make this happen, you need to shoot almost every possible object, including shooting the legs every frame possible, and shooting the bombs repeatedly while in the process of exploding. RTA runners are not able to do this and need to get the stained apron instead of the glamburger, as well as take an extra 2 turns - one where they use the stick and one where they pose on 1 HP. The RTA strat is called Essay Skip Skip, so naturally this strat is called Essay Skip Skip Skip Skip. Essay Skip Skip Skip was an intermediate TAS-only strat that only saved one turn.
	$LF
]div
[h3 id=NewHome 
	" New Home
	$LF
]h3
[div class=p 
	"New Home consists nearly entirely of story encounters with little in between. “Upon entering New Home, we need to get two keys: one from the left side and one from the right side.” We start off by going to the left hallway first. By going left first, the first two story encounters will spawn in the left room. If we went right first, the first two story encounters would spawn in the right hall. While there are skips for the first two encounters if you were to go right first, we aren’t allowed to do those in this TAS, so it ends up being slightly faster to go left first. The first 3 encounters also have blcons that need to be  manipulated. Sadly, there aren’t very many opportunities to manip these in glitchless, so you’re stuck with the handful of RNG options that the game gives you unless you want to spend a ridiculous amount of time trying to manipulate every blcon at once. We got lucky and were able to get through in only 4 frames. After this it is entirely moving right and mashing to complete the rest of New Home.
	$LF
]div
[div class=p 
	"After new home, we encounter the Sans judgement cutscene. We do a skip similar to the Mettaton Musical Skip, where by saving, starting the cutscene, and reloading, we are able to mash through the Sans text. We mash through a few Asgore cutscenes and continue to the barrier.We then grab a save at The End, so that when we reload the game after the Flowey fight, we will already have completed all of the Asgore cutscenes and won’t have to complete them a second time.
	$LF
]div
[h3 id=Asgore 
	" Asgore
	$LF
]h3
[div class=p 
	"We can defeat Asgore at LV1 in ten attacks. Since we have the pie, we can use it to decrease Asgore’s defense. This lets us kill him in 9 attacks, plus a tenth turn for actually using the pie. However because it takes less time to eat the pie then it does to attack Asgore, this ends up saving time. This doesn’t save enough time to justify getting the pie on its own, however since we have the pie anyway for later on, it does save time to use it. Thankfully none of these attacks are RNG, so the fight is completely straightforward and only requires hitting the 9 attacks perfectly, which is 4 frame-perfect inputs each. This is called a TASgore.
	$LF
]div
[h3 id=Flowey 
	" Flowey
	$LF
]h3
[div class=p 
	"This Flowey fight was done by Svool_Gsviv_ for a True Pacifist Glitched TAS that they unfortunately lost the files for. However, we have a copy of the Flowey fight. Work by OceanBagel described in this submission text allows us to stitch this Flowey fight into other TASes while losing minimal amounts of time (in our case, about half a frame).  This Flowey fight was also used in that submission. The Flowey fight we use saves a small amount of time over the fight described by OceanBagel in his submission text due to the discovery of new random elements of the cutscene.
	$LF
]div
[div class=p 
	"“The Flowey fight has a few phases with RNG but is otherwise mostly just a matter of waiting for the turns to end. The fight is divided into six "soul" phases followed by a final phase. The first three phases have nothing particularly noteworthy. After the third phase, however, we begin taking damage. This is because we need to manipulate RNG for the fourth phase (the book phase) and getting hit by Flowey's attacks shakes the screen randomly, which advances RNG.”
	$LF
]div
[div class=p 
	"“In the book phase, the ACT button is always the fourth word to spawn in the second row. Each row has an alarm that's set at a fixed value for the first word and then randomly for each one afterwards. Additionally, each time that one of the alarms is triggered (when a word spawns), 5 frames are added to all alarms. So the strategy for minimizing the amount of time this phase takes is to minimize the number of words that spawn while also minimizing the time it takes for the words in the second row to spawn. Effectively, this means that we should RNG manipulate the second row alarms to be as low as possible and RNG manipulate all other row alarms to be high enough that no extra words spawn.”
	$LF
]div
[div class=p 
	"“The pan phase isn't notable in terms of saving time, but there is an invisible hitbox that we dodge in order to not get hit during this phase. This hitbox was due to an unused second frame for the pan sprite that is tilted upwards. The sprite was unused, but the hitbox still exists.”
	$LF
	"“Following the pan phase is the final section of the Flowey fight. In this section, we're taking damage to RNG manipulate the gun phase, which involves getting damaged at different points in the fight and in different amounts. A methodical approach would have worked here, but it turned out to be more efficient to just play the game in realtime while taking damage to change RNG.”
	$LF
]div
[div class=p 
	"“In the gun phase, there are targets that spawn in waves of three. The first two targets of each wave spawn based on your position plus or minus a random amount horizontally and vertically and the third target is the same with an extra fixed amount of distance added in the horizontal and vertical directions the player is moving, with no component added if the player is not moving in that direction. The fastest way to complete this section is to ensure that the gun doesn't turn past a certain small angle range. Within this range, the gun takes the shortest amount of time to point towards the next target. Outside of this range, the gun takes an increasingly large amount of time to point towards the next target based on the size of the angle. RNG manipulation is a major part of this phase, but so is planning and positioning the soul in exactly the right spot. This phase was performed perfectly, with no frames lost.”
	$LF
]div
[div class=p 
	"“Immediately after the gun phase is completed, there is normally a long cutscene leading into the final phase of Photoshop Flowey. However, the autosave for the final phase of Flowey happens as soon as the screen flashes following the completion of the gun phase. By reloading, we skip this entire cutscene and get straight to the final phase.”
	$LF
]div
[div class=p 
	"“In the final phase, each FIGHT button always spawns at the same time interval and stays on the screen for a fixed amount of time. Due to this, the only time it's necessary to hit the FIGHT button as soon as possible is on the final hit. We take advantage of this for RNG manipulating the damage rolls by simply waiting to hit the FIGHT button. Additionally, there are several points where the player's attack power increases. At these points, we delay hitting the FIGHT button until the next hit will be in the higher damage range. With a combination of RNG manipulation and this technique of delaying attacks for higher damage ranges, we are able to complete the fight two turns faster than the casual method of spamming the FIGHT button and one turn faster than the standard RTA speedrun strat of delaying the attacks to be in the higher damage ranges. The RTA strat is known as Flowey Quick Kill, so this method can be called Flowey Quicker Kill.”
	$LF
]div
[div class=p 
	"“Following the final attack, we wait through the cutscene up until the point where Flowey tries to kill us with the friendliness pellets.”  The amount of time between each attack is random, varying by 1 frame for each attack. “By staying on top of the pellets' hitboxes, we're able to get hit on the first possible frame. We then reload as soon as we hit the next autosave point, saving us from having to wait through the screen fading from white to black. On the final choice screen, we're able to move the soul before we can actually see it, so we move on top of the FIGHT button spawning location so we can hit it as soon as possible.” We reload again and touch the exit door. This completes the neutral ending, which is another requirement for the True Pacifist Ending.
	$LF
]div
[h3 id=Dates 
	" Dates
	$LF
]h3
[div class=p 
	"Next, we have to complete the Undyne date. Because we have completed all the other requirements, at the end of the Undyne date Undyne gives us the letter immediately after the date. This prevents us from having to go to Snowdin to pick up the letter. After taking the boat to Waterfall, we complete the date and get the letter. We then take the boat back to Hotland where we use the letter to start the Alphys date. The Undyne date and Alphys dates themselves aren’t particularly interesting, being almost entirely composed of mashing, though there is a notable exploit whereby mashing sufficiently quickly, you are able to mash a few textboxes in the Alphys date that wouldn’t otherwise be mashable. This exploit is not invalid under glitchless rules due to the ease of accidentally performing it and the extremely minor effect it has on gameplay.
	$LF
]div
[div class=p 
	"After this, the Alphys date returns us to the Waterfall garbage dump, so we have one more boat ride to take us to True Lab. 
	$LF
]div
[h3 id=TrueLab 
	" True Lab 
	$LF
]h3
[div class=p 
	"True lab is the final area of the game. For a casual runner, it is the most difficult, but in our case it’s pretty simple. True Lab is a scavenger hunt to find four different keys and put them each in the relevant slot. There are also a few encounters with glitched-out monsters called Amalgamates. Fortunately, all of these monsters have strange unique cutscenes that don’t have any blcons to manipulate. The only manipulation that needs done is to make sure all of the monsters give their fastest attacks.  Once this is done, it’s time to head back to the Barrier to face the final boss. After mashing through a short cutscene with Asgore and all of our friends, Flowey absorbs the 6 human souls and all of the various monster souls and uses that power to turn himself into the final boss: Asriel.
	$LF
]div
[h3 id=Asriel 
	" Asriel
	$LF
]h3
[div class=p 
	"The 0th phase of Asriel lasts a constant time as the intro to the music plays. Our goal here is to start the first attack of the first phase on the first possible frame. Doing so creates some funny visual effects but they are visual only. If we were to actually choose an option here, Asriel would attack us, significantly reducing our ability to manipulate RNG. Instead, we wait until the frame the first phase starts to spare Asriel, starting the fight.
	$LF
]div
[div class=p 
	"The first phase of Asriel consists of nothing but dodging. There isn’t even any RNG manipulation here as all the attacks are constant time.
	$LF
]div
[div class=p 
	"The second phase of Asriel would be where things get interesting. The bullets Asriel spawns do not despawn at the end of the turn, allowing you to get hit in the menu for a turn skip, saving a few seconds. Unfortunately it is extremely difficult and time consuming to TAS, requiring both intense RNG manipulation, and frame perfect RNG dependent movement to do. In the interest of finishing this TAS in a reasonable time frame and moving on to other projects, I decided to omit this optimization.
	$LF
]div
[div class=p 
	"In the third phase of Asriel, we have to one by one save our friend’s souls by doing actions that remind them of us. We can choose which actions we perform to manipulate the RNG so that we always get the fastest attacks. For Toriel and Asgore, you are able to skip all of the actions by using the pie, which we held onto from earlier. 
	$LF
]div
[div class=p 
	"From here on out, it’s all just mashing through cutscenes. We mash through the fourth cutscene phase of Asriel, mash through the post-Asriel battle cutscene, and mash through the post-fight wakeup cutscene. The end cutscene of this creates a game save, however that game save spawns us at the save point on the other side of the room. Because of this it is slightly faster to reload here.
	$LF
]div
[div class=p 
	"We then go through the barrier, mash through the end cutscene, and then end our time as soon as we close the final textbox from Toriel, which says “Everyone is waiting for us.” At that point, we let the credits roll.
	$LF
]div
[h2 id=OtherComments 
	" Other Comments
	$LF
]h2
[h3 id=FutureOptimizations 
	" Future Optimizations
	$LF
]h3
[div class=p 
	"While this TAS is much closer to its limit than many glitched TASes are, there are some places where a future TAS could save time. Assuming using Japanese text is off the table as JP is subject to a category split and is generally unpopular with runners, there are a few seconds to be saved with the strategy mentioned in the Asriel fight, and a few frames to be saved by switching to 1.0. In addition, it may be possible to get somewhat better RNG, particularly in the Ruins as well as the Flowey fight, either through more complex tooling or simply through putting more effort into RNG manipulation, though this would be quite a tedious task. Additionally, it was discovered during the public premiere of the TAS that Mettaton can be beaten even faster by posing at 1HP instead of buying the glamburger, saving just under 3 seconds. Finally, I lost 5 frames by taking a suboptimal path through one room of True Lab. It’s hard to say exactly but I believe fixing all of the errors, implementing all unimplemented strats, and reducing RNG by a second, all of which would be extremely difficult, would get the time into the 1:42:00-1:42:01 range. 
	$LF
]div
[div class=p 
	"Additionally, when restarting the game, RTA runners are able to preload the game, allowing the opening cutscene to run while they get to the point in the other client where they need to reload. This is not supported by libTAS, meaning every normal game reload loses just under 2 seconds, and the reloads during the Flowey fight lose a few frames each. With 4 normal game reloads, this is around 7 to 8 seconds. 
	$LF
]div
[div class=p 
	"Other than that, it is unlikely there is any other timesave. The only strats that have been discovered for the glitchless category in years have been TAS strats for Mettaton EX during the making of this TAS. Because of this, I am strongly confident that the limit for this category is 1:41:5x. 
	$LF
]div
[h3 id=ExtraMaterial 
	" Extra Material
	$LF
]h3
[div class=p 
	"Premiere with Live Commentary: 
	[a href=https://www.twitch.tv/videos/2368874478 rel=noopener external nofollow 
		"https://www.twitch.tv/videos/2368874478
	]a
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/InputEvelution 
		"InputEvelution
	]a
	": Replacing submission file with 
	(__wikiLink|displaytext=a fixed version.|href=/UserFiles/Info/638739705701271705)
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/InputEvelution 
		"InputEvelution
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/InputEvelution 
		"InputEvelution
	]a
	": Optimisation looks good! The usage of tricks in the run also appears to be fully consistent with the definition of glitchless adopted by Undertale's speedrunning community. In regards to entertainment, it was nice to see some parts of the game that get skipped over in the other currently published TASes of this game. Accepting.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Processing...
]div
