6
[div class=p 
	"This is a 2038 frame improvement over my 
	(__wikiLink|displaytext=previous|href=/7154S)
	" submission.  Many thanks go to Takanawa who provided a .fm2 with a number of tricks and improvements.
	$LF
]div
[div class=p 
	"This submission utilizes those improvements as well as some new strategies and tricks that I discovered along the way.
	$LF
]div
[div class=p 
	"The technical details below are the same and copied from my previous submission:
	$LF
]div
[h3 id=Goals 
	" Goals
	$LF
]h3
[div class=p 
	"Lode Runner for the NES has a speed setting, that can be accessed by entering the level select and pressing select + A or B to set the speed up and down.  The speed amount setting is never visible on screen but can be monitored using ram address 0x00E5
	$LF
]div
[div class=p 
	"This movie aims for fastest completion time on the fastest speed setting, using the level select to skip the end level animations. Using level select in this way greatly lowers the total completion time (about 10 seconds per level for 49 levels) while not actually affecting the game play.  Level select is accessed at any time by pressing select.  Select is only pressed after a level completion, which from input observation is a non-subjective goal.  It would be the first input frame after leaving the screen sufficiently to cause level-end lag frames.  For more discussion about using this level select behavior see the 
	(__wikiLink|displaytext=Ask a Judge discussion thread|href=/Forum/Posts/504975)
	$LF
]div
[div class=p 
	"While we do not have a completed TAS of regular speed (I did a rough test run before moving on to full speed), I can say this goal does differ in noticeable ways compared to a theoretical optimized regular speed TAS.  Specifically, digging is just as slow in fast mode.  As such, may strategies involve going significantly out of the way to avoid digging, since it is almost always faster.  A regular speed TAS would involve significantly more digging in comparison.  Also, this game is laggy, and can drastically slow down a fast mode TAS.  Compared to regular speed, there are many sub-optimal routes (in terms of number of steps) that are faster because they avoid lag.  The biggest lag contributor is enemy route calculation which is particularly slow when there is a ladder in the path from the enemy to the player. 
	$LF
]div
[div class=p 
	"I'll leave it up to the judges but a fast mode TAS may need to be considered a separate category from a regular speed TAS.
	$LF
]div
[h3 id=Tech 
	" Tech
	$LF
]h3
[h4 id=ClimbingThroughEnemies 
	" Climbing through enemies
	$LF
]h4
[div class=p 
	"Hit detection is weird in this game, particularly on ladders.  Depending on the situation it is possible to stand still on a ladder, have the enemy pass through you, and at the right time, start climbing without ever being touched.  This strategy is not easy, but is possible RTA viable (in theory, but in reality probably is not a good risk/reward at least on the later levels).  This cannot always be done, it depends on the level and ladder if there is a spot on the ladder where this can be done.
	$LF
]div
[h4 id=WalkingOnEnemies 
	" Walking on enemies
	$LF
]h4
[div class=p 
	"You can walk and even climb on enemies.  In almost all cases, it is a good way to get killed.  But with TAS precision it is possible to walk on an enemy as they are walking. In a few places in the TAS, this was used for some small time savings
	$LF
]div
[div class=p 
	"Also utilized is having an enemy fall through a fake floor, and walking over them at the precise time to cross over the fake floor.  This is particularly useful in level 18 to save significant time.
	$LF
]div
[h4 id=Rng 
	" RNG
	$LF
]h4
[div class=p 
	"This game is not just "50 short TASes".  The global timer affects two elements of randomness, enemy spawn position when they die, and number of squares they will hold on to gold before dropping it (observed by ram addresses 0x0671-0x0673). Many levels depend on precise spawns and gold drops in order to save time.  Level 1 and Level 11 are notable examples of manipulating enemies to move gold into more favorable positions.  Unfortunately, the RNG needs to be manipulated by delaying the completion of previous levels.  This is a huge pain and also excludes some small time savers due to the manipulation time being greater than the total time savings.
	$LF
]div
[h4 id=Lag 
	" Lag
	$LF
]h4
[div class=p 
	"There is a lot of lag, including even in the level begin/end.  Often frames are delayed to avoid lag at the end of the level or to avoid lag in the opening screen scroll.  In addition, there is random lag throughout, often resulting in seemingly sub-optimal paths that are overall faster due to lag.  Also, even if there is no RNG to manipulate, a level can be completed in significantly different times just based on the random lag.  Delay frames are often introduced just to save a few extra frames on random lag.  This was by far, the most miserable aspect to making this TAS
	$LF
]div
[h4 id=ErasingGold 
	" Erasing Gold
	$LF
]h4
[div class=p 
	"If an enemy falls into a pit, they will release their gold above them.  If the square above them is a dug hole, they will not be able to place the gold there.  If this happens, the gold simply goes away and the player no longer needs to collect it.  This was used in Level 32.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/GoddessMaria 
		"GoddessMaria
	]a
	": Judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/GoddessMaria 
		"GoddessMaria
	]a
	": Sorry for the delay! So looking at the cancelled submission, it does show mastery of lag management along with overall gameplay. Comparing it to this new submission, the new one has further improved on the original in unexpected ways using craftier solutions in addition to increased lag management and optimization. The audience seems to also enjoy this. Good work.
	$LF
]div
[div class=p 
	"Accepting.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/EZGames69 
		"EZGames69
	]a
	": Processing!
]div
