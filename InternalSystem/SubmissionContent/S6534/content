29
[div class=p 
	"The first two Mega Man games are famously pretty busted, which makes them a ton of fun to TAS. This movie abstains from certain game-breaking glitches to present a more "authentic" run, while being no less optimized than the famous glitchy any% run.
	$LF
]div
[div class=p 
	"It pains me that I have to zip this to submit it...but rules are rules :/
	$LF
]div
[h2 id=GameObjectives 
	" Game objectives
	$LF
]h2
[ul 
	[li 
		" Emulator used: FCEUX 2.2.3
		$LF
	]li
	[li 
		" Forgoes time-saving glitches
		$LF
	]li
	[li 
		" Aims for fastest time
		$LF
	]li
	[li 
		" Takes damage to save time
		$LF
	]li
	[li 
		" Loses time to save time
		$LF
	]li
	[li 
		" Heavy luck manipulation
		$LF
	]li
]ul
[hr 
]hr
[div class=p 
	"Man, this submission text really spiraled out of control! It's become a compendium of all my Mega Man 2 knowledge. I encourage you to use it as a reference; don't read it all in one sitting!
	$LF
]div
[div class=p 
	"For judges and casual viewers, the "Introduction to the Category" section should be sufficient for your needs.
	$LF
]div
[div class=p 
	[b 
		"With commentary:
	]b
	" 
	(youtube|v=wiaENuatLlg)
	" 
	[br 
	]br
	$LF
	"This commentary is over a dated version of the run, but almost all of what I said still applies. I'll update this at some point.
	$LF
]div
[div class=p 
	[a href=https://imgur.com/a/eitDqQU rel=noopener external nofollow 
		"Suggested screenshots
	]a
	[br 
	]br
	$LF
	"It's possible I got a little carried away with these...
	[br 
	]br
	$LF
	"The dragon one (67704) is definitely a good choice. But I kinda like them all!
	$LF
]div
[div class=p 
	"When I first set out on this journey, I thought it was going to be easy. Just a little warm-up, to get the hang of TASing. No zipping, no sliding, no charge shots, instant acceleration...how hard could it be, right? Oh 
	[em 
		"man
	]em
	" was I wrong!
	$LF
]div
[div class=p 
	"Even without zips, there are all kinds of things to consider if you want to make a good Mega Man 2 TAS. Like framerules, lag reduction, Item 1 timers, quantum shots, double death, straggling throw animations, weapon hitbox persistence, flicker-elongated animation timers...
	$LF
	"not to mention the three 
	[a href=https://viewsync.net/watch?v=loXt8izaj38&t=0&v=44oBc5OaNoM&t=0&v=YjNPw9kiUhM&t=0 rel=noopener external nofollow 
		"incredibly close routes
	]a
	" I considered!
	$LF
]div
[div class=p 
	"I've learned a lot about this game, and even made a few friends along the way. I'd like to give a special thanks to Shinryuu for teaching me stuff and helping me with the parts I couldn't quite figure out myself. And also everyone in the Mega Man speedrunning community, who shared some good ideas like Visan's ride (which sadly didn't make the cut) and the two-platform jump in Wily 1.
	$LF
]div
[div class=card mb-2 
	[div class=card-header 
		[strong 
			"Table of contents
		]strong
	]div
	[div class=card-body 
		[ul 
			[li 
				[a href=#GameObjectives 
					" Game objectives
					$LF
				]a
			]li
			[li 
				[a href=#IntroductionToTheCategory 
					" Introduction to the Category
					$LF
				]a
				[ul 
					[li 
						[a href=#Rules 
							" The Rules
							$LF
						]a
					]li
					[li 
						[a href=#SimilarityToRockmanCompleteWorks 
							" Similarity to Rockman Complete Works
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#Routing 
					" Routing
					$LF
				]a
			]li
			[li 
				[a href=#BasicMovementTech 
					" Basic Movement Tech
					$LF
				]a
				[ul 
					[li 
						[a href=#GroundedMovementSpeed 
							" Grounded movement speed
							$LF
						]a
					]li
					[li 
						[a href=#JumpHeight 
							" Jump height
							$LF
						]a
					]li
					[li 
						[a href=#AvoidingTiptoes 
							" Avoiding tiptoes
							$LF
						]a
					]li
					[li 
						[a href=#LadderTech 
							" Ladder Tech
							$LF
						]a
						[ul 
							[li 
								[a href=#ClimbingSpeed 
									" Climbing speed
									$LF
								]a
							]li
							[li 
								[a href=#LadderSnapping 
									" Ladder snapping
									$LF
								]a
							]li
							[li 
								[a href=#LadderFidget 
									" Ladder fidget
									$LF
								]a
							]li
							[li 
								[a href=#OffscreenLadderTech 
									" Offscreen ladder tech
									$LF
								]a
							]li
						]ul
					]li
					[li 
						[a href=#TurnaroundSubpixels 
							" Turnaround subpixels
							$LF
						]a
					]li
					[li 
						[a href=#EarlySwitching 
							" Early switching
							$LF
						]a
					]li
					[li 
						[a href=#ThrowingAnimations 
							" Throwing animations
							$LF
						]a
					]li
					[li 
						[a href=#UsingTheItems 
							" Using the Items
							$LF
						]a
						[ul 
							[li 
								[a href=#Item1 
									" Item 1
									$LF
								]a
							]li
							[li 
								[a href=#Item2 
									" Item 2
									$LF
								]a
							]li
							[li 
								[a href=#Item3 
									" Item 3
									$LF
								]a
							]li
						]ul
					]li
					[li 
						[a href=#IcePhysics 
							" Ice physics
							$LF
						]a
					]li
					[li 
						[a href=#FractionalEnergy 
							" Fractional energy
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#AdvancedTricks 
					" Advanced tricks
					$LF
				]a
				[ul 
					[li 
						[a href=#Rng 
							" RNG
							$LF
						]a
					]li
					[li 
						[a href=#QuantumShotsShotEntanglement 
							" Quantum shots/shot entanglement
							$LF
						]a
					]li
					[li 
						[a href=#FlickerElongatedAnimations 
							" Flicker-elongated animations:
							$LF
						]a
					]li
					[li 
						[a href=#EndingTheFightUpHigh 
							" Ending the fight up high
							$LF
						]a
						[ul 
							[li 
								[a href=#DoubleDeath 
									" Double death
									$LF
								]a
							]li
						]ul
					]li
					[li 
						[a href=#StragglingThrowingAnimations 
							" Straggling throwing animations
							$LF
						]a
					]li
					[li 
						[a href=#CrashBombDamageTransfer 
							" Crash Bomb damage transfer
							$LF
						]a
					]li
					[li 
						[a href=#Framerules 
							" Framerules
							$LF
						]a
					]li
					[li 
						[a href=#UnderwaterLag 
							" Underwater lag
							$LF
						]a
						[ul 
							[li 
								[a href=#BubbleManFramerule 
									" Bubble Man framerule
									$LF
								]a
							]li
						]ul
					]li
					[li 
						[a href=#Item1Values 
							" Item 1 values
							$LF
						]a
					]li
					[li 
						[a href=#WeaponHitboxPersistenceLenientCrashBombs 
							" Weapon hitbox persistence/lenient crash bombs
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#Insights 
					" Insights
					$LF
				]a
				[ul 
					[li 
						[a href=#Quick 
							" Quick
							$LF
						]a
					]li
					[li 
						[a href=#Metal 
							" Metal
							$LF
						]a
					]li
					[li 
						[a href=#Bubble 
							" Bubble
							$LF
						]a
					]li
					[li 
						[a href=#Flash 
							" Flash
							$LF
						]a
					]li
					[li 
						[a href=#Heat 
							" Heat
							$LF
						]a
					]li
					[li 
						[a href=#Air 
							" Air
							$LF
						]a
					]li
					[li 
						[a href=#Wood 
							" Wood
							$LF
						]a
					]li
					[li 
						[a href=#Crash 
							" Crash
							$LF
						]a
					]li
					[li 
						[a href=#Wily1 
							" Wily 1
							$LF
						]a
					]li
					[li 
						[a href=#Wily2 
							" Wily 2
							$LF
						]a
					]li
					[li 
						[a href=#Wily3 
							" Wily 3
							$LF
						]a
					]li
					[li 
						[a href=#Wily4 
							" Wily 4
							$LF
						]a
					]li
					[li 
						[a href=#Refights 
							" Refights
							$LF
						]a
						[ul 
							[li 
								[a href=#Air_2 
									" Air
									$LF
								]a
							]li
							[li 
								[a href=#Heat_2 
									" Heat
									$LF
								]a
							]li
							[li 
								[a href=#Wood_2 
									" Wood
									$LF
								]a
							]li
							[li 
								[a href=#Bubble_2 
									" Bubble
									$LF
								]a
							]li
							[li 
								[a href=#Quick_2 
									" Quick
									$LF
								]a
							]li
							[li 
								[a href=#Crash_2 
									" Crash
									$LF
								]a
							]li
							[li 
								[a href=#Metal_2 
									" Metal
									$LF
								]a
							]li
							[li 
								[a href=#Flash_2 
									" Flash
									$LF
								]a
							]li
							[li 
								[a href=#WilyMachine 
									" Wily Machine
									$LF
								]a
							]li
						]ul
					]li
					[li 
						[a href=#End 
							" The End.........?
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#SpecialThanks 
					" Special Thanks
					$LF
				]a
			]li
		]ul
	]div
]div
[h2 id=IntroductionToTheCategory 
	" Introduction to the Category
	$LF
]h2
[h3 id=Rules 
	" The Rules
	$LF
]h3
[ol 
	[li 
		" No zipping of any kind
		$LF
	]li
	[li 
		" No delay scrolls
		$LF
	]li
]ol
[div class=p 
	"You can think of this as the "no major glitches" category, or maybe "in-bounds." But its name is "Zipless," and I believe that should be the branch name.
	$LF
]div
[div class=p 
	"This game is full of ways to get yourself stuck inside a wall and pushed around at breakneck speeds; All of these methods are banned. These include:
	$LF
]div
[ul 
	[li 
		" the bad collision detection on Items 1 and 3 and other platforms
		$LF
	]li
	[li 
		" a yoku block spawning at your position
		$LF
	]li
	[li 
		" aligning yourself with a wall during a screen scroll
		$LF
	]li
]ul
[div class=p 
	"The delay scroll ban is to keep within the "in-bounds" spirit of this category. It didn't seem right to scroll the screen in the wrong direction, even if I'm not inside a wall!
	$LF
]div
[div class=p 
	"Full disclosure: there's a little jump I do in Heat Man's stage to skip some of those disappearing blocks which may seem dubious to some. The RTA community has long considered this to not be a zip, and the people I asked in the TASVideos Discord seemed to feel the same way.
	$LF
]div
[hr 
]hr
[div class=p 
	"For those of you worried that zipless is just any% but without the zips...well, yeah. 
	[em 
		"Duh.
	]em
	" But I feel like there's a lot more to this category than that! You'll see a unique route through the game (robot masters and Wily stages), as well as a number of tricks and tactics that don't apply to standard any%.
	$LF
]div
[div class=p 
	"Here are a few things you'll see here that aren't in the "zipful" run:
	$LF
]div
[ul 
	[li 
		" Going toe to toe with the toppling cans in Metal
		$LF
	]li
	[li 
		" Gunning down half of the mechs in the game (as opposed to none of them)
		$LF
	]li
	[li 
		" Wood Man's entire stage
		$LF
	]li
	[li 
		" Fighting the Mecha Dragon, for the first time in 13 years
		$LF
	]li
	[li 
		" All the wonderful screens that get zipped past!
		$LF
	]li
]ul
[div class=p 
	"I will say this: if Items 1 and 3 didn't work quite like they do, zipping would not be so prevalent, and this is roughly what the run would look like.
	$LF
]div
[h3 id=SimilarityToRockmanCompleteWorks 
	" Similarity to Rockman Complete Works
	$LF
]h3
[div class=p 
	"I am well aware of the PlayStation port of this game, the differences, and the 
	(__wikiLink|displaytext=TAS|href=/3029M)
	" of it. paosidufygth did an excellent job with it, and I studied his work closely.
	$LF
]div
[div class=p 
	"For those who don't know: most zips are patched out in Rockman Complete Works, making the TAS of that version of Mega Man 2 very similar to this one. So why should you watch a run that accomplishes the same thing via self-imposed restrictions?
	$LF
]div
[div class=p 
	"Well, for starters, vertical zips still exist in RCW, allowing paosidufygth to skip a few screens that I can't (or won't, I guess). There are also a few of what I call "minizips" in Wood and Wily 4.
	$LF
	"There's also instant weapon switching in RCW, whereas the NES version requires you to waste 40-50 frames for every switch. So, for better or worse, my run favors weapon loyalty. This difference leads to some interesting optimizations and challenges in both versions, but I can't say it fundamentally changes the nature of the run.
	$LF
	"Finally, I show off a completely different route, which I 
	[em 
		"believe
	]em
	" would be faster for the PSX version as well. I'm not sure how instant switching affects it, but I'm fairly confident.
	$LF
]div
[div class=p 
	"I hope you're still willing to give this run a watch.
	$LF
]div
[hr 
]hr
[h2 id=Routing 
	" Routing
	$LF
]h2
[div class=p 
	"The classic zipless route is:
	$LF
]div
[pre 
	"A Q M B H F W C
	$LF
]pre
[div class=p 
	"We start off with a relatively simple Air, and use Item 2 in every subsequent stage--even Quick, 
	[a href=https://www.youtube.com/watch?v=G_akznDrVV0 rel=noopener external nofollow 
		"if you're fancy
	]a
	". You won't see Items 1 or 3 until Crash, which is very late in the run. This is the route that I started off with for this TAS. 
	$LF
]div
[div class=p 
	"The only problem is, Air first is 
	[b 
		"SLOW.
	]b
	$LF
]div
[div class=p 
	"It turns out that Item 1 (which you get from Heat) saves so much time in Air that it's worthwhile to make almost every other stage slower.
	$LF
	"aglasscage and I both came up with routes respecting the H→A constraint. His does Metal late, mine does Metal early, but they are otherwise identical. My route is faster mainly because Metal Blade speeds up the Flash and Bubble fights; I believe aglasscage's route would be faster for Normal mode.
	$LF
]div
[div class=p 
	"My route turned out to be 90 frames faster than the RTA route, and 40 frames faster than aglasscage's. That's really close! 
	[a href=https://viewsync.net/watch?v=loXt8izaj38&t=0&v=44oBc5OaNoM&t=0&v=YjNPw9kiUhM&t=0 rel=noopener external nofollow 
		"Click here
	]a
	" to see a comparison of all three routes.
	$LF
]div
[div class=p 
	"For reference, the routes are:
	$LF
]div
[pre 
	"warmCabin:  Q M B F H A W C
	$LF
	"aglasscage: Q B F H A M W C
	$LF
]pre
[div class=p 
	"But of course, the game doesn't end after beating Crash Man. There's still half a game left to play!
	$LF
]div
[div class=p 
	"I initially tried the RTA Wily route, which uses Item 2 in Wily 1 and refills it in Wily 2. But the 80-frame refill plus the ~50-frame extra pause outweigh the ~70 frames saved by riding Item 2. So, I kept Item 3 out for the entire first section, which ended up saving 30 frames overall.
	$LF
]div
[div class=p 
	"There was only one problem: I no longer had enough Item 3 energy to do Wily 4 in an optimal way. So I had to go back and lose some time in Wily 1 (within the framerule!) to save 2 bars of energy. It still wasn't quite enough, but it got me to a position where I could switch to Item 2 and do the rest of the stage pretty fast; 
	[del 
		"there is a single ladder climb that should use Item 3 but doesn't.
	]del
	" With some optimizations in Wily 4, I was able to save time 
	[em 
		"and
	]em
	" energy, enabling me to do that ladder and the moving platform room with just a single sliver of energy. Even with just one use, Item 3 saves a lot more time on ladders than you might think.
	$LF
	"It's about a second faster overall. 
	$LF
]div
[hr 
]hr
[h2 id=BasicMovementTech 
	" Basic Movement Tech
	$LF
]h2
[div class=p 
	"The Mega Man games already have a good 
	(__wikiLink|displaytext=game resources page|href=/GameResources/NES/Rockman)
	", but there are a few interesting things not listed there. In this section, I'll list these things and summarize the relevant details from that page.
	$LF
]div
[h3 id=GroundedMovementSpeed 
	" Grounded movement speed
	$LF
]h3
[div class=p 
	"Walking is faster than jumping, for some ungodly reason. It's important to keep your jumps short.
	$LF
]div
[div class=p 
	"If you need to adjust your subpixels, extending a jump is a good way to do it.
	$LF
]div
[h3 id=JumpHeight 
	" Jump height
	$LF
]h3
[div class=p 
	"The highest jump in Mega Man 2 is 12 frames. 1-11 frames all result in distinct jump heights; 12 is substantially higher than all the others, so try to avoid full 12-framers if you can.
	$LF
]div
[h3 id=AvoidingTiptoes 
	" Avoiding tiptoes
	$LF
]h3
[div class=p 
	"When moving from a standstill, Mega Man will do a little tiptoe as he gets up to speed. This is incredibly slow, so be sure to do a 1-frame jump to cancel it whenever possible.
	$LF
]div
[div class=p 
	"You can avoid it when landing from a jump by making sure you hold a direction for at least one frame in the air.
	$LF
]div
[div class=p 
	"Tiptoeing is a good way to make small adjustments to your position when riding items or otherwise waiting for something.
	$LF
]div
[div class=p 
	"Exception: at the beginning of Metal Man's stage, it's actually better to tiptoe because the conveyor belt is so fast.
	$LF
]div
[h3 id=LadderTech 
	" Ladder Tech
	$LF
]h3
[h4 id=ClimbingSpeed 
	" Climbing speed
	$LF
]h4
[div class=p 
	"Climbing ladders is 
	[em 
		"incredibly
	]em
	" slow in the first two Mega Mans (Mega Men?). You want to spend as much time jumping up them as you possibly can. When VY=00.9F is the best frame to grab on.
	$LF
]div
[h4 id=LadderSnapping 
	" Ladder snapping
	$LF
]h4
[div class=p 
	"If you hold up, you can grab ladders early and snap to their position. If you do this from low enough below, you'll get a really nice upwards boost.
	$LF
	"But if the ladder is within two tiles of you vertically, this vertical snap is actually slower than doing a full jump.
	$LF
]div
[div class=p 
	"If you press up at just the right position near the top of a ladder, you will snap straight to the top without a single frame of climbing. If you're jumping from too low, this can be slower to set up.
	$LF
]div
[div class=p 
	"There is horizontal ladder snapping as well, although it's not quite as potent.
	$LF
]div
[h4 id=LadderFidget 
	" Ladder fidget
	$LF
]h4
[div class=p 
	"In Mega Man 1, you can cancel throwing/shooting animations on ladders by dropping off and grabbing back on. But this ain't Mega Man 1; in Mega Man 2, those timers are persistent! However, by repeatedly dropping off and grabbing back on while the throwing/shooting animation plays out, you can gain a bit of height, 
	[em 
		"even though you steadily descend during the process.
	]em
	" This behavior is very mysterious to me.
	$LF
]div
[div class=p 
	"Fun fact: I discovered this by accident about a year ago! I thought would be a funny thing to do during the waiting time, but I noticed I was getting mysteriously better positions afterward.
	$LF
]div
[h4 id=OffscreenLadderTech 
	" Offscreen ladder tech
	$LF
]h4
[div class=p 
	"Grabbing ladders offscreen is weird. If you press down when Mega Man is fully offscreen, you will get a vertical boost once you press up on the next screen. It's usually by 16 pixels, but it can actually be more depending on your Y position and the magical anime girls that Shinryuu tells me lurk offscreen.
	$LF
]div
[div class=p 
	"For real, though. We've found that waiting on the platform for a bit and being at specific X positions can inexplicably give you better Y positions on the next screen. Super Mario Bros. has judges in its blocks, we've got anime girls on our ladders!
	$LF
]div
[h3 id=TurnaroundSubpixels 
	" Turnaround subpixels
	$LF
]h3
[div class=p 
	"When you fall off a ledge and need to turn around, it may seem like you should brush up against the wall to get the best position. This is not always the case. Sometimes, you can actually be a few subpixels inside the block; that is, the ejection routine (which runs when you push in the opposite direction) puts you just a bit further out than the first position where you can actually fall. By moving past the wall on just the right frame, you can preserve this subpixel gain into the next area.
	$LF
]div
[div class=p 
	"Sometimes, this maneuver may not be possible at all, and it will be better to brush up against the wall and get a X8.00. You just have to try it for each jump.
	$LF
]div
[div class=p 
	"Note that this does not work if you encounter a left-facing wall (you are holding right) that transcends a screen border; you will be ejected to X8.00. Right-facing ones seem to be OK, though.
	$LF
]div
[div class=p 
	"Optimal right-side subpixel: X7.00 
	[br 
	]br
	$LF
	"Optimal left-side subpixel: X8.FC
	$LF
]div
[h3 id=EarlySwitching 
	" Early switching
	$LF
]h3
[div class=p 
	"You can interrupt the teleport animation (when starting the stage or unpausing) with a pause 13 frames sooner than you can jump and shoot. This is free timesave, and often makes otherwise slower strats the better choice.
	$LF
]div
[h3 id=ThrowingAnimations 
	" Throwing animations
	$LF
]h3
[div class=p 
	"When using F, M, 1, 2, and 3, you get locked into a throwing animation, during which you cannot walk, only jump. The only ways to truly cancel it are to take damage, or to switch to a "shooty" weapon (like P) and fire it; this overrides the throwing animation with a shooting animation. If this seems impractical, don't worry! It comes in handy!
	$LF
]div
[div class=p 
	"In most circumstances, the best way to mitigate the effects of a throwing animation is to jump for its entire duration. Of course, you want to time it exactly. Wouldn't want to spend unnecessary time in the air!
	$LF
]div
[div class=p 
	"When using one of these throwy weapons, do 
	[b 
		"not
	]b
	" use in on the first frame of a jump! Your velocity is set to 0 for a single frame, but you can't see it in-game. It's a common mistake and a sneaky way to lose a frame.
	$LF
]div
[h3 id=UsingTheItems 
	" Using the Items
	$LF
]h3
[div class=p 
	"Throwing animations make this tough. Be sure to try different jump heights when getting on and off Items, especially Item 1.
	$LF
]div
[h4 id=Item1 
	" Item 1
	$LF
]h4
[div class=p 
	"Can be shot as late as the 11th frame of your jump. That's great if you're maximizing height, but that's not always the case. Sometimes you're maximizing for distance, or trying to find the 
	[em 
		"minimum
	]em
	" height that's high 
	[em 
		"enough.
	]em
	" Be sure to try multiple possibilities to see if any of them come out ahead.
	$LF
]div
[h4 id=Item2 
	" Item 2
	$LF
]h4
[div class=p 
	"Can be shot as late as the 12th frame of your jump. If you're using this as a poor man's Item 1, all of the above applies. But if you're using its full capabilities as a rocket sled, read on.
	$LF
]div
[div class=p 
	"When Item 2 is at full speed, it's going too fast for you to walk off the front; you get a weird grinding effect if you try.
	$LF
]div
[div class=p 
	"You're gonna be on this thing for a while, so you'll have plenty of time to optimize your position. Get to the very right edge and tiptoe until the frame you fall off; then, go back one frame so you don't.
	$LF
]div
[div class=p 
	"Sometimes, falling off can realign your subpixels in a way that results in better positions. If you have the patience for this, absolutely experiment with it in your runs.
	$LF
]div
[h4 id=Item3 
	" Item 3
	$LF
]h4
[div class=p 
	"Item 3 is best used close to a wall, but not 
	[em 
		"too
	]em
	" close. Shoot it on the 4th frame of a full jump, then time that jump so you have the highest possible position when you land. It's not an early-as-possible or a late-as-possible scenario; it's parabolic. There's a sweet spot in the middle that you have to search for.
	$LF
]div
[div class=p 
	"If there's a gap between the wall and the floor (as is the case in Heat), shooting in on the 4th frame won't cut it. Try it on the 5th frame instead.
	$LF
]div
[h3 id=IcePhysics 
	" Ice physics
	$LF
]h3
[div class=p 
	"Here's something you don't hear every day: I wish 
	[em 
		"all
	]em
	" stages had ice physics!
	$LF
]div
[div class=p 
	"Ice physics in this game are very abusable for a TAS. When moving right, holding left will slowly decrease your velocity. But as long as you haven't completely reversed direction, your velocity will instantly snap back to full speed when you hold right again (this applies when moving left and pressing right as well). Using this technique, you can manipulate your subpixel to be precisely what you want. This enables you to get perfect turnaround subpixels every time, and saves a frame or two throughout Flash Man's stage.
	$LF
]div
[div class=p 
	"I know this is pretty standard TASing stuff, but it's a breath of fresh air compared to the rest of the game.
	$LF
]div
[h3 id=FractionalEnergy 
	" Fractional energy
	$LF
]h3
[div class=p 
	"There are three weapons in the game that have fractional energy: Quick, Metal, and Bubble. This means that it takes more than one shot to drain a single bar of energy; that's 2 shots per bar for Bubble, 4 shots per bar for Metal, and 8 shots per bar for Quick. What's interesting here is that the fractional part is reset when you switch weapons, 
	[em 
		"even if you switch to the same weapon
	]em
	" (I guess the initialization code is always called).  So, for example, by firing up to 3 Metal Blades (which costs 0 energy) and then switching weapons, you can essentially create infinite Metal Blades.
	$LF
]div
[div class=p 
	"I don't really have the patience for that, especially not in a TAS! However, this property does become relevant in the context of a speedrun. If you fire 4n - 1 Metal Blades before you switch, you've saved 3 blades for the next time you pull them out. Watch my ammo during Wily 2 and the refights to see this in action. 
	$LF
]div
[h2 id=AdvancedTricks 
	" Advanced tricks
	$LF
]h2
[div class=p 
	"Here are a few tricks and techniques that are a little more advanced. Try them out once you get the feel for basic movement.
	$LF
]div
[h3 id=Rng 
	" RNG
	$LF
]h3
[div class=p 
	"RNG is a global variable that cycles every frame, even during lag. It is directly affected by your X subpixel position, which makes RNG manipulation an absolute joy in this game! You can almost always get exactly what you want without losing any time.
	$LF
]div
[h3 id=QuantumShotsShotEntanglement 
	" Quantum shots/shot entanglement
	$LF
]h3
[div class=p 
	"You'll notice that I apparently waste ammo during some boss fights and enemy encounters. This is deliberate: sometimes, the mere presence of additional projectiles on screen can make unrelated collisions happen a frame sooner or later. This behavior was known, but not named, so I decided to name it after quantum entanglement (aka "spooky action at a distance") due to the spooky correlations between seemingly unrelated things.
	$LF
	"I believe this has to do with the parity of the frame count and the sprite slot.
	$LF
]div
[h3 id=FlickerElongatedAnimations 
	" Flicker-elongated animations:
	$LF
]h3
[div class=p 
	"When Mega Man is flickering, his animations last longer. This usually manifests harmlessly as a slower walk cycle, but can cost time when you're unpausing/teleporting or getting knocked back.
	$LF
	"This has nothing to do with lag.
	$LF
]div
[h3 id=EndingTheFightUpHigh 
	" Ending the fight up high
	$LF
]h3
[div class=p 
	"When a boss fight ends, you have to wait for Mega Man to reach the top of the screen. As such, it is optimal to end the fight as high up as possible. This is pretty simple compared to some of the other Mega Man games!
	$LF
]div
[h4 id=DoubleDeath 
	" Double death
	$LF
]h4
[div class=p 
	"A super flashy trick that optimizes fight end height. I believe this is the only Mega Man game where a double death counts as a victory.
	$LF
]div
[div class=p 
	"It's not necessarily frame perfect, but it's still pretty tight. Certain fights seem to be more lenient than others, particularly the Bubble fight.
	$LF
]div
[h3 id=StragglingThrowingAnimations 
	" Straggling throwing animations
	$LF
]h3
[div class=p 
	"Normally, when a boss fight ends, Mega Man stands around blinking for a bit before he teleports away. But when you execute a double death, things are a little different: he remains in his current pose until he teleports away. The animation never gets a chance to reset, so it is carried over to the next stage. So if you happened to end the fight in a throwing animation, you've got a problem: a 
	[a href=https://imgur.com/KXeaz1z rel=noopener external nofollow 
		"straggling throwing animation
	]a
	". It must be canceled as described above.
	$LF
]div
[div class=p 
	"This is where the pause and switch method comes into play. If you fire a buster shot (or any shooty weapon), you can cancel this throwing animation, suffering only one frame of its effects. This actually comes up twice throughout the run, with the same two weapons: Metal → Quick.
	$LF
]div
[h3 id=CrashBombDamageTransfer 
	" Crash Bomb damage transfer
	$LF
]h3
[div class=p 
	"When a Crash Bomb is exploding, colliding with an enemy can sometimes cause that enemy to take damage as though 
	[em 
		"you
	]em
	" were the bomb! The valid positions for this are determined by your position the last time you took damage. I have no idea how this works, but finalfighter sure seems to; check out his crashbombglitch lua script, which helpfully draws boxes that show you precisely when and where you can execute this glitch. Using this script, you should be able to try different damage boosts until you get sufficient values.
	$LF
]div
[div class=p 
	"This effect can sometimes be observed with other weapons, but it's not as well-understood or useful.
	$LF
]div
[h3 id=Framerules 
	" Framerules
	$LF
]h3
[ul 
	[li 
		" Whenever a boss health bar ticks up, that's a 4-frame rule.
		$LF
	]li
	[li 
		" Whenever you get a health or energy refill, that's an 8-frame rule.
		$LF
	]li
	[li 
		" The GET EQUIPPED text is responsible for another 8-frame rule.
		$LF
	]li
	[li 
		" After Mecha Dragon and Guts Tank, the explosion is responsible for a 16-frame rule.
		$LF
	]li
	[li 
		" On the Wily's Castle map screens, the paths being drawn are responsible for a 4-frame rule.
		$LF
	]li
]ul
[div class=p 
	"The frame counter doesn't increment during lag, so a lag frame can actually push the framerule pattern backwards. This means that, if you think you've saved time in spite of lag, 
	[a href=https://imgur.com/REROD97 rel=noopener external nofollow 
		"maybe you haven't
	]a
	".
	$LF
]div
[div class=p 
	"There's also an interesting interaction involving double death that's unique to the dragon fight, and in fact, is an improvement to the any% movie.
	$LF
]div
[div class=p 
	"For much, 
	[em 
		"much
	]em
	" more detail on this, checkout my 
	[a href=https://warmcabin.github.io/mm2/docs/mm2_framerules.pdf rel=noopener external nofollow 
		"writeup
	]a
	".
	$LF
]div
[h3 id=UnderwaterLag 
	" Underwater lag
	$LF
]h3
[div class=p 
	"Mega Man 2 implements underwater slow-mo physics by intentionally lagging out every 5th frame. Like most lag frames, underwater lag causes the game to freeze and ignore your inputs. But 
	[em 
		"unlike
	]em
	" regular lag, the frame counter still advances. Because of this, it seems like underwater lag shouldn't affect framerules; however, it interacts with Bubble Man's health bar in an annoying way, causing its own unique framerule.
	$LF
]div
[div class=p 
	"This behavior is controlled by a counter at $FC.
	$LF
]div
[h4 id=BubbleManFramerule 
	" Bubble Man framerule
	$LF
]h4
[div class=p 
	"Health bars increment every 4 frames, but what happens if there's underwater lag? Well, if the health bar would increment (frame counter is a multiple of 4), but there's a frame of underwater lag, it will 
	[em 
		"not
	]em
	" increment. If you watch Bubble Man's health bar fill up in slow motion, you'll see this manifest as a stuttering and inconsistent tempo where most bars take 4 frames to appear, but a few of them take 8.
	$LF
]div
[div class=p 
	"You want to line up the multiples of 5 with the multiples of 4 such that you start the fight as soon as possible:
	$LF
]div
[ul 
	[li 
		" The first bar of HP should appear when the frame counter is red.
		$LF
	]li
	[li 
		" You should be able to jump 2 frames before a red frame
		$LF
	]li
	[li 
		" There should be a 133-frame difference between the first HP bar appearing and the first frame you can jump.
		$LF
	]li
]ul
[div class=p 
	"To manipulate this, you can delay your entry or exit from the water, or your entry into the fight. For the Bubble refight, you have to take this into account all the way back in Wily 3.
	$LF
]div
[div class=p 
	"Bubble Man is the only underwater boss in this game, so this framerule is unique to him.
	$LF
]div
[h3 id=Item1Values 
	" Item 1 values
	$LF
]h3
[div class=p 
	"Item 1s rise every 4 frames. This behavior is controlled by a series of timers in memory. Problem is, they're actually general purpose variables that are reused by several other weapons, and critically, 
	[em 
		"not reset.
	]em
	" This means that randomly shooting quick boomerangs in one stage can save you time two stages later.
	$LF
]div
[div class=p 
	"Weapons that are known to affect these values are:
	$LF
]div
[ul 
	[li 
		" A: random fluctuations. 
		[a id=r1 
		]a
		[sup 
			"[
			[a href=#1 
				"1
			]a
			"]
		]sup
		$LF
	]li
	[li 
		" B: random fluctuations. Sets value to 0 when it disappears against a wall.
		$LF
	]li
	[li 
		" Q: random fluctuations.
		$LF
	]li
	[li 
		" M: random fluctuations, diagonal shots only.
		$LF
	]li
	[li 
		" 1: Used to determine what frame to rise.
		$LF
	]li
	[li 
		" 2: Doesn't use them, but can sometimes set value #3 to 0 if you shoot it in a wall.
		$LF
	]li
	[li 
		" 3: Random fluctuations. Used to determine when to move sideways...I think.
		$LF
	]li
]ul
[div class=p 
	"Item 3s are controlled by a similar, separate set of values, in 
	[em 
		"addition
	]em
	" to the Item 1 values. These Item 3 values are affected by the weapons in different ways. I haven't studied those ones as closely; watching just the Item 1 values seems to be sufficient.
	$LF
]div
[div class=p 
	"FinalFighter has written a series of Lua scripts that help you track all of this. They can be found 
	[a href=http://www.yuko2ch.net/rockman/mm2_tas_map2.htm rel=noopener external nofollow 
		"here
	]a
	" (and 
	[a href=http://www.yuko2ch.net/rockman/mm2_tas_map2_eng.htm rel=noopener external nofollow 
		"here
	]a
	" in English).
	$LF
]div
[div class=p 
	"[
	[a id=1 
	]a
	[a href=#r1 
		"1
	]a
	"]
	" By "random fluctuations," I mean nobody has bothered to study the code of this particular weapon ._.
	$LF
]div
[h3 id=WeaponHitboxPersistenceLenientCrashBombs 
	" Weapon hitbox persistence/lenient crash bombs
	$LF
]h3
[div class=p 
	"Similarly to Item 1 values, weapons store their hitbox sizes in a series of variables in memory. They are properly set by all weapons except one: Crash Bomber. Crash Bomber properly sets the size for the bomb itself, but not the four little explosion particles, so they read from uninitialized memory!
	$LF
]div
[div class=p 
	"The upshot of this is that Crash Bomb explosions will have differently sized hitboxes depending on what weapons you fired earlier. For example, Quick Boomerangs create size 1 hitboxes (bullet-sized) and Leaf Shield creates size 4 hitboxes (leaf shield-size). This is the cause of the so-called "lenient" and "strict" Crash Bombs in the Boobeam fight; lenient ones can save a few frames in a TAS. Check out the sections on Wily 3 and 4 for more details on the specific hitbox manipulation I do in this run.
	$LF
]div
[hr 
]hr
[h2 id=Insights 
	" Insights
	$LF
]h2
[div class=p 
	"I don't have a previous run to compare to, but I can give you some insight into some of the techniques and decisions involved in each stage.
	$LF
]div
[h3 id=Quick 
	" Quick
	$LF
]h3
[div class=p 
	"It's possible to get through all the hotheads without stopping for a single frame. I extend a couple jumps by a frame or two to facilitate this.
	$LF
]div
[div class=p 
	"It's just barely faster to gun down the mechs; 20 shots is a lot, even for a TAS. It's usually faster to just take the hit, but Quick Man kindly provides us with two counterexamples to this rule.
	$LF
	"The first mech is faster because Mega Man is on the left side of the screen when it spawns rather than the middle. The second mech is faster because that ledge he stands on blocks your way after the hit.
	$LF
]div
[div class=p 
	"There's an interesting optimization when I take damage from the second mech operator. By jumping into him, I'm able to gain just enough height for my invinciblity to run out in midair, meaning I don't have to hop out of a tiptoe.
	$LF
]div
[h3 id=Metal 
	" Metal
	$LF
]h3
[div class=p 
	"Switching to Q at the very beginning of the stage saves 13 frames, but it's worth it to keep P out until later. The Buster's infinite range allows me to shoot the drill on the fast belt, and saves a good amount of time when dealing with the toppling can guys. Although it's weaker against the clowns and gears, requiring more turnarounds (5 vs 3).
	$LF
]div
[div class=p 
	"Buster is 11 frames faster overall, lag included.
	$LF
]div
[div class=p 
	"It should be noted that, if you can somehow kill that drill without jumping using Q, you will save 7 frames. You should be able to copy/paste the remainder of that section from this submission; it saves 2 frames over my 
	[a href=https://www.youtube.com/watch?v=WAeOkTTVn2Y rel=noopener external nofollow 
		"demo
	]a
	". Then, with intense optimization of the toppling can section, you might just beat the frame rule with early Quick. You'd need to save 3 non-lag frames overall in order to make the next boss entry rule.
	$LF
]div
[div class=p 
	"Bonking the underside of a conveyor belt actually applies its velocity to you for one frame, gaining you a pixel each time.
	$LF
]div
[div class=p 
	"I only let go of right for one frame during the toppling can section.
	$LF
]div
[h3 id=Bubble 
	" Bubble
	$LF
]h3
[div class=p 
	"The beginning is actually a couple frames faster if you stick to Buster, but not 13 frames faster. If it weren't for that 13-frame quirk, I'd probably switch when taking damage from the hermit crab.
	$LF
]div
[div class=p 
	"Frogs are super laggy. It's important not to let more than 3 babies get on screen at a time, as that will really ruin your day. Keeping one alive to prevent the next mother from barfing more babies is a good way to ensure this. It's also important to make sure nobody drops any pickups, as that can push you over the edge into a lag frame.
	$LF
]div
[div class=p 
	"When fighting the first lantern fish, I do a 2 frame jump to take out its shrimp babies, which is the smallest jump that cancels a throw animation underwater. But I once stumbled upon an incredibly lucky scenario where I could do a 1-framer, refrain from shooting, and the shrimps would all 
	[a href=https://youtu.be/PWJk04hmwI8?t=412 rel=noopener external nofollow 
		"politely avoid me
	]a
	". I tried every possible frame, with different subpixels and after wasting different amounts of time, but I could not recreate this incredibly rare occurrence in my new run. It barely saves time, but I'm sad I don't get to show it off :c
	$LF
]div
[h3 id=Flash 
	" Flash
	$LF
]h3
[div class=p 
	"Yes, 
	[a href=https://www.youtube.com/watch?v=EJhZ5p-fX2g rel=noopener external nofollow 
		"it really is faster
	]a
	" to switch to Q! I was just as surprised as you. In my initial attempt, I switched straight to Metal, forcing me to take the hit from the one mech and do the classic slippery ledge jump to dodge the one at the end. It turns out that killing these guys with Quick is just barely worth the extra switch it takes! I reach the boss door 10 frames sooner than the straight Metal strat.
	$LF
]div
[div class=p 
	"By making extraneous shots with Q and M, and timing the necessary ones carefully, I am already preparing for the next two stages. See Item 1 values above.
	$LF
]div
[h3 id=Heat 
	" Heat
	$LF
]h3
[div class=p 
	"Big thanks to Shinryuu for letting me 
	[del 
		"steal
	]del
	" borrow his inputs from any%! I tweaked the Buster shot timings to get some extra lives just for fun, but otherwise, the first portion is directly copied from his work. Why mess with perfection?
	$LF
]div
[div class=p 
	"Normally the pillars are skipped by doing a you-know-what overhead, so I did this section myself. Optimal Item 3 throws involve getting very close to the wall, so anywhere you see a gap, my climb is less than perfect.
	$LF
]div
[div class=p 
	"Watch carefully at the 4th pillar: I jump, throw, land, then jump again to reach the Item 3. Throwing Item 3 in this way actually enables me to land on it slightly higher than a standard jump-n-throw. However, my X position is worse, so it's not usually worthwhile. This pillar happens to be tall enough to make X position irrelevant; you're gonna wait on that Item 3 no matter what. Thanks to paosidufygth for discovering this tech!
	$LF
]div
[div class=p 
	"The big yoku block gap was another section I stole from Shin. I jumped for an extra frame on the weird floating ledge to sync up my subpixels with his so I could pull off the heist. He gets through those blocks 
	[em 
		"real
	]em
	" fast, faster than I'll ever be able to. The harder I try, the more frustrated I get, and the more I admire my friend. He tweaks his subpixels so that every block appears precisely as soon as it needs to, which isn't necessarily as soon as possible. It'll likely go unnoticed by the average viewer, but it is a FINE piece of TASing!
	$LF
]div
[h3 id=Air 
	" Air
	$LF
]h3
[div class=p 
	"An even bigger thanks to Shinryuu for directly contributing inputs here. I was overwhelmed by the cloudy guys; I just couldn't seem to get past them without a lag frame or holding still for a frame or two. So Shin agreed to tackle it for me and made this super fast version in a couple of hours. It saved about 7 frames over my crappy attempt. Truly phenomenal work! This section is the crux of the major route overhaul, so I really can't thank you enough!
	$LF
]div
[div class=p 
	"After turnaround spawning the bird in preparation for the fan fiend despawn, I let it drop its egg, which unavoidably creates 3 frames of lag. This lag can be eliminated if I turn around and shoot the egg on its way down, as seen in the 2010 and current any% run. So...why didn't I do that? Well, lag affects frame rules in a complicated way. Since the frame counter doesn't increment during lag, the entire pattern gets shifted back a frame. This usually loses time, but it 
	[em 
		"can
	]em
	" gain time, depending on how things line up. In this case, I saved some "green time" by not turning around, so I was able to enter the boss fight on the previous frame rule (4 green frames sooner--1 actual frame), which enabled me to leave the boss room on the previous frame rule (8 green frames sooner--5 actual frames). See my 
	[a href=https://warmcabin.github.io/mm2/docs/mm2_framerules.pdf rel=noopener external nofollow 
		"framerules writeup
	]a
	" if this confused the hell out of you.
	$LF
]div
[h3 id=Wood 
	" Wood
	$LF
]h3
[div class=p 
	"It's Weird Wood! This strat took heavy inspiration from the PSX TAS.
	$LF
]div
[div class=p 
	"I start with Item 2, like the PSX run and realtime any%. This section is constantly on the cusp of lagging; sometimes just facing a different direction or moving your foot around is enough to prevent (or cause) a lag frame.
	$LF
]div
[div class=p 
	"Without zipping, it is not possible to spawn block all 3 dogs. Even the PSX TAS can gain a bit of a boost inside the wall, which is just enough for this. I, unfortunately, must switch to Atomic Fire to take out the first dog.
	$LF
]div
[div class=p 
	"When entering the first dog room, you can grab the ladder at the last possible frame to reset your fall velocity without latching on. This lets you avoid clipping the ledge and get your shot in sooner. And if that wasn't enough, it also moves you to a set X position, so you can hold left beforehand to manipulate RNG! I love this ladder.
	$LF
]div
[div class=p 
	"I switch to Flash at a specific spot to avoid a flicker-elongated teleportation animation. This is a subtle but important thing to be aware of.
	$LF
]div
[div class=p 
	[em 
		[a href=https://clips.twitch.tv/FrigidFaithfulPorcupineFrankerZ rel=noopener external nofollow 
			"I accidentally wasted a frame here!!!
		]a
	]em
	" I'd like to claim it was deliberate, but it wasn't. It was sloppy workmanship on my part, and I was able to save 4 frames off that section. However, for whatever unknowable reason, I got 3 more frames of lag no matter what I did. Well, that's still a 1-frame improvement, right? 
	[b 
		"Wrong.
	]b
	" The way the framerules play out, those improvements save 
	[em 
		"0
	]em
	" frames. So I would face the full penalty of those 3 lag frames if I used the faster inputs. I can't decide if this is really lame or really cool.
	$LF
]div
[div class=p 
	"That damage boost on the bat is paosidufygth's trick. It's super slick.
	$LF
]div
[div class=p 
	"Speaking of lag, those birds and monkeys are awfully laggy, as are Item 1s. I found that having Mega Man jump off the top of the screen eliminated a good chunk of lag, but 10 frames still made it through.
	$LF
]div
[div class=p 
	"Switching at the top of a ladder is optimal, so that's what I do. I bother all the bunnies and roosters with my air shooter mostly because it's funny, but also because it manipulates Item 1 values. 
	$LF
]div
[h3 id=Crash 
	" Crash
	$LF
]h3
[div class=p 
	"Nothing too special, here. I tried a couple of different Item 1 routes, but none of them were faster. I also felt compelled to try the old 
	[a href=https://www.youtube.com/watch?v=RQJdtEOsTNc rel=noopener external nofollow 
		"Item 2 clash crime
	]a
	". It's about 2 seconds slower, but 2 times cooler.
	$LF
]div
[div class=p 
	"Compared to a previous attempt, I was able to save about a second from this stage just from a better understanding of on- and off-screen ladder grabs. I'm particularly proud of that!
	$LF
]div
[div class=p 
	"By switching weapons inside the fight, I'm able to start it 1 frame sooner. Sometimes it's faster to switch weapons 
	[em 
		"before
	]em
	" the boss fight, so you have to try both possibilities if applicable.
	$LF
]div
[hr 
]hr
[h3 id=Wily1 
	" Wily 1
	$LF
]h3
[div class=p 
	"You can jump and shoot all the eggs in the beginning portion of this stage. Instead, I do a 1-frame turnaround to get the second bird to spawn behind me. It turns out that all the time you would spend in the air jumping and shooting is slower than a 1-frame turnaround, which costs just 2 frames.
	$LF
]div
[div class=p 
	"The first two Item 3 jumps are slow, but they only use 2 energy each. I am carefully managing my Item 3 energy for Wily 4, and this is the solution I arrived at.
	$LF
]div
[div class=p 
	"That one gray bacon strip can really screw you if your subpixels are bad. I got lucky this time, but I've had to slow down by like an 8th of a pixel in previous attempts.
	$LF
]div
[div class=p 
	"The famous triple Item 1 jump can actually be done with just two. I use the third one purely to get a boost onto the next screen.
	$LF
]div
[div class=p 
	"Yes, 
	[a href=https://www.youtube.com/watch?v=hafIxyRstCM rel=noopener external nofollow 
		"it really is
	]a
	" 
	[a href=https://www.youtube.com/watch?v=gaUb8Tb-EVM rel=noopener external nofollow 
		"faster
	]a
	" to switch to 2 on the long ladder screen! I was just as surprised as you. I initially attempted this climb with Item 3, which was still faster than just holding up; neither was enough to beat the framerule. However, the Item 2 version 
	[em 
		"is
	]em
	" enough to start the fight a bit earlier, which lets me end it a bit higher up. This saved 4 frames going into Wily 2 and then Wily 3, which was just enough to squeeze out another framerule and save 16 frames on the Guts Tank fight!
	$LF
]div
[div class=p 
	"As if that weren't enough, it also saves that Item 3 energy for somewhere else. That energy didn't help beat the framerule in Wily 1, so I decided to use it in Wily 4, where it saved an additional 16 frames. And so, that Item 2 trick saved half a second over my previous attempt. I'm really happy about that!
	$LF
]div
[div class=p 
	"In the dragon block section, I switch from 2 to P once the screen has already started scrolling. This makes the screen move during the one frame where Mega Man can't.
	$LF
]div
[div class=p 
	"You can stand on the blocks for one frame as they fall off the screen, which is really cool! Shinryuu did that back in 2006, but all the encodes of that TAS are in 30 Hz, so you can't see it through all the flicker. I wanted to make sure this trick saw the light of day.
	$LF
]div
[div class=p 
	"Why P and not Q for the dragon fight? There are several reasons:
	$LF
]div
[ul 
	[li 
		" Q is slower to menu to (barely)
		$LF
	]li
	[li 
		" Quick Boomerang's arc is a pain in the ass
		$LF
	]li
	[li 
		" Having 4 shots on screen doesn't save time over 3
		$LF
	]li
]ul
[div class=p 
	"The timing of the double death here is crucial. Like, 
	[em 
		"extra
	]em
	" crucial. As mentioned in my 
	[a href=https://warmcabin.github.io/mm2/docs/mm2_framerules.pdf rel=noopener external nofollow 
		"framerule writeup
	]a
	", dying on the exact frame the frame counter reaches a multiple of 16 causes the explosion timer to decrement and saves another 16 frames. I discovered this very recently; it actually needs to be implemented in any% as well.
	$LF
]div
[h3 id=Wily2 
	" Wily 2
	$LF
]h3
[div class=p 
	"I start off by doing the Item 2 section without collecting the refill, which accounts for half the timesave of this Wily route. I end the ride with 4 energy, precisely the amount I need for Wily 4.
	$LF
]div
[div class=p 
	"Time Stopper is lame here, but nothing is lamer than going slow! It's faster purely due to menuing. Leaf Shield is the standard choice in any% because it can defeat the shotmen as well as the drills. In zipless, we take the left path, so we only have to deal with the drills.
	$LF
]div
[div class=p 
	"Metal Blade is another good choice for this section. In zipless, it gains 2 frames of menuing, but loses them due to all that jumping around. In any%, it actually saves 7 frames, despite waiting to dodge a bullet 
	[em 
		"and
	]em
	" the jumping! Unfortunately, we can't afford that many Metal Blades in either category, so alternatives must be used. For those that don't know, most fans of this game consider Metal Blades to be virtually limitless. So using them all up, 
	[em 
		"productively,
	]em
	" is quite the feat!
	$LF
]div
[div class=p 
	[del 
		"I use only one Item 1 to climb the tall wall.
	]del
	" I use two Item 1's to climb the tall wall! Even though the highest one you can 
	[em 
		"place
	]em
	" 
	[a href=https://imgur.com/9DYBTdk rel=noopener external nofollow 
		"isn't much higher
	]a
	" than the highest one you can 
	[em 
		"land on,
	]em
	" it still saves 22 frames to use two. I had an extra Item 1 after a frantic post-submission reroute, and this was the best place to use it.
	$LF
]div
[div class=p 
	"Full disclosure: there are 3 frames of timesave in this section. I can shoot that Item 1 at the optimal height one frame sooner, and with better Item 1 value manipulation, I could save 2 on the rise. But these 3 frames are not enough to break the Boobeam health bar framerule--and even if they were, those 4 frames would not be enough to break the Guts Tank explosion framerule. To manipulate these values, I'd have to go all the way back to Crash Man's stage. Item 3 only allows me to manipulate the third slot, so I'd have to switch to Air early and fire off a couple of extra tornadoes to essentially shuffle all three values. I may come back to this someday, but I'm happy with it for now. Call it a time-entertainment tradeoff if you like ;)
	$LF
]div
[div class=p 
	"Fun fact: A slight optimization I found when jumping over the mashy spike plates actually made its way into any%! As did a trick I found where you can fire Leaf Shield without stopping.
	$LF
]div
[div class=p 
	"The Picopico fight is fairly lenient. The next wall chunk will only come to life after a multiple of 31 frames has passed (and the previous chunk is dead), so there's a massive frame rule here.
	$LF
]div
[div class=p 
	"By timing my very last Metal Blade throw, I am already preparing for a jump in Wily 4.
	$LF
]div
[h3 id=Wily3 
	" Wily 3
	$LF
]h3
[div class=p 
	"A straightforward itemless stage. I tried grabbing a refill and using Item 2 to skip over the long section with the fish, but it was slower, especially when leaving enough energy for Wily 4.
	$LF
]div
[div class=p 
	"The first shotman is pretty tough to kill quickly. At one point in the run, he cost me 3 frames over a previous attempt, which was enough to kill the framerule and lose me 16. It bugged me to no end, but I was forced to accept it...until I found that Item 2 strat in Wily 1. That saved me 11→8→0→4 frames, which was just enough to get me out of the Guts Tank fight in time and earn those 16 frames back. I'm really happy about that!
	$LF
]div
[div class=p 
	"You may have noticed something odd in this stage: I limit myself to only 2 Quick Boomerangs on screen at a time, even though I can have up to 4. This neither saves nor loses time. So why do I do it?
	$LF
]div
[div class=p 
	"Well, this is an example of hitbox preservation, as described above. I'm trying to preserve a Metal hitbox from the last stage all the way into Wily 4 to help me with the boss fight. The way these variables line up, I can preserve a single Metal Blade hitbox if I only allow up to 2 Quick Boomerangs on screen at a time; the third boomerang would overwrite it. I was worried this would lose time, but it doesn't cost a single frame. No timesave like free timesave!
	$LF
]div
[div class=p 
	"That little tantrum in the boss room is to manipulate Item 1 values. I am only able to alter the first value when subject to the two shot limit.
	$LF
]div
[h3 id=Wily4 
	" Wily 4
	$LF
]h3
[div class=p 
	"I was able to steal a few ladder-climbing inputs for this stage, obviously without the zips. I added some personal flair where I could.
	$LF
]div
[div class=p 
	"After submitting, I noticed a neat trick in the PSX TAS that enabled me to save 6 frames in a way that cost 0 energy. Using that same trick, I was able to save 2 energy in a way that cost me 4 frames. It's kind of a weird tradeoff, but I came out 2 frames faster with 2 slivers of energy leftover, which I took full advantage of. 
	$LF
]div
[div class=p 
	[del 
		"This section is where I run out of Item 3.
	]del
	" I have exactly enough Item 3 energy to do everything I want to! Having 2 energy leftover is incredibly useful, since it allows me to skip a good bit of climbing in the next room. Item 2 no longer makes a surprise appearance, which makes me sad :(
	$LF
]div
[div class=p 
	"I handle the moving platform rooms in the classic RTA way. But with only 1 energy left, the Item 3 strat in room 2 is extremely precise; it's actually a frame perfect jump before it disappears, assuming you time the throw correctly. I'd recommend doing the Item 2 placement if you're attempting this route RTA. It's only 3 frames slower when done optimally! RIP that trick, btw. It was the coolest jump in the game :(
	$LF
]div
[div class=p 
	"Using Item 2 in the third room is actually 5 frames slower than Item 1. Although in this route, I already have Item 2 equipped, so it's much slower to do the extra switch. But more importantly, Item 1 energy is precious, and these two are much more useful elsewhere, even in the best case. 2 Item 1's for 5 frames is horrible!
	$LF
]div
[div class=p 
	"It's possible to dodge the final Sniper Joe with an Item 1. But getting a rightwards damage boost isn't too bad; that Item 1 was better used elsewhere. Plus, the hit gives me really good values for the damage transfer glitch coming up, which the mandatory hit beforehand does not.
	$LF
]div
[div class=p 
	"The Boobeam fight plays out a bit differently than any%, since I enter on the ground. I need an Item 1 to reach the upper ledge and do a decent fight. Beyond that, it's pretty much identical to what you'd see in any%, except that I added plenty of entertaining stuff during the waiting periods. I'm able to do two damage transfers and leave the fight with 3 bombs to spare. I did 
	[em 
		"not
	]em
	" need to borrow inputs for this fight.
	$LF
]div
[div class=p 
	"Here's where that Quick Boomerang thing comes into play. In the Picopico fight, I set all the explosion hitboxes to size 2 (blade-sized). If I'd allowed any more than two Quick boomerangs on screen at a time, all the hitboxes would've been overwritten with size 1 (bullet-sized). Having just one size 2 hitbox makes all the difference: it happens to blow up the bottom wall 26 frames sooner! Unfortunately, I still have to wait for the bomb to finish exploding, so the only benefit is that I'm further to the right by the time that happens. This means that the new bomb latches onto the wall 6 frames sooner, which makes the fight 6 frames faster, 4 after the framerule. That's an incredibly complicated setup for an extremely small timesave... But at this point in the run, all framerules are 4 frames, so every bit counts!
	$LF
]div
[div class=p 
	"There's another interesting alternative to this that could save 40 frames. Leaf Shield sets all four hitboxes to size 4, which is 
	[em 
		"huge.
	]em
	" As big as, well...a Leaf Shield! This enables you to place the second Crash bomb much lower, and therefore shoot it from all the way to the left. Luckily, Leaf Shield is a viable alternative to Time Stopper in Wily 2, so you could use it. But since the Picopico fight overwrites the first three slots with size 2, you would need that size 4 hitbox in slot 3, which means you would not be allowed to fire a single Quick Boomerang. This means you would need to fight the tank with another weapon, presumably Buster. Using Leaf Shield in Wily 2 is slow, but still fast enough to be viable. The Buster Tank fight, though...that loses a full second on its own, 
	[em 
		"despite
	]em
	" saving a pause. So this isn't really viable without a substantial improvement to the Buster Tank fight.
	$LF
]div
[h3 id=Refights 
	" Refights
	$LF
]h3
[div class=p 
	"This is where any% and zipless really converge. If I spliced in footage of Shinryuu's run into my encode, you probably wouldn't even notice! Not that I would ever do anything like that...
	$LF
]div
[div class=p 
	"I was actually able to copy/paste the Heat, Bubble, and Crash fights with only small tweaks for RNG. I tried to do them myself just to confirm, but I was always 3 to 4 frames slower than Shin's excellent inputs. I was able to get the rest of them down myself, using a ghost to confirm that I was on par with Shinryuu.
	$LF
]div
[div class=p 
	"There's some interesting tech involving the teleporter room and the teleporters themselves.
	$LF
]div
[div class=p 
	"At the very beginning, I'm able to reach the Air fight by jumping under a block. This must be a 1-frame jump; a 2-framer is enough to make you bonk the ceiling and fall down. But a 1-frame jump over a 2-block gap isn't possible unless your subpixels line up juuuuuust right, so I had to do a slightly higher jump when teleporting in. This is an old, old trick, but I like it a lot.
	$LF
]div
[div class=p 
	"Teleporters teleport you to a set position, but they do 
	[em 
		"not
	]em
	" set your subpixels, meaning you can preserve them between rooms. I really 
	[em 
		"really
	]em
	" like this mechanic. It means that I can enter the boss fights precisely when I want to and get precisely the RNG I want. All I have to do is jump before entering and my subpixels will be different!
	$LF
]div
[h4 id=Air_2 
	" Air
	$LF
]h4
[div class=p 
	"A fairly straightforward fight. One of the two that we switch weapons during.
	$LF
]div
[div class=p 
	"An interesting optimization comes from pressing left and right simultaneously. The movement code reads that as a left press, but the leaf shield code reads that as a right press, so it's possible to shoot a leaf shield to the right while moving to the left.
	$LF
]div
[h4 id=Heat_2 
	" Heat
	$LF
]h4
[div class=p 
	"Let's take this fight as an example of how good Shinryuu's TASing is. You'd think the optimal strategy would be to get up close, shoot him 4 times with the optimal 69-frame delay, then retreat to the teleporter and shoot him over there. Nope! That wastes time. Instead, you want to get up close, do 4 shots that are 5 frames longer than optimal, 
	[em 
		"then
	]em
	" let him charge across the room at you. This saves 4 frames over the greedy strat. I guess that's just what happens after 10 years of playing Mega Man 2.
	$LF
]div
[h4 id=Wood_2 
	" Wood
	$LF
]h4
[div class=p 
	"Starts off very similar to the one in his native habitat. I need to get up close so I can dink a few tornadoes through his shield. Once he shoots it, I'm able to fire off some decent double hits and a final blow that pushes the hitboxes to their absolute limits.
	$LF
]div
[h4 id=Bubble_2 
	" Bubble
	$LF
]h4
[div class=p 
	"I was able to get a decent fight with a few quantum shots, but due to fractional metal blade ammo, I can't afford to waste a single one (7 shots = 1 ammo = 4 shots, 8 ammo = 2 ammo = 8 shots). Somehow, someway, Shinryuu was able to get a fight with the 
	[em 
		"exact
	]em
	" same time without a 
	[em 
		"single
	]em
	" quantum shot. I still don't get it, but I was able to steal it, so I'm happy about it.
	$LF
]div
[h4 id=Quick_2 
	" Quick
	$LF
]h4
[div class=p 
	"Spares are for squares! For years, the TAS strat here was to use pure Air, and that bugged the hell out of me. What were they holding on to those bombs for!? I mentioned this to Shinryuu, and he said it wasn't really viable, but he'd give it another go. Then on that very day he came up with this excellent fight that saves 28 frames! It's too volatile to copy/paste, so I had the opportunity to execute his strategy myself. It was an absolute pleasure.
	$LF
]div
[div class=p 
	"The most efficient way to deal damage with air shooter is to pin Quick Man against the wall and repeatedly do double hits, so that's just what I do. I've never seen a triple hit (if you have, please show me!!), so it's important to make sure that the third projectile despawns as soon as possible. It would take 
	[em 
		"forever
	]em
	" to reach the ceiling, so it's important to be close to the wall.
	$LF
]div
[h4 id=Crash_2 
	" Crash
	$LF
]h4
[div class=p 
	"Copypasta! I technically have enough ammo to do this without a precise double hit, but it's just too cool not to. Instead, I waste that extra ammo before the Wood fight for Item 1 value manipulation.
	$LF
]div
[h4 id=Metal_2 
	" Metal
	$LF
]h4
[div class=p 
	"Trivial. Just for funsies, I optimized it for TAS timing: it's 12 frames :p
	$LF
]div
[h4 id=Flash_2 
	" Flash
	$LF
]h4
[div class=p 
	"This actually loses 2 frames to Shin's inputs. It's because the floating metal blade he puts out serves as a quantum shot for more hits than mine does. But those 2 frames weren't enough to lose a frame rule, and to be honest, I was getting sick of stealing inputs.
	$LF
]div
[h4 id=WilyMachine 
	" Wily Machine
	$LF
]h4
[div class=p 
	"Consists of 100% stolen inputs!
	$LF
]div
[div class=p 
	"This fight is surprisingly finicky. With slightly different Item 1 values, the same inputs might kill him in record time, or leave him at like 8 health. I have 3 extra metal blades to fire off, so it's not a big deal.
	$LF
]div
[div class=p 
	"And just like that, my metal blade ammo is gone. I really like this fight!
	$LF
]div
[h3 id=End 
	" The End.........?
	$LF
]h3
[div class=p 
	"I face left and shoot bubbles on the way down for shits and giggles. Unfortunately, I can only afford two left presses; the third one actually costs me a frame. But that's OK, because it's all leveled out by 
	[b 
		"the final framerule.
	]b
	$LF
]div
[div class=p 
	"...which is just the alien's health bar. Really not that special. 
	$LF
]div
[div class=p 
	"Have you ever been driving somewhere with Google Maps, and it suggests to you an alternate route that's 3 minutes slower? And you think to yourself, "Thanks for being thorough, I guess, but why are you showing me this?" That's how I feel about the alien fight right now.
	$LF
]div
[div class=p 
	"Previously, I saved an Item 1 so I could get on top of the weird ledge and do the fight optimally, figuring it saved 1 or 2 seconds. But it turns out this is only viable in any%, where they 
	[em 
		"already have it out.
	]em
	" In my run, I was able to save 28 frames by not using it...so I essentially saved an Item 1 till the end of the game just to lose time. I found a better home for it in this new version, which helped saved 20 of those 69 frames.
	$LF
]div
[div class=p 
	"This is why you never, 
	[em 
		"ever
	]em
	" make assumptions in TASing. Ask questions. Test 
	[em 
		"everything.
	]em
	" And when you're done testing, test some more. This entire movie came about from questioning assumptions about the realtime strats I'd learned.
	$LF
]div
[div class=p 
	"Thanks again to Shinryuu for figuring out the first half of this fight. He was able to get him down to 13 health, one better than the PSX TAS and two better than my initial proof-of-concept. But let it be known now and forever that I was able to save 5 frames off the second half!
	$LF
]div
[div class=p 
	"Funny story: At one point during my old Item 1 fight, Shin thought he had found a 19-frame improvement to my work; turns out he had accidentally downloaded the wrong movie file! Wouldn't be a TAS if no one accidentally did work in the wrong movie file.
	$LF
]div
[div class=p 
	"And with that, I end my run on frame 98,331, which is a 27:16.14. That's 1 second faster than my initial submission, 3:23 slower than any%, and 1:29 faster than the corresponding human world record. Thank you for reading this far into the submission, and I hope you enjoyed the run!
	$LF
]div
[hr 
]hr
[h2 id=SpecialThanks 
	" Special Thanks
	$LF
]h2
[dl 
	[dt 
		" Shinryuu
	]dt
	[dd 
		$LF
	]dd
]dl
[div class=p 
	"A friend of mine and an excellent TASer. As mentioned above, I was able to steal a lot of inputs from him and even convince him to make some direct contributions. His advice was invaluable to me when I was first learning this game at a frame-by-frame level, and he's always there to give his unique brand of encouragement as I post about my findings and setbacks.
	$LF
]div
[div class=p 
	"He has this to say:
	$LF
]div
[blockquote 
	" It was interesting to see a certain someone appear and start poking me via private messages. This person was widely known as warmCabin. He contributed and actively talked about strategies while I was still doing my any% version. He's the one who got me up from the abyss. I was able to gather our group again not too long after that. I made my own Rockman Discord server, aimed at tool-assisted speedruns where we can track our progress much easier. I'm not a big fan of graphical and modern interfaces so it took some time for me to get used to this stuff. warmCabin joined the group sometime after that.
	$LF
	$LF
	" I contributed a bit when warmCabin had issues or wanted to confirm 
	$LF
	" something. I didn't want to be part of this project that much but I'm 
	$LF
	" impressed to see this game can be played like this as well. Heatman's 
	$LF
	" block and Airman's cloud areas use my inputs.
	$LF
	" 
	$LF
	" warmCabin seems to have a lot of interest about the inner parts of the 
	$LF
	" game. He's a coder by a nature and he understands optimization quite 
	$LF
	" well. He came up with some crazy ideas and had a different kind of 
	$LF
	" perspective for handling the gameplay. I've also learnt something new from him.
	$LF
]blockquote
[dl 
	[dt 
		" aglasscage
	]dt
	[dd 
		$LF
	]dd
]dl
[div class=p 
	"A longtime speedunner and fellow TASer of Mega Man 2. He knows this game incredibly well, and is the master of the elusive delay scroll technique.
	$LF
]div
[div class=p 
	"Last year I showed him my old Air first route. On December 30th he said to me, "The cloud section is so slow. Much slower than heatman's block section. Have you tested other routes?" What a message that was! It precipitated a rigorous rerouting process that set me back by 5 months, but it was all worth it. I absolutely would've pushed forward with that slow route if it weren't for him, and I'm so glad I didn't.
	$LF
]div
[dl 
	[dt 
		" finalfighter
	]dt
	[dd 
		$LF
	]dd
]dl
[div class=p 
	"While he didn't contribute directly to this run, his research into this game and his incredibly handy Lua scripts were invaluable. It'd be a crime not to mention him here.
	$LF
]div
[dl 
	[dt 
		" paosidufygth
	]dt
	[dd 
		$LF
	]dd
]dl
[div class=p 
	"The author of the PlayStation TAS, which is full of excellent tricks and optimizations. I studied his work very closely and drew several ideas from it. I just wish he'd written a submission text!
	$LF
]div
[dl 
	[dt 
		" The Mega Man speedrunning Discord
	]dt
	[dd 
		$LF
	]dd
]dl
[div class=p 
	"TASers aren't the only people who know this game well! The Mega Man RTA community was always interested to see my progress and swap cool ideas with me. For instance, the big Item 1 jump in Wily 1 came about when I heard coolkid saying, "Don't be a baby," in that section, and I asked everyone what the heck he was talking about.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/Maru 
		"Maru
	]a
	": Judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Maru 
		"Maru
	]a
	": Replacing with truncated input file.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Maru 
		"Maru
	]a
	": Setting to delayed pending more improvements per request from the author.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Maru 
		"Maru
	]a
	": Replacing file with 69 frame improvement.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Maru 
		"Maru
	]a
	": Great work with this TAS. It is apparent that a lot of effort was put into the routing and optimization. The feedback was mostly positive. TASes of Mega Man 2 that do not zip through everything have been in demand for quite a while.
	$LF
]div
[div class=p 
	"In the thread, there were some questions about whether this should be accepted considering how similar it is to the PSX version of this game or even if it should obsolete that 
	(__wikiLink|displaytext=PSX TAS|href=/3029M)
	". I took it upon myself to watch both TASes side by side, taking note of the differences. 
	$LF
]div
[div class=p 
	"The instant item switching, in my eyes, is a very significant difference and allows for a wider variety of routing possibilities. While the author believes that his route would have been faster for the PSX version, it is also possible that there are even faster routes that would work only in the PSX version due to the nature of instant item switching.
	$LF
]div
[div class=p 
	"When we compare the goals of both runs, the PSX TAS is essentially aiming for fastest completion. It's not a zipless run by any nature, even if some of the zips were patched in that version. Vertical zips are still possible in the PSX version. This run aims to beat the game as fast as possible without using zips. So, the two movies have different goals.
	$LF
]div
[div class=p 
	"When looking for publishing different versions of games, we are looking for either approximately 50% of unique content and/or significant in-game differences (such as in the route or in the gameplay). A zipless run of NES Rockman 2 has enough significant in-game differences (routing, gameplay, etc.) compared to the TAS of the PSX version.
	$LF
]div
[div class=p 
	"As a result, I'm accepting this as a new branch. Accepting to Moons.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/fsvgm777 
		"fsvgm777
	]a
	": Processing.
]div
