5
[div class=p 
	"[TAS] Prince of Persia (DOS, 1990) any% by eien86 in 12:09.333
	$LF
]div
[div class=p 
	"In this timeless classic, the tyrant Jaffar has seized power and has forced Sultan's daughter to marry him. You, the brave youth who is a prisoner in Jaffar's dungeons must rescue her within 60 minutes. Little does poor Jaffar know that he will be defeated in a fifth of the intended time.
	$LF
]div
[div class=p 
	"Total IGT:      12m 09s 333ms
	$LF
	"Level Skip IGT: 08m 58s 666ms
	$LF
	"Total RT:       13m 00s
	$LF
]div
[h3 id=GameObjectives 
	" Game objectives
	$LF
]h3
[div class=p 
	"The objective of the game is to beat all 14 levels in less than 60 minutes (IGT). In the "any%" category, all tricks and glitches are allowed except for the use of cheats. This category requires that all levels are completed (without skipping the first three levels using the SHIFT+L code). 
	$LF
]div
[div class=p 
	"This movie makes the best effort to reduce the real time to solution. However, it is the IGT the one used as the metric for speed, as it omits cutscenes and account for changes in framerate (the game operates in 12 FPS normally, but 10 FPS during combat). The IGT starts immediately on Level 1 and stops as soon as Jaffar dies in Level 13, as this is the time taken for the high-score board. Level 14 is only accounted for in RT, hence the difference between both times. 
	$LF
]div
[div class=p 
	"A potential level Skip run IGT can be obtained by subtracting the time for the first 3 levels. In this case, it results in 08:58.666ms. This represents a notable improvement compared to 12:20.58 of the previous level-skip TAS produced by David Newton (
	[a href=https://www.youtube.com/watch?v=hfOocUkxJ08). rel=noopener external nofollow 
		"https://www.youtube.com/watch?v=hfOocUkxJ08).
	]a
	$LF
]div
[div class=p 
	"In general, this run abides by the same rules as the RTA runs (
	[a href=https://www.speedrun.com/pop1). rel=noopener external nofollow 
		"https://www.speedrun.com/pop1).
	]a
	" Only difference is that we use the Prince of Persia 1.0 version as emulation for newer versions does not handle sounds well. Here some guard reaction times and probabilities are changed, but overall the gameplay is the same. 
	$LF
]div
[ul 
	[li 
		" Emulator used: JPC-RR r11.8 rc2
		$LF
		[ul 
			[li 
				" Boot Floppy: FreeDOS 1-1-35w (Build 2035w)from (
				[a href=https://drive.google.com/file/d/1QV3NFjpgVQIrn-Qcf0M70UPfgW-qOTtk/view?usp=sharing) rel=noopener external nofollow 
					"https://drive.google.com/file/d/1QV3NFjpgVQIrn-Qcf0M70UPfgW-qOTtk/view?usp=sharing)
				]a
				$LF
			]li
			[li 
				" HDD Image: Contains only Prince of Persia 1.0
				$LF
			]li
			[li 
				" Audio: Sound Blaster
				$LF
			]li
		]ul
	]li
]ul
[h3 id=Comments 
	" Comments
	$LF
]h3
[div class=p 
	"This movie is the result of decades of routing and discoveries, and has been developed with extensive help from the current speedrunner community. Notable contributors to the routing are the actual game top speedrunners, such as (in no particular order) crem, CapnClever, 7eraser7, Karlgamer, YOLO4GG, GoodSpectre, Higlak, Velcheran, Creditor, WinterThunder, uvq3tsa, Wolfadawn, KenshinTrek, and GMP. 
	$LF
]div
[div class=p 
	"The route has improved a great deal during the last few years thanks to the use of savestate-enabled emulators (e.g., DosBox-X), allowing players to try different tricks without losing too much time. The development of this TAS is largely based on the existing route but has introduced two novel approaches:
	$LF
]div
[div class=p 
	"- Frame by Frame Analysis / Memory Debugging
	$LF
	"Thanks to the use of emulators (JPC-RR) and memory debuggers (Cheat Engine), the discovery new tricks (e.g., level 7 and 8 skips -- 
	[a href=https://www.youtube.com/watch?v=EtFVLF5kuds, rel=noopener external nofollow 
		"https://www.youtube.com/watch?v=EtFVLF5kuds,
	]a
	" 
	[a href=https://www.youtube.com/watch?v=MlBbu612T1o) rel=noopener external nofollow 
		"https://www.youtube.com/watch?v=MlBbu612T1o)
	]a
	" that would have not been otherwise possible, as their discovery required a frame-perfect input and RNG-heavy setups. Fortunately, more human-friendly versions of these skips have been developed after their discovery. 
	$LF
]div
[div class=p 
	"- Routing by Exhaustive Seach
	$LF
	"The development of an open-source version of the game (SDLPop, 
	[a href=https://github.com/NagyD/SDLPoP/) rel=noopener external nofollow 
		"https://github.com/NagyD/SDLPoP/)
	]a
	" allowed the development of a high-performance parallel breadth-first search bot, called Jaffar (
	[a href=https://github.com/SergioMartin86/jaffar) rel=noopener external nofollow 
		"https://github.com/SergioMartin86/jaffar)
	]a
	" that exhaustively explores all possible movements in each possible frame. The search is made possible by constraining the exploration space to that of a pre-determined route, requiring a few trillion states per level. As a result, the bot found the most efficient way to traverse the community-established route. We've applied Jaffar repeatedly on a supercomputer to solve for every level. Following strict definitions, the re-Record count is: 836,877,925,474.
	$LF
]div
[h3 id=StageByStageComments 
	" Stage by stage comments
	$LF
]h3
[div class=p 
	"Level 1:
	$LF
]div
[div class=p 
	"The route for this level has been proven to be optimal by the bot on sheer brute force. The strat includes bunny hopping at the beginning for a quick fall and then skip the guard via a timed jump.
	$LF
]div
[div class=p 
	"Level 2:
	$LF
]div
[div class=p 
	"A long level. No changes to the route here compared to RTA, but a lot of RNG optimization by the bot to skip all guards faster.
	$LF
]div
[div class=p 
	"Level 3:
	$LF
]div
[div class=p 
	"The bot-optimized movement here played a big role in shaving those last few frames. Movement, especially while ascending/descending the way to the exit door open tile has been highly optimized. An RNG-induced hit by the skeleton saves a few backward steps with the sword.
	$LF
]div
[div class=p 
	"Level 4:
	$LF
]div
[div class=p 
	"Here a few known skips are used, most notably using the guard to open the first door. The bot's contribution is minimal here, optimizing a few movements before/after the mirror.
	$LF
]div
[div class=p 
	"Level 5: 
	$LF
]div
[div class=p 
	"Here the door skip is employed to skip a big part of the level. This is performed by luring the guard to the left and then clipping through the door while on-guard. The rest of the level includes the normal route, optimized via the bot.
	$LF
]div
[div class=p 
	"Level 6:
	$LF
]div
[div class=p 
	"Here we used the normal route. A nice jump over the hole in the second-to-last screen was found by the bot
	$LF
]div
[div class=p 
	"Level 7:
	$LF
]div
[div class=p 
	"Perhaps the most broken of all levels, we employed the newly discovered level 7 skip which contains a whole array of glitches all working in unison. First, we 'moonwalk' the guard through the chomper, then we make him fall 2 stories without dying by exiting and reentering the room. Then we use the guard to perform a 'Yolo skip' through the door. This route was exhaustively optimized by the bot.
	$LF
]div
[div class=p 
	"Level 8:
	$LF
]div
[div class=p 
	"Another spectacularly broken level. We lure the guard towards the 'useless' bad potion room and use him to make us clip through the wall and the floor towards the end of the level. This marks the return of the mouse who comes to save the day.
	$LF
]div
[div class=p 
	"Level 9:
	$LF
]div
[div class=p 
	"Definitely the longest and hardest to crack level. Here, the only skip found was the damage clip through the last door that allows us to skip making the loose tile fall, saving a few seconds. Other than that, it is still ripe for skips. Here the movements were highly optimized by the bot.
	$LF
]div
[div class=p 
	"Level 10:
	$LF
]div
[div class=p 
	"Here we make use of a few tricks, including 'guard jump', 'overflow teleport', 'yolo skip', 'fall damage cancel', and RNG manip. It would be very hard to improve level 10 any further.
	$LF
]div
[div class=p 
	"Level 11:
	$LF
]div
[div class=p 
	"This level remains skipless, mainly because of it's layout (all horizontal) it is still hard to crack. However, all moments were optimized by the bot, shaving many frames in the way.
	$LF
]div
[div class=p 
	"Level 12:
	$LF
]div
[div class=p 
	"An climbing level, here we use the 'overflow teleport' trick to skip to the shadow screen. Here, we grab the sword and immediately merge with the shadow to exit the level.
	$LF
]div
[div class=p 
	"Level 13:
	$LF
]div
[div class=p 
	"Here we used the bot to manipulate RNG to guarantee a fast Jaffar kill. As soon as Jaffar dies, the IGT clock stops.
	$LF
]div
[div class=p 
	"Level 14: 
	$LF
]div
[div class=p 
	"This level only requires running a few screens, and IGT does not count anymore.
	$LF
]div
[h3 id=OtherComments 
	" Other comments
	$LF
]h3
[div class=p 
	"This TAS is 28 seconds faster than the current RTA WR, and 10 seconds faster than the sum of human best segments. This speaks to the incredible skills of the RTA runners, who have incorporated most of these seemingly TAS-only tricks into their runs succesfully. 
	$LF
]div
[div class=p 
	"A few more seconds could be gain for this TAS through the following:
	$LF
	"- Improvements to Jaffar's memory management can allow for 10-100x wider searches, and perhaps discover new unknown skips.
	$LF
	"- Many ideas for skips on later levels are still under research. 
	$LF
	"- A more robust RNG manipulation throughout the game (not only per-level).
	$LF
]div
[div class=p 
	"Emulation Issues:
	$LF
]div
[div class=p 
	"- Sound Blaster emulation seems to cause jittering in this emulator and game version. This is the best setup we've found, as the only other option is using PC Speaker emulation which, besides sounding horrible and ruining the entertainment factor, it affects the way RNG operates and thus also that of the gameplay.
]div
