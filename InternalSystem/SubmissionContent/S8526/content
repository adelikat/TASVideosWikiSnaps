8
[ul 
	[li 
		"Emulator: BizHawk 2.9.1 NesHawk Core
		$LF
	]li
	[li 
		"ROM SHA-1: FACEE9C577A5262DBE33AC4930BB0B58C8C037F7
		$LF
	]li
]ul
[ul 
	[li 
		"Aims for fastest time
		$LF
	]li
	[li 
		"Takes major shortcuts
		$LF
	]li
	[li 
		"Abuses glitches
		$LF
	]li
	[li 
		"Uses warps
		$LF
	]li
]ul
[div class=p 
	(youtube|v=QOYMOZ0rm6o)
	" 
	$LF
]div
[div class=p 
	[a href=https://www.romhacking.net/hacks/7915/ rel=noopener external nofollow 
		"Celeste Mario’s Zap & Dash!
	]a
	" is a ROM hack of NES Super Mario Bros., released in July 2023 as a precursor to the work-in-progress Mario Machina. Described by its main creator w7n as a “hastily done minihack”, it is the most technically impressive hack of this game by far, with heavy modifications to almost the entire game engine. The player progresses through a mostly linear world, using walljumps, Celeste-style dashes and various features in the level design to assist movement. The main collectables in the game are moons, which serve as a measure of completion as well as increasing the maximum number of dashes the player is able to store. Although the game contains 101 moons (79 excluding challenges), this TAS collects none of them and flies through each of the three worlds in under seven minutes.
	$LF
]div
[h3 id=Techniques 
	"Techniques
	$LF
]h3
[ul 
	[li 
		"Super Dash
		$LF
		[ul 
			[li 
				"A dash followed immediately by a jump results in a jump with dash speed (96). Although this speed is gradually lost, the main benefit of this technique is that it eliminates the “charging” period before a regular dash. It also allows for greater distances to be covered.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"Hyper Dash
		$LF
		[ul 
			[li 
				"Dashing towards the ground and then jumping will result in a jump with diagonal dash speed (68), again gradually decreasing over time. While significantly slower than a super dash, a hyper dash replenishes the dash counter due to touching the ground before jumping, allowing the player to dash again.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"Boost Jump
		$LF
		[ul 
			[li 
				"Wall jumping while dashing upwards or diagonally upwards will allow a much greater amount of height to be gained, so Mario can cross large vertical areas quickly. If the wall jump is performed the frame after the dash, the charging period will be skipped.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"Dream Block Hyper Dash
		$LF
		[ul 
			[li 
				"When exiting a dream block, the game treats Mario as if he is on the ground for a few frames, this means he can jump, or more importantly perform a hyper dash allowing him to get up to full speed immediately. The same trick can be applied when exiting pipes from above.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"Minimap Warp
		$LF
		[ul 
			[li 
				"This mechanic finds its use in the less linear world 3, where a gate needs to be opened from one direction and entered from another. By entering and leaving a save room on the way to the gate’s button, it is possible to warp almost directly to the other side of the gate room once the button is pressed.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"Fast Fall
		$LF
		[ul 
			[li 
				"After jumping, if A is released and then held again, Mario will start his downwards acceleration more quickly.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"Speed Boost
		$LF
		[ul 
			[li 
				"If Mario runs on the ground for long enough, his speed will increase from 32 to 48. Only used in the first room.
				$LF
			]li
		]ul
	]li
]ul
[h3 id=Glitches 
	"Glitches
	$LF
]h3
[ul 
	[li 
		"Double Walljump (discovered by fella8)
		$LF
		[ul 
			[li 
				"If Mario is very close to a corner when jumping into a wall, he can walljump and have the game think he is still touching a wall afterwards. This allows for a second jump to be performed in mid-air.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"True Walljump (discovered by chbld)
		$LF
		[ul 
			[li 
				"Despite efforts to patch out SMB1-style walljumps, they still exist under specific circumstances. Mario needs close to maximum dash speed and perfect subpixel positioning. The benefits of this glitch are small, but they include being able to replenish Mario’s dash and enter horizontal pipes from their top half rather than the ground.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"Nightmare Clip (discovered by fella8)
		$LF
		[ul 
			[li 
				"The most major glitch in the TAS. When hitting the ground from inside a dream block, Mario can jump frame-perfectly to avoid death. From here, it is possible to dash again. Through this, it is possible to disrupt the intended flow of certain rooms in world 3 via repeated dashing to move horizontally in small increments.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"Spike Corner Clip
		$LF
		[ul 
			[li 
				"When falling from high enough above the large spikes, it is possible to position Mario to clip into the edge of them and land on the corner of the platform for one frame. This is very useful in replenishing a dash. The smaller spikes are much easier to clip into without coming from above, and Mario can freely stand on the edge without falling.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"Spike Dash Clip
		$LF
		[ul 
			[li 
				"Horizontal dashing will allow Mario to travel through the hitbox of large spikes without dying, so long as there is nothing directly above the spikes, though this grace period will end along with the dash.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"Speed Buffer (discovered by RiYAN)
		$LF
		[ul 
			[li 
				"When transitioning between loading zones, if either horizontal direction is held, Mario can get a small speed boost on the first frame of movement, allowing him to get up to full speed slightly sooner.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"On/Off Spike Ball Wall Jump
		$LF
		[ul 
			[li 
				"Mario can wall jump off of an on/off spike ball by approaching it from directly above or below with x-speed moving away from the spike and turning to face it right before reaching it. This tricks the game into thinking he is touching a wall.
				$LF
			]li
		]ul
	]li
]ul
[h3 id=Commentary 
	"Commentary
	$LF
]h3
[ul 
	[li 
		"World 1: There are some pretty big skips in this world.
		$LF
		[ul 
			[li 
				"The first thwomp room saves about a second by very precisely climbing up the spike chute rather than riding the thwomp.
				$LF
			]li
			[li 
				"In the big TNT room we clip through the spikes into the TNT by dashing at the right time, saving about 1.5 seconds.
				$LF
			]li
			[li 
				"Pretty much the entire room right after gets skipped by climbing up through the chute. I think this probably saves around 8 seconds since it's a pretty long room but I have nothing to compare to.
				$LF
			]li
			[li 
				"We can squeeze through the final spike balls in the ON/OFF thwomp room by performing a very precise super jump so we don't have to go back and hit the block.
				$LF
			]li
			[li 
				"The moon skip in the big shell room is a very tight gap that saves about 7 seconds by cutting out the first moon grab cutscene and textbox.
				$LF
			]li
			[li 
				"The big gap-crossing room has a final thwomp that gets skipped in the bottom right corner by using the momentum from the previous thwomp to make the jump up to the pipe.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"World 2
		$LF
		[ul 
			[li 
				"The propeller room can probably be improved by skipping the wall jump right before the second spike clip, but we couldn't get it to work. Also, using a wall kick to cross the spikes rather than replenishing the dash doesn't work, as we can't jump far enough with the ceiling in the way.
				$LF
			]li
			[li 
				"The intended solution in the room right after is to raise the platform between the spikes by lowering the one beneath the thwomp, but we can just skip this with a spike clip. The end of the room also gets skipped using another spike clip instead of climbing to the top.
				$LF
			]li
			[li 
				"In the final room we are supposed to ride the thwomp from the beginning to the end, going over the obstacles while it keeps moving, but it's pretty easy to just skip using it.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		"World 3
		$LF
		[ul 
			[li 
				"By loading the save room before pressing the switch, we can warp back very quickly after opening the gate.
				$LF
			]li
			[li 
				"Nightmare clip allows us to take the top path to the plus room, which is much quicker than the lower path.
				$LF
			]li
			[li 
				"It also helps to skip the intended route within many individual rooms, so I won't go through all of them, but overall this glitch helped to save about 25-30 seconds
				$LF
			]li
		]ul
	]li
]ul
[h3 id=RamValues 
	(__wikiLink|displaytext=RAM Values|href=/UserFiles/Info/638276533204396952)
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Address
			]th
			[th 
				"Size
			]th
			[th 
				"Type
			]th
			[th 
				"Note
			]th
			[th 
				"Description
			]th
		]tr
		[tr 
			[td 
				"0x0050
			]td
			[td 
				"1 byte
			]td
			[td 
				"Signed
			]td
			[td 
				"X-Speed
			]td
			[td 
				"The horizontal speed that Mario is trying to go. This does not account for any external speed changes (moving platforms, slopes, etc.)
			]td
		]tr
		[tr 
			[td 
				"0x03C0
			]td
			[td 
				"1 byte
			]td
			[td 
				"Hexadecimal
			]td
			[td 
				"X-Subspeed
			]td
			[td 
				"Essentially Mario’s acceleration value. When it is high, he will accelerate quicker, and when it is low, he will decelerate quicker.
			]td
		]tr
		[tr 
			[td 
				"0x0065
			]td
			[td 
				"1 byte
			]td
			[td 
				"Hexadecimal
			]td
			[td 
				"X-Page
			]td
			[td 
				"The horizontal screen page that Mario is currently on.
				$LF
			]td
		]tr
		[tr 
			[td 
				"0x007A
			]td
			[td 
				"1 byte
			]td
			[td 
				"Hexadecimal
			]td
			[td 
				"X-Pixel
			]td
			[td 
				"The horizontal pixel that Mario is at.
			]td
		]tr
		[tr 
			[td 
				"0x03C1
			]td
			[td 
				"1 byte
			]td
			[td 
				"Hexadecimal
			]td
			[td 
				"X-Subpixel
			]td
			[td 
				"The horizontal subpixel that Mario is at. Though there is no visible difference, a higher value means further to the right.
			]td
		]tr
		[tr 
			[td 
				"0x008F
			]td
			[td 
				"1 byte
			]td
			[td 
				"Signed
			]td
			[td 
				"Y-Speed
			]td
			[td 
				"The vertical speed that Mario is trying to go, positive down.
			]td
		]tr
		[tr 
			[td 
				"0x03EB
			]td
			[td 
				"1 byte
			]td
			[td 
				"Hexadecimal
			]td
			[td 
				"Y-Subspeed
			]td
			[td 
				"Mario’s vertical acceleration.
			]td
		]tr
		[tr 
			[td 
				"0x00B9
			]td
			[td 
				"1 byte
			]td
			[td 
				"Hexadecimal
			]td
			[td 
				"Y-Pixel
			]td
			[td 
				"The vertical pixel that Mario is at. Higher value = lower on the screen.
			]td
		]tr
		[tr 
			[td 
				"0x03D6
			]td
			[td 
				"1 byte
			]td
			[td 
				"Hexadecimal
			]td
			[td 
				"Y-Subpixel
			]td
			[td 
				"Mario’s vertical subpixel
			]td
		]tr
		[tr 
			[td 
				"0x000E
			]td
			[td 
				"1 byte
			]td
			[td 
				"Hexadecimal
			]td
			[td 
				"Player State
			]td
			[td 
				"If this value is equal to 8, the player can control Mario.
			]td
		]tr
		[tr 
			[td 
				"0x0020
			]td
			[td 
				"1 byte
			]td
			[td 
				"Hexadecimal
			]td
			[td 
				"Airborne State
			]td
			[td 
				"0 = standing on ground, 1 = jumping, 2 = falling
			]td
		]tr
		[tr 
			[td 
				"0x070C
			]td
			[td 
				"1 byte
			]td
			[td 
				"Hexadecimal
			]td
			[td 
				"Grounded Status
			]td
			[td 
				"A moon will not be counted until Mario is on solid ground. If this is equal to 1, Mario can collect a moon.
			]td
		]tr
		[tr 
			[td 
				"0x079C
			]td
			[td 
				"1 byte
			]td
			[td 
				"Unsigned
			]td
			[td 
				"Wall Jump Leniency Timer
			]td
			[td 
				"If the timer is at 2 or higher, Mario can wall jump.
			]td
		]tr
		[tr 
			[td 
				"0x079D
			]td
			[td 
				"1 byte
			]td
			[td 
				"Unsigned
			]td
			[td 
				"Wall Kick Timer
			]td
			[td 
				"After a wall kick, Mario will be forced away from the wall until this timer is complete
			]td
		]tr
		[tr 
			[td 
				"0x0545
			]td
			[td 
				"1 byte
			]td
			[td 
				"Unsigned
			]td
			[td 
				"Dash Timer
			]td
			[td 
				"A dash will last until this timer is complete
			]td
		]tr
		[tr 
			[td 
				"0x0546
			]td
			[td 
				"1 byte
			]td
			[td 
				"Unsigned
			]td
			[td 
				"Dash Ready Timer
			]td
			[td 
				"When a dash is initiated, the game will freeze until this timer is complete.
			]td
		]tr
		[tr 
			[td 
				"0x070F
			]td
			[td 
				"1 byte
			]td
			[td 
				"Hexadecimal
			]td
			[td 
				"Dream Block Status
			]td
			[td 
				"7D = inside dream block, 7E = exiting dream block
			]td
		]tr
		[tr 
			[td 
				"0x052B
			]td
			[td 
				"1 byte
			]td
			[td 
				"Signed
			]td
			[td 
				"Speed Boost Bonus
			]td
			[td 
				"If this value is 16, then speed boost is active
			]td
		]tr
		[tr 
			[td 
				"0x052C
			]td
			[td 
				"1 byte
			]td
			[td 
				"Unsigned
			]td
			[td 
				"Speed Boost Timer
			]td
			[td 
				"In order for the speed boost to activate, this timer must count up to 96.
			]td
		]tr
	]tbody
]table
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/Samsara 
		"Samsara
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Samsara 
		"Samsara
	]a
	": File replaced with an identical version with a more accurate rerecord count, and then replaced again with a 7 frame improvement.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Samsara 
		"Samsara
	]a
	": Yup, this is incredible. The hack itself is insane enough, but TAS precision pushes it to the same level as actual Celeste TASes, which honestly is one of the biggest compliments I think any run can get. Accepting!
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/fsvgm777 
		"fsvgm777
	]a
	": Processing!
]div
