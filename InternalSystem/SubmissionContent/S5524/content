9
[div class=p 
	"This TAS is submitted in honor of the 25th anniversary of Kid Chameleon, a platformer released for the Sega Genesis in 1992. The story is that a new virtual reality arcade game comes to town, equipped with a sentient AI which captures all the kids who couldn't beat it. The protagonist, some badass with a leather jacket, is the only kid in town who is "too tough to beat", and sets out to free the kids by beating the game. Kid Chameleon is infamous for it's difficulty, sheer length, and lack of a save feature. To quote an advertisement, "There's over 100 rounds to slam your head against, 1800 screens with eye-popping graphics, and so many secret passages you'll be whacking your brain to find 'em."
	$LF
]div
[div class=p 
	(youtube|v=YDH9AA_whbA)
	$LF
]div
[div class=p 
	"This TAS completes the game using what is known as the "Plethora Warp", which as the name suggests, warps you straight to the final boss. It is technically activated by holding Down + B at pixel coordinates (2515,95) in Blue Lake Woods II.
	$LF
]div
[div class=p 
	[b 
		"Objectives
	]b
	$LF
]div
[ul 
	[li 
		"Uses warps
		$LF
	]li
	[li 
		"Genre: Platformer
		$LF
	]li
]ul
[div class=p 
	[b 
		"Air Drag
	]b
	" (Speeds are measured in pixels:subpixels)
	$LF
	"An air drag factor of 0:1 per frame is present regardless of walking off an edge, jump, or bounce off enemies. For Kid, if your speed goes below 2:95, it will instantly be set to 2:160. This is the reason you often see Kid turn around in midair while jumping in the TAS. Once his speed reaches 2:138, we turn around for one frame to instantly set our speed to 2:95, which becomes 2:160 the next, allowing for a much higher average air speed.
	$LF
]div
[div class=p 
	[b 
		"Airwalking
	]b
	" is performed by repeatedly crouching and standing every other frame. This saves the horizontal speed and vertical position of both you and the underlying surface from when you entered the airwalking state. Breaking the crouching/standing chain restores the aforementioned properties to the player.
	$LF
]div
[div class=p 
	[b 
		"Blue Lake Woods I
	]b
	$LF
]div
[div class=p 
	"At the very beginning of the level, we collect a diamond, which reduces our score by 5000 points, something that will be very important (and referenced again) at the end of Blue Lake Woods 2.
	$LF
]div
[div class=p 
	"With the exception of collecting the diamond at the beginning of the level, the rest of BLW1 plays out the exact same as it does in the 12:47 TAS, with a 2-frame timesave. One frame is saved at the level's second upwards incline, and the other is saved through better momentum preservation near the end of the level.
	$LF
]div
[div class=p 
	[b 
		"Blue Lake Woods II
	]b
	$LF
]div
[div class=p 
	"The very start of this level is done a bit differently. Instead of triggering the cannon blocks sequentially, the second block is revealed, followed by first, and both are triggered at once. While this saves one whole jump, your horizontal movement is delayed for a few frames longer than it would have otherwise. As a result, this deceptively only saves 2 frames lmao
	$LF
]div
[div class=p 
	"The section from the rock block wall to the Red Stealth helmet is done identically to the most recent TAS.
	$LF
]div
[div class=p 
	"Once attaining Red Stealth, it is very important we have 2 HP for the final boss. Take a look at the second to last tank. In RTA runs, it's normally impossible to bounce from him to the top of the next incline. But thanks to our knowledge of air drag reduction, bouncing from the tank to the top of the incline is barely possible.
	$LF
]div
[div class=p 
	"Our total score at this point is
	$LF
	"10000 + 2440 + 10000 + 25000 + 2460 = 49900.
	$LF
	"Every 50000 points, you are awarded an extra life on the score tally screen, which plays an extra unnecessary 3-second animation. In both Blue Lake Woods 1 & 2, we purposely fail to get the "No Hit" and "No Prize" Bonuses, each worth 5000 points. Notice how we barely miss getting this extra life due to the suppression of these bonuses.
	$LF
]div
[div class=p 
	[b 
		"Plethora (Heady Metal)
	]b
	$LF
]div
[div class=p 
	"Airwalking off a vertically-moving platform will place you at its current Y-coordinate when you break the ducking chain. The first instance of this is purely for entertainment, but the second is unexpectedly advantageous. This second platform I walk off rises up infinitely once you touch it. However, it will despawn once it is a certain point off-screen. By manipulating the height at which we walk off this platform, we also manipulate its despawn point, and thus the point we instantly teleport to. This point is perfectly calculated to inflict the exact number of hits we need on Heady Metal so the rest of the fight goes smoothly.
	$LF
]div
[div class=p 
	"So why couldn't you just jump up to him? Why is the whole fancy teleporting thing necessary? Whether Kid is above or below the boss's midpoint determines whether Heady Metal will move up or down. When jumping up to him, there is a very small period of time during which Heady Metal will move up before you even get a chance to inflict a hit. Simply teleporting up to him effectively minimizes this.
	$LF
]div
[div class=p 
	"I experimented with like 10 different methods for beating the final boss, and while there would have been a different method when going for RTA time, the focus on TAS time presented a couple complications:
	$LF
]div
[div class=p 
	"The fastest way to actually defeat Heady Metal is to do two passes on him: both passes wedging yourself between the lower then higher middle ceilings to inflict a fast amount of hits. However this won't work when using TAS time, as we must get over to the flag effectively, and the lower ceiling (as well as some other obstacles) are inhibiting us from getting over there quickly. For this reason, we only use a lower ceiling on our second pass, coupled with defeating Heady Metal even further from the flag than normal.
	$LF
]div
[div class=p 
	"Notice how the position we defeat Plethora in launches us across the level to the flag, effectively avoiding all the obstacles along the way. Since the last input is made when 22 of 37 hits have been inflicted on the boss, another difficult challenge was attaining the correct launch speed to the flag. Speed increases exponentially with every bounce, so our leftwards speed must be super tiny on that 22nd hit such that our speed is perfectly set 15 hits later.
	$LF
]div
[div class=p 
	[b 
		"Special Thanks
	]b
	$LF
]div
[div class=p 
	"I'd like to thank TheRandomPie_IV and Truncated for their enormous help in teaching me about TAS tools and the movement intricacies in this game. This was the first TAS project I started work on, so the help was greatly appreciated. I am also citing RandomPie as a coauthor, as he worked on the majority of BLW1 and first half of BLW2, while I did the rest of BLW2 and Plethora.
	$LF
]div
[div class=p 
	[b 
		"Suggested screenshot
	]b
	" Frame 2801 or 2858
	$LF
]div
[div class=p 
	[img class=embed src=http://i.imgur.com/xRRxSvR.png 
	]img
	$LF
	[img class=embed src=http://i.imgur.com/9qH1iUe.png 
	]img
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/Fog 
		"Fog
	]a
	": Judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Fog 
		"Fog
	]a
	": This run is both technically sound and entertaining, making use of the spare time to show off tricks and other neat things.
	$LF
]div
[div class=p 
	"However, the main problem with this submission is the goal, and how it gets there. As noted in the submission notes, the run uses a trick called the 'Plethora Warp'. This warp utilizes a specific button combination in a specific location in order to go straight to the final battle of the game. On first glance, this appears to be something akin to a hidden developer debug or cheat code, as it's not documented anywhere within the game or it's instruction manuals. This would clearly be against the 
	[a class=intlink href=/MovieRules#CheatsDebuggingCodesAndArcadeContinuesAreNotAllowed 
		"movie rules which bans cheats and debug codes
	]a
	". But let's dig a bit further into this, shall we?
	$LF
]div
[div class=p 
	"According to both the 
	[a class=extlink href=http://www.speedrun.com/kidchameleon/full_game#Any rel=nofollow 
		"Speedrun.com leaderboards for Kid Chameleon any% category
	]a
	" and the 
	[a class=extlink href=http://kidchameleon.wikia.com/wiki/Plethora_cheat rel=nofollow 
		"Kid Chameleon Wikia page
	]a
	" about the Plethora Warp, they both define the warp as a cheat. The Wikia page provides more details about how the cheat works, as well as possible side effects of using said warp. Performing the actions acts as the equivalent of touching the flag in the level 'The Final Marathon', and provides the same bonuses as if you had actually completed that level. Restarting the round immediately after doing the inputs will warp you to the beginning of 'The Final Marathon' level. There is even a quote about how the cheat was added into the game, which reads as follows:
	$LF
]div
[div class=p 
	""The cheat as it currently stands is actually the result of a communication error between programmers. During development, programmers Steve Woita and BichCau Le added a cheat code that would allow players to go straight to the credits screen. Designer Hoyt Ng was unaware of this cheat when he added another level, changing the level counter and making the code activate Plethora's stage instead of the end credits."
	$LF
]div
[div class=p 
	"Now, let's explain how this particular warp is different from other runs which use warps. For most games with warps, they are usually clearly defined as such in some form either within the game or documents for the game. Examples of this include the various warp methods in various Mario games and the level warps in Super Monkey Ball. Other kinds of warps exist through the use of various glitches which were not intended by the developers of the game, most famous of these being the wrong warp glitch in Ocarina of Time. What makes this particular warp different from those I mentioned above is the fact that there is no regular documentation or actual intention for the warp, and is not a warp which is done by abusing a glitch in the game's programming. 
	$LF
]div
[div class=p 
	"FatRatKnight also 
	[a class=intlink href=/Forum/P/453455#453455 
		"made a post in the submission thread
	]a
	" providing some precedent where warps were used in previous submissions of other games, and helps bring the point home about the problem with this submission. The first example of Claymates uses warps which are made known to the player after finding the messages, which is acceptable on TASVideos. The second example of Crystalis, although originally published on the site and then obsoleted, made use of a second controller to warp the player. This is clearly an example of a debug code or cheat left in the game by the developers, not intended to be used in regular gameplay. Another example which was brought up in the submission topic was the GT code of Super Metroid, which provides extra items, and can only be done in specific places. This code is the most similar to the Plethora Warp, and is not allowed (although we do have a run published which uses it to help achieve ACE).
	$LF
]div
[div class=p 
	"With all of that being said above, it seems like a rather clear cut case of a debug code or cheat, and we can't accept a run like this.
	$LF
]div
[div class=p 
	"Rejecting for use of a debug/cheat code.
]div
