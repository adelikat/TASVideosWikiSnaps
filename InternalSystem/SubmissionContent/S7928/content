10
[div class=p 
	"Karoshi: Suicide Salaryman is a Flash game puzzle-platformer released in 2008. Contrary to most other games of similar genre where you have to reach an end point, the objective in each level is to kill the salaryman through whatever means possible. This game directly references the Japanese term Karoshi, which translates to "death by overworking." This tool-assisted run completes the game as fast as possible while exploiting a few oversights with the game's mechanics.
	$LF
]div
[h4 id=Emulation 
	" Emulation
	$LF
]h4
[ul 
	[li 
		" Operating system: Ubuntu 22.04.1
		$LF
	]li
	[li 
		" Emulators: libTAS v1.4.4 with ruffle-nightly-2022_12_21
		$LF
	]li
	[li 
		" MD5 hash: a775215e7ef22205ad1475b8e3521661
		$LF
	]li
	[li 
		" FPS: 75 (why this high for this old of a game)
		$LF
	]li
	[li 
		" The game is site locked, so add 
		[code 
			"--spoof-url 
			[a href=https://cache.armorgames.com rel=noopener external nofollow 
				"https://cache.armorgames.com
			]a
		]code
		" in the command line arguments.
		$LF
	]li
]ul
[h4 id=Objective 
	" Objective
	$LF
]h4
[ul 
	[li 
		" Complete all of the main levels as fast as possible
		$LF
		[ul 
			[li 
				" A post-credits level is ignored. It simply requires walking towards spikes to the right, and completing it sends you to the first main level.
				$LF
			]li
		]ul
	]li
	[li 
		" Exploits oversights to save time
		$LF
	]li
	[li 
		" Dies to make progress ðŸ˜ƒ
		$LF
	]li
]ul
[h2 id=Comments 
	" Comments
	$LF
]h2
[div class=p 
	"Credit goes to the RTA runners of this game for discovering most of the oversights in this game. Here they are, listed (names are unofficial and made by me):
	$LF
]div
[ul 
	[li 
		" 
		[b 
			"Spring Assist:
		]b
		" You can quickly kill the salaryman with his own gun by shooting it towards a bullet spring and jumping up into the bullet. The salaryman runs slower than a bullet, but jumps faster than one.
		$LF
	]li
	[li 
		" 
		[b 
			"Explosive Kill:
		]b
		" Being nearby a stationary explosive box when it explodes only repels the salaryman. However, being near it when it explodes while falling kills the salaryman, likely because the game thinks he's being crushed by it's enlarged hitbox.
		$LF
	]li
	[li 
		" 
		[b 
			"Lever Pull:
		]b
		" Electricity levers are supposed to only switch based on which direction the salaryman moves through it. However, due to the game's extremely high quality, you can keep the lever switched on by moving away from it after the frame you move towards it.
		$LF
	]li
	[li 
		" 
		[b 
			"Safe-bonking:
		]b
		" The salaryman can push a box slightly from underneath while it's hanging over a ledge, allowing for box fall kills. This is only done with safes in the run, since explosive boxes are in levels with guns which allow for explosion kills.
		$LF
	]li
	[li 
		" 
		[b 
			"Wood Jump:
		]b
		" Wood blocks temporarily have a larger collidable hitbox when destroyed, which lets the salaryman jump on them.
		$LF
	]li
]ul
[h4 id=LevelSpecificCommentary 
	" Level-specific commentary
	$LF
]h4
[div class=p 
	"Note that the only indication of what level you're on is the life count at the bottom. This is how I will refer to specific levels. Additionally, I won't be writing commentary for most levels where an aforementioned technique is performed or a faster route is used. I will leave the intended route of those levels as an exercise to the reader
	$LF
]div
[ul 
	[li 
		" 
		[b 
			"36 lives left:
		]b
		" To save time, the salaryman pushes the safe and jumps under it after exploding the box underneath it. You can see that the salaryman jumps above the underside of the safe and somehow moves under it despite him and the safe both not moving downwards. I don't know how this works out, but it reduces time so whatever.
		$LF
	]li
	[li 
		" 
		[b 
			"26 lives left:
		]b
		" This is the only level where a safe bonk occurs when the safe is on the block above the salaryman, making it look as if he suddenly explodes when running under the safe.
		$LF
	]li
	[li 
		" 
		[b 
			"23 lives left:
		]b
		" A strange technique is performed here. The salaryman jumps behind the safe and shoots it, sending it towards a ledge. He also pushes the safe for one frame which temporarily freezes the knockback force from the bullet, giving him time to jump and land on the safe as it falls, counting as a kill. This is certainly the most technical trick in the run.
		$LF
	]li
	[li 
		" 
		[b 
			"14 lives left:
		]b
		" Weirdly, a lever pull is impossible in this level, so the intended route must be used. Perhaps the developer found out about it after making other lever levels and patched it in this one specific level, which is the last level to have a lever pull that would save time.
		$LF
	]li
	[li 
		" 
		[b 
			"13 lives left:
		]b
		" The level must be reset each time a button is pressed to be teleported to the next area. (I'm pretty sure Loss was hidden in this level.)
		$LF
	]li
	[li 
		" 
		[b 
			"11 lives left:
		]b
		" The salaryman's jump power increases after every jump up to a specific amount. So, jumps are spammed under a low roof to gain jump power faster.
		$LF
	]li
	[li 
		" 
		[b 
			"10 lives left:
		]b
		" Beyond the red square, the salaryman cannot move for too long in a row, otherwise a wall appears and the walk must be retried.
		$LF
	]li
	[li 
		" 
		[b 
			"8 lives left:
		]b
		" To go faster, two wood blocks below the highest explosive box are shot to prepare for an explosive kill. However, the large hitbox of the destroyed wooden blocks prevent the salaryman from being close enough to the explosive box for a kill as it falls. This problem is solved by firing an extra shot at a wood block to the right. This makes the explosive box in question temporarily stop falling from landing on the third destroyed block's bigger hitbox, giving time for the other destroyed wood blocks to disappear, creating an opportunity for an explosion kill.
		$LF
	]li
	[li 
		" 
		[b 
			"7 lives left:
		]b
		" Pressing K summons a safe from the sky.
		$LF
	]li
	[li 
		" 
		[b 
			"6 lives left:
		]b
		" Doing nothing is the solution to the level.
		$LF
	]li
	[li 
		" 
		[b 
			"5 lives left:
		]b
		" The left and right arrow keys swap functions.
		$LF
	]li
	[li 
		" 
		[b 
			"4 lives left:
		]b
		" Clicking creates a block at that location. Blocks are created above the salaryman so that he can land sooner, allowing more jumps with high initial speed.
		$LF
	]li
	[li 
		" 
		[b 
			"3 lives left:
		]b
		" Hovering the mouse anywhere creates an invisible block at that location. Similar technique from 4 lives left is used.
		$LF
	]li
	[li 
		" 
		[b 
			"2 lives left:
		]b
		" Clicking the Return to menu button kills the salaryman. The click is the final input in the movie.
		$LF
	]li
	[li 
		" 
		[b 
			"1 life left:
		]b
		" The last main level of this game is a mini boss fight. The girl above creates hearts that give the salaryman more lives, which obviously isn't wanted in this game. The method of dying in the level is to get crushed by the pig square, which jumps up and falls down at a random location. This needed slight RNG manipulation so that the pig landed on the salaryman before he hits any hearts while staying still, and luckily I only needed to perform two jumps at specific times moments earlier to have sufficient RNG.
		$LF
	]li
]ul
[div class=p 
	"Speaking of RNG, this game is difficult to fully optimize.
	$LF
]div
[h2 id=MoreOptimization 
	" More optimization?
	$LF
]h2
[div class=p 
	"A faster safe crush in 36 lives left that was done in 30 FPS is likely possible, I just couldn't replicate it with the correct FPS.
	$LF
]div
[div class=p 
	"Karoshi also has subtle RNG involved. The time it takes for the next level to start after dying is slightly randomized each time, and RNG is influenced by the salaryman's movements. So, hypothetically, you could create an even better, slightly faster run than this by trying various actions at random times to minimize the waiting time between levels. Which would be highly time consuming.
	$LF
]div
[div class=p 
	[del 
		"This TAS was also done on 30 FPS, and it would probably be slightly faster to use 75 FPS instead. I completely forgot about frame rate because almost every old flash game runs at 30 frames per second.
	]del
	" It is indeed slightly faster.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/Info Teddy 
		"Info Teddy
	]a
	": File replaced with a movie with the 
	[a class=intlink href=/UserFiles/Info/638087360879530605 
		"correct framerate
	]a
	" (75 FPS).
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/Samsara 
		"Samsara
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Samsara 
		"Samsara
	]a
	": YouTube's might not like this one too much, but I do! There were quite a number of inventive solutions displayed here which made it a very fun watch, and it all looks optimal to me. Accepting!
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/despoa 
		"despoa
	]a
	": Processing...
]div
