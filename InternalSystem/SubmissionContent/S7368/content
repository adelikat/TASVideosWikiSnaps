5
[div class=p 
	"First Flash submission! Meat Boy is a classic game that spawned a whole series of hardcore 2D platformers. In this run I complete the lowest amount of required levels to reach the credits.
	$LF
]div
[h3 id=GameObjectives 
	" Game objectives
	$LF
]h3
[ul 
	[li 
		" Emulator used: Ruffle (nightly build from 26/01/2022, though newer should work fine)
		$LF
	]li
	[li 
		" Aims for fastest completion
		$LF
	]li
]ul
[h3 id=Comments 
	" Comments
	$LF
]h3
[div class=p 
	"This TAS was made by runnning 
	[a href=https://ruffle.rs/ rel=noopener external nofollow 
		"Ruffle
	]a
	", a flash emulator that runs well in Linux, in combination with libTAS. Since a couple months ago, this is the go-to way to TAS Flash games.
	$LF
]div
[div class=p 
	"Since the game does not require all levels to be completed and levels unlock a couple at a time, I can simply quit to menu to skip slower levels and only do the minimum required to reach the credits. This also allows me to skip all the cutscenes that usually play at the beginning of worlds. In the run I follow the RTA route, detailed 
	[a href=https://www.speedrun.com/meatboy/guide/fdaz7 rel=noopener external nofollow 
		"here
	]a
	".
	$LF
]div
[div class=p 
	"At the beginning of each level Meatboy has a couple frames of invulnerability, which I use in level 7 of chapter 2 to run through a fire straight to Bandage Girl and skip all the platforming usually necessary. I also abuse this mechanic in a couple levels in chapter 3 to jump off lava.
	$LF
]div
[div class=p 
	"Cycle-based obstacles appear to have some kind of RNG to them, randomly activating earlier or later from the moment Meatboy appears in the level. These cycles actually changed in libTAS 1.4.3, causing me to have to redo some levels and some of them actually being slower because of it. The youtube video linked is actually slightly different from the movie file submitted, as that encode was done on 1.4.2 with different RNG. Overall compared to the previous encode, this movie loses a couple frames due to this RNG change.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/slamo 
		"slamo
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/slamo 
		"slamo
	]a
	": It's the first Ruffle submission! The staff had a brief discussion and the decision to start accepting these was not controversial. They sync pretty easily and they use libTAS, an emulator we're already familiar with, so why not? We have already been dealing with nightly builds of Dolphin, so using nightly builds of Ruffle is not that much of a stretch (and they all seem pretty stable anyway). We have come up with some guidelines 
	(__wikiLink|displaytext=here|href=/EmulatorResources/Ruffle)
	".
	$LF
]div
[div class=p 
	"Great choice for the first game as well, the optimization looks fine and it beats all known records. Accepting!
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/fsvgm777 
		"fsvgm777
	]a
	": Processing.
]div
