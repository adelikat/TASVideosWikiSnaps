5
[h2 id=UzeboxJoyriderin01:40.07byMothrayas 
	" Uzebox Joyrider in 01:40.07 by 
	[a class=intlink href=/Users/Profile/Mothrayas 
		"Mothrayas
	]a
	$LF
]h2
[div class=p 
	(youtube|v=dQ65yk2SVgw)
	$LF
]div
[h3 id=Gameobjectives 
	" Game objectives
	$LF
]h3
[ul 
	[li 
		" Emulator used: BizHawk 2.0.1 git interim (syncs on BizHawk 2.1.0)
		$LF
	]li
	[li 
		" Clear Story Mode
		$LF
	]li
]ul
[h2 id=Aboutthesystemandgame 
	" About the system and game
	$LF
]h2
[div class=p 
	"The Uzebox has a 
	[a class=extlink href=http://uzebox.org/wiki/index.php?title=Main_Page rel=nofollow 
		"wiki
	]a
	", describing what it is:
	$LF
]div
[div class=p 
	[em 
		""The Uzebox is a retro-minimalist homebrew game console. It is based on an AVR 8-bit general purpose microcontroller made by Atmel. The particularity of the system is that it's based on an interrupt driven kernel and has no frame buffer. Functions such as video sync generation, tile rendering and music mixing is done realtime by a background task so games can easily be developed in C. The design goal was to be as simple as possible yet have good enough sound and graphics while leaving enough resources to implement interesting games. Emphasis was put on making it easy and fun to assemble and program for any hobbyists. The final design contains only two chips: an ATmega644 and an AD725 RGB-to-NTSC converter."
	]em
	$LF
]div
[div class=p 
	"The Uzebox wiki also has a 
	[a class=extlink href=http://uzebox.org/wiki/index.php?title=Joyrider rel=nofollow 
		"page
	]a
	" for this game.
	$LF
]div
[div class=p 
	"Joyrider is a topdown driving game for the Uzebox, in the style of the classic Grand Theft Auto and Driver games. It was created by James Howard (jhhoward) for the Uzebox Coding Competition 2014, where it won 1st place.
	$LF
]div
[div class=p 
	"Like the classic GTAs and Drivers, it features a city to drive around in, with several things to do; free roaming, doing missions or participating in police chases for instance. The game has a story mode with three missions, and arcade/multiplayer modes with other activities.
	$LF
]div
[div class=p 
	"This TAS goes through the story mode missions.
	$LF
]div
[h2 id=Runnotes 
	" Run notes
	$LF
]h2
[h3 id=Generaldrivingnotes 
	" General driving notes
	$LF
]h3
[ul 
	[li 
		" The game is limited to 16 driving angles. Because of this, it's not always possible to make perfect beelines towards the next turn, although I still aim to go for the straightest and shortest lines possible. The car accelerates relatively quickly, making this an efficient method of driving.
		$LF
	]li
]ul
[ul 
	[li 
		" When an objective building is reached, the car automatically stops, and usually a brief cutscene plays with the player getting out of the car, entering the building, and returning to the car. (Sometimes other characters are involved as well). To save time, it's usually best to part as close to the door as possible, so that less time is spent on the walking cutscenes.
		$LF
	]li
]ul
[ul 
	[li 
		" Car collisions generally don't do 
		[em 
			"much
		]em
		" to car velocity, but they do mess things up just enough that there's a slight deceleration/speed loss; therefore, car collisions are avoided throughout the run.
		$LF
	]li
]ul
[ul 
	[li 
		" Running over pedestrians or colliding with cars randomly gets you a wanted level. With some luck manipulation, this is pretty easily avoidable. 
		$LF
	]li
]ul
[h3 id=Mission1-BankJob 
	" Mission 1 - Bank Job
	$LF
]h3
[ul 
	[li 
		" First objective is to pick up a crew of 3 people to do the bank job with. The parking layout makes it easy to get the car right next to the door; this easily saves up to a second compared to going directly for the marked objective point.
		$LF
	]li
]ul
[ul 
	[li 
		" Getting a good parking point for the bank was significantly harder, as there is not as much room, and the car also needs to not be turned so much that it can't easily exit the front of the building, and needs to be able to go south fast enough for the next objective.
		$LF
	]li
]ul
[ul 
	[li 
		" At the safehouse, I drive past the objective point on the right side, in order to get closer to the door. This again saves around a second (possibly even more) compared to parking on the objective point itself. Mission complete!
		$LF
	]li
]ul
[h3 id=Mission2-Collector 
	" Mission 2 - Collector
	$LF
]h3
[ul 
	[li 
		" The building where the payment must be collected has another annnoyingly placed objective point. I can't really reach the door without going in a full 180 degree spin (which would lose a lot of time for obvious reasons), so I end up driving just south of it and then coming inside from there. This is still a fair distance away from the door, but at least no horizontal walking is required, and the car can still easily get away after this.
		$LF
	]li
]ul
[ul 
	[li 
		" The next building is similarly laid out like the first, but because I enter from a southwards angle this time it is a lot more viable to go around the objective point in order to park right in front of the door.
		$LF
	]li
]ul
[ul 
	[li 
		" The second collectee goes to his car and escapes, and has to be chased. This car goes on a predetermined path, and the fastest way to get it to reach its destination is just to let it do its thing and not have anything touch it or get in its way. Since I have nothing else to do, I play around a bit, going in different directions (close to a mission failure by letting the car "escape"), driving in front of the car rather than properly chasing it, or driving in a circle, and so on.
		$LF
	]li
]ul
[ul 
	[li 
		" When the collectee enters his destination building, an objective point appears. Since I had time to reach here in advance, I set up such that I'm on the very top right point of the objective point, to minimize driving time for the next target and minimize the distance to the door for cutscene speed.
		$LF
	]li
]ul
[ul 
	[li 
		" Since the next missions relocates the player elsewhere, I didn't need to care about how to leave the car in front of the boss' building; just making sure to reach it and enter the door as fast as possible.
		$LF
	]li
]ul
[h3 id=Mission3-StreetRace 
	" Mission 3 - Street Race
	$LF
]h3
[ul 
	[li 
		" A simple mission; just follow directions until a lap is completed, and do so before the green car does.
		$LF
	]li
]ul
[ul 
	[li 
		" I steer a bit at the beginning to avoid having a car bump into me shortly into the race.
		$LF
	]li
]ul
[ul 
	[li 
		" Since I still need to advance the "continue" menu item after the mission ends, I don't have any end-of-input shenanigans to do here; just end the race as soon as possible so the continue prompt can be pressed as soon as possible. This brings the game back to the main menu, ending the run.
		$LF
	]li
]ul
[h2 id=Finalnotes 
	" Final notes
	$LF
]h2
[div class=p 
	"Thanks to natt for screwing around with an UZEM core in BizHawk, resulting in this.
	$LF
]div
[div class=p 
	"Screenshot: 
	[img class=embed src=http://i.imgur.com/aaFBJYo.png 
	]img
	$LF
]div
[div class=p 
	"Thanks for watching!
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/Fog 
		"Fog
	]a
	": Judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Fog 
		"Fog
	]a
	": A poor man's GTA, the run was pretty boring and not really entertaining. The technical qualities are sound, as usual.
	$LF
]div
[div class=p 
	"Accepting for Vault.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/fsvgm777 
		"fsvgm777
	]a
	": Processing.
]div
