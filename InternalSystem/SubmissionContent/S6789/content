9
[h2 id=NotAboutTheSubmission 
	" Not About the Submission
	$LF
]h2
[div class=p 
	"At the time I am submitting this run, there are protests/uprisings of various levels of peaceability all across the United States.
	$LF
]div
[div class=p 
	"The proximal cause of this is the murder of George Floyd (an unarmed black man) by four officers of the Minneapolis Police Department, but this is not an isolated incident. Although statistics show strong evidence that dark-skinned citizens are targeted by police violence a disproportionate amount of the time, the increased militarization of civilian police authorities, along with the steady decrease in police accountability to the citizens they have sworn to protect, is an issue that affects more than just black America. 
	$LF
]div
[div class=p 
	"Homeless people, trans people, sex workers, the poor, and all people with darker natural skin colors are classes of people that face a heightened risk of being brutalized or murdered by police while simply going about their daily business and committing no crime.
	$LF
]div
[div class=p 
	"Police have responded to peaceable protests of their excessive use of force by committing literal war crimes against the protesters, driving their cars into peaceful crowds, and refusing to arrest other people who attempt to murder these protesters.
	$LF
]div
[div class=p 
	"In the 25 days since the inciting incident, police nationwide have killed approximately 200 more people. In the last two weeks, six black men have been found hanging in trees in public, and in all six cases, police summarily ruled the case a suicide and refused to investigate. Additionally, in multiple cities, large swathes of police have resigned, or gone on strike, in response to even a single officer being held accountable for disgusting and inappropriate use of violence against unarmed civilians.
	$LF
]div
[div class=p 
	"Massive reforms are necessary, and they cannot happen soon enough.
	$LF
]div
[div class=p 
	"In issues like this, refusal to speak is implicit support of the status quo. Avoiding comment is equivalent to saying "nothing about this needs to change."
	$LF
]div
[div class=p 
	"There is not much that I have the power to do regarding these issues, but I do have the power to say: Black Lives Matter, and Silence is Violence.
	$LF
]div
[h2 id=AboutTheSubmission 
	" About the Submission
	$LF
]h2
[div class=p 
	"Emulator used: BizHawk 2.4 modified to load external tools, syncs on BizHawk 2.4.1
	$LF
]div
[h2 id=Categories 
	" Categories
	$LF
]h2
[ul 
	[li 
		" Aims for fastest time
		$LF
	]li
	[li 
		" Abuses programming errors
		$LF
	]li
	[li 
		" Takes damage to save time
		$LF
	]li
	[li 
		" Colors a DNA
		$LF
	]li
	[li 
		" Staves off alien invasion using only the power of multi-layered time paradoxes
		$LF
	]li
	[li 
		" Jumps through a bunch of arbitrarily placed hoops
		$LF
	]li
	[li 
		" Gains advantage through the dark power of Dolphin sacrifice
		$LF
	]li
	[li 
		" Reuses existing input
		$LF
	]li
]ul
[h2 id=AboutTheGame 
	" About the Game
	$LF
]h2
[div class=p 
	"Imagine trying to win a Formula 1 race with a steering wheel that only turns in 45 degree increments, and refuses to be turned more than 8 times in a second. Further, imagine that, even though your steering wheel locks in the direction change instantly, the wheels take a sixth of a second to complete that 45 degree. Further, imagine that your vehicle has no brakes. 
	$LF
]div
[div class=p 
	"That's kind of what it's like to speedrun an Ecco game.
	$LF
]div
[div class=p 
	"In addition, the collision code was written by advanced analytic geometers who have ancient arcane insights into the calculations required to use almost arbitrary polygons as bounding boxes.
	$LF
]div
[div class=p 
	"The good news is, the coders cut some corners here and there, resulting in a huge variety of bizarre flaws in game logic for a TASer to exploit.
	$LF
]div
[h2 id=AboutTheMovie 
	" About the Movie
	$LF
]h2
[div class=p 
	"This movie completes the game on hard mode. Hard Mode differs from easy mode in that there are two additional autoscrollers, bosses have more HP, the collection quests are longer, and several levels have additional barriers that slow you down.
	$LF
]div
[div class=p 
	"Oh also there’s one added level that’s not an autoscroller, but instead requires navigating lots tricky turns in extremely narrow quarters.
	$LF
]div
[div class=p 
	"This movie uses the Japanese version of the game, because I heard a rumor that the Japanese version has less lag on 3D stages. This turned out not to be true (at least under genesis plus GX emulation), but the Japanese version does have significantly less wait time in between lines of text. The result is that, even though the text is split up into a larger number of lines in Japanese, perfect text advancement saves 336 frames over the US version over the course of the hard mode run.
	$LF
]div
[div class=p 
	"I began this improvement project by taking the movie file from the prior TAS, and resyncing it to the updated GPGX core in bizhawk 2.4.1, and then to the Japanese ROM. I do not think of this as a new TAS separate from the prior publication, but a continuation of the same TAS, and thus did not reset the rerecord count before starting work on this improvement.
	$LF
]div
[h2 id=TechniquesUsed 
	" Techniques used
	$LF
]h2
[h3 id=FastestAcceleration 
	" Fastest Acceleration
	$LF
]h3
[div class=p 
	"Acceleration in this game is obtuse and complicated. 
	$LF
]div
[div class=p 
	"There are three ways to accelerate in this game: 
	$LF
]div
[ul 
	[li 
		" Pressing the accelerate button, which increases Ecco’s speed by a varying amount depending on his current speed and how long the button has been held down. The speed gain increases after the 6 frames of being held down, and drops to 0 after 11. The most efficient use of the accelerate button is in 12 frame cycles of 11 frames down 1 frame up. 
		$LF
	]li
	[li 
		" Performing a short charge (charging with initial speed of more than 3 pixels per frame), which immediately increases Ecco’s speed by 4 pixels per frame, followed by overriding normal acceleration for 19 frames of charge acceleration (slower than standard swim acceleration at low initial speeds, faster at high initial speeds), then decreasing Ecco’s speed by .5 pixels per frame for 5 frames before ending and allowing a new charge. (Normal acceleration is possible during these final five frames of the charge). 
		$LF
	]li
	[li 
		" Performing a long charge (charging with initial speed below 3 pixels per frame), which immediately increases Ecco’s speed by 4 pixels per frame for 1 frame, followed by 23 frames of base 0.15625 pixels per frame (during which 1 frame worth of standard acceleration can apply for speeds of up to 0.65376 pixels per frame), then 2 frames of 4 pixels per frame per frame acceleration, 3 frames of charge acceleration, and then getting the full cycle of a short charge without the initial speed boost.
		$LF
	]li
]ul
[div class=p 
	"Additionally, any charge can be cancelled at any point via the sonar button, unleashing a damaging sonar blast, and skipping immediately to the final 8 frames of the charge sequence.
	$LF
]div
[div class=p 
	"The fastest acceleration pattern turns out to be: accelerate button for 5 frames, then, while continuing to press and release the accelerate button in the most efficient 12-frame cycle, charge, immediately cancel that charge, wait 8 frames, and charge again.
	$LF
]div
[h3 id=AngleOptimization 
	" Angle Optimization
	$LF
]h3
[div class=p 
	"Ecco’s swimming angle can only be changed once every eight frames, and only by intervals of 45 degrees. However, Ecco does not immediately turn to his target angle, but rotates smoothly at 4.21875 degrees per frame until reaching his target angle. As a result, you can achieve average swimming angles in between those 45 degree set-points by alternating directional inputs every 8 frames. In many cases, this results in a shorter distance travelled to navigate around distant obstacles than the old technique of travelling at the nearest 45-degree angle until it’s possible to swim in a straight line past the obstacle.
	$LF
]div
[h3 id=Nudging 
	" Nudging
	$LF
]h3
[div class=p 
	"Because it takes more than 8 frames to turn 45 degrees, hitting a direction once for just eight frames before returning to Ecco’s original angle allows for relatively small position adjustments. Useful for adjusting position in narrow tubes without bumping into walls.
	$LF
]div
[h3 id=CuttingCorners 
	" Cutting Corners
	$LF
]h3
[div class=p 
	"First, some dolphin anatomy:
	$LF
]div
[div class=p 
	"Ecco’s collision is a composite of two boxes mounted on a spine of five test-points.
	$LF
]div
[ul 
	[li 
		" Head box
		$LF
	]li
	[li 
		" Nosehole
		$LF
	]li
	[li 
		" Mid-front vertebra
		$LF
	]li
	[li 
		" Blowhole (absolute midpoint)
		$LF
	]li
	[li 
		" Mid-back vertebra
		$LF
	]li
	[li 
		" Butthole
		$LF
	]li
	[li 
		" Tail box
		$LF
	]li
]ul
[div class=p 
	"Each collision or detection polygon tests a specific point, box, or subset of these 7 possibilities. With proper information about the shapes and test point of these polygons, it’s possible to swim safely past certain enemies or obstacles in positions that would appear dangerous.
	$LF
]div
[h3 id=SuperBreach 
	" Super-breach
	$LF
]h3
[div class=p 
	"By charging on the exact frame Ecco leaves a body of water, he can exit with a velocity of 4 pixels per frame above maximum swim speed.
	$LF
]div
[h3 id=JumpControl 
	" Jump control
	$LF
]h3
[div class=p 
	"When out of the water, if moving upward quickly enough, Ecco can initiate a spin-jump by pressing C. While spin jumping, every frame in which C is held increases Ecco’s height by two pixels versus if C had not been pressed. This allows for very precise control over the timing of re-entering water, so that Ecco can re-enter water at any desired time within the 8-frame steering cycle.
	$LF
]div
[div class=p 
	"On the Vortex Future stages, and only on the Vortex Future stages, D-pad up can also be used to increase Ecco's height by an addition 2 pixels for each frame that up is pressed.
	$LF
]div
[div class=p 
	"Similarly, D-pad down can decrease Ecco's height by 2 pixels for each frame it is pressed on the Vortex Future stages only.
	$LF
]div
[h3 id=BreachingSpeed 
	" Breaching speed
	$LF
]h3
[div class=p 
	"When it is necessary to travel long distances horizontally, speed can be gained by traveling along the ocean surface and repeatedly super-breaching with a very low exit angle.
	$LF
]div
[h3 id=CameraManipulation 
	" Camera Manipulation
	$LF
]h3
[div class=p 
	"Camera position is based on Ecco’s position, angle, and movement speed. Game objects are loaded and unloaded based on their position relative to the camera, and even when loaded, many objects are not fully processed while off-screen. This can used to reduce lag, propel objects through obstacles, and a whole host of other things too varied to list.
	$LF
]div
[h3 id=KillBoosting 
	" Kill Boosting
	$LF
]h3
[div class=p 
	"Destroying an enemy immediately ends a charge without going through the end-of-charge deceleration sequence. The most common way of doing this is by colliding with the enemy while charging, but that immediately sets your speed to 0, which is even worse than losing a tiny bit of speed to the charge ending.
	$LF
]div
[div class=p 
	"However, hitting an enemy with a charge-sonar blast also immediately ends the charge, and doesn’t set your speed to zero. In this way, whenever there’s an enemy in our path, we can gain ~4 pixels by hitting charge to get the single frame 4 pixel speed boost, and then hitting sonar to destroy it before we collide.
	$LF
]div
[div class=p 
	"Unfortunately, when an enemy is destroyed, it spawns a remnant star object which changes the meaning of the charge button from “perform a charge” to “prevent this enemy from respawning” when you are within its detection radius, so it’s not possible to get 8 pixel boosts from two enemies that are close together.
	$LF
]div
[h3 id=ChargeStrafing 
	" Charge Strafing
	$LF
]h3
[div class=p 
	"During a charge, Ecco will home onto enemies in a certain detection area. This allows movement perpendicular to the swim direction without a related reduction in swim speed. Helpful to adjust position slightly without having to go through the slow process of changing angles.
	$LF
]div
[h3 id=3dLevelLagReduction 
	" 3D Level Lag Reduction
	$LF
]h3
[div class=p 
	"In 3D levels, enemies cause lag.  
	$LF
	"In 3D levels, sonar blasts kill enemies.  
	$LF
	"In 3D levels, sonar blasts cause lag.
	$LF
]div
[h3 id=SituationalTricks 
	" Situational Tricks
	$LF
]h3
[h4 id=RingManipulation 
	" Ring Manipulation
	$LF
]h4
[div class=p 
	"The teleport rings in 3D Levels appear in fixed positions. However, their movement type (stationary, slow moving, or fast moving) depends on the random number seed when they are spawned. And the random number seed updates every four frames.
	$LF
]div
[div class=p 
	"Teleport rings with the highest spawn location are fastest to pass through when they are slow moving, as their vertical position requires a low enough jump that it’s possible to return to water within a single charge cycle.
	$LF
]div
[h4 id=CutsceneSkipping 
	" Cutscene Skipping
	$LF
]h4
[div class=p 
	"If the conditions necessary to end a cutscene are already fulfilled when it begins, it will end itself the frame it begins, instead of playing out.
	$LF
]div
[div class=p 
	"All four level-intro cutscenes have the same end conditions:
	$LF
]div
[ul 
	[li 
		" At least 300 frames have been spent in the level.
		$LF
	]li
	[li 
		" Ecco's spin value is below 1536.
		$LF
	]li
	[li 
		" Ecco is facing (almost exactly) straight left after adding the low 16 bits of Ecco's spin value to his angle.
		$LF
	]li
]ul
[div class=p 
	"However, of the four intro cutscenes, two begin after the new level begins, and the level timer is reset to 0.
	$LF
]div
[div class=p 
	"The other two begin slightly before the prior level ends, and thus are possible to skip.
	$LF
]div
[div class=p 
	"Used in: Two Tides/Trellia's Bay, Lunar Bay/Vortex Future
	$LF
]div
[h4 id=BarrierClipping 
	" Barrier Clipping
	$LF
]h4
[div class=p 
	"In certain situations, there are barrier walls composed of a number of smaller objects that check head and tail box collisions. However, within a given frame, the game will stop checking for head collisions after finding a single one, and the game will stop checking for tail collisions after finding a single one. Therefore, depending on the loading order of these objects, it can be possible to swim through these barriers by overlapping the collision box with multiple objects at the same time.
	$LF
]div
[div class=p 
	"Used in: Crystal Springs, Lunar Bay, and possibly in Four Islands (other stuff is going on and I’m not sure whether this technically happens or not).
	$LF
]div
[h4 id=RocketPropelledRocks 
	" Rocket Propelled Rocks
	$LF
]h4
[div class=p 
	"Falling rocks that shield Ecco from currents will assume Ecco’s full vertical speed when his nosehole collides with them closer to their top or bottom than their left or right sides.
	$LF
]div
[div class=p 
	"In most cases, though, colliding with one of these rocks will kill most or all of Ecco’s downward speed just before it gets transferred to the rock. However, it is possible to avoid this effect somehow through careful approaches that I was not able to determine full boundary conditions on, but seemed somehow related cases involving corners.
	$LF
]div
[div class=p 
	"Also, turtles are technically rocks.
	$LF
]div
[div class=p 
	"Used in: Two Tides, Maze of Stone, Four Islands (Entertainment only), Sea of Green, Atlantis
	$LF
]div
[h4 id=BarrierSkipping 
	" Barrier Skipping
	$LF
]h4
[div class=p 
	"When a barrier glyph is placed to block a mid-air water tube, it is possible to skip around it by exiting the tube with a vertical super-breach, and using mid-air directional control to move left and right around the force-field trigger box, splashing back into the tube above the barrier.
	$LF
]div
[div class=p 
	"Used in: Trellia’s Bay, Skyway
	$LF
]div
[h4 id=HoverTurns 
	" Hover-turns
	$LF
]h4
[div class=p 
	"The game doesn’t seem to test if Ecco has left water if Ecco is in the middle of a quick flip turn when he would leave it.
	$LF
]div
[div class=p 
	"Used in: Sky Tides, Aqua Tubeway, Gravitorbox
	$LF
]div
[h4 id=TriggerSqueezing 
	" Trigger Squeezing
	$LF
]h4
[div class=p 
	"Almost all end of level triggers test against Ecco’s blowhole. In auto scrollers, it’s possible to get this much closer to the leading edge of the screen by turning to be parallel to that edge, which allows for squeezing into the end-of-level trigger a few frames sooner.
	$LF
]div
[div class=p 
	"Used in: Sky Tides, Dark Sea, New Machine.
	$LF
]div
[h4 id=EightWaySwooping 
	" Eight-way Swooping
	$LF
]h4
[div class=p 
	"When Ecco is a seagull, it is possible to perform a dive-swoop by pressing charge while down is pressed on the D-pad. But once the dive-swoop is initiated, the speed can be directed in any of the eight semi-cardinal directions without concern for gravity. This practically doubles the Seagull’s movement speed, and makes it possible to gain or lose height much, much faster than standard seagull flight, as the seagull cannot normally fly upward or downward at a greater than 45 degree angle. Embarrassingly, for the first TAS I wasn’t even aware that standard downward swooping was possible.
	$LF
]div
[div class=p 
	"	
	$LF
]div
[div class=p 
	"Used in: Fin to Feather, Eagle’s Bay
	$LF
]div
[h4 id=GullClipping 
	" Gull Clipping
	$LF
]h4
[div class=p 
	"When Ecco is a seagull, he turns back into a dolphin when he hits the water.
	$LF
]div
[div class=p 
	"Seagulls and dolphins have different hitboxes.
	$LF
]div
[div class=p 
	"The difference in hitbox can be used to clip through thin walls
	$LF
]div
[div class=p 
	"Discovered by Aludra Kijurorin of the real-time Ecco speedrunning community. 
	$LF
]div
[div class=p 
	"Used in: Eagle’s Bay, The Hungry Ones
	$LF
]div
[h4 id=Suicide 
	" Suicide
	$LF
]h4
[div class=p 
	"When Ecco gets caught between the level boundaries (or the camera boundaries during autoscrollers) and a solid obstacle, or a wall and another solid obstacle, he will be crushed to death, which restarts the level.
	$LF
]div
[div class=p 
	"This is somehow useful.
	$LF
]div
[div class=p 
	"Accidentally discovered by Dolfinh, of the real-time Ecco speedrunning community.
	$LF
]div
[div class=p 
	"Used in: Level id 30
	$LF
]div
[h4 id=ForcefieldClipping 
	" Forcefield Clipping
	$LF
]h4
[div class=p 
	"If Ecco is caught in a barrier glyph forcefield in the same frame that the game transitions to a dialogue screen, the forcefield will fling him at extremely high speeds (potentially through walls) as soon as normal gameplay resumes. 
	$LF
]div
[div class=p 
	"This was discovered by Aludra Kijurorin, of the real-time Ecco speedrunning community.
	$LF
]div
[div class=p 
	"Used in: The Eye, Big Water
	$LF
]div
[h4 id=Zipping 
	" Zipping
	$LF
]h4
[div class=p 
	"When Ecco is caught clipping two or more solid walls at the same time, a chaotic system results that can have great impact on Ecco’s speed values.
	$LF
]div
[div class=p 
	"Used in: Deep Ridge, Vortex Future
	$LF
]div
[h4 id=SwimmingThroughWalls 
	" Swimming Through Walls
	$LF
]h4
[div class=p 
	"When Ecco would otherwise be crushed, but is near enough to the seam between two wall collision boxes, they simply both eject him to the seam and consider him not to be stuck.
	$LF
]div
[div class=p 
	"There is more to this that I don’t fully understand, which prevented it from being used in Black Clouds or City of Forever.
	$LF
]div
[div class=p 
	"Used in: Dark Sea, New Machine
	$LF
]div
[h4 id=TransformationSkipping 
	" Transformation Skipping
	$LF
]h4
[div class=p 
	"Although the Metasphere in Fish City has a much larger bounding box than it appears, it still only tests against Ecco’s nosehole, making it possible to avoid being transformed into a very slow moving school of fish.
	$LF
]div
[div class=p 
	"This trick also works on the levels that don’t appear in this TAS because I avoided being carried off by Vortex Drones or swallowed by the Vortex Queen.
	$LF
]div
[div class=p 
	"Used in: Fish City. Duh.
	$LF
]div
[h2 id=LevelByLevelNotes 
	" Level by Level notes:
	$LF
]h2
[h4 id=MostLevels 
	" Most Levels
	$LF
]h4
[div class=p 
	"Except for a frame cloned or deleted due to differences in lag, I have only redone levels where necessary for new tricks.
	$LF
]div
[h4 id=FaultZone 
	" Fault Zone
	$LF
]h4
[div class=p 
	"U-turning sets Ecco's spin value wrong, and it isn't reset between levels.
	$LF
]div
[div class=p 
	"In the prior TAS, I U-turned twice while dealing with the pushable rock. Without U-turns this takes 7 frames longer.
	$LF
]div
[h4 id=TwoTides 
	" Two Tides
	$LF
]h4
[div class=p 
	"Had to remove a U-turn here, as well. This one cost a much more painful 16 frames.
	$LF
]div
[div class=p 
	"You may notice that I'm not facing left as I trigger the ending cutscene. This is because the cutscene turns me to face left no matter what.
	$LF
]div
[h4 id=TrelliaSBay 
	" Trellia’s Bay
	$LF
]h4
[div class=p 
	"Save approximately 450 frames from the intro cutscene not playing, about 100 more frames saved due to a more advantageous start position making it possible to completely avoid getting caught in kelp.
	$LF
]div
[h4 id=FinToFeather 
	" Fin to Feather
	$LF
]h4
[div class=p 
	"Being knocked out of the sky by an eagle is 2 frames faster than diving to the water under the seagull's own power.
	$LF
]div
[h4 id=EagleSBay 
	" Eagle’s Bay
	$LF
]h4
[div class=p 
	"The prior TAS used an obsolete trick called Eagle clipping to get out of bounds on the right edge of the level.
	$LF
]div
[div class=p 
	"It’s much faster to gull-clip out of bounds on the left retaining wall of the end zone instead of eagle-clipping through the right retaining wall. I saved 215 frames this way.
	$LF
]div
[h4 id=AsteriteSCave 
	" Asterite’s Cave
	$LF
]h4
[div class=p 
	"GrimShins, of the real-time Ecco speedrunning community discovered that you can just swim through the rocks the prior TAS uses the worm to eat. My fault for assuming the wall was solid without testing it. Also got a more optimal set-up for the second broken glyph. Put together, these saved 279 frames.
	$LF
]div
[div class=p 
	"The intro cutscene in the next level doesn't actually get invoked until the time travel sequence in between the two screws with Ecco's angle and spin, thus making it impossible to skip.
	$LF
]div
[h4 id=FourIslands 
	" Four Islands
	$LF
]h4
[div class=p 
	"The updated GPGX core in BizHawk 2.4 caused there to be 1 less frame of lag in this level.
	$LF
]div
[div class=p 
	"But then a frame of spurious lag appeared after I improved earlier levels.
	$LF
]div
[h4 id=DeepRidge 
	" Deep Ridge
	$LF
]h4
[div class=p 
	"Due to time-saves in prior levels, there is 1 less frame of lag here.
	$LF
]div
[h4 id=HungryOnes 
	" The Hungry Ones
	$LF
]h4
[div class=p 
	"The prior TAS actually played the level mostly as intended, instead of flying through the right hand wall and swimming straight down to the exit.
	$LF
]div
[div class=p 
	"This saves 1417 frames.
	$LF
]div
[h4 id=LunarBay 
	" Lunar Bay
	$LF
]h4
[div class=p 
	"There's a cutscene at the end of this level, so I have to reset Ecco's spin value. The easiest way to do that is to catch his tail on a rock as he's re-entering the water after the jump that's necessary in this level. Then I have to redo the rest of the level with no U-turns, and find a way to swim vertically into the ending cutscene trigger while Ecco is facing almost perfectly horizontal
	$LF
]div
[div class=p 
	"All put together, this costs 83 frames, and it's very difficult to tell what part of the setup is responsible for what part of the time loss.
	$LF
]div
[h4 id=VortexFuture 
	" Vortex Future
	$LF
]h4
[div class=p 
	"No cutscene saves 459 frames.
	$LF
]div
[div class=p 
	"No cutscene means better initial positioning for getting under the gate.
	$LF
]div
[div class=p 
	"I also managed to find a much more optimal zip route, for a total savings of 522 frames.
	$LF
]div
[h4 id=VortexQueen 
	" Vortex Queen
	$LF
]h4
[div class=p 
	"A new strategy by GrimShins of the real-time Ecco speedrunning community reduces lag and causes the explosion cutscene to begin sooner, saving 87 frames.
	$LF
]div
[h4 id=Atlantis 
	" Atlantis
	$LF
]h4
[div class=p 
	"1 frame lost due to spurious lag.
	$LF
]div
[h4 id=CityOfForever 
	" City of Forever
	$LF
]h4
[div class=p 
	"1 frame of lag saved due to the newer GPGX core in bizhawk 2.4
	$LF
]div
[h2 id=ItSAnImprovementSoThereHasToBeA 
	" It’s an improvement so there has to be a
	$LF
]h2
[h3 id=TimingComparisonTable 
	" Timing Comparison Table
	$LF
]h3
[table 
	[tbody 
		[tr 
			[td 
				"Level
			]td
			[td 
				"Level Savings
			]td
			[td 
				"Total Savings
			]td
		]tr
		[tr 
			[td 
				"Fault Zone
			]td
			[td 
				"-7
			]td
			[td 
				"-7
			]td
		]tr
		[tr 
			[td 
				"Two Tides
			]td
			[td 
				"-16
			]td
			[td 
				"-23
			]td
		]tr
		[tr 
			[td 
				"Trellia's Bay
			]td
			[td 
				"550
			]td
			[td 
				"527
			]td
		]tr
		[tr 
			[td 
				"Fin to Feather
			]td
			[td 
				"2
			]td
			[td 
				"529
			]td
		]tr
		[tr 
			[td 
				"Eagle's Bay
			]td
			[td 
				"215
			]td
			[td 
				"744
			]td
		]tr
		[tr 
			[td 
				"Asterite's Cave
			]td
			[td 
				"279
			]td
			[td 
				"1024
			]td
		]tr
		[tr 
			[td 
				"Four Islands
			]td
			[td 
				"0
			]td
			[td 
				"1024
			]td
		]tr
		[tr 
			[td 
				"Deep Ridge
			]td
			[td 
				"1
			]td
			[td 
				"1025
			]td
		]tr
		[tr 
			[td 
				"The Hungry Ones
			]td
			[td 
				"1417
			]td
			[td 
				"2442
			]td
		]tr
		[tr 
			[td 
				"Lunar Bay
			]td
			[td 
				"-83
			]td
			[td 
				"2359
			]td
		]tr
		[tr 
			[td 
				"Vortex Future
			]td
			[td 
				"522
			]td
			[td 
				"2881
			]td
		]tr
		[tr 
			[td 
				"Vortex Queen
			]td
			[td 
				"87
			]td
			[td 
				"2968
			]td
		]tr
		[tr 
			[td 
				"Atlantis
			]td
			[td 
				"-1
			]td
			[td 
				"2967
			]td
		]tr
		[tr 
			[td 
				"City of Forever
			]td
			[td 
				"1
			]td
			[td 
				"2968
			]td
		]tr
		[tr 
			[td 
				"Text
			]td
			[td 
				"336
			]td
			[td 
				"3304
			]td
		]tr
	]tbody
]table
[div class=p 
	"Total final savings: 3304 frames = 55 seconds and 4 frames.
	$LF
]div
[h2 id=ThanksTo 
	" Thanks to
	$LF
]h2
[h3 id=AludraKijurorin 
	" Aludra Kijurorin 
	$LF
]h3
[div class=p 
	"For finding gull clip, and generally being helpful and supportive.
	$LF
]div
[h3 id=Grimshins 
	" GrimShins 
	$LF
]h3
[ul 
	[li 
		" For providing an input recording of cutscene skip, so I could analze the mechanisms beneath it.
		$LF
	]li
	[li 
		" For discovering that you don't have to deal with the worm in Asterite's Cave.
		$LF
	]li
	[li 
		" For finding a better strategy on Vortex Queen. 
		$LF
	]li
	[li 
		" And for general help and support with the TAS.
		$LF
	]li
]ul
[h3 id=GrunkleBarlowe 
	" Grunkle Barlowe
	$LF
]h3
[div class=p 
	"For making me feel awesome when I finally figured out cutscene skip.
	$LF
]div
[h3 id=Chronoon 
	"Chronoon 
	$LF
]h3
[div class=p 
	"For assistance on the prior version of this TAS, and just generally being cool.
	$LF
]div
[h3 id=DolfinhVorpal 
	" Dolfinh, Vorpal 
	$LF
]h3
[div class=p 
	"For assistance on the prior version of this TAS
	$LF
]div
[h2 id=PossibleImprovements 
	" Possible Improvements
	$LF
]h2
[div class=p 
	"I did not do any of the complex math required to prove that my steering is optimal. In fact, I did not even bother to figure out how to pose those math problems. Therefore, it is possible that my steering is suboptimal.
	$LF
]div
[div class=p 
	"It's possible that there's a faster way to get dive-bombed into the ocean by the Eagles in Fin to Feather.
	$LF
]div
[div class=p 
	"Multiple real time Ecco speedrunners have reported that, in Vortex Future, they were able to get an antigravity ball to push them through a wall. I could not reproduce this, but also see no reason why the same thing shouldn't work in Black Clouds. Or why Vortex Larva wouldn't be able to do it in City of Forever.
	$LF
]div
[div class=p 
	"Multiple real time speedrunners have video evidence of Ecco "randomly" failing to collide with walls and/or floors in the vortex future levels. I could not reproduce this, but it would allow for significant skips in these levels if the mechanism were determined. (I currently suspect insufficient memory to allocate a new game object when loading the walls in question.) 
	$LF
]div
[div class=p 
	"I have seen a clip of GrimShins swimming through a wall in Black Clouds. There is nothing special about the wall that was swum through. I was unable to replicate this, let alone determine the cause. This potentially implies that all rectangular walls in all levels can be swam through, which would radically alter the run's routing. 
	$LF
]div
[div class=p 
	"It probably indicates that all rectangular walls in Vortex Future levels can be swam through, which would radically alter the routing in Black Clouds and Gravitorbox.
	$LF
]div
[div class=p 
	"Both Black Clouds and Gravitorbox have the level geometry required to initiate zipping in the way I used in Vortex Future, but due to collision box loading order or other reasons, I was not able to initiate any useful zips in those locations. Again, these would produce significant time saves.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": Judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": Accepting as improvement over the 
	(__wikiLink|displaytext=current publication|href=/3840M)
	".
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Pub.
]div
