4
[p 
	(youtube|v=4K9FghKO-R8)
	$LF
]p
[p 
	"Objectives:
	$LF
]p
[pre 
	" - Complete all unique content (plays until no new content appears)
	$LF
	" - Ends input as soon as possible
	$LF
]pre
[p 
	"Note: Due to an emulator bug in Mednafen (all versions), this game will not correctly sync from startup.  The movie file *is* from startup, but will desync immediately.  To sync this run, you must load the included savestate in slot 1, which starts after the loading screen is complete.  I first attempted to work around this problem in early 2013 but there appear to be no Mednafen developers left.  See my forum posts following this point regarding the sync issues associated with this game: http://tasvideos.org/forum/viewtopic.php?p=342190
	$LF
]p
[p 
	"I checked with several site staff members over the past year and they agreed independently that this run would be submittable based on my proof that the run properly starts from power-on.  I hope they remember me asking this, however... :)
	$LF
]p
[h3 
	" About the game
	$LF
]h3
[p 
	"This TAS completes all unique content of the Atari Lynx port of the classic arcade game Joust. The flight mechanics of Joust have always been a bit difficult to master, but with the aid of TAS tools the flight mechanics become eas... who am I fooling, it makes them even more challenging to master with any adeptness, albeit a lot more fun. It's possible to flap two frames and pause two frames to get significant lift in the Lynx port, but the only way to go fast down is to hit your head hard going up and the mechanics of doing that can be incredibly difficult to get right. In the end, the result is something that is impossible in real life and in my opinion makes it look like the flight controls are top-notch.
	$LF
]p
[p 
	"I start by demonstrating how fast the mount can get from the bottom to the screen to the top, subsequently demonstrating that both mount and rider must be helmed as they crash into the top of the playfield with enough speed to ricochet to the bottom in time for the first enemy to appear. (It is at this point that the desync noted above will happen; if you do not load the savestate, you will fly over the lower central platform and nothing will be right again; loading the savestate in slot 1 will allow the run to continue normally).  Getting the timing right to be above the enemy on the first frame it could be killed was incredibly challenging as the enemy spawn code seems to have been written to avoid placing them in your flight path. I spent literally hours on this before finding a decent solution, and I spent far more time on manipulating the spawn locations than anything else.
	$LF
]p
[p 
	"Winning in combat is a matter of being higher vertically than your opponent at the moment of impact at which point an egg is dropped, the enemy rider disappears, and their mount flies off. The egg must be collected to continue on to the next wave which means 6 things must be hit in the first wave (3 riders, 3 eggs).  Each subsequent wave adds more enemies (aside from an egg wave which sprouts none) and no new content appears after wave 9 where I stop the TAS.
	$LF
]p
[p 
	"The number of rerecords in this TAS doesn't include the many thousands of attempts I made in other files while trying to sort out the desync problem.  I had a significant challenge with Mednafen as the order that must be used to get the emulator to not destroy the movie file is a bit specific. This file will play back properly on either Mednafen on Windows version 1.1 or on Linux revision r144.
	$LF
]p
[p 
	"Overall, the Lynx version of Joust consumed the most time for me of any of the Joust ports and was the most challenging and annoying to perform luck manipulation on.  I hope no one ever has to do this ever again, for their sake, but there are some potential improvements for anyone who dares - it's very likely that the spawn locations in particular can be better in some places, and this is the kind of game that can be pecked to death with 1-frame improvements (no pun intended).  Overall, I'm satisfied with how this version turned out.  Enjoy!
	$LF
]p
[hr 
]hr
[p 
	[a class=intlink href=/Users/Profile/Nach 
		"Nach
	]a
	": Some parts of this run looked really well polished, but others looked like glaring mistakes. In any case, this run is incomplete, as the 
	[a class=intlink href=/Vault 
		"rules
	]a
	" state the criteria for completion is as follows: "Games that loop endlessly can still be defined. The completion point is one where there is 
	[b 
		"no new content
	]b
	", and 
	[em 
		"the game is no longer 
		[b 
			"increasing
		]b
		" in difficulty
	]em
	"."
	$LF
]p
[p 
	"Since the game does increase in difficulty for later waves with more distractions from the pterodactyl, and spawning enemies which move considerably faster, I am deeming this run incomplete. Several more waves need to be played, and a later cycle must be reached. Rejecting.
]p
