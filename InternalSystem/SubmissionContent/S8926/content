5
[h2 id=Hyperbeatz 
	"Hyperbeatz
	$LF
]h2
[div class=p 
	[b 
		"Hyperbeatz
	]b
	" is a 2021 homebrew rhythm game for the NES. It was developed and published by Anthony Blackman (aka Mystical Wheelbarrow). There are 16 songs to choose from with 3 difficulties each, for a total of 48 levels.
	$LF
]div
[div class=p 
	"This TAS aims for both Maximum Score and fastest completion.
	$LF
]div
[div class=p 
	"This submission is the replacement for cancelled 
	(__wikiLink|href=/8745S|implicitdisplaytext=8745S)
	".  More information on the game itself can be found there.
	$LF
]div
[h3 id=WhatSDifferent 
	"What's different?
	$LF
]h3
[div class=p 
	"LoganTheTASer's original submission successfully beat the game with maximum score using the base game settings.  While not intuitively obvious, changing the scroll speed for the button indicators shortens the run due to reduction of lag frames; this was discovered by DrD2k9.  Simply using Scroll speed 6 instead of 1 results in about 1,159 frames. 
	$LF
]div
[div class=p 
	"DrD2k9 also discovered that using the "Boost" in-game code (presented by the game through normal play) further increases difficulty by speeding up the music tempo and thus the button presses.
	$LF
]div
[div class=p 
	"This submission is the result of recreating the TAS using "Boost" mode and scroll speed 6 in order to both demonstrate a "harder" difficulty and yield faster overall time.  The resulting run is a much shorter TAS that still completes all 48 songs with perfect accuracy; thus obtaining the maximum score.
	$LF
]div
[div class=p 
	"The original submission was 366,195 frames.  This submission is 294,333 frames; for a savings of 71,862 frames (or 
	[b 
		[em 
			"roughly 20 minutes in time saved
		]em
	]b
	").
	$LF
]div
[h3 id=EvenHarder 
	"Even Harder?
	$LF
]h3
[div class=p 
	"The game does provide another in-game code that arguably makes the game even more difficult.  This is called the "Wacky" code and can be stacked with the "Boost" code.  Utilizing this "Wacky" code causes various graphical changes including causing the the button indicators to wobble sideways while traveling up the screen, shaking the screen with some 'drumbeats,' and causing random color palette changes across the whole screen;  some of these can be rapid.  While it would technically be a demonstration of an even harder mode, the "Whacky" mode was not used as some viewers may find the graphical effects noxious.  Also, implementing the "Wacky" code doesn't change the run time compared to only "Boost" mode (with the exception of adding the 8 frames to actually input the "Wacky" code).
	$LF
]div
[h3 id=HowThisTasWasCreated 
	"How this TAS was created.
	$LF
]h3
[div class=p 
	"While the original submission was made using FCEUX this submission was made in BizHawk in order to utilize a bot to input the button presses.  Yes, I (DrD2k9) know that FCEUX has Lua implementation; but I'm not familiar with using FCEUX specific Lua commands, so I stuck with what I know and wrote the bot for BizHawk specific Lua.  Anyway, the bot was written to watch when a button indicator reached the indicator line and then pressed the appropriate button on that frame.
	$LF
]div
[h3 id=Authorship 
	"Authorship
	$LF
]h3
[div class=p 
	"Technically speaking, none of LoganTheTASer's input was directly used in the creation of this submission due to the bot use; but I feel he still deserves credit for the work put forth on the original.  As such, he is considered co-author on this TAS.  For what it's worth, even with the bot, TASing this game was somewhat tedious; major kudos to LoganTheTASer for doing this manually the first time around.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/nymx 
		"nymx
	]a
	": Did somebody say "BOT"??? Claiming for judging!
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/nymx 
		"nymx
	]a
	": This is the kind of effort that can't be argued with. In fact, when 
	[a class=intlink href=/Users/Profile/DrD2k9 
		"DrD2k9
	]a
	" and myself did 
	(__wikiLink|displaytext=Mole Attack|href=/5247M)
	", the same kind of concept was used where a BOT detected triggers, so that inputs could be applied to further the TAS. This helped out tremendously, where experimenting was concerned on various responses....since this TAS is SUPER LONG!
	$LF
]div
[div class=p 
	"Even though this was BOTed, I was curious as to how the inputs were played. Even though you can move an input up early (by a frame or two)...it doesn't matter, since this is a song and you can't rush the timing of it.  So having gotten all inputs with a "NICE" response, means that this is perfect and contains the highest score possible.
	$LF
]div
[div class=p 
	"Great work on the BOT!
	$LF
]div
[div class=p 
	"Accepting.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/despoa 
		"despoa
	]a
	": Processing...
]div
