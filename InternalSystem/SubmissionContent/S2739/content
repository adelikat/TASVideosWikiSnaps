15
[h3 id=GameObjectives
 
	" Game Objectives
	$LF
]h3
[p 
	"Collect note bubbles to reach each level boss by firing a ball-like weapon which causes a specific note to play in sync with the background music depending on the direction fired.
	$LF
]p
[ul 
	[li 
		" Emulator used: fceux-2.1.3 (and Multitrack2.lua rev 1812 :)
		$LF
	]li
	[li 
		" Aims for fastest time
		$LF
	]li
	[li 
		" Aims for maximum entertainment without sacrificing speed
		$LF
	]li
	[li 
		" Takes no damage
		$LF
	]li
	[li 
		" Kills all level enemies
		$LF
	]li
]ul
[h3 id=GameDescription
 
	" Game Description
	$LF
]h3
[p 
	"Otocky was created by 
	[a class=extlink href=http://en.wikipedia.org/wiki/Toshio_Iwai rel=nofollow 
		"Toshio_Iwai
	]a
	" in 1987 and was only released in Japan for the Famicom Disk System.  It is best described (at least by 
	[a class=extlink href=http://en.wikipedia.org/wiki/Otocky rel=nofollow 
		"Wikipedia
	]a
	") as a musical side-scrolling shoot'em up where the primary weapon is a ball which, when fired in one of eight directions, plays different musical notes on the primary instrument quantized to the beat of the background music.  While the number of different notes that the player can choose from is limited (usually to 7 or 8 notes matching the current chord of the background music) it is still possible to create interesting note progressions and harmonies with the background music.
	$LF
]p
[p 
	"There's a fantastic description of the various gameplay elements and a walkthrough up at 
	[a class=extlink href=http://strategywiki.org/wiki/Otocky/Getting_Started rel=nofollow 
		"strategywiki.org
	]a
	" that contains a lot of additional information but in brief the goal is to collect note bubbles to fill the note meter at the bottom of the screen which when filled will immediately start a boss battle.  Notes are collected by firing a ball-like weapon in 8 directions producing a sound based on the instrument displayed at the bottom of the screen.  When collected by colliding with them A bubbles change the instrument being played (which affects the sound generated and the speed and distance the ball travels when fired) and B bubbles add a secondary weapon for the B button which can only be used for eliminating enemies.  If the player is hit by an enemy the note meter is decremented and the size of the ball is reduced which is the only indication of the player's health (no damage is taken in this run so this game element is not demonstrated).  The boss battles consist of various musical notes or symbols which have holes in them that must be filled by firing the ball weapon at them until all notes in the note meter are depleted at which point the boss is "healed" and the battle ends with a long fanfare.
	$LF
]p
[h3 id=GameFrameRules
 
	" Game Frame Rules
	$LF
]h3
[p 
	"There are several specific rules in the game:
	$LF
]p
[p 
	"- All shots fired are delayed (quantized) to match a 1 frame shot window spaced by a specific shot delay gap which is driven by the background music.  For instance, in level 6 the duration between shot windows is 15 frames meaning any shot fired in the previous 14 frames will not appear until the 15th frame.  This frame gap between shot windows (i.e. the shot delay gap) lines up with the beat per minute of the background music and changes when things like the fast forward bubble are collected as well as automatically on levels 1 and 11 where the tempo changes as the level progresses.  In later levels I adjusted Multitrack2.lua's savestate frequency to match the BPM of the BGM at the last frame prior to the shot window.  I mark the last frame the player can shoot on either by firing a shot for one frame or if I'm inserting a "rest" beat by holding down the select button for one frame.  More information on this pattern is described in the Potential Improvements section below.
	$LF
]p
[p 
	"- Only two balls (the main A button weapon) can be on screen at any given time.  Different instruments the player picks up cause the balls to move either faster or slower and travel a longer or shorter distance meaning that it is sometimes difficult to fire several shots quickly while still moving around (especially on levels with a slow tempo and by extension a long shot delay gap).  For this reason there are times where it is not feasible to move around the screen a lot.  There are many occasions where one of the two balls is just returning as the next shot window edge is coming up and the only choice is to sit still or sometimes even move toward the returning ball to ensure it arrives before the current shot delay gap closes.  If two balls are out and a shot is fired the game will remember the shot but it will not fire until the next shot window assuming there are less than two balls on the screen at that point (if there are still two balls on the screen at that point the shot is forgotten and will not happen during the subsequent shot window).
	$LF
]p
[p 
	"- Only one B weapon may be on screen at a time; firing the B weapon a second time eliminates the first instance.  This limitation can be used creatively but doesn't usually have a significant impact on gameplay.
	$LF
]p
[p 
	"- Note bubbles are counted as collected as soon as the ball touches them but only if they are mostly on-screen.  This means that it is not necessary to be at the edge of the screen when collecting the last note bubble in the level but it does mean that getting the ball and the bubble to be at the same place at the point at which the bubble is on screen enough to be counted is a bit challenging (especially if the first frame where the bubble is collectable happens in the middle of the shot delay gap).
	$LF
]p
[p 
	"- Collision detection generally favors the player.  The ball barely has to touch a note bubble to be counted but an enemy has to be fairly close to collide with the hit box of the player.  With that said the enemies generally move very fast so playing outside of a TAS is still fairly difficult.
	$LF
]p
[h3 id=LevelByLevelComments
 
	" Level By Level Comments
	$LF
]h3
[p 
	[b 
		"Loading screens:
	]b
	"  Like other FDS games this game has loading screens that are inherent in the system due to loading the contents of the game off of a diskette and cannot be skipped.  This game also has somewhat long unskipable level and boss intro / outro music but it isn't as bad as the ones on 
	[a class=intlink href=/2116S 
		"High Speed
	]a
	" were.
	$LF
]p
[p 
	[b 
		"Boss battles:
	]b
	"  The boss battles in each level are all identical except a different musical symbol is present in each level.  As noted (no pun intended) the notes that have been collected throughout the level are used in the boss battle to fill the gaps in the musical symbols.  I have been unable to conclusively determine if the type of notes that are fired (single note, triple note, etc.) match up to what was collected in the level but I do know that the first note that appears in the boss battle can be manipulated (such as the boss for level 10).
	$LF
]p
[p 
	[b 
		"Stage 1 - Otocky Land:
	]b
	" Done without the use of Multitrack2, the tempo of this level changes as the level progresses (level 11 is the only other level that does this).  This is not the best example of what the game can sound like but the "scale" played right as the first level starts demonstrates the notes that are available to play based on the chord of the background music.  I'm not 100% positive but I believe the opening sequence of notes that are played are as follows:
	$LF
]p
[ul 
	[li 
		" DL: C below middle
		$LF
	]li
	[li 
		" D: C
		$LF
	]li
	[li 
		" L: E
		$LF
	]li
	[li 
		" R: G
		$LF
	]li
	[li 
		" U: C above middle
		$LF
	]li
	[li 
		" UL: E above middle
		$LF
	]li
	[li 
		" DR: G above middle
		$LF
	]li
	[li 
		" UR: C 
		$LF
	]li
]ul
[p 
	"The rest of the level is fairly unremarkable and generally doesn't sound anything like the other levels in the game.
	$LF
]p
[p 
	[b 
		"Stage 2 - Onpu Circus:
	]b
	" I started working with Multitrack2 in this level and I was still getting the hang of how far apart to space the savebuffer to match up with the shot delay gap.  I start the level by only firing during every other shot window before picking up the pace.  The fast forward bubble shows up in this level and I used it to increase the tempo of the background music, although it does not have any impact on the autoscrolling speed meaning there is no practical speed difference.  The brass instrument is found in this level which has extremely good speed and distance but alas this is the only level it appears in.  There's no collision detection for the background graphics but I creatively avoided some of them in this level anyway.  I used the record bubble toward the end of this level which records the next 16 notes played and subsequently plays them back with a tinny sounding instrument (using up one of the two balls that can be on the screen at once).  I skipped picking up the record bubble in some of the later levels as it doesn't always sound as good and like the fast forward bubble it has no impact on the autoscrolling speed.
	$LF
]p
[p 
	[b 
		"Stage 3 - Beat Block:
	]b
	"  I attempted to make the beginning of this level sound like the beginning of Super Mario Brothers and the descent into the basement but the available notes that can be played are very limited so you have to stretch your imagination to hear it.  Shortly after collecting the first A bubble there's a section where several enemies and note bubbles spring out of one spot on the screen - I had to work on that section for a long time to ensure that all of the enemies were dispatched and all of the note bubbles were picked up without making it look too easy.
	$LF
]p
[p 
	[b 
		"Stage 4 M.B Percussion:
	]b
	" Percussion.  Bah.  There's not much that can be done in this level musically so instead I focused on moving around the drum pads in the background (although there is no requirement to avoid anything at all in the background).  At one point I shot at an empty area in a drum pad and a note bubble popped out - more on that in the Potential Improvements section. 
	$LF
]p
[p 
	[b 
		"Stage 5 - Soundscape:
	]b
	" The background music changes chords rapidly in this level making it difficult to play anything specific but it turned out OK.  There's one section where what appear to be lightning bolts come screaming from the upper right corner of the screen toward the lower left but I took them out with ease.  There's a musical scale I pulled off toward the end that I really liked.
	$LF
]p
[p 
	[b 
		"Stage 6 - Glass Waltz:
	]b
	"  This level has a very slow tempo and very widely spaced captive bubbles.
	$LF
]p
[p 
	[b 
		"Stage 7 - Music Plant:
	]b
	"  This level has the fastest tempo of any level with a shot delay gap of 12 frames and I picked up the fast forward bubble on top of that so there's a fairly fast paced section.
	$LF
]p
[p 
	[b 
		"Level 8 - Onple Trip:
	]b
	"  This is my favorite level - a little way into the level I was able to perfectly match the notes to the background music with very good results.
	$LF
]p
[p 
	[b 
		"Stage 9 - Onpu Factory:
	]b
	"  There are several hidden notes and every single one of them must be found - unlike some levels there are no extra note bubbles meaning a normal player would likely repeat this level many times (the game is mean about it too - any notes you collected before become enemies making it very difficult to make it through this one alive).  The background machinery noise in this level is a bit annoying but there were some good points in the background music.  I employed a creative use of the B weapon in the boss battle for this level to dispatch enemies so they weren't blocking the holes.
	$LF
]p
[p 
	[b 
		"Stage 10 - Cubic Keyboard:
	]b
	"  I attempted to directly match the primary note of the background music (especially at the beginning) which sounded pretty good.  I opted to use the record bubble but I'm not sure if it was the best choice sound-wise.  At one point near the end of the level there is a two frame graphical glitch right after I fired the B weapon where even the bar at the bottom of the screen is corrupted but the game recovered gracefully.  The boss battle for this level went especially well as this boss had three holes in a line and it's possible to fire in one direction and move in the opposite direction causing two holes to be filled from only one shot.
	$LF
]p
[p 
	[b 
		"Stage 11 - Final Notes:
	]b
	"  This level is very unusual - the only thing you can see are background notes that appear when you fire in various directions.  For example, firing down and left might cause a double note to appear at the top of the screen while firing straight down might cause a # symbol to appear at the bottom of the screen.  Each background note that appears hangs around like a blinking block cursor on an old phosphorous screen and fades completely by the time the second shot window comes around.   There is a long gap at the beginning where no notes appear and at first I wasn't sure if I'd be able to hit every enemy before it went off the screen but I prevailed.  Like level 9 there are no extra notes and I missed one the first time through and had to spend a couple of hours brute-forcing the level by firing in a specific direction while using Multitrack2.lua over and over again and then adjusting the location to figure out where the missing note was at.  This wouldn't be necessary in a normal non-TAS game as the player would simply be forced to repeat the level until the missing note magically showed up out of nowhere but I had to figure out at exactly which point in the level the missing note was at which proved to be deceptively difficult.  The final boss had only one hole which made the fight last a fairly long time but I was able to do a lot of interesting things with the B weapon to take out the enemies coming out of the hole.
	$LF
]p
[p 
	[b 
		"Credit sequence:
	]b
	"  The game alludes to an Otocky 2 but I do not believe it was ever released (Rez and Electroplankton are other games that were later created by Toshio Iwai, but I digress).  After the credit sequence ends the game returns to the main menu and the 
	[a class=extlink href=http://strategywiki.org/wiki/Otocky/Music_Maker_Mode rel=nofollow 
		"music maker mode
	]a
	" is unlocked. 
	$LF
]p
[h3 id=PotentialImprovements
 
	" Potential Improvements
	$LF
]h3
[p 
	"There are two aspects to potential improvements - those that allow the game to be completed faster and those that aid in entertainment by changing the melodies being played.
	$LF
]p
[p 
	"Potential speed improvements:  In level 4 and again in level 9 there are notes that appear when the ball hits specific otherwise unmarked areas in the background.  I don't believe I have missed any but there would be an obvious time savings if more were found.  The last note (or in some cases notes) collected in each level could potentially be collected faster but I believe they are picked up as fast as the two ball limit and the shot delay gap allow.  Finally, the boss battles could be significantly faster, especially if there's a way to use player input to employ luck manipulation to cause only triplet notes to appear.  I was only ever able to manipulate the first note that appeared on a couple of levels but there may be more that can be done here.
	$LF
]p
[p 
	"Potential entertainment improvements:  The ability to go back in the game and fire a shot in a completely different direction causing the music being composed to change means that it would be theoretically possible to rework large sections of the composed music in the existing run.   To say that differently, another TAS of this same game would likely sound completely different making future runs of this game completely unique. In this run the primary goal of is to complete the game as fast as possible (while hitting all level enemies) so there were certainly some entertainment tradeoffs.  A playaround TAS using the music maker mode in the same vein as the various Super Mario Paint musical creations could be interesting...
	$LF
]p
[p 
	"In all the levels except level 1 I consistently fired or rested at a specific interval.  In the later levels the interval was precisely the same as the shot delay gap but some of the earlier levels were off causing additional "pause" or rest points to be added as identified by the Select button.  This means that the existing run could be completely reworked by taking advantage of the existing framework - if someone wanted to do this they are more than welcome to use the existing .fm2 file as a base.
	$LF
]p
[h3 id=Thanks
 
	" Thanks
	$LF
]h3
[p 
	"FatRatKnight made this run possible by creating Multitrack2.lua - I still owe him a HowTo for that awesome tool
	$LF
]p
[p 
	"Grunty jumped in to help me encode the final version prior to submission (I had to pull that file because too many people downloaded it :)
	$LF
]p
[p 
	"Flygon also gave me advice on how to do my own encode and he posted an encode he made to archive.org
	$LF
]p
[hr 
]hr
[p 
	[a class=intlink href=/Users/Profile/FractalFusion 
		"FractalFusion
	]a
	": Accepting since a lot of people seem to like it. That, and it is well-played anyway.
	$LF
]p
[p 
	[a class=intlink href=/Users/Profile/Flygon 
		"Flygon
	]a
	": This will be my first publication in a very very long time.
]p
