16
[div class=p 
	"Shrek 2 is a 2004 side-scroller developed by Vicarious Visions based on the film of the same name. Like onions and ogres, the game has layers; this TAS utilizes tactical damage-boosting, efficient simultaneous multi-character control, and a variety of other techniques to complete the game as fast as possible.
	$LF
]div
[h2 id=Overview 
	" Overview
	$LF
]h2
[div class=p 
	"Shrek 2 has 25 levels, with five levels in each of the five worlds. (Technically, the game refers to worlds as 'Books' and levels as 'Chapters').
	$LF
]div
[div class=p 
	"The game has five different characters: Shrek, Donkey, Puss in Boots, Gingerbread Man ("Gingy"), and Human Shrek. The characters have varied physics, with different jump heights and specific abilities. Eight out of the 25 levels have multiple characters. In these levels, you can freely switch between characters to control them individually, but you can also simultaneously control multiple characters if they're close enough together.
	$LF
]div
[div class=p 
	"Each level is basically independent, so I was able to TAS the levels out-of-order and then recombine them. Occasionally, there would be slightly different lag, but overall, this approach was beneficial because it made it easier to isolate each level and to optimize level transitions.
	$LF
]div
[h4 id=Script 
	" Script
	$LF
]h4
[div class=p 
	"I made a Lua script to help create this TAS: 
	[a href=https://github.com/RetroEdit/shrek_gba rel=noopener external nofollow 
		"https://github.com/RetroEdit/shrek_gba
	]a
	$LF
]div
[div class=p 
	"It displays the position and speed of all player characters in the level and a few other pieces of information.
	$LF
]div
[h4 id=Characters 
	" Characters
	$LF
]h4
[div class=p 
	"The character have a fixed jump height that's not affected by how long you hold the jump button. Generally, you want to jump as few times as possible, because every time you land, you're penalized with several recovery frames where the character accelerates up to the standard speed. The recovery time varies between characters.
	$LF
]div
[div class=p 
	"Each character has two different abilities activated by the 'B' button. One occurs while they're walking and completely halts the character's movement, so it's generally avoided in the speedrun. The other is their midair ability and is far more useful. All characters except Ogre Shrek can use their midair ability before they collide with a ceiling to extend their jump width; by doing this, they slide across the ceiling instead of immediately bouncing off back to the ground.
	$LF
]div
[div class=p 
	"Shrek is the least agile character. He can punch and has a midair stomp ability that breaks through horizontal walls and quickly defeats enemies. He is also the only character who can pick up boxes and mushrooms. Ogre Shrek is in 11 levels.
	$LF
]div
[div class=p 
	"Donkey can kick objects to move them while standing and can spin-kick in midair. Donkey is in 8 levels.
	$LF
]div
[div class=p 
	"Puss can sword slash standing and do a spinning sword slash in midair. Puss can also climb walls and slide down vines and banisters for the highest (practically achievable) horizontal movement in the game. Puss is in 7 levels.
	$LF
]div
[div class=p 
	"Gingy can throw candy canes, the only ranged attack in the game, although the candy canes despawn if they get too far from the camera. Gingy is in 6 levels.
	$LF
]div
[div class=p 
	"Human Shrek can sword slash both standing and in midair which moves objects in a similar manner to Donkey's stationary kick attack. Human Shrek is in 4 levels.
	$LF
]div
[h4 id=MovieEndpoint 
	" Movie endpoint
	$LF
]h4
[div class=p 
	"I ended last input at the last dialogue box of the last level. The game does have one last story screen sequence after this, but going through it or skipping it just leads back to level select, so unfortunately the game does not show credits at the end (you can only access them from the title screen, and you can access them even with a fresh save file).
	$LF
]div
[div class=p 
	"I thought this approach was sensible for this game, and it matches the current realtime speedrun rules.
	$LF
]div
[h2 id=Levels 
	" Levels
	$LF
]h2
[div class=p 
	"The level details often reference tactics described in the 'Tactics' section below.
	$LF
]div
[div class= 
	[div class= 
		[ul class=nav nav-tabs role=tablist 
			[li class=nav-item 
				[a class=active nav-link data-bs-toggle=tab href=#tabs-3747-0 
					"(minimized)
				]a
			]li
			[li class=nav-item 
				[a class=nav-link data-bs-toggle=tab href=#tabs-3747-1 
					"Level details
				]a
			]li
		]ul
	]div
	[div class=tab-content 
		[div class=tab-pane fade active show id=tabs-3747-0 
		]div
		[div class=tab-pane fade id=tabs-3747-1 
			[h4 
				" 1-1
				$LF
			]h4
			[div class=p 
				"One of the more involved levels. Shows many of the basic tactics: damage boosting, tight midair movement, and object management (quick carry), among others. To top it all off, the damage boost at the end of the level is subpixel-perfect.
				$LF
			]div
			[h4 
				" 1-2
				$LF
			]h4
			[div class=p 
				"A fairly basic level. Donkey wall-kicks, ceiling glides, and damage boosts his way to the end. Spin-kicking through the second-to-last door saves a few frames, but the ending unfortunately has a poor x subpixel that's (surprisingly enough) too far leftward.
				$LF
			]div
			[h4 
				" 1-3
				$LF
			]h4
			[div class=p 
				"The first multi-character is not too complex compared to some later ones. Shrek and Donkey generally stay grouped together because of obstacles like push blocks and walls, but Donkey is able to get ahead by doing a fast fall in a few places.
				$LF
			]div
			[div class=p 
				"The mushroom bounce at the beginning was inspired by losviken's setup.
				$LF
			]div
			[h4 
				" 1-4
				$LF
			]h4
			[div class=p 
				"Another multi-character level, this time with more switches. The flag bounce relies on both characters: Shrek can't quite reach the flag alone, but Donkey's presence alters the hitbox so it's low enough for Shrek to bounce on.
				$LF
			]div
			[div class=p 
				"Like the real-time speedrun world record, the TAS uses damage boosts at the end to skip the intended route of picking up the shield; this requires Donkey to have at least three health at the end.
				$LF
			]div
			[h4 
				" 1-5
				$LF
			]h4
			[div class=p 
				"This boss level contains my first major discovery that inspired me to make the TAS. Normally, peasants with pitchforks keep spawning from carriages keep spawning until you've defeated around a dozen. However, by defeating the two pumpkin spawners and flying pumpkins at the top and then simultaneously defeating the two peasants on the ground, the level will end before more can spawn.
				$LF
			]div
			[h4 
				" 2-1
				$LF
			]h4
			[div class=p 
				"A new route the TAS discovered is to only move the trampoline at the beginning to the second platform from the top to jump sooner.
				$LF
			]div
			[div class=p 
				"Unfortunately, the flying pumpkin at the very end has a poor cycle, so Shrek has to wait a bit before attacking it; if a damage boost is attempted, Shrek will fall through the flag back down. Better camera management may improve the pumpkin's cycle.
				$LF
			]div
			[h4 
				" 2-2
				$LF
			]h4
			[div class=p 
				"This is another level where health management was important. I had to redo the beginning of the level so I had enough health to damage boost off the spiked shield knights at the end.
				$LF
			]div
			[div class=p 
				"Losviken's old TAS inspired spin-kicking shortly before landing next to the trampoline to avoid the trampoline. It was only a four-frame window, so it was easy to miss.
				$LF
			]div
			[h4 
				" 2-3
				$LF
			]h4
			[div class=p 
				"This is the first higher-complexity multi-character level. Actions had to be carefully interleaved to do independent actions with both characters. At the end of the level, the camera had to be quickly alternated between Shrek and Donkey so Shrek can catch up to Donkey at the end of the level.
				$LF
			]div
			[h4 
				" 2-4
				$LF
			]h4
			[div class=p 
				"Another complex level. Setting up Donkey to bounce on the mushroom in midair required some very careful camera management and quickly avoiding the enemies at the end also required some care.
				$LF
			]div
			[h4 
				" 2-5
				$LF
			]h4
			[div class=p 
				"This is a fairly straightforward boss, almost a fixed time level. Puss's position appeared to sometimes be affected slightly by damage boosting off him, but I'm not sure if that can save any time.
				$LF
			]div
			[h4 
				" 3-1
				$LF
			]h4
			[div class=p 
				"The first Puss in Boots level does a good job of highlighting Puss's various movement abilities: climbing, sliding down vines, and sword slash landings.
				$LF
			]div
			[div class=p 
				"One major trick in the TAS is falling through an invisible gap between the vine and the wall midway through the level, which saves a few seconds.
				$LF
			]div
			[h4 
				" 3-2
				$LF
			]h4
			[div class=p 
				"Unquestionably the most complex and time-consuming level to TAS in the game and among the longer levels as well. This level has sensitive lag patterns and complex camera routing.
				$LF
			]div
			[div class=p 
				"Shrek's damage boost off the archer's arrow was newly discovered in the making of this TAS.
				$LF
			]div
			[h4 
				" 3-3
				$LF
			]h4
			[div class=p 
				"This is the first level to feature searchlights: the level will restart if a character comes into contact with them. The level also has slug-ray goons, who will similarly cause a restart if they turn the character into a slug, but they're generally easily avoided in this level.
				$LF
			]div
			[div class=p 
				"Later on, Puss picks up a ghost, which may not technically be necessary in a TAS, but does probably result in a net time save. This level also features some camera management to move Puss and Shrek simultaneously.
				$LF
			]div
			[h4 
				" 3-4
				$LF
			]h4
			[div class=p 
				"Another solo Puss level. This is probably the most vertical level in the game. One particularly precise component is avoiding the slug-ray goon's blast after the first wall climb. This is possible in real-time, but difficult.
				$LF
			]div
			[h4 
				" 3-5
				$LF
			]h4
			[div class=p 
				"One of the simpler levels. Donkey picks up the fairy because it allows him to make longer jumps and land fewer times, allowing net time save; this is made viable by the damage boost upwards from the knight.
				$LF
			]div
			[h4 
				" 4-1
				$LF
			]h4
			[div class=p 
				"The first human Shrek level. Careful sword slashes allow the first trampoline to be far enough right to quickly bounce upwards. Like the real time speedrun, the TAS skips the intended route of obtaining a shield and instead damage boosts off the thorns.
				$LF
			]div
			[h4 
				" 4-2
				$LF
			]h4
			[div class=p 
				"Another searchlight level. In this level, Puss has to go all the way right to hear the Fairy Godmother's dialogue before heading back left to complete the level. Puss can generally navigate the searchlights quickly, but unfortunately on the way back, the middle searchlight after the climb is in a poor cycle and causes a noticeable delay.
				$LF
			]div
			[h4 
				" 4-3
				$LF
			]h4
			[div class=p 
				"The first Gingy level; generally straightforward.
				$LF
			]div
			[h4 
				" 4-4
				$LF
			]h4
			[div class=p 
				"The third and final searchlight level. In this level, Gingy has to break all orbs and go back to the beginning of the level to finish.
				$LF
			]div
			[div class=p 
				"The TAS opts to pick up the ghost, which takes a few seconds. In the long run, this wastes less time avoiding lights, but I didn't rigorously compare the two routes.
				$LF
			]div
			[h4 
				" 4-5
				$LF
			]h4
			[div class=p 
				"The third Gingy level in a row. Extremely optimized, this basically makes use of all of Gingy's candy cane mechanics. The TAS is able to hit the final bridge's switch very quickly, while a casual playthrough of the game will probably fall and have to backtrack left.
				$LF
			]div
			[h4 
				" 5-1
				$LF
			]h4
			[div class=p 
				"Fixed-time level. No optimization possible.
				$LF
			]div
			[h4 
				" 5-2
				$LF
			]h4
			[div class=p 
				"A second solo Human Shrek level. Like many other levels, the TAS avoids the intended route of picking up a shield and instead damage boosts past the spiked shield knights. The damage boost route here utilizing the axe knight beforehand is particularly fast and was newly discovered in the process of making the TAS.
				$LF
			]div
			[h4 
				" 5-3
				$LF
			]h4
			[div class=p 
				"Another camera-management heavy multi-character level. For the final time, (Human) Shrek skips an intended shield pickup and instead uses the sword ceiling mechanics to damage boost to the door button. At the same time, Puss is moving forward with Gingy to get a head start on the climbing section. In the following section, the camera is moved wildly to allow the spiked shield knight to advance further so he doesn't interfere with Shrek and Puss's retrieval of the trampoline.
				$LF
			]div
			[div class=p 
				"All this effort could have been avoided if Shrek could damage boost up to the platform, but unfortunately, the bottom platform in that room is slightly too high.
				$LF
			]div
			[h4 
				" 5-4
				$LF
			]h4
			[div class=p 
				"A final medium-to-high complexity multi-character level to finish it off. In this level, the characters have to hit the Fairy Godmother three times, gradually leaving characters behind as they advance. Gingy's ranged attack is able to sidestep the intended route by hitting her more quickly on the first two parts. The level is generally fast, but the Fairy Godmother also has a (timer-based?) attack that affects her hitbox and complicates further time save.
				$LF
			]div
			[h4 
				" 5-5
				$LF
			]h4
			[div class=p 
				"Fixed-time level. No optimization possible.
				$LF
			]div
		]div
	]div
]div
[h2 id=Tactics 
	" Tactics
	$LF
]h2
[div class=p 
	"I've tried to label each tactic with a descriptive name and describe how it saves time.
	$LF
]div
[h4 id=CeilingGlide 
	" Ceiling glide
	$LF
]h4
[div class=p 
	"For every character except Ogre Shrek, using their midair ability allows them to glide on the ceiling for a few frames instead of immediately falling down.
	$LF
]div
[h4 id=Climbing 
	" Climbing
	$LF
]h4
[div class=p 
	"Often, you'll want to counterintuitively land on walls at a lower position so Puss spends less time just barely missing the jump at the top of the wall.
	$LF
]div
[h4 id=CameraManagement 
	" Camera management
	$LF
]h4
[div class=p 
	"Managing the camera (the portion of the level that is visible on-screen) is vital for speed. In multi-character levels, the camera controls are pressing 'l' or 'r' to switch characters. By holding both 'l' and 'r', you can control all characters that are on-screen or nearby. When you switch between characters, you can't always control the other character immediately; it takes a few frames for the camera to "bind" to the character and allow movement. Sometimes, this may take a few dozen frames if the characters are too far apart, so you generally want to keep characters close together.
	$LF
]div
[div class=p 
	"A few common tricks are letting go of 'lr' when doing actions specific to one character and jumping before switching characters so the original character is still moving even while the camera is focused on another character. Sometimes, moving the camera away from a character will reduce lag. There are also some more esoteric tactics like temporarily focusing on the wrong character so the camera will move to that character faster later and controlling multiple characters simultaneously even when it isn't directly necessary to position the camera itself.
	$LF
]div
[div class=p 
	"The camera also affects entity movement in all levels, since entities will only move when the camera is close enough to them.
	$LF
]div
[h4 id=DamageBoosting 
	" Damage boosting
	$LF
]h4
[div class=p 
	"Damage boosts are a major tactic. They have multiple uses: you move slightly faster while being boosted, you have minimal landing penalty (only one frame of no movement), you have temporary invulnerability to damage, and you can sometimes reach places that would otherwise be inaccessible.
	$LF
]div
[div class=p 
	"Characters have limited health and very few opportunities for health pickups, so not every damage boost opportunity can be taken. Sometimes routing the optimal damage boosts is not immediately intuitive because each one affects your subpixel.
	$LF
]div
[h4 id=FastFall 
	" Fast fall
	$LF
]h4
[div class=p 
	"Donkey and Gingy can start a fall at a high momentum by using their abilities to slide across the floor right before they fall off the edge.
	$LF
]div
[div class=p 
	"A similar mechanic exists for using abilities right before a ceiling ends to retain a bit of upwards momentum.
	$LF
]div
[h4 id=JumpChaining 
	" Jump chaining
	$LF
]h4
[div class=p 
	"By jumping within a few frames of landing (the exact interval varies between characters), you can avoid one frame of non-movement.
	$LF
]div
[div class=p 
	"Donkey can spin-kick right before landing to increase the interval before he has to jump again.
	$LF
]div
[h4 id=LevelTransitions 
	" Level transitions
	$LF
]h4
[div class=p 
	"Sometimes in multi-character levels you will lost 3 frames to a slower character animation at the end. I'm not exactly sure what causes it, but I think it's related to character's relative positions and perhaps their subpixels. Each character has a different speed ending animation and the ending to multi-character levels is based on the character with the fastest ending animation.
	$LF
]div
[h4 id=MidairMovement 
	" Midair movement
	$LF
]h4
[div class=p 
	"In the air, you can tap left and right to precisely adjust your x speed.
	$LF
]div
[div class=p 
	"Characters have the most direct control over their x subpixel in the air. Generally, I aimed to optimize x subpixels to within 44 of the goal, but in long vertical sections it's technically possible to optimize within 0-2 subpixels.
	$LF
]div
[h4 id=PushBlocks 
	" Push blocks
	$LF
]h4
[div class=p 
	"There are push blocks that require two or three characters to move. Sometimes, waiting a few frames until the characters are grouped together allows the push block to pushed with more consistent speed.
	$LF
]div
[h4 id=QuickCarry 
	" Quick carry
	$LF
]h4
[div class=p 
	"Continually picking up an object and putting it back down as Shrek moves horizontally is often faster than completely lifting up the object because Shrek is frozen in place while picking up objects. If you actually have to pick up the object to a higher height, this is less effective.
	$LF
]div
[h4 id=Sliding 
	" Sliding
	$LF
]h4
[div class=p 
	"Puss can slide down vines and banisters for a high horizontal speed. Some are lower speed, while others are higher speed, but generally sliding is the faster movement option relevant for the TAS. Waiting to jump also allows Puss to jump farther and maintain the speed for longer.
	$LF
]div
[h4 id=Stomping 
	" Stomping
	$LF
]h4
[div class=p 
	"Jumping so Shrek is closer to the ground before he stomps allows him to break horizontal walls sooner.
	$LF
]div
[h4 id=SwordSlashLanding 
	" Sword slash landing
	$LF
]h4
[div class=p 
	"Puss and Human Shrek can avoid almost all of the landing penalty by doing a frame-perfect 'B' press to swing their sword shortly before landing. This also allows them to pick up object like keys sooner.
	$LF
]div
[h4 id=WallKicks 
	" Wall kicks
	$LF
]h4
[div class=p 
	"Generally, you want to break walls as fast as possible so you can move past them, since the wall's hitbox persists for a number of frames after being kicked. Donkey's midair kick will generally hit the wall sooner than the stationary kick. By timing the kick press so Donkey's animation is facing backwards, Donkey's hitbox will collide with the wall sooner.
	$LF
]div
[h2 id=TimeBreakdown 
	" Time breakdown
	$LF
]h2
[div class=p 
	[code 
		"InLevel
	]code
	" measures starting with the first dialogue-skip Start press in the level and ending with the final dialogue-skip Start press.
	$LF
]div
[div class=p 
	"I saved a bit over 
	(frames|amount=775|fps=59.7275)
	" compared to 
	(__wikiLink|displaytext=my last posted WIP|href=/UserFiles/Info/638237731807002621)
	". Most of the time save was from better camera routing in multi-character levels. (Specifically, I saved time in the following levels: 1-1: -1F, 1-2: -1F, 1-3: -122F, 1-4: -69F, 2-1: -7F, 3-2: -261F, 3-3: -113F, 5-3: -201F)
	$LF
]div
[div class=p 
	"These times are somewhat misleading because of lag: see the section 'Future possible improvements' below for more details.
	$LF
]div
[pre 
	"LVL:  Load, InLevel (mm:ss.ms)  | Rerecords
	$LF
	"1-1:  588F,   2022F (00:33.853) |      2128
	$LF
	"1-2:  214F,   2492F (00:41.722) |       930
	$LF
	"1-3:  104F,   2422F (00:40.550) |      2379
	$LF
	"1-4:  107F,   3072F (00:51.433) |      2520
	$LF
	"1-5:   99F,    519F (00:08.689) |      2470
	$LF
	"2-1:   80F,   2459F (00:41.170) |      1797
	$LF
	"2-2:  212F,   3220F (00:53.911) |      2306
	$LF
	"2-3:  103F,   3948F (01:06.100) |      4077
	$LF
	"2-4:  106F,   2359F (00:39.496) |      4350
	$LF
	"2-5:   99F,   2530F (00:42.359) |       360
	$LF
	"3-1:   90F,   3320F (00:55.585) |      2122
	$LF
	"3-2:  257F,   4166F (01:09.750) |      6189
	$LF
	"3-3:  106F,   3373F (00:56.473) |      3157
	$LF
	"3-4:  215F,   2381F (00:39.864) |       788
	$LF
	"3-5:  257F,   3745F (01:02.701) |       889
	$LF
	"4-1:  147F,   4502F (01:15.375) |      1034
	$LF
	"4-2:  204F,   3532F (00:59.135) |      1104
	$LF
	"4-3:  257F,   2182F (00:36.532) |      1675
	$LF
	"4-4:  329F,   2688F (00:45.004) |       716
	$LF
	"4-5:  327F,   2574F (00:43.095) |      1967
	$LF
	"5-1:  369F,   1802F (00:30.170) |      1147
	$LF
	"5-2:   40F,   3040F (00:50.897) |      1602
	$LF
	"5-3:  204F,   4287F (01:11.775) |      4344
	$LF
	"5-4:  206F,   2079F (00:34.808) |      3264
	$LF
	"5-5:   49F,   2701F (00:45.222) |        15
	$LF
	"Sum: 4769F,  71415F (19:55.680) |     53330
	$LF
	$LF
	"Final: 76184F (21:15.526); Rerecords: 53730
	$LF
	"RTA: 21:07.874
	$LF
]pre
[h2 id=FuturePossibleImprovements 
	" Future possible improvements
	$LF
]h2
[ul 
	[li 
		" Overall, I did my best to optimize levels by hand. However, this TAS is not perfect by any means. The multi-character levels are particularly complex, so it was easy to lose time despite my best efforts. Here's 
		(__wikiLink|displaytext=one potential improvement in 5-4|href=/UserFiles/Info/638251557849154895)
		".
		$LF
	]li
	[li 
		" In 
		(__wikiLink|displaytext=other games by the same developer|href=/3030G)
		", out-of-bounds glitches are possible, but I couldn't find any setups in this game.
		$LF
	]li
	[li 
		" This game's lag is emulated very inaccurately in BizHawk 2.9.1's mGBA. On a real-console, 
		[a href=https://github.com/mgba-emu/mgba/issues/2969 rel=noopener external nofollow 
			"an old version of the TAS was ~17.9 seconds longer because of more lag
		]a
		", mostly concentrated in multi-character levels. In the future when lag is better emulated, lag reduction could be approached better. There already exist more accurate GBA emulators like NanoBoyAdvance; NBA is only ~81 frames from real console as of version 1.7.1 (
		[a href=https://github.com/nba-emu/NanoBoyAdvance/issues/312 rel=noopener external nofollow 
			"source
		]a
		"), but it 
		[a href=https://github.com/TASEmulators/BizHawk/issues/3736 rel=noopener external nofollow 
			"doesn't have TAS support yet
		]a
		".
		$LF
		[ul 
			[li 
				" In the past week, GBAHawk was added to the site. I created 
				(__wikiLink|displaytext=an alternate GBAHawk 1.4 movie|href=/UserFiles/Info/638251697300022223)
				" for this TAS.
				$LF
			]li
			[li 
				" The GBAHawk movie is probably technically more accurate to the TAS's final time. I considered submitting my movie as this GBAHawk file, but decided against it for a number of reasons: GBAHawk still has ~4 seconds less lag than real console, my movie wasn't optimized for GBAHawk's lag anyway, and my current workflow is dependent on some BizHawk save-anchored files that would take a bit of time to replicate in GBAHawk. GBAHawk also has worse performance than mGBA, so overall, further lag reduction improvements are probably best saved for a future submission.
				$LF
			]li
			[li 
				" 
				[em 
					"Update (2023-09-02)
				]em
				": 
				(__wikiLink|displaytext=New resync to GBAHawk 1.7.0|href=/UserFiles/Info/638293012607260752)
				". GBAHawk 1.7.0 is much more accurate and now basically has Shrek 2 lag parity with NanoBoyAdvance and SkyEmu. All three emulators are still a dozens of frames faster than real-console over the entire run, though.
				$LF
			]li
			[li 
				" 
				[em 
					"Update (2023-10-05)
				]em
				": 
				(__wikiLink|displaytext=New resync to GBAHawk 2.0.0|href=/UserFiles/Info/638321271184973896)
				". A resync of 
				(__wikiLink|displaytext=this publication|href=/5469M)
				". In testing, GBAHawk 2.0.0 emulates Shrek 2's lag perfectly, so it may be sufficient to allow console verification now.
				$LF
			]li
			[li 
				" 
				[em 
					"Update (2024-02-13)
				]em
				": As of GBAHawk 2.1.0, a resync of this movie has 
				[a href=https://www.youtube.com/watch?v=jaDDixWY3ng rel=noopener external nofollow 
					"successfully been console-verified
				]a
				". This movie is 1199 frames (
				(frames|amount=1199|fps=59.7275)
				") longer due mainly to extra in-level lag and also some extra load time. 411 of those extra frames (
				(frames|amount=411|fps=59.7275)
				") were solely from 3-2, so the route possibly needs adjusted for lag reduction.
				$LF
			]li
		]ul
	]li
]ul
[h2 id=SpecialThanks 
	" Special thanks
	$LF
]h2
[div class=p 
	"(in alphabetical order)
	$LF
]div
[ul 
	[li 
		" Alyosha: for promptly adding support for Shrek 2 in GBAHawk a few days after I requested it.
		$LF
	]li
	[li 
		" losviken: for creating a TAS in 2016 that went through 2-2. My time ended up being a few seconds faster in each of these levels, but the original TAS inspired several tactics that would have been more difficult to discover otherwise.
		$LF
	]li
	[li 
		" smartalec24: for providing a starting route as the 
		[a href=https://www.speedrun.com/shrek2gba/run/mre2vx8y rel=noopener external nofollow 
			"long-time world record holder
		]a
		" of the game and patiently listening to my rambling about new TAS strategies
		$LF
	]li
	[li 
		" suqd: for some insight on how enemies activate when you approach their proximity
		$LF
	]li
	[li 
		" ...and to all the emulator developers who make tool-assisted speedrunning possible.
		$LF
	]li
]ul
[h2 id=SuggestedScreenshot 
	" Suggested screenshot
	$LF
]h2
[div class=p 
	[img class=embed mw-100 src=https://i.postimg.cc/NMJkYyCv/Shrek-2-GBA-003-31006.png 
	]img
	$LF
]div
[div class=p 
	"31006 or a nearby frame
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": Correcting the displayed ROM name to avoid confusion.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": It may appear a bit awkward to stop at the beginning of the last story sequence without clearing it, but if we think about it carefully, it's the most meaningful ending point. Beating the game doesn't trigger the credits roll, and beating the last level doesn't unlock anything. Getting back to the Book selection screen doesn't prove that you've beaten the game, as from there you can only see if you gained access to a Book, without telling you if you've beaten the last Book. On the other hand, beating the final boss results in triggering the last story sequence, which is the only thing that can objectively indicate that you've beaten the game.
	$LF
]div
[div class=p 
	"For the rest, this movie put in play some cool optimization to beat the game as fast as possible. Accepting.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/EZGames69 
		"EZGames69
	]a
	": Processing...
]div
