6
[h2 id=MontyOnTheRunC64 
	"Monty on the Run (C64)
	$LF
]h2
[div class=p 
	[b 
		"(This is an update to a 
		(__wikiLink|displaytext=previously canceled submission|href=/6447S)
		". Details on changes below.)
	]b
	[br 
	]br
	$LF
	"Monty on the Run is a platformer released for a number of systems and is the 3rd release in the Monty Mole series.  It is commonly known as having one of the best music tracks of the C64 era.
	$LF
]div
[div class=p 
	[b 
		"The series:
	]b
	[br 
	]br
	$LF
	[em 
		"Wanted: Monty Mole
	]em
	" (1984)- Monty travels around a coal mine collecting pieces of coal and other miscellaneous objects. The game was created in response to the British miners' strikes and saw the lead character collecting coal in order to keep his family warm.
	[br 
	]br
	$LF
	[em 
		"Monty is Innocent
	]em
	" (1985) - Monty has been sentenced to five years in Scudmore Prison for stealing a bucket of coal. Monty's best friend, the mysterious masked weasel, Sam Stoat, is determined to set Monty free.
	[br 
	]br
	$LF
	[em 
		"Monty on the Run
	]em
	" (1985) - This game
	[br 
	]br
	$LF
	[em 
		"Auf Wiedersehen Monty
	]em
	" (1987) - Monty travels around Europe collecting money in order to buy a Greek island - Montos, where he can safely retire.
	$LF
	[em 
		"Moley Christmas
	]em
	" (1987) - Monty has been given the task of getting the code for his latest game from the programmers to the cover of 
	[em 
		"Your Sinclair
	]em
	" magazine.
	[br 
	]br
	$LF
	[em 
		"Impossamole
	]em
	" (1990) - Remake of Monty as a cape-clad superhero who is recruited by aliens to retrieve their sacred scrolls.
	$LF
]div
[h3 id=Story 
	"Story
	$LF
]h3
[div class=p 
	"On the run from the authorities after his escape from Scudmore Prison, Monty the Mole must escape from his house through the criminal underground and head toward the English Channel and freedom in Europe.
	$LF
]div
[h3 id=TasNotes 
	"TAS Notes
	$LF
]h3
[ul 
	[li 
		"Goal - Beat game as quickly as possible
		$LF
	]li
	[li 
		"Dies to save time.
		$LF
	]li
	[li 
		"Forgoes item collection to save time. A 100% run would collect all coins/items.
		$LF
	]li
	[li 
		"Manipulates RNG for favorable teleportation outcomes.
		$LF
	]li
]ul
[div class=p 
	"This game included a major frustration during TASing.  Based on the current rules for C64 games, I started this TAS in NTSC mode.  Everything seemed to work perfectly until the very end of the game.  Upon Monty hitting the endpoint trigger in NTSC mode, the game glitches and does not play the end-game sequence.  This is the only glitch that occurs when playing with NTSC region settings.
	[br 
	]br
	$LF
	"That version of the the TAS can be viewed below with the glitch plainly visible at the end. (Side Note: This run is not completely optimal as-is, I found improvements after conversion to PAL).
	$LF
	(youtube|v=NPM9DzJeRo0)
	$LF
]div
[div class=p 
	"Due to this glitch, I had to redo the run in PAL mode simply to get the end scene to play.  Thankfully the two regions were almost frame equal as far as input/movement, so re-syncing movements wasn't terribly difficult.  The major frustration/problem in converting to PAL surfaced in regards to RNG.  There are only two major components of the game that are RNG dependent: the crusher pistons and the teleportation beams.
	$LF
]div
[ul 
	[li 
		"Crusher Pistons have a random time in between crushes.
		$LF
	]li
	[li 
		"Teleportation beams seem to be random in the order of which colors they change.
		$LF
	]li
]ul
[div class=p 
	"The change in region altered the RNG resulting in different values for these two mechanics between runs. 
	$LF
]div
[div class=p 
	[del 
		"Unfortunately, I have been unable to determine the reason for the difference in RNG.  I was also unable (as yet) to find a way of manipulating the RNG. Because of this, the game-play portion of the PAL version of the TAS ended up being quite a bit longer than the NTSC version due to added waits at some crushers/teleportation beams.  I bounced Monty around at these to kill time.
		$LF
	]del
]div
[div class=p 
	"Though I plan to continue studying this particular RNG situation, I still felt the PAL run was satisfactorily optimized for submission.  If I am able to find a way to manipulate the RNG I will update this submission (or submit a new run to obsolete this one if it is already published by the time I figure it out).
	[del 
		$LF
	]del
]div
[h3 id=NewStuff 
	"NEW STUFF
	$LF
]h3
[ul 
	[li 
		[em 
			"Huge
		]em
		" thanks to 
		[a class=intlink href=/Users/Profile/Memory 
			"Memory
		]a
		" for figuring out a way to manipulate RNG (via a method I, frankly, should have been able to figure out myself, but didn't).  
		$LF
		[ul 
			[li 
				"With this new level of control over the RNG dependent environmental features, I was able to manipulate almost all the teleportation beams (with the exception of the final one).  This allowed me to select color for all the teleportation beams that needed passed through and guaranteed teleportation on the few in which that was necessary.  The only exception to this was the very last beam: passing through would yield a faster path than teleporting if it could be manipulated to be the correct color, but I was unfortunately unable to make this happen.
				$LF
			]li
			[li 
				"I also manipulated a few crushers.
				$LF
			]li
		]ul
	]li
	[li 
		"This submission is 1584 frames faster than 
		(__wikiLink|displaytext=the previous|href=/6447S)
		", for a savings of about 31.68 seconds.
		$LF
	]li
	[li 
		"This submission uses BizHawk 2.3.2 instead of version 2.3.1 which was used on the original...as such, rerecord count is 
		[em 
			"severely
		]em
		" inaccurate.
		$LF
	]li
]ul
[h3 id=PotentialImprovements 
	"Potential Improvements
	$LF
]h3
[div class=p 
	[del 
		"If I or someone else can effectively find a way to manipulate RNG, this run could be drastically reduced by manipulating any crushers/teleportation beams to eliminate/minimize wait time.  This would also allow for slightly different routing in a couple areas.
	]del
	$LF
]div
[div class=p 
	"If someone is able to manipulate RNG to yield a pass-through color (white) on the last teleportation beam without losing time anywhere else, this would open a new path to the end likely making the run a screen or two faster.
	$LF
]div
[h3 id=OtherStuff 
	"Other Stuff
	$LF
]h3
[ul 
	[li 
		"This is one of only two C64 games to have been run at a GDQ event (by DANACRYSALIS at SGDQ 2014)
		$LF
		[ul 
			[li 
				"He also holds the current RTA world record which can be viewed 
				[a href=https://www.twitch.tv/videos/48967124?filter=all&sort=time rel=noopener external nofollow 
					"here
				]a
				".
				$LF
			]li
			[li 
				"This submission was (originally) done concurrently with 
				(__wikiLink|displaytext=6448S|href=/6448S)
				" as homage to DANACRYSALIS GDQ runs.
				$LF
			]li
		]ul
	]li
	[li 
		"The last input to beat the game is where this submission ends.  If accepted, a publisher can use 
		[a class=intlink href=/Userfiles/Info/57936291462708476 
			"this .bk2
		]a
		" which includes the necessary additional inputs to enter the high score after the end sequence and then watch the credits.
		$LF
	]li
]ul
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/slamo 
		"slamo
	]a
	": As always, the optimization looks good. Using the tape release is perfectly fine here, as there was insufficient evidence for a disk release and we don't really factor loading times into judging the optimization anyway.
	$LF
]div
[div class=p 
	"Feedback was quite positive. I felt like the run had a good amount of action and variety, and it helps that the music is good as well. Accepting to Moons.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/fsvgm777 
		"fsvgm777
	]a
	": Processing.
]div
