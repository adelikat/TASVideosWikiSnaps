12
[div class=p 
	(youtube|v=2RZPVo_k3ZM)
	$LF
]div
[div class=p 
	"Super Mario World is a game which needs no introduction. Many people have tried and studied this game, and their skill and knowledge are still growing although almost twenty years have passed since it got released. Now 
	[a class=intlink href=/1115M 
		"the currently published run
	]a
	" is beaten by 4.5 seconds, which I never believed when submitting it.
	$LF
]div
[h3 id=Gameobjectives 
	" Game objectives
	$LF
]h3
[ul 
	[li 
		" Aims for fastest time
		$LF
	]li
	[li 
		" Takes damage to save time
		$LF
	]li
	[li 
		" Abuses programming errors
		$LF
	]li
	[li 
		" Emulator used: Snes9X v1.43+ v16
		$LF
	]li
]ul
[h3 id=Comments 
	" Comments
	$LF
]h3
[div class=p 
	"This run gives an improvement of 269 frames, and consists of two of big improvements and many of minor improvements. One of the two is a dragon coin glitch idea in yi3, which has been dreamed for at least one and a half year and had not been available until May of 2009, because we had no way to duplicate turning blocks fast enough without hitting the message box. 
	$LF
]div
[div class=p 
	"We want to thank all the members of #TASers; this run would not be completed without their cheer.
	$LF
]div
[h3 id=Tricksusedinthisrun 
	" Tricks used in this run
	$LF
]h3
[div class=p 
	"In this section, I'm going to explain dragon coin glitch, “double hit” trick, “cancel rise” trick, subvelocity, “passing through corner” trick, “pressure of solid objects” and block duplication away from blocks. In addition, I will mention what we know about lag (both in-level and fadeout).
	$LF
]div
[h4 id=Dragoncoinglitch 
	" Dragon coin glitch
	$LF
]h4
[div class=p 
	"A dragon coin can be cut by duplicated blocks, and we can get its upper-half (sometimes lower-half) piece. Then an invisible block is produced. This block is indeed a “wing-balloon-shell-key” block. This glitch is very powerful because it leaves us possibility to short-cut a long level such as an auto-scrolling one.
	$LF
]div
[h4 id=Blockduplication 
	" Block duplication
	$LF
]h4
[div class=p 
	"When we duplicate a block using an item, the item needs to be with x velocity 0 and go into the block by at least 7 pixels from its bottom, and the position of the duplicated block is determined by the direction to which the item is pushed. If the item goes into the block by 15-16 pixels from the bottom, the block is duplicated to the above, and if the item goes into the block by 7-10 pixels 
	[em 
		"from its side
	]em
	", then the block is duplicated to its side; if both are satisfied, the new block will be generated above-diagonally. But note that oscillation of items in a solid object affects whether we succeed block duplication to the side or not.
	$LF
]div
[div class=p 
	[b 
		"A variant: duplication away from blocks.
	]b
	" Block duplication can be done with an item thrown up away from blocks. As explained above, an item needs at least y speed 97 in order to duplicate a block. After throwing up an item, its y velocity moves in the sequence: -112 -109 -106 -103 -100 -97 -94, so there remain only 7 frames in which it can go into the block by 7 pixels after it gets thrown. The following table shows when you should throw up an item to get block duplication; distance means “how far an item is from the block”, and subpixel “subpixel of the item”.
	$LF
]div
[table 
	[tbody 
		[tr 
			[th 
				"distance
			]th
			[td 
				"0
			]td
			[td 
				"7
			]td
			[td 
				"13
			]td
			[td 
				"14
			]td
			[td 
				"20
			]td
			[td 
				"26
			]td
			[td 
				"27
			]td
			[td 
				"33
			]td
		]tr
		[tr 
			[th 
				"subpixel
			]th
			[td 
				"00-F0
			]td
			[td 
				"00-C0
			]td
			[td 
				"D0-F0
			]td
			[td 
				"00-60
			]td
			[td 
				"70-D0
			]td
			[td 
				"E0-F0
			]td
			[td 
				"00-10
			]td
			[td 
				"20
			]td
		]tr
	]tbody
]table
[div class=p 
	[b 
		"A variant: duplicate a turning block by dropping an item.
	]b
	" In the case where a turning block is on the ground (or a block), 
	[a class=extlink href=http://dehacked.2y.net/microstorage.php/info/266580473/smw-dupblock.smv rel=nofollow 
		"we can duplicate it by dropping an item
	]a
	" in such a way that it bounces off the ground just before the block stops turning.
	$LF
]div
[h4 id=Gettwoitemsfromoneblock 
	" Get two items from one block
	$LF
]h4
[div class=p 
	"If mario and a shell make a hit at a block at the same time, we can get two items. There are many other ways in which we can get multiple items from one block. See also 
	[a class=extlink href=http://www.youtube.com/watch?v=KqT03srE72c rel=nofollow 
		"ISM's demo
	]a
	".
	$LF
]div
[div class=p 
	[b 
		"A variant: Get two yoshis.
	]b
	" Producing two yoshis at the same time shortens yoshi's growth motion by 32 frames (each of them decreases the growth timer 
	[tt 
		"7E18E8
	]tt
	" by one per frame, and the timer starts from 64). Using a triple hit we can shave off 10 more frames, but many yoshis might produce much lag, so we will get less advantage in many cases.
	$LF
]div
[div class=p 
	[b 
		"A variant: Rapid duplication of turning blocks.
	]b
	" When we want to duplicate turning blocks many times, we must wait for the duplicated blocks to stop turning. To avoid this, by hitting four other turning blocks, the duplicated one stops turning. This however takes many frames, for example when without caped. We can shorten this routine by using double hits; each double hit produces two turning blocks, so we have only to hit them two times in order for the duplicated block to stop turning. This is useful when combined with a dragon coin glitch.
	$LF
]div
[h4 id=Passthroughacorner 
	" Pass through a corner
	$LF
]h4
[div class=p 
	"We can go into a block by passing through its corner in an appropriate way. This glitch has already been explained in 
	[a class=intlink href=/Forum/P/200202#200202 
		"my post in the forum
	]a
	". Keep trying again and again, and you'll be able to get it with little pains!
	$LF
]div
[h4 id=(horizontal)pressureofsolidobjects 
	" (horizontal) pressure of solid objects 
	$LF
]h4
[div class=p 
	"When mario is in a solid object, it pushes him to the left (or to the right sometimes). We can abuse this pressure to get a boost:
	$LF
]div
[ol 
	[li 
		"The well-known corner-boost is one of variants of pressure abuse.
		$LF
	]li
	[li 
		"By passing through a corner, we can get a boost. Moreover, if we are going to the left, we can pass through two blocks or more as in the second room of dsh.
		$LF
	]li
	[li 
		"If mario jumps toward a ceiling (or a block) with ducking and the takeoff meter is still positive, mario's head sticks into the ceiling, which pushes mario to the left or right. So we can sometimes get a boost. This is used in the dark room of Front Door for example.
		$LF
	]li
]ol
[h4 id=Howtocancelarise 
	" How to cancel a rise
	$LF
]h4
[div class=p 
	"Although this is partially explained in 
	[a class=intlink href=/Forum/P/200202#200202 
		"my reply
	]a
	", I would give a self-contained explanation here for the sake of no ambiguity. Assume mario is flying to the right. When he starts going up after an air-catch, mario needs to be facing to the right (even while cape-spinning; watch mario's facing direction 
	[tt 
		"7E0076
	]tt
	"), so we can cancel his rise by manipulating cape-spin timing in such a way that he ends up facing to the left, and then he can still go up soon again unless his y speed exceeds a particular value (depending on which the air catch is normal or higher). This trick can also be done by making mario's x velocity nonpositive after an air-catch. In this run, this trick is used here and there, especially in bowser fight, where we try to stay at a fixed position for example.
	$LF
]div
[div class=p 
	[b 
		"A variant: continuous air-catch.
	]b
	" After putting mario into the diving animation, we can cancel a higher air-catch by making his velocity nonpositive. But as explained above, he can still catch air soon, so by making his velocity positive again he restarts going up. Iterating this process, he gets “continuous air-catch”. This is useful in such cases that we want to go up soon after entering a door (e.g., after entering the first door of dgh). This trick also eables us to get a 
	[a class=intlink href=/GameResources/SNES/SuperMarioWorld#FlyStuckToTheCeiling 
		"“fly stuck to the ceiling” trick
	]a
	" from a lower position.
	$LF
]div
[h4 id=Subvelocity 
	" Subvelocity
	$LF
]h4
[div class=p 
	"Subvelocity 
	[tt 
		"7E007A
	]tt
	" (of x direction) is the fractional part of x velocity, which is used only for calculation of acceleration (and deceleration). For example, both of going with velocity 48 and going with 48.5 give the same result. This explains mario's irregular acceleration and deceleration, and is useful when we want to optimize 6/5 in slippery levels where the 6/5 is no longer optimal (it is better to use something like 6/5/26/13 (average speed 48.68627...) rather than 6/5, which is however in such ideal cases as there are no slopes, no enemies, no pits, and so on, so it should be done case by case).
	$LF
]div
[div class=p 
	[b 
		"A variant: －1 trick (a.k.a. turnaround trick)
	]b
	$LF
]div
[div class=p 
	"I had to explain this in the previous run, but 
	[a class=intlink href=/2004S#TricksUsedInThisTas 
		"Chef Stef has given it
	]a
	"; I should like to thank him. :) Similarly, we can optimize mario's acceleration when turning actually (e.g, before grabbing the feather in dp1). For example, a sequence “－14 －9 －4 1 3 4 6 7 9 10” gets into “－14 －9 －4 －1 4 5 7 8 10 11”, and so on.
	$LF
]div
[h4 id=Howtoreducelag 
	" How to reduce lag
	$LF
]h4
[div class=p 
	"We have to reconsider lag occurrence, and the 
	[a class=intlink href=/SuperMarioWorldTricks#FadeoutLag 
		"current description of lag
	]a
	" seems to be neigher sufficient nor essential. Anyway, I'm going to write down what we know about lag, although we are still away from complete understanding.
	$LF
]div
[div class=p 
	"First of all, there is no doubt that lag (both in-level and fedeout) depends on any processings such as sprites' actions, moving layers, fadeout, etc. So if we want to reduce lag, we have to manipulate any of them. But we historically know lag should depend also on score. Why? The game must do sorta many processings around scores; the score is kept in memory addresses as a hexadecimal value, while the score drawn on the screen is decimal, so the game converts a hexadecimal score into a decimal score 
	[em 
		"every frame
	]em
	". I think this conversion makes dozens of processings and thus a large score amounts to increase lag. For the same reason, mario's lives and coins could also increase lag. In order to manipulate lag, it seems enough to hold down the sum of the digits of the score, and the second digits of coins and lives (or also their first digits, but I'm not sure).
	$LF
]div
[div class=p 
	"Because heavy control of scores, lives and coins often keeps smw runs away from being entertaining, it should be traded off for entertainment. The smw any% run is not the case, though.
	$LF
]div
[h3 id=Level-by-levelcomments 
	" Level-by-level comments
	$LF
]h3
[div class=p 
	"The number in each heading (except for yi2 and yi3) indicates how many frames are saved compared to the previous run, without counting the change of fadeout lag. The numbers in the headings of yi2 and yi3 are those of frames saved between entrance into the current level and into the next. 
	[a class=extlink href=http://www.mediafire.com/file/zwz3mjznqv2/smw11_v2.xls rel=nofollow 
		"This spreadsheet
	]a
	" may also help you.
	$LF
]div
[h4 id=Yoshi'sIsland2(－158) 
	" Yoshi's Island 2 (－158)
	$LF
]h4
[div class=p 
	"We get yoshi in this level in order to use the dragon coin glitch in the next level. Producing two yoshis at the same time shortens yoshi's growth motion by 32 frames (each of them decreases the growth timer 
	[tt 
		"7E18E8
	]tt
	" by one per frame, and the timer starts from 64). Moreover, we try to get less coins to reduce fadeout lag of iggy fight. We lose 158 frames before entering yi3.
	$LF
]div
[h4 id=Yoshi'sIsland3(359) 
	" Yoshi's Island 3 (359)
	$LF
]h4
[div class=p 
	"The main part of our improvement; it took over 30,000 rerecords to optimize this level. It was a revolutionary idea to use double hits to dulplicate many turning blocks, and the discovery of block duplication away from blocks enables us to avoid hitting a message box and getting a dragon coin even when they are near blocks we want to duplicate. In order to keep p-meter until getting yoshi off, we use 6/5 and platform-boost. We get 359 frames (and totally 199 frames) before entering yi4.
	$LF
]div
[h4 id=Yoshi'sIsland4(0) 
	" Yoshi's Island 4 (0)
	$LF
]h4
[div class=p 
	"No change.
	$LF
]div
[h4 id=#1Iggy'sCastle(0) 
	" #1 Iggy's Castle (0)
	$LF
]h4
[div class=p 
	"No change. But in this level, we found that the number of coins we get has to do with lag. It was after almost completing movie that we noticed this fact, so we redo yi2 through C1 to regulate the number of coins. After we changed it from 66 to 35, 4 frames of fadeout lag were shaved off.
	$LF
]div
[h4 id=DonutPlains1(1) 
	" Donut Plains 1 (1)
	$LF
]h4
[div class=p 
	"We fly into some blocks and gain 1 frame. When grabbing the feather, we can indeed get two more subpixels than the movie, but we would obtain no frames. This level, sw4, big boo fight and bowser fight demonstrate the "rise cancel" glitch and its variants.
	$LF
]div
[h4 id=DonutSecret1(1) 
	" Donut Secret 1 (1)
	$LF
]h4
[div class=p 
	"There is no change except in the extra room, where we get flight speed 51 and swoop after catching the shell.
	$LF
]div
[h4 id=DonutSecretHouse(5) 
	" Donut Secret House (5)
	$LF
]h4
[div class=p 
	"In the first room, we save 1 frame by optimizing the way to get through the stairs. In the second room, we fly in turning blocks and add a corner-boost after getting the P-switch; 4 frames saved. The regulation of score restricts mario's action a lot in big boo fight, where I instead make some tetris pieaces. I believe I did well.
	$LF
]div
[h4 id=StarWorld1(9) 
	" Star World 1 (9)
	$LF
]h4
[div class=p 
	"New smashola route due to ISM. If the number of coins were less than 10, we could shave off 2 more frames of fadeout lag.
	$LF
]div
[h4 id=StarWorld2(1) 
	" Star World 2 (1)
	$LF
]h4
[div class=p 
	"We optimize the x speed oscillation just before grabbing the small yoshi. 
	$LF
]div
[h4 id=StarWorld3(5) 
	" Star World 3 (5)
	$LF
]h4
[div class=p 
	"New strategy to hit the key box shaves off 5 frames. By using also a grab block (dark blue one) we can hit the key box 1 frame faster than using only the gray P-switch. I think this phenomenon has to do something with their sprite IDs, but I'm not sure.
	$LF
]div
[h4 id=StarWorld4(1) 
	" Star World 4 (1)
	$LF
]h4
[div class=p 
	"The only special thing we do is to fly into a few blocks.
	$LF
]div
[h4 id=FrontDoor(55) 
	" Front Door (55)
	$LF
]h4
[div class=p 
	"I tested various ideas to destroy room #5, and I managed to squeeze under two spikes farther. To get invincibility and flight at the same time, we snag the spike just before the takeoff meter vanishes. Before entering the door to room #2, if the cape spin would have good timing, the ceiling-boost trick might shave off 1 frame.
	$LF
]div
[h4 id=Bowser(－7) 
	" Bowser (－7)
	$LF
]h4
[div class=p 
	"I found a way to stomp a mechakoopa 3 frames faster than before, but unfortunately, all of this advantage seems to be thrown away because of some frame rule, except in the third phase. Moreover, because we aim firstly for defeating bowser as soon as possible and next for stopping the input, we lose 7 frames in bowser fight as a result. If we would aim for the fastest way to end input, 
	[a class=extlink href=http://dehacked.2y.net/microstorage.php/info/678970382/fastest-end-input.smv rel=nofollow 
		"the movie could be ended in 37298 frames
	]a
	".
	$LF
]div
[div class=p 
	"The mechanism of the above method is as follows: when touching a sprite, its hitbox vanishes for some frames (this value is individual for each sprite; the memory addresses 
	[tt 
		"7E154C-7E1557
	]tt
	" are the timers). For the bowser case, its hitbox vanishes for 32 frames, so we can stomp a mechakoopa during the while, without damaged.
	$LF
]div
[h3 id=Suggestivescreenshots 
	" Suggestive screenshots
	$LF
]h3
[div class=p 
	"5997, 19513, 29725.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/Nach 
		"Nach
	]a
	": Accepting this lovely Tetris homage, as a nice unexpected improvement to an existing run.
]div
