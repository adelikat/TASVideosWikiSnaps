4
[p 
	"You and your grandfather just bought a small farm for growing vegetables and raising horses. Unfortunately, you find that the place is infested with animals that are determined to drive you away. Using your trusty gun, you aim to rid the property of these pests.
	$LF
]p
[p 
	"This run completes the first three levels, after which there is no new content. A trick is used to end the bonus levels immediately by shooting Gramps.
	$LF
]p
[p 
	"Warning: The screen briefly flashes white every time the lightgun shoots. Do not watch if you are sensitive to this.
	$LF
]p
[p 
	(youtube|v=18ZXlbEfnJs)
	$LF
]p
[h4 
	" About the run
	$LF
]h4
[ul 
	[li 
		" Emulator used: BizHawk 1.7.4 (the game does not open in revisions earlier than 1.7.2)
		$LF
	]li
	[li 
		" Aims for fastest game completion
		$LF
	]li
	[li 
		" Manipulates luck
		$LF
	]li
	[li 
		" Manipulates away lag
		$LF
	]li
	[li 
		" Genre: Shooter
		$LF
	]li
]ul
[p 
	"I've been working on this off and on since this game became TASable with the release of BizHawk 1.7.2. The only method of input is the XG-1 lightgun, which is why BizHawk didn't know how to handle input for this game before the VirtualPad fix.
	$LF
]p
[p 
	"An alternate version of this submission text is included in the Comments file inside the bk2 for your convenience. Simply open the bk2 as an archive and open Comments with any text editor.
	$LF
]p
[p 
	"I chose fastest game completion over 
	[a class=extlink href=http://www.youtube.com/watch?v=7TtGusac-bI rel=nofollow 
		"fastest input
	]a
	" because it keeps the run from feeling incomplete. If aiming for fastest input, you only need to shoot the first enemy in Level 3, since the game reads 1/1 enemies shot as a perfect score (and ignores the ones you missed). It's hard to sit through Level 3 with just the animals running across though, so I ran the rest of the level too.
	$LF
]p
[h3 
	" About the game
	$LF
]h3
[p 
	"As with other lightgun games, you must shoot targets as they appear on the screen. There are three unique levels that loop endlessly, with Gramps' bonus screen in between.
	$LF
]p
[p 
	"The game's RNG doesn't seem to cycle until I pull the trigger for the event I want to manipulate, and invisible lag behaves the same way. This requires me to brute-force everything by hand.
	$LF
]p
[p 
	"Some animals can't be shot as soon as they first appear on screen, and attempting to do so by shooting at the extreme left and right edges of the screen will cause the shot to be displaced to a random spot on the screen. I think this is a combination of strange animal hitboxes and range limitations of the XG-1.
	$LF
]p
[h3 
	" Level-by-level comments
	$LF
]h3
[h4 
	" Level 1
	$LF
]h4
[ul 
	[li 
		" The number of bottles in this stage is determined by RNG and based on the frame you shoot the "One Player" hay bale. Bottles can be shot much faster than cans, so I made as many bottles appear as I could without wasting too much time. The "random" sequence goes:
		$LF
	]li
]ul
[pre 
	"3,4,4,4,4,4,3,4,3,4,3,3,5...
	$LF
]pre
[ul 
	[li 
		" A screen with 5 bottles turned out to be only 12 frames away. The nearest 6-bottle screen was 127 frames away and didn't save as much time overall.
		$LF
	]li
	[li 
		" This level can have odd delays when the targets are shot in certain orders.
		$LF
	]li
]ul
[h4 
	" Bonus Level
	$LF
]h4
[ul 
	[li 
		" Skipped by shooting Gramps. Poor Gramps.
		$LF
	]li
]ul
[h4 
	" Level 2
	$LF
]h4
[ul 
	[li 
		" Since shooting the enemies is pretty trivial, the challenge in this and the next level comes from finding where to waste frames to reduce long delays and end the level fastest.
		$LF
		[ul 
			[li 
				" It's usually apparent when you've found the fastest pattern, as the delays between animal appearances will all but disappear. The fastest pattern is the one that allows you to shoot the last animal earlier than in all of the other attempts.
				$LF
			]li
		]ul
		" Enemies change position every 5 frames. Wasting a frame before shooting an onscreen enemy will cause the next enemy to appear at the start of the next key position, 5 frames later. To avoid this, I instead waste frames before the level starts and before shooting the last enemy. These are the results of my testing:
		$LF
	]li
]ul
[table 
	[tbody 
		[tr 
			[th 
				"Frames wasted (beginning)
			]th
			[th 
				"Frames wasted (end)
			]th
			[th 
				"Notes
			]th
		]tr
		[tr 
			[td 
				"0
			]td
			[td 
				[del 
					"0
				]del
				"...
				[em 
					"3
				]em
				"...
			]td
			[td 
				"23 frames from optimal
			]td
		]tr
		[tr 
			[td 
				"1-10
			]td
			[td 
				[del 
					"0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
				]del
			]td
		]tr
		[tr 
			[td 
				"11
			]td
			[td 
				[em 
					"0
				]em
				"...
			]td
			[td 
				"1 frame from optimal
			]td
		]tr
		[tr 
			[td 
				"12-14
			]td
			[td 
				[del 
					"0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
				]del
			]td
		]tr
		[tr 
			[td 
				"15
			]td
			[td 
				[b 
					"0
				]b
				"...
			]td
			[td 
				"optimal pattern
			]td
		]tr
		[tr 
			[td 
				"16-20
			]td
			[td 
				[del 
					"0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
				]del
			]td
		]tr
		[tr 
			[td 
				"21
			]td
			[td 
				[em 
					"0
				]em
				"...
			]td
			[td 
				"tied for 1 frame from optimal
			]td
		]tr
		[tr 
			[td 
				"22-24
			]td
			[td 
				[del 
					"0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
				]del
			]td
		]tr
		[tr 
			[td 
				"25
			]td
			[td 
				[b 
					"0
				]b
				"...
			]td
			[td 
				"tied for optimal pattern
			]td
		]tr
		[tr 
			[td 
				"26-29
			]td
			[td 
				[del 
					"0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
				]del
			]td
		]tr
	]tbody
]table
[ul 
	[li 
		" There seems to be a pattern here, since 11 and 21 both lead to a near-optimal pattern and 15 and 25 both lead to the optimal one. Everything else was way too slow to be notable.
		$LF
	]li
]ul
[h4 
	" Bonus Level
	$LF
]h4
[ul 
	[li 
		" Skipped by shooting Gramps. Sorry, Gramps...
		$LF
	]li
]ul
[h4 
	" Level 3
	$LF
]h4
[ul 
	[li 
		" There are three different places to waste frames before starting Level 3 (level 2 results, bonus, and bonus results), so I initially tested several combinations of wasting frames in three places. This became a lot easier once I noticed that while the optimal pattern wouldn't always occur, when it did, it was always after wasting 9 frames somewhere:
		$LF
	]li
]ul
[table 
	[tbody 
		[tr 
			[th 
				"Frames wasted (lvl2results)
			]th
			[th 
				"Frames wasted (bonus)
			]th
			[th 
				"Frames wasted (bonusresults)
			]th
			[th 
				"Notes
			]th
		]tr
		[tr 
			[td 
				"0
			]td
			[td 
				"0
			]td
			[td 
				[del 
					"0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
				]del
			]td
		]tr
		[tr 
			[td 
				"0
			]td
			[td 
				"1
			]td
			[td 
				[em 
					"1
				]em
				"...
				[em 
					"8
				]em
				"...
			]td
			[td 
				"fastest input; 15 frames away
			]td
		]tr
		[tr 
			[td 
				"0
			]td
			[td 
				"2,3,4,5
			]td
			[td 
				[del 
					"7,6,5,4
				]del
			]td
		]tr
		[tr 
			[td 
				"0
			]td
			[td 
				"6
			]td
			[td 
				[b 
					"3
				]b
			]td
			[td 
				"tied for optimal
			]td
		]tr
		[tr 
			[td 
				"0
			]td
			[td 
				"7,8,9
			]td
			[td 
				[del 
					"2,1,0
				]del
			]td
		]tr
		[tr 
			[td 
				"1
			]td
			[td 
				"0
			]td
			[td 
				[em 
					"8
				]em
			]td
			[td 
				"6 frames away
			]td
		]tr
		[tr 
			[td 
				"1
			]td
			[td 
				"1
			]td
			[td 
				[em 
					"0...
					[b 
						"7
					]b
				]em
				"...
			]td
			[td 
				"tied for fastest input; optimal input
			]td
		]tr
		[tr 
			[td 
				"1
			]td
			[td 
				"2,3,4,5
			]td
			[td 
				[del 
					"6,5,4,3
				]del
			]td
		]tr
		[tr 
			[td 
				"1
			]td
			[td 
				"6
			]td
			[td 
				[b 
					"2
				]b
			]td
			[td 
				"tied for optimal
			]td
		]tr
		[tr 
			[td 
				"1
			]td
			[td 
				"7,8
			]td
			[td 
				[del 
					"1,0
				]del
			]td
		]tr
		[tr 
			[td 
				"3
			]td
			[td 
				"0
			]td
			[td 
				[del 
					"6
				]del
			]td
		]tr
		[tr 
			[td 
				"3
			]td
			[td 
				"1
			]td
			[td 
				[b 
					"5
				]b
			]td
			[td 
				"tied for optimal
			]td
		]tr
		[tr 
			[td 
				"3
			]td
			[td 
				"2,3,4,5
			]td
			[td 
				[del 
					"4,3,2,1
				]del
			]td
		]tr
		[tr 
			[td 
				"3
			]td
			[td 
				"6
			]td
			[td 
				[b 
					"0
				]b
			]td
			[td 
				"tied for optimal
			]td
		]tr
		[tr 
			[td 
				"4
			]td
			[td 
				"5
			]td
			[td 
				[em 
					"0
				]em
			]td
			[td 
				"6 frames away
			]td
		]tr
		[tr 
			[td 
				"5
			]td
			[td 
				"3,4
			]td
			[td 
				[del 
					"1,0
				]del
			]td
		]tr
		[tr 
			[td 
				"9
			]td
			[td 
				"0
			]td
			[td 
				[del 
					"0
				]del
			]td
		]tr
	]tbody
]table
[ul 
	[li 
		" After this much testing, I decided I had found the fastest input pattern.
		$LF
	]li
]ul
[h3 
	" Possible Improvements
	$LF
]h3
[p 
	"Though I tried many different possibilities for Level 3, it is always possible that a bot could work out a better input pattern.
	$LF
]p
[h3 
	" Suggested screenshot
	$LF
]h3
[p 
	"3304
	$LF
	[br 
	]br
	[img class=embed src=http://i.imgur.com/qpof4ZQ.png 
	]img
	$LF
]p
[h3 
	" Thanks to
	$LF
]h3
[ul 
	[li 
		" The BizHawk devs for recently making this game TASable
		$LF
	]li
	[li 
		" Cousin Vinnie Vineyard from AtariAge for the Gramps trick
		$LF
	]li
	[li 
		" 
		[a class=intlink href=/Users/Profile/FractalFusion 
			"FractalFusion
		]a
		" for the 
		(__wikiLink|/AdvancedLuckManipulation|AdvancedLuckManipulation)
		" page, which helped me figure out the RNG
		$LF
	]li
	[li 
		" 
		[a class=intlink href=/Users/Profile/MESHUGGAH 
			"MESHUGGAH
		]a
		" for teaching me how to 
		[a class=intlink href=/2406M 
			"go slower to go faster
		]a
		" and reduce lag
		$LF
	]li
	[li 
		" You, for watching
		$LF
	]li
]ul
[hr 
]hr
[p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Publishing to Vault.
]p
