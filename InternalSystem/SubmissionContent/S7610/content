4
[div class=p 
	"Rise of the Dragon for Sega CD
	$LF
]div
[div class=p 
	"TAS recorded on BizHawk 2.8. Sega CD BIOS version 1.10 USA.
	$LF
]div
[div class=p 
	".CUE SHA-1: 3C241CEEFC31754D411B682B7B397494FAE7F059
	$LF
]div
[div class=p 
	"Track 1.bin SHA-1: EA97A8CA280540F160B0884C6A0E52EDEA3692EA
	$LF
]div
[div class=p 
	"Track 2.bin SHA-1: 06486711B36741362822922073AA722FAD45E4F0
	$LF
]div
[div class=p 
	"Track 3.bin SHA-1: 63A75172B7D96C24779F686287FAC7160C4E0A15
	$LF
]div
[div class=p 
	"Track 4.bin SHA-1: 8C18E2DDCF046A372AC77CB2D439D10EAAEF0E80
	$LF
]div
[div class=p 
	"Track 5.bin SHA-1: ECC1E2FE6DAA0855AA7E25639A12843436209909
	$LF
]div
[div class=p 
	"(All found using HxD & ROM Hasher)
	$LF
]div
[div class=p 
	"Please notice the first screen after the SEGA logo, this text screen is different depending on the version. The original version says "© 1992 Sierra" on it and the text is left-aligned, the second release says "© 1994 Sierra" on it and the text is center-aligned. I am playing on the original USA release of the game which was sold in a cardboard box, rather than the second release which was in a plastic case. This initial release allows you to skip the opening cutscene, which is very long.
	$LF
]div
[div class=p 
	"This is the third time I've TASed any%, and probably the last? This run has an 8 second improvement over the last run (located here: 
	[a href=https://www.youtube.com/watch?v=VJp-2SNRs_4 rel=noopener external nofollow 
		"https://www.youtube.com/watch?v=VJp-2SNRs_4
	]a
	" ). The biggest improvement and one I'm most proud of is one-cycling the Qwong wire minigame. I do not know how tight of a window it is but I feel like my margin of error is only a couple of frames. Opening the blown lock as late as possible and instantly starting to move the red piece is a key factor. It is barely doable with the current knowledge but I'm glad I can prove it can be done. Most other improvements were mainly better dialogue options and better movement between inventory and out. Still one-cycled reservoir, feel like it could always be done better due to RNG, but I can't manipulate it at all.
	$LF
]div
[div class=p 
	"I'll post this in every run I do because it's important to know how the cursor movement works:
	$LF
]div
[div class=p 
	"The main movement is this game is the mouse cursor. If you hold a certain direction, your mouse speed will accelerate from 1 frame a second to 8 frames a second, taking 52 frames to reach maximum speed, and you can maintain the 8 frames per second speed if you remain moving after the 52 frames. However, it's a little more complicated than that. If you need to turn a different direction, you can keep this speed as long as you change directions within 2 of the 8 cardinal directions, and as long as one of them is a diagonal (for example: N to NE, NE to N, or NE to SE all work, but NOT N to E). If I want to move W to pick up an item and move E to drop it into my inventory (assuming I'm at maximum speed), it's faster to:
	$LF
]div
[div class=p 
	"Frame 1: Move W and pickup on same frame
	$LF
]div
[div class=p 
	"Frame 2: Move NW for a frame
	$LF
]div
[div class=p 
	"Frame 3: Move NE for a frame
	$LF
]div
[div class=p 
	"Frame 4: Move E
	$LF
]div
[div class=p 
	"You can also swap north in this example to south if you want. I have to do a U-Turn movement to maintain my fast acceleration. You can't keep the speed through most screen transitions or when accessing the inventory.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/slamo 
		"slamo
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/slamo 
		"slamo
	]a
	": Cutting off 12147 frames of blank input and removing the "any%" branch.
	$LF
]div
[div class=p 
	"There are tons of little improvements here in almost every section, nice work! Accepting over the 
	(__wikiLink|displaytext=current publication|href=/4765M)
	".
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/despoa 
		"despoa
	]a
	": Processing...
]div
