6
[div class=card mb-2 
	[div class=card-header 
		[strong 
			"Table of contents
		]strong
	]div
	[div class=card-body 
		[ul 
			[li 
				[a href=#Introduction 
					" Introduction
					$LF
				]a
			]li
			[li 
				[a href=#Emulation 
					" Emulation
					$LF
				]a
				[ul 
					[li 
						[a href=#RomInformation 
							" Rom Information
							$LF
						]a
					]li
					[li 
						[a href=#Emulator 
							" Emulator
							$LF
						]a
					]li
					[li 
						[a href=#RoutingBot 
							" Routing Bot
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#Timing 
					" Timing
					$LF
				]a
			]li
			[li 
				[a href=#StageBreakdown 
					" Stage Breakdown
					$LF
				]a
				[ul 
					[li 
						[a href=#Pool 
							" Pool
							$LF
						]a
					]li
					[li 
						[a href=#Outdoors 
							" Outdoors
							$LF
						]a
					]li
					[li 
						[a href=#Cage 
							" Cage
							$LF
						]a
					]li
					[li 
						[a href=#Jail 
							" Jail
							$LF
						]a
					]li
					[li 
						[a href=#Vents 
							" Vents
							$LF
						]a
					]li
					[li 
						[a href=#OutdoorsIi 
							" Outdoors II
							$LF
						]a
					]li
					[li 
						[a href=#Caves 
							" Caves
							$LF
						]a
					]li
					[li 
						[a href=#BarracksI 
							" Barracks I
							$LF
						]a
					]li
					[li 
						[a href=#BarracksIi 
							" Barracks II
							$LF
						]a
					]li
					[li 
						[a href=#Tank 
							" Tank
							$LF
						]a
					]li
					[li 
						[a href=#FinalI 
							" Final I
							$LF
						]a
					]li
					[li 
						[a href=#FinalIi 
							" Final II
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#FutureWork 
					" Future Work
					$LF
				]a
			]li
			[li 
				[a href=#SuggestedThumbnails 
					" Suggested Thumbnails
					$LF
				]a
			]li
		]ul
	]div
]div
[h3 id=Introduction 
	" Introduction
	$LF
]h3
[pre 
	$LF
]pre
[div class=p 
	"Another World (a.k.a. Out of this World) is an adventure game designed and coded by Eric Chahi. It features Lester, a young scientist and Ferrari owner that, after a failed experiment, ends up in an Alien planet where everything tries to kill him. This is one of my first childhood experiences with a game that 'feels like a movie' and was my favourite for a long time. My first choice of a platform was MS-DOS but the emulation is not mature enough for me to use the exploration bot. Between the alternatives, the Genesis and SNES ports, I chose the former because it plays and loads so much faster than the latter (Sega does what Nintendon't). 
	$LF
]div
[div class=p 
	"This movie builds on many of the tricks found in the SNES 
	[a href=https://tasvideos.org/2682M rel=noopener external nofollow 
		"movie
	]a
	", but adds new tricks of its own: 
	$LF
]div
[ul 
	[li 
		" Overall movement and fight optimizations: Using a bot, we refined the movement and fight sequences overall, compared to the SNES version.
		$LF
	]li
	[li 
		" Moving Charge: the game is designed in a way such that you can only build gun power while you are statically standing or crouching. However we found a way to move while doing this. This allows us to overlap the time spent moving and charging into one, saving a lot of time in many sections (see below).
		$LF
	]li
]ul
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/Lg8s4W5/Another-World-E-2022-07-07-12-04-41.png 
	]img
	$LF
]div
[ul 
	[li 
		" Lag Reduction: there is a frame of lag per game frame introduced for every moving object (alien, gun shot, falling debris, enemy, etc). In this movie we made every attempt to reduce the number of lag frames.
		$LF
	]li
]ul
[div class=p 
	"A total of 3 weeks were spent on this project, mostly on exploring the RAM map, finding level-specific triggers, route strategizing, scripting each level, running the bot, and performing manual adjustments to the movie.
	$LF
]div
[h3 id=Emulation 
	" Emulation
	$LF
]h3
[h4 id=RomInformation 
	" Rom Information
	$LF
]h4
[ul 
	[li 
		" Name: Another World (E) 
		"[!]
		$LF
	]li
	[li 
		" SHA1: 9D98D6817B3E3651837BB2692F7A2A60A608C055
		$LF
	]li
	[li 
		" MD5:  8CC928EDF09159401618E273028216EA
		$LF
	]li
]ul
[h4 id=Emulator 
	" Emulator
	$LF
]h4
[ul 
	[li 
		" EmuHawk 2.8.0 (Core: Genplus-gx)
		$LF
	]li
]ul
[h4 id=RoutingBot 
	" Routing Bot
	$LF
]h4
[ul 
	[li 
		" Bot: 
		[a href=https://github.com/SergioMartin86/jaffar rel=noopener external nofollow 
			"Jaffar
		]a
		" (new version in development)
		$LF
	]li
	[li 
		" Routing Core: Genplus-gx (Average Exploration Performance: 0.6M States/s)
		$LF
	]li
	[li 
		" Platform: AMD Ryzen Threadripper 3990X Processor (64 cores, 128 threads) + 256Gb RAM
		$LF
	]li
]ul
[h3 id=Timing 
	" Timing
	$LF
]h3
[pre 
	[code 
		$UNPRINTABLE TEXT!!!
	]code
]pre
[h3 id=StageBreakdown 
	" Stage Breakdown
	$LF
]h3
[h4 id=Pool 
	" Pool
	$LF
]h4
[div class=p 
	"Here a faster swim speed was achieved by not only holding Up, but also intermittently hitting A and L/R. This is a common pattern during the entire game where interrupting the current animation achieves a higher movement speed. In this case, a higher swim speed.
	$LF
]div
[h4 id=Outdoors 
	" Outdoors
	$LF
]h4
[div class=p 
	"Here, as stated in the SNES version's notes, a faster run speed is achieved by not simply bunny hopping, but also performing small 'sprints' in the middle. This accelerates de overall movement. A skip was attempted here by jumping over the 'DOG' when it stumbles into the ground. However, the game does not trigger a transition to the next act if you don't use the vine to skip it, and therefore was not used in this movie.
	$LF
]div
[h4 id=Cage 
	" Cage
	$LF
]h4
[div class=p 
	"Similar to the SNES movie, we achieve the fastest cage-break cycle by falling into the guard before he shoots. 
	$LF
]div
[h4 id=Jail 
	" Jail
	$LF
]h4
[div class=p 
	"A few tricks were used here.
	$LF
]div
[ul 
	[li 
		" A faster gun pickup was achieved without the need of crouching/standing up by hitting Down while performing another movement.
		$LF
	]li
	[li 
		" Similar to the SNES version, a tri-door skip was used by maintaining a bunny hoping pace
		$LF
	]li
	[li 
		" Moving charge was used to charge the gun while running towards the breakable door. This is an improvement over the SNES movie.
		$LF
	]li
	[li 
		" To reduce frame lag, we wait for the doors to be decoded in the elevator room where fewer actors exist.
		$LF
	]li
]ul
[h4 id=Vents 
	" Vents
	$LF
]h4
[div class=p 
	"Nothing new here except that the movement was optimized, as some of the rolling animations were precisely interrupted for maximum speed.
	$LF
]div
[h4 id=OutdoorsIi 
	" Outdoors II
	$LF
]h4
[div class=p 
	"Here Moving Charge was used but only for entertainment purposes since it did not achieve any speedups. The enemy in the bridge is shot from up close to reduce lag frames.
	$LF
]div
[h4 id=Caves 
	" Caves
	$LF
]h4
[div class=p 
	"This level was extensively optimized for movement speed. Moving Charge was used thrice, which represents a big time save compared to the SNES movie:
	$LF
]div
[ul 
	[li 
		" One for the pool wall
		$LF
	]li
	[li 
		" One for the water wall (all charging is made from the previous room to reduce lag)
		$LF
	]li
	[li 
		" One for the door/wall before the next level
		$LF
	]li
]ul
[div class=p 
	"Another optimization compared to the SNES movie was shooting the hanging vines only once (when going to the pool), instead of twice (when coming back too).
	$LF
]div
[h4 id=BarracksI 
	" Barracks I
	$LF
]h4
[div class=p 
	"Here the overall same strategy and tricks were used, compared to the SNES variant. Here we use used of the Moving Charge trick to accelerate the first shield creation.
	$LF
]div
[h4 id=BarracksIi 
	" Barracks II
	$LF
]h4
[div class=p 
	"Overall the same strategy as the SNES movie, except for the following optimizations:
	$LF
]div
[ul 
	[li 
		" The second fight (after grabbing the carp) is slighlty optimized to reduce lag and start running faster.
		$LF
	]li
	[li 
		" Moving Charge was used to accelerate the destruction of the ball throwing guard's door
		$LF
	]li
	[li 
		" Moving Charge was to used to insta-kill the last guard for a much faster fight compared to the SNES movie
		$LF
	]li
]ul
[h4 id=Tank 
	" Tank
	$LF
]h4
[div class=p 
	"This section was completely brute-forced. Turns out one can press one button per frame, and ALSO advance one position horizontally AND one position Vertically. The bot found a way to hit all required buttons, one per frame, for a lightining-fast eject.
	$LF
]div
[h4 id=FinalI 
	" Final I
	$LF
]h4
[div class=p 
	"Here the same strategy is used as in the SNES movie. A curious detail: this first part can be ended faster if you allow your alien friend to die. He will come back to life in the next section, but unfortunately the game ending trigger will not work. A shame, it would have been very cool.
	$LF
]div
[h4 id=FinalIi 
	" Final II
	$LF
]h4
[div class=p 
	"Nothing special here, just air-tight execution.
	$LF
]div
[h3 id=FutureWork 
	" Future Work
	$LF
]h3
[div class=p 
	"There is space for optimizations. A better positioning after the water push (in Caves) could be achieved. I also think I could get a better Final I when/if get my hands on a more powerful computer sometime. I do not think new tricks could be found, but you never know!
	$LF
]div
[h3 id=SuggestedThumbnails 
	" Suggested Thumbnails
	$LF
]h3
[div class=p 
	"26977
	$LF
	"16407
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/slamo 
		"slamo
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/slamo 
		"slamo
	]a
	": Great job on the optimization, as expected. This is much faster than any other speedrun of this game.
	$LF
]div
[div class=p 
	"The main concern with this movie was the PAL usage. The argument was that PAL has less lag frames than NTSC, and while this is true, a quick comparison will reveal that NTSC is still overall faster due to the higher framerate. Our rules state that NTSC is "usually preferred" over PAL, and this is definitely one of those cases where that applies. Given the good faith belief that PAL would be better, the difficulty of resyncing this run on the NTSC version, and the high quality of the optimization, I'm going to give this one a pass for now. However, a similarly optimized NTSC run should obsolete this, even if there are no other improvements. There are plans to make an improved version anyway, so maybe it won't come to that.
	$LF
]div
[div class=p 
	"Accepting.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/EZGames69 
		"EZGames69
	]a
	": Processing...
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/EZGames69 
		"EZGames69
	]a
	": Changed the game name to be consistent with the SNES publication.
]div
