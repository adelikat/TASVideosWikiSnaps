4
[div class=p 
	[em 
		"Flicky
	]em
	" is an arcade-style Genesis game in which a flightless blue bird named Flicky must rescue her Chirps dispersed throughout the 48 rounds and bring them safely to the exit. Along the way, Tiger and Iggy will try to stop her. Luckily, there are miscellaneous items on the ground Flicky can throw to really send them rolling!
	$LF
]div
[h2 id=Highlights 
	"Highlights
	$LF
]h2
[ul 
	[li 
		" Aims for maximum score
		$LF
	]li
	[li 
		" Heavy resource management
		$LF
	]li
	[li 
		" 100% Completion
		$LF
	]li
	[li 
		" Second Quest/post game completion
		$LF
	]li
]ul
[h2 id=MaximumScoreGoal 
	"Maximum Score Goal
	$LF
]h2
[div class=p 
	"This TAS intends to hit the maximum score of 99,999,990 right on the money. Ten points over that and the score underflows to zero, which is no good! The TAS must play through 961 rounds of Flicky to get there, so I hope you're ready for a marathon! Because the developers didn't intend for anyone to play for this many rounds, we see some goofy behaviors along the way, such as the credits playing when they're not supposed to (i.e., every time after beating a round 
	[em 
		"displayed
	]em
	" as 48), and every time we beat 255 rounds, where the game and difficulty suddenly reset to Round 1.
	$LF
]div
[h4 id=BikiniGirlBonuses 
	"Bikini Girl Bonuses
	$LF
]h4
[div class=p 
	"The routing for this run was mostly trivial, as the currently published TAS which goes strictly for best time pretty much maxes out the rate of score gain as well—with the exception of the bikini girl bonuses. Here we got 
	[em 
		"most
	]em
	" of the bikini girl bonuses (more on why we skipped some of them later). The bikini girl bonus is only awarded if you did the following on the previous 8 levels:
	$LF
]div
[ul 
	[li 
		"Beat all of them in under 40 seconds (at least a 5000-pt time bonus)
		$LF
	]li
	[li 
		"Deliver all your chirps to the exit in a single chain
		$LF
	]li
]ul
[div class=p 
	"... you will get the bonus where the bikini girl appears in the window. This is only awarded on the following rounds:
	$LF
]div
[ul 
	[li 
		" 10: 10,000 pts
		$LF
	]li
	[li 
		" 18: 50,000 pts
		$LF
	]li
	[li 
		" 26: 100,000 pts
		$LF
	]li
	[li 
		" 34: 500,000 pts
		$LF
	]li
	[li 
		" 42: 1,000,000 pts
		$LF
	]li
	[li 
		" 50: 2,000,000 pts (this bonus is only awarded on Round 2 if you've already played through 255 rounds)
		$LF
	]li
]ul
[div class=p 
	"... after which the above sequence will loop again starting at Round 58.
	$LF
]div
[h4 id=Round959 
	"Round 959
	$LF
]h4
[div class=p 
	"So after playing 959 rounds of Flicky, pretty much copying and pasting inputs from the existing 
	[a href=https://tasvideos.org/9759S rel=noopener external nofollow 
		"96 Rounds TAS
	]a
	", we've finally made it to the end... the maximum score is ours! But wait! There's a problem. Round 959 awards a 2,000,000-pt bikini girl bonus at the end of it, which would underflow our score by 216,910 points. This would invalidate our goal... we really should have planned this out better. The only way to hit the maximum score right on the dot is to strategically 
	[em 
		"lose
	]em
	" points in the previous levels, but which points are the fastest to lose? Or better yet, which points do we 
	[em 
		"gain
	]em
	" time for losing? That's right, the bikini girl bonuses. Specifically, I calculated that we can cancel all 22 of the 10,000-pt (saves 64 frames each) and one of the 50,000-pt bikini girl bonuses (saves 61 frames), which saves about 24.5 seconds total. Since we will also be losing an additional 4900 points for each bikini girl bonus cancel due to suboptimal chirp delivery, that means we're finishing the 959th round 165,790 points BELOW the maximum score now... but I also calculated that I can gain these points back via two avenues that are even faster than bikini girl bonuses...
	$LF
]div
[h4 id=Gems 
	"Gems
	$LF
]h4
[div class=p 
	"After knocking out an enemy, a gem will sometimes spawn at the location where the enemy disappears. Each gem awards a varying number of points, from I believe 100 to 5000 points. In Rounds 48, 60, and 96 (as well as their appearances in later loops), I slightly tweaked my stage movement as well as the timing of my enemy knockouts to 1) get a gem to spawn, 2) have it be in my path as I navigate the stage, and 3) get it to award a sizeable number of points. It is very hard to line up all three of these criteria, which is why I collect gems in such few stages. This rerouting resulted in a gain of 6,000 points (and loss of 38 and 26 frames) each time we play rounds 48 and 96 respectively, and 2,000 points (this find actually SAVES 3 frames!) in each round 60. We are now finishing the 959th round 15,790 points below our goal.
	$LF
]div
[h4 id=KnockingOutExtraEnemies 
	"Knocking Out Extra Enemies
	$LF
]h4
[div class=p 
	"You are awarded 200 points for hitting an enemy with an object; combo a second enemy and you'll get an additional 400 points; combo three for an extra 800 points. In total, I was able to find an extra 200 points at a loss of 1 frame in Round 61, 400 points at a loss of 1 frame in Round 62, and 200 points at no loss in Round 68. These point values seem like peanuts compared to the numbers we've been talking about but they really add up over multiple loops! The Round 61, 62, and 68 improvements are performed 4, 18, and 15 times respectively in this run, for a total gain of 11,000 points! This brings our finishing score at round 959 to 99,995,200, with 4,790 points to go.
	$LF
]div
[h4 id=Rounds960And961 
	"Rounds 960 and 961
	$LF
]h4
[div class=p 
	"The truth is, we will never be able to finish with the max score on round 959. We must play rounds 960 and 961, too. This is because our score ends in 00 after completing round 959. The only way to change the score in the 10's digit is in increments of 50 in bonus stages, and increments of 10 when collecting chirps in regular stages. So if our score after completing the 959th round ends in 00, and we originally had completely maxed out our points to get here, then we have no choice but to play round 960 (a bonus round) to get the score to end in 50, then round 961 (regular round) to collect 4 chirps to have the score end in 90. This is done by missing one chirp in Round 960 to boost my score by only 4,750 points instead of 15,000. This brings my score to 99,999,950 and perfectly lined up to just pick up 4 chirps in round 961, putting us at exactly 99,999,990 points! Ta-da! And we did it all in under 5 hours, averaging 97.5 points/frame!
	$LF
]div
[h2 id=MovementProperties 
	"Movement Properties
	$LF
]h2
[div class=p 
	"These values assume 1 pixel = 256 subpixels.
	$LF
]div
[ul 
	[li 
		" Soft speed cap: 1 pixel, 128 subpixels/frame (or 1.5 pixels/frame)
		$LF
	]li
	[li 
		" Hard speed cap: 1 pixel, 254 subpixels/frame
		$LF
	]li
	[li 
		" Velocity gain from wall bounce: 48 pixels/frame
		$LF
	]li
	[li 
		" Acceleration/deceleration on floor/air, holding left/right: 24 subpixels/frame^2
		$LF
	]li
	[li 
		" Deceleration on floor, holding nothing: 6 subpixels/frame^2
		$LF
	]li
	[li 
		" Deceleration in air, holding nothing (aka air drag): 0
		$LF
	]li
]ul
[h4 id=BasicMovementTech 
	"Basic Movement Tech
	$LF
]h4
[div class=p 
	"Holding left or right will accelerate Flicky by 24 subpixels/frame^2 until she reaches 1px, 128sbpx speed. However, this is only a soft speed cap. Once reaching the max speed and assuming we are standing on a floor, we can let go of the d-pad for one frame to decelerate by 6 subunits to 1px, 122sbpx speed. If we are to hold in the direction of our heading 
	[em 
		"now,
	]em
	" we will see our speed increase by 24 subunits to 1px, 146sbpx speed, 18 subunits higher than the soft speed cap! We now have several options:
	$LF
]div
[ul 
	[li 
		"We can hold the d-pad in the direction of our heading but doing this at any speed higher than 1px, 128sbpx speed will instantly set the speed to 1px, 128sbpx—hence why this speed is dubbed the 
		[em 
			"soft speed cap
		]em
		".
		$LF
	]li
	[li 
		"We can jump and hold nothing and since there is no air drag, we will retain the faster 1 px, 146sbpx speed over the course of our entire jump!
		$LF
	]li
	[li 
		"If we must stay on the ground, we can then alternate d-pad presses away from then toward our heading to perpetually oscillate between subpixel speeds of 122 and 146 for an average ground speed of 1px, 134sbpx (6 sbpx higher than the soft speed cap).
		$LF
	]li
	[li 
		"If on the ground, we can also just let go of everything to slowly decelerate our subpixel speed in intervals of 6: 146, 140, 134, 122—at which point we would hold in the direction of heading to bring the subpixel speed back to 146. This method achieves the exact same average speed as the previous: 1px, 134sbpx. I don't use this method as often in the TAS.
		$LF
	]li
]ul
[h4 id=WallBounces 
	"Wall Bounces
	$LF
]h4
[div class=p 
	"Bouncing off walls while not holding the d-pad not only gives Flicky an instant speed boost of 48 pixels/frame, but it bypasses the soft speedcap! Chain multiple wall bounces together and you can attain up to 1px, 254sbpx speed (the hard speed cap). 
	$LF
]div
[h4 id=FloorClips 
	"Floor Clips
	$LF
]h4
[div class=p 
	"A floor clip involves a precise jump into a platform edge which instantly magnetizes Flicky to the floor of the platform. This has the following advantages:
	$LF
]div
[ul 
	[li 
		"Instantly sets up for a new jump
		$LF
	]li
	[li 
		"Faster vertical position gain (via the small zip which occurs)
		$LF
	]li
	[li 
		"Faster horizontal position gain (can start moving left/right across the platform sooner) 
		$LF
	]li
]ul
[h2 id=ExtraLifePauseSkips 
	"Extra Life Pause Skips
	$LF
]h2
[div class=p 
	"There are five extra lives awarded at 30, 80, 160, 240, and 320 thousand points. A sound effect will play when getting each. The end-of-round text will not appear until said sound effect finishes playing. Therefore, it is desirable to obtain extra lives during round play or early in the final chirp chain delivery, which are far enough from the end-of-round text temporally. Each full skip of the extra life pause would save 27 frames. In practice however, since the bulk of points acquired during a speedrun are awarded at or near the end-of-round text, it is impossible to route anything which takes full advantage of all five opportunities. After extensive analysis, I determined the 3rd and 5th extra lives had the best 
	[em 
		"potential
	]em
	" for being fully skipped. When all was said and done, this TAS saves:
	$LF
]div
[ul 
	[li 
		"17 frames off the 3rd life in Round 8, obtained when the 4th chirp is delivered
		$LF
	]li
	[li 
		"7 frames off the 5th life in Round 14, obtained when the 6th chirp is delivered
		$LF
	]li
]ul
[div class=p 
	"Q: In Round 8, if you had just 200 extra points, you could have obtained the extra life when the 3rd chirp is delivered, which would save 22 frames instead of 17, right?
	$LF
	"A: Exactly, but adjusting the score by this small an amount requires hitting more Tigers or Iggys, or collecting gems. None of these took less than 5 extra frames to carry out, making that implementation not worthwhile.
	$LF
]div
[div class=p 
	"Q: What about bonus rounds? You could easily and substantially manipulate your score there to potentially acquire the extra lives in more favorable places.
	$LF
	"A: I played around with this quite a bit, and it happens that maxing out the score in all the relevant bonus rounds lines up the best opportunities for extra life skips.
	$LF
]div
[h4 id=NotesForTheJudge 
	"Notes for the Judge
	$LF
]h4
[ul 
	[li 
		" Please set the rerecord count to 126,870 to account for rerecords spent on the first loop TAS.
		$LF
	]li
]ul
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/eien86 
		"eien86
	]a
	": Claiming for judging.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/eien86 
		"eien86
	]a
	": Well, this movie does what it promises: it achieves the maximum possible score of this 
	[del 
		"ZX Spectr
	]del
	" Genesis game. I confirmed the last input is done in a way to catch the last bird and then lose all its lives to reach a 'Game Over'. Accepting to Standard 'Maximum Score'
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/inconsistent 
		"inconsistent
	]a
	": Processing...
]div
