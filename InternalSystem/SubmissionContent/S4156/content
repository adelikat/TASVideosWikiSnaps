8
[p 
	(youtube|v=OPcV9uIY5i4)
	$LF
]p
[p 
	(youtube|v=Uep1H_NvZS0)
	$LF
]p
[pre 
	$LF
]pre
[h3 
	" Game objectives
	$LF
]h3
[ul 
	[li 
		" Emulator used: lsnes rr2-Î²15
		$LF
	]li
	[li 
		" Demonstration
		$LF
	]li
	[li 
		" Heavy glitch abuse
		$LF
	]li
	[li 
		" Heavy luck manipulation
		$LF
	]li
]ul
[h3 
	" Comments
	$LF
]h3
[p 
	"My first submission of 2014 is a Total Control TAS. I would suggest watching the movie before reading this submission text. Since this run was (just) streamed at AGDQ 2014, you can say that this was console verified :D. As you might notice, this TAS doesn't aim for speed and the reason why it doesn't end on last input is because I wanted the last picture as a suggested picture.
	$LF
]p
[h3 
	" How did you do this?
	$LF
]h3
[p 
	"If you really want to know then I suggest reading the submission text of the 
	[a href=/3957S 
		"glitched SMW TAS
	]a
	", as the first around 100 seconds (until the game-breaking glitch) are the same.
	$LF
]p
[p 
	"In short: I manipulate where the moving objects (sprites) are located or where they despawn, then I swap the item in Yoshi's mouth with a flying ?-block (thus the yellow glitched shell) and using a glitch (stunning) to spawn a sprite which isn't used by SMW and since it tries to jump to the sprite routine location, it indexes everything wrong and jumps to a place I manipulated earlier with the sprites (OAM) and because of the P-Switch it jumps to controller registers and from there the arbitrary code execution is started.
	$LF
]p
[p 
	"Even shorter: Magic.
	$LF
]p
[h3 
	" This run and the TASBot
	$LF
]h3
[p 
	"So this TAS was designed to sync on the TASBot by true and dwangoAC. For example, I was limited by using only 3 multitap frames while I'm able to do 30. Though the bot can use all 8 controllers (2 multitaps) and since every controller has 16 buttons, that means 16 bits or 2 bytes for each controller, which are 2*8=16 bytes per multitap frame and 16*3=
	[b 
		"48 bytes per frame
	]b
	".
	$LF
]p
[h3 
	" Suggested Screenshots
	$LF
]h3
[p 
	[a class=extlink href=http://imgur.com/uKGBvb6 rel=nofollow 
		"6137
	]a
	", 
	[a class=extlink href=http://imgur.com/SW2OLkB rel=nofollow 
		"6238
	]a
	", 
	[a class=extlink href=http://imgur.com/hPmfJ3Y rel=nofollow 
		"6420
	]a
	", 
	[a class=extlink href=http://imgur.com/TZuA4gW rel=nofollow 
		"8171
	]a
	", 
	[a class=extlink href=http://imgur.com/uBnlTdT rel=nofollow 
		"8726
	]a
	$LF
]p
[h3 
	" Thanks to
	$LF
]h3
[ul 
	[li 
		" p4plus2 for helping me with more experienced ASM stuff
		$LF
	]li
	[li 
		" everyone that gave me weird ideas what to include in this run :D
		$LF
	]li
	[li 
		" AGDQ 2014 for creating a huge time pressure for me (that wasn't actually good)
		$LF
	]li
	[li 
		" true and dwangoAC for the console verification of this
		$LF
	]li
	[li 
		" YI2 for being the perfect level for Total Control
		$LF
	]li
]ul
[hr 
]hr
[p 
	(__wikiLink|user:feos)
	": Judging...
	$LF
]p
[p 
	(__wikiLink|user:feos)
	": Added AGDQ TASBot stream.
	$LF
]p
[p 
	(__wikiLink|user:feos)
	": This TAS is definitely TEH GREATEST MOVIE EVAH. Which somehow didn't prevent flamewars about it. First, I'll say about the similarities of this and the current any% run.
	$LF
]p
[p 
	"They use the same input to setup total control. It is known to be optimal, the fastest. Which means there is no copyright on it - in some cases only certain combination of button presses can be used to achieve the best result, and no matter how you alter it, it's basically the same.
	$LF
]p
[p 
	"None of these movies is a playaround within that setup time, so artistic choices would not matter. The way it is done is, again, the fastest. And therefore it was directly picked to be used in this submission (by the same author).
	$LF
]p
[p 
	"So what is the actual difference, after total control is gained? The any% run completes the game as fast as possible. It jumps right to the ending sequence. It is a world record in SMW. This submission 
	[em 
		"does not
	]em
	" complete the game. It 
	[em 
		"does not
	]em
	" jump to real ending. And it 
	[em 
		"does not
	]em
	" aim for speed (shortest input). Its goal is to demonstrate a concept: what can be done within SMW when total control is gained.
	$LF
]p
[p 
	"Second, due to heavy time pressure (AGDQ 2014), what we see here is what Masterjun came up with overall. It may be not perfect for everybody, so there is a room for obsoletion - if better stuff is programmed within total control. But for now it is the best payload existing. And posts and votes on this submission prove that.
	$LF
]p
[p 
	"Since this movie's goal is in no way speed, it can not be obsoleted by reaching the total control point faster, or by making input during total control shorter. Only by providing a better payload. Which will be judged by the audience response. If people like the new movie more (as happened with 
	[a href=/2187M 
		"Pokemon total control
	]a
	"), this one will be obsoleted by it.
	$LF
]p
[p 
	"Sum: accepting as a new branch.
]p
