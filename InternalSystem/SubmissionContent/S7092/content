13
[div class=p 
	"Digimon World is a game about the Digimon virtual pets, introduced at the height of the Tamagotchi craze in the Late 90's. The game focuses on a human brought to the Digimon's island by Jijimon, and was followed by various sequels that vary wildly from one game to the next. 
	$LF
]div
[div class=p 
	"Jijimon wants you to save the Digimon, but our protagonist, F, is far too busy glitching the memory flags by buying corrupted items to do that - eventually glitching his way all the way to the end boss, and beating him in 14:51.92.
	$LF
]div
[h3 id=GameObjectives 
	" Game objectives
	$LF
]h3
[ul 
	[li 
		" Emulator used: Bizhawk 2.6.1
		$LF
	]li
	[li 
		" BIOS: SCPH5501.bin
		$LF
	]li
	[li 
		" Any% Completion
		$LF
	]li
	[li 
		" Uses Death to Save Time
		$LF
	]li
	[li 
		" Abuses Programming Errors
		$LF
	]li
	[li 
		" Major Sequence Breaking
		$LF
	]li
	[li 
		" Heavy RNG Manipulation
		$LF
	]li
	[li 
		" Glitched Player Inventory / Shop / Bank
		$LF
	]li
]ul
[h3 id=Comments 
	" Comments
	$LF
]h3
[div class=p 
	"Back at it again at Krispy Kreme! Haven't done a TAS in over two years, so it feels good to be back at this. This game caught my eye after I saw this Glitch Shop being achieved RTA, and I just knew that I had to convert it over to a TAS format. I'll explain that when I get to it, but before that, I need to explain the most crucial thing to the run-
	$LF
]div
[h3 id=Rng 
	" The RNG
	$LF
]h3
[div class=p 
	"0x009010 is the RNG value for this game - 4 bytes unsigned determines all the game's RNG, and this game is heavily dependent on RNG. The RNG value can be forcibly changed by the player via several techniques - having your Digimon catch up to you, throwing an item to the Digimon while it is in battle, feeding the Digimon, praising or scolding the Digimon, taking the Digimon to the toilet, letting the Digimon rest, and having the Digimon digivolve. Of these methods, two are used most often: A) letting the Digimon catch up to you is most often used because it allows you to shuffle the RNG without opening the menu, and B) throwing an item to your Digimon while it is in battle, as battles usually take a long time regardless, and as exemplified in the final boss fight with Machinedramon at the end of this run, are, in battle, the only way to manipulate RNG.
	$LF
]div
[h3 id=StageByStageComments 
	" Stage by stage comments
	$LF
]h3
[h4 id=OpeningFileCity 
	" Opening / File City
	$LF
]h4
[div class=p 
	"Skip through the opening text as quickly as possible. No memory card, select "Day" on the day/night question. Character and Digimon names do not influence RNG, and the respective names chosen in this TAS were chosen because they were the closest letters that were not "A". "A" is boring!
	$LF
]div
[div class=p 
	"Skip through opening cinematic and run straight to Green Gym.
	$LF
]div
[h4 id=GreenGym 
	" Green Gym
	$LF
]h4
[div class=p 
	"The first spot of RNG Manipulation is here - I do a catch-up as the screen fades in, the interact with the training sign for "Offense" before Agumon can catch up to me again. Offense training is chosen because, when you train your Digimon, you can either train them normally, or with a "Bonus Try", which is basically a rigged slot machine that has a 1/10 chance of making the EXP gained X10. From here I do 6 rounds of training, letting Agumon catch up or not catch up to me depending on if the RNG value needs to be flipped, to secure the Bonus Try victory on the final round. Each round of training skips the in-game timer forward an hour, and 6 hours of training is needed to get a certain Digimon to appear later on in the game. Then, we leave Green Gym.
	$LF
]div
[h4 id=AgumonFight 
	" Agumon Fight
	$LF
]h4
[div class=p 
	"Several catchups chained together as well as precise character placement to ensure this battle goes as quickly as possible. Because we got the Bonus Try victory, our Agumon defeats the opposing Agumon in 4 cycles instead of 5 - quicker than that this early in the run would be slower because of the time wasted on RNG manips. We collect the Small Recovery dropped by the opponent Agumon, and run to Coela Point, which now has Coelamon on it's shores due to our 6-hour time advance.
	$LF
]div
[h4 id=TropicalJungle 
	" Tropical Jungle
	$LF
]h4
[div class=p 
	"Direct path to Betamon - Betamon is important because he'll allow us to access the Glitch Shop later on. Next, we run to Overdell Cemetery, via Grand Canyon Entrance.
	$LF
]div
[h4 id=OverdellCemetery 
	" Overdell Cemetery
	$LF
]h4
[div class=p 
	"Thanks to a programmer oversight, player interactions with the Bakemon in this Cemetery do not lock the player's controls, as do usual player/Digimon interactions. By pausebuffering to gain further time, we run over and collect the Digimushroom on the other end of the map at the same time as Bakemon's text box appears. By doing this we have triggered the "Text Storage Glitch" - basically a programmer oversight that allows certain lines of text to be stored and manipulated in interesting ways - it's this which allows us to access the Glitch Shop. From there we leave Overdell Cemetery and deliberately die to the Darkrizamons outside, doing several catchups as we leave to ensure that fight goes as quickly as it can as well.
	$LF
]div
[h4 id=GlitchShop1 
	" Glitch Shop 1
	$LF
]h4
[div class=p 
	"With the Text Storage Glitch active, we can now access the Glitch Shop by buffer overflowing the shop menu data with the Tamer Menu data. Because the block of data loaded by the shop is much bigger than expected, it allows us to access all 255 items in the game, of which over 100 are in-game flags used to track progress. From here it's a matter of buying the right items in the right order to flag up certain memory addresses and cause the game to recognize the player as much further in his adventure than he actually is; the first item we buy buffer overflows the player's Bit count (the in-game currency), effectively giving us an infinite source of money to buy all the other glitch items. Then, we buy some in-game flags, and 99 Super Restores and MP Floppies - the game flags have already been explained, the Super Restores and MP Floppies are to help with RNG manipulation on the final boss.
	$LF
]div
[div class=p 
	"One side effect of the Text Storage Glitch is that leaving the shop with the memory values in this state will crash the game. To get around this, we moved our Small Recovery we picked up earlier to the bottom-left slot in our inventory during the Darkrizamon fight - the value in the bottom-left of your inventory is the first value that's read whenever a menu with the player's inventory in it is opened, for some reason, and due to the busted nature of the Text Storage Glitch, the game reads this Small Recovery as the "close menu" command, meaning that, as soon as we go to the Sell menu, the game force-closes the shop for us without crashing. Huzzah!
	$LF
]div
[div class=p 
	"From here we set up the glitch shop again and buy another in-game flag, before going to the Item Keeper.
	$LF
]div
[h4 id=ItemKeeper 
	" Item Keeper
	$LF
]h4
[div class=p 
	"The Item Keeper is the shop that Agumon opens, and where the game actually reads the flags that you have bought in the Glitch Shop, and applies them to memory. By banking them, they then enter the game's RAM, and activate their corresponding flags. We then leave the Item Keeper and return to the Glitch Shop.
	$LF
]div
[h4 id=GlitchShop2 
	" Glitch Shop 2
	$LF
]h4
[div class=p 
	"We set up the Glitch Shop again, and buy some more flags. Then, we open and close the shop several times over - for some reason the Glitch Shop can be opened 6 time before it resets the shop data to a non-corrupt state, and as we need the shop data to be stable to allow us to clear the Text Storage Glitch once we're done with it, we quickly rinse through 3 glitch shops here. Then, we move our inventory items around again, placing a glitched item, "△△", in the bottom-left spot in our Inventory - this item will give our Agumon 20,000 Offense, which is about 19,000 more than would be possible without this glitch item - this will allow us to one-shot the final boss. From there, we talk to Betamon to clear the Text Storage Glitch, go to the Item Keeper to bank our flags so they activate in RAM, and then go to the now-unlocked final boss area.
	$LF
]div
[h4 id=MtInfinity 
	" Mt. Infinity
	$LF
]h4
[div class=p 
	"Precise walking to get to the Final Boss as quickly as possible. Once I arrive at the final boss, I do one catch-up to influence the RNG. The cutscene of Machinedramon digivolving also serves to further scramble the RNG. Now, we throw Super Restores to our Agumon at specific times, A) to ensure that he gets up as quickly as possible from being one-shot, and B) to further manipulate the RNG. In this fight, we're manipulating the RNG so that Machinedramon blocks as many attacks that our Agumon does as possible - this is the quickest way to build the "FINISH" meter, which is what allows to use our special move, which, when coupled with our 20,000 Offense, allows us to one-shot Machinedramon! With Machinedramon slain, RTA ends, at a final time of 14:51.92.
	$LF
]div
[h4 id=PostRta 
	" Post-RTA
	$LF
]h4
[div class=p 
	"Menu'ing to the finish. Nothing special.
	$LF
]div
[h3 id=OtherComments 
	" Other comments
	$LF
]h3
[h4 id=Improvements 
	" Improvements
	$LF
]h4
[ul 
	[li 
		" Entrance to Overdell Cemetery could be 24 frames quicker with better pathing - going above is quicker than going below.
		$LF
	]li
	[li 
		" Overdell Cemetery could be 1 1/2 seconds faster by opting to go with the bottom Digimushroom instead of the one on the left.
		$LF
	]li
	[li 
		" Darkrizamon could possibly be a second quicker with a different RNG seed.
		$LF
	]li
	[li 
		" Might be a few frames to save on general Menu'ing and Mt. Infinity pathing, but not much - a quarter-second at most?
		$LF
	]li
	[li 
		" Machinedramon could be, theoretically, up to 16 seconds faster with a perfect RNG seed - such a seed wasn't found during the making of this run, and the best that was quickly available was used instead.
		$LF
	]li
]ul
[h4 id=SpecialThanksGoOutTo 
	" Special thanks go out to...
	$LF
]h4
[div class=p 
	"Raikou for inspiring me to TAS this in the first place, Geta92 and Dragoonanime for great technical support during the making of this TAS, everyone in the Digimon Speedrunning community, and you, for watching!
	$LF
]div
[h4 id=SuggestedScreenshots 
	" Suggested Screenshots:
	$LF
]h4
[div class=p 
	"37197.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/Samsara 
		"Samsara
	]a
	": Judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Samsara 
		"Samsara
	]a
	": While there are some known improvements scattered throughout, they are minor and pretty much unnoticeable without being explicitly pointed out. The overall execution of the run is still quite good overall. The game itself doesn't really lead to an entertaining TAS, though I did personally enjoy a game that frustrated me as a kid getting destroyed. Accepting to Vault.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Spikestuff 
		"Spikestuff
	]a
	": Renavoir is my favourite— Poké
	[b 
		"mon
	]b
	"— Digi
	[b 
		"mon
	]b
	" uh— Digket Monmon.
]div
