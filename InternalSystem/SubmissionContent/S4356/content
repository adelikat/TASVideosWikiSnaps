13
[p 
	"Treasure Master is proof that video games are art.
	$LF
]p
[pre 
	$LF
]pre
[h3 
	" Game objectives
	$LF
]h3
[ul 
	[li 
		" Emulator used: FCEUX 2.2.2
		$LF
	]li
	[li 
		" Aims for fastest time
		$LF
	]li
	[li 
		" Best ending
		$LF
	]li
	[li 
		" Takes damage to save time
		$LF
	]li
	[li 
		" Uses death to save time
		$LF
	]li
	[li 
		" Abuses programming errors
		$LF
	]li
	[li 
		" Skips "necessary" items
		$LF
	]li
	[li 
		" Spends most of the game unable to attack
		$LF
	]li
]ul
[h3 
	" Author's Temp Encode (UPDATED)
	$LF
]h3
[p 
	(youtube|v=n5tf_OEMTVA)
	$LF
]p
[h3 
	" Comments
	$LF
]h3
[p 
	"Treasure Master has strutted its way into my heart as of late. Perhaps it is the ridiculously good soundtrack or the walk cycle that's nothing short of perfect, but I genuinely enjoy this game while so many others despise it. It was developed by Software Creations, known for such gems as Silver Surfer (NES), Blaster Master 2 (GEN), and Carmageddon 64.
	$LF
]p
[p 
	"Okay, that's cherry picking. They also developed Solstice and it's sequel, Equinox, as well as Plok. American Softworks published it, known for publishing the first GTA game and Sanitarium for the PC.
	$LF
]p
[p 
	"The game is known for its difficulty and the fact that there was an MTV sponsored contest based around it. The masochists who picked up and mastered this game back in the early 90s may have won excellent prizes, but who knows if anyone actually won said prizes. The internet, probably. I don't know, I still think the real prize is the music.
	$LF
]p
[p 
	"Also, the walk cycle.
	$LF
]p
[p 
	"This run is 1044 frames (
	(frames|amount=1044)
	" seconds) faster than micro500's WIP from 2011 up through Stage 3 (where the WIP ends) and 33388 frames (
	(frames|amount=33388)
	") faster than 
	[a class=intlink href=/2681S 
		"CeSaR74's rejected submission
	]a
	".
	$LF
]p
[h3 
	" Tricks Used
	$LF
]h3
[h4 
	" Health Underflow Glitch
	$LF
]h4
[p 
	"Found by Mecha Richter. If you die on the same frame you leave a screen, then you enter the next screen alive with 0 health. Getting hit again causes your health to underflow, effectively giving you 256 health and making the game pretty normal in difficulty instead of Nintendo Hard (tm) (c) (r). Underflowing your health does NOT protect you from any one-hit kill, such as spikes, bottomless pits, the bombs in Stage 2, the crushers in Stage 3, et cetera.
	$LF
]p
[h4 
	" Clipping
	$LF
]h4
[p 
	"Some ledges can be clipped into by just moving into them on a certain frame, usually the frame right before you'd normally land on the ledge. This is mostly used to clip through platforms, saving a few frames. Stage 2 has the most notable and obvious use of this glitch, where I clip into a wall twice with the help of an elevator. This can be done in vehicles, too, saving some frames in the submarine section in Stage 1. Walls can be clipped into if you're on a moving platform that goes up against a wall, which is used to skip a large amount of the prize world.
	$LF
]p
[h4 
	" Crouch-Walking
	$LF
]h4
[p 
	"Crouching while walking has some odd effects. You have a 1-4 frame window to move while crouching depending on... basically whether or not the game feels like it. For some reason, you can walk through some solid doors with crouch-walking, which is used in Stage 2 to get the glasses. If you're wondering why it's not used everywhere it could possibly be used, I'll explain that later. Crouch-walking is also used in Stage 3 to get a bit of extra movement under the crushers.
	$LF
]p
[h4 
	" Rope Boosting
	$LF
]h4
[p 
	"Jumping onto a rope, turning around and jumping back off immediately puts you a couple pixels forward, so whenever there's a rope I can grab along the route I use it for a quick boost. The camera moves at a set 1 pixel per frame to match Scooter's usual walking speed, so the effect of rope boosting isn't obvious, but if you look closely you'll notice Scooter's on-screen position gets boosted forward slightly every time, and when he stops the camera has to catch up.
	$LF
]p
[h4 
	" Whatever The Hell Happened In Prize World
	$LF
]h4
[p 
	"Found by me(?) very recently, an odd screen transition in the Prize World skips quite nearly all of the level. Getting the wall clip right afterward requires two frame precise jumps, but the screen transition itself looks like it can be done in RTA with good consistency.
	$LF
]p
[h3 
	" Less Interesting Tricks Used
	$LF
]h3
[h4 
	" Fadeout Lag
	$LF
]h4
[p 
	"Screen transitions and item switching have odd lag, where depending on the frame you exit, you may get 4 frames less lag than usual. This is used in as many places as possible over the course of the run. It's used for every item switch and every screen transition where it would save time.
	$LF
]p
[h4 
	" Jump Distance Control
	$LF
]h4
[p 
	"There's a finicky way to control how far you jump while maintaining a shorter height. Jump until you reach your desired height, wait a few frames, then hold A once it stops affecting how high you jump. This is only used once in the run, on the way to getting the air canister in Stage 1. It lets me jump farther without triggering two extra screen transitions, and saves a jump out of the water (since landing in the water stops your movement for a few frames)
	$LF
]p
[h4 
	" Jumping Off Ledges
	$LF
]h4
[p 
	"Walking off a ledge stops you for a frame. Jumping off a ledge doesn't. Okay.
	$LF
]p
[h3 
	" Prize World
	$LF
]h3
[p 
	"The password entry input is lifted directly from micro500, since I was initially only working on a test run of Stage 1 for kicks (and because I had the stage music going through my head) and I worked off of his WIP as a base so I wouldn't have to input the code. I messed around with the input for a while and couldn't find any way to make the password entry faster, so I ended up reverting it all back to the way it was before. micro500 is now listed as a co-author due to this and due to the fact he deserves credit for doing so much work on the game in the past.
	$LF
]p
[p 
	"There are 
	[a class=intlink href=/Forum/P/342353#342353 
		"multiple prize world codes
	]a
	", though I don't have the coding/programming knowledge to figure out a faster one. A different prize world code is probably the biggest single improvement that could be made to this run, though I feel like it'd be akin to improving a run by entering a faster file name.
	$LF
]p
[p 
	"If I collect something or do something that seems to serve no purpose or seems like it can be skipped, chances are that if I didn't do or collect that thing then I wouldn't be able to access the prize world at the end. So... yeah. That's just something to keep in mind.
	$LF
]p
[h3 
	" Stage by stage comments
	$LF
]h3
[h4 
	" Stage One: "Stayin' Alive", or How You Can Tell By The Way I Use My Walk That I'm A Woman's Man With No Time To Talk
	$LF
]h4
[p 
	"Right off the bat, there are a lot of ropes to boost off of, and right off the bat anyone who's played the game before will notice something strange: I skip the boots. The boots are not a required item, as evidenced by the fact that this is a complete run and I don't bother getting the boots. The health underflow glitch makes it faster to skip the boots due to not ever needing to attack any enemies (since you can just tank every hit), and skipping the boots cuts out a lot of item switching all throughout the run, saving quite a lot of time. The downside is that I don't have any way to attack while I'm on foot. For nearly the entire game.
	$LF
]p
[p 
	"After picking up the bomb, I actually jump back down to the beginning area to avoid taking damage when going back, and also to rope boost a couple more times. I manipulate a caterpillar to shoot at me to slow it down enough for me to jump over it without stopping, and I have it shoot upwards so the shot doesn't hit me. I do need to slow down so I don't get hit by that box. I need to be able to take 2 hits later on in the stage. The dropped boxes are harmless once they hit the ground, which is nice because I have to jump into one. Had I picked up the boots, I would've needed to switch over to the bomb, so a lot of time was saved here by not having to do that.
	$LF
]p
[p 
	"On the way back, I manipulate that same caterpillar from before into 
	[b 
		"not
	]b
	" shooting me, since his hitbox is ever so slightly too big to jump over when it's walking in the same direction. I have to wait here until it turns around so I can make the jump.
	$LF
]p
[p 
	"I feel like I've edited the submarine section more than anything, since the position of the sharks changes semi-randomly. I clip into the top of that thin wall to save a couple frames, then fire at some sharks because it doesn't waste any time and would be a lot more boring otherwise. I leave one potential kill alive so that it can tell my story later. One thing I'll give this game a lot of credit for is that it can handle a lot of sprites on-screen without any lag. Even if I hadn't killed any of the sharks, there wouldn't have been a single frame of lag.
	$LF
]p
[p 
	"After the submarine section and getting the bomb, there are a bunch of conveyor belts. They don't increase your speed when you're walking with them, but they halve your speed when you're walking against them. They seem to be on a global timer, so there's not much I can do to manipulate them into going the way I want, so I take the frame or two lost compared to my test run and roll with it. I clip into the last conveyor belt so I land in the water further to the right, saving about 10 frames over not doing that.
	$LF
]p
[p 
	"The bouncy enemies right before cutting down the weight are why I avoided taking damage earlier, since taking damage on these guys is faster than avoiding it. The jump into the water where the air canister is was lengthened by tricking the game into slowing my fall while still maintaining a jump low enough to not cause extra screen transitions.
	$LF
]p
[p 
	"I've been jumping off ledges over the course of the run, so it may seem a little weird that I walk straight into the water where the hard hat is. To put it simply, since the water is at the same level as the ground, it doesn't save a frame to jump in. The swim to the hard hat takes a while, so I deathwarp back to the beginning on the same frame I collect the hard hat.
	$LF
]p
[p 
	"I don't rope boost on the second rope after using the hard hat because it requires me to jump off the rope, and any time I would have saved from the boost would be negated by the extra time spent in the air. Avoiding damage on that last bouncy guy doesn't waste any time since I have to wait anyway, plus I need the extra point of damage for the next screen.
	$LF
]p
[p 
	"The second to last screen before the level ends is where I activate the health underflow glitch, using a setup found by PJ DiCesare: The little puffball screenwraps around as I exit the screen, hitting me on the same frame I exit, bringing my health down to 0 and leaving me alive. For the rest of the game, I can take as much damage as I want and not die. On the way up to the rocket, I found a weird air jump glitch that seems to only work in that specific spot. It probably has to do with the screen scrolling upward. Either way, I strut my way over to Stage 2.
	$LF
]p
[h4 
	" Stage 2: "2001: A Space Odyssey", or Also Strut Zarathustra
	$LF
]h4
[p 
	"This level has it all: Clipping glitches, lots of instant death I need to avoid, two boring vehicle sections, walking through solid doors, and a separate awesome walk cycle. Clipping into the wall with the elevator is done the same way as clipping into any other wall, by moving into the wall on a certain frame. In this case, activating the elevator as early as possible and walking left on the same frame is what does it. I don't walk as far left as possible because I'll be stuck in that wall, unable to get out, so I walk as far left as I can without getting stuck. Soon after, I crouch-walk through a door to get the glasses, then exit the same way I came in. Then I exit to the previous screen the same way I came in. Both of those ways involve walking through a solid object.
	$LF
]p
[p 
	"It's actually possible to damage boost off of that robot onto the second platform, but setting it up takes longer than just going up the normal way. The car section is just there, there's not much I can do to make it entertaining. After the strong showing at the start of the level there's really not that much else to comment on...
	$LF
]p
[p 
	"The red bumper car thing has a reason to not be entertaining: It's set up specifically so I can exit as soon as possible, which saves quite a lot of time (~20 frames) over the fastest result I could get while killing every... Whatever the hell those things are. Sawblade fish zeppelins. Sure, why not. The screen after that has some playaround opportunity since I need to wait for the old Mega Man classic disappearing platforms. Scooter has a habit of mimicking enemies, it seems... Also, a habit of running into them and destroying them.
	$LF
]p
[p 
	"Yes, it's actually faster to use the keycard on that door instead of crouch-walking through it. I'd have to switch items anyway and the keycard is closer than the beacon with my current item list, so I use the keycard to clear my item slot, which the beacon immediately goes into when it's picked up. After some more rope boosting, I'm through to the next stage.
	$LF
]p
[h4 
	" Stage 3: "Strutter", or How I Couldn't Think Of A Better Pop Culture Reference Than A KISS Song
	$LF
]h4
[p 
	"This is where the health underflow glitch saves a lot of time, since there are a lot of forced waits that I can just tank. Otherwise, there's not much else to say about it. The machine parts are necessary because jumping into that UFO without bringing it down would kill me in one shot, even with the 200+ health I have at the time. Otherwise, the stage is mostly strutting and tanking and crouch-walking to get under the crushers. I clip into a couple platforms, too.
	$LF
]p
[p 
	"That's about it. Okay.
	$LF
]p
[p 
	[b 
		"IMPROVEMENT:
	]b
	" Mecha Richter pointed out that taking damage allows you to walk through the crushers, which hadn't initially occurred to me since every other form of instant death will kill you regardless of whether or not you have invincibility frames. I now walk through the first crusher in the stage, which saves 30 frames.
	$LF
]p
[h4 
	" Stage 4: "While Strolling Through The Park One Day", or The Very Merry Month Of... July
	$LF
]h4
[p 
	"Again, not much else to say that wasn't covered in earlier stages. I enter all the doors seemingly at different times: When I need to go in the other direction, I'll enter a door on the first frame possible, since I'll come out the other side in the same position. If I'm going in the same direction, I enter on a frame where I get the least fadeout lag.
	$LF
]p
[p 
	"The door right before I use the construction potion despawns if you have the key to open it out when you enter the room, and it comes back when you change items. I think it's a softlock, but even if it isn't a softlock it still wastes time.
	$LF
]p
[p 
	"As is to be expected at this point, falling down the waterfall without the barrel is instant death. There's a quick rope boost and then possibly my favorite visual oddity in the game: When I hit the spring, it appears to just fly straight into the lava. It's just a visual thing, the spring's right where I need it to be when I exit that area.
	$LF
]p
[h4 
	" Stage 5: "Electric Boogaloo", or Arguably The Most Apt Reference To Breakin' 2 In History
	$LF
]h4
[p 
	"This stage is mostly strutting and noises as far as I can tell. Then again, that's the entire rest of the game as well. Nothing is used or done here that hasn't already been explained. There's rope boosting, there's item management, a couple walls are blown up, I strut straight into a bunch of enemies, it's pretty rad.
	$LF
]p
[h4 
	" Prize World: "Carnevil", or How I Finally Get A Weapon After 8/9ths Of The Run
	$LF
]h4
[p 
	"There's a very convenient ray gun at the start of this level, which I pick up since I have an empty item slot and I need to be able to shoot a clown. If I'd picked up a ray gun any sooner then I would've had to waste time switching to it.
	$LF
]p
[p 
	"This little collection minigame is necessary since it turns the RIDES ON. I found out while optimizing and resyncing the run that you can turn the RIDES ON by collecting a minimum of three of those... whatever-the-fucks while they're flashing. Collecting one while it's flashing adds time to the timer, which needs to run out, and collecting 8 or more while they're not flashing won't turn RIDES ON, so... Yeah. I actually kept this part mostly the same as my test run because I have to run down the timer anyway.
	$LF
]p
[p 
	"I use an odd screen transition to skip a huge portion of the level. Hitting the screen transition has a bit of lenience, so it should be possible in RTA, but if you jump too late you'll get caught in a wall and softlock yourself. The jump I make is frame precise, and it actually lands me on top of that big wall to my left, which lets me fall faster than I would have normally. A second 1-frame jump off of that wall saves another frame or two. I clip through a wall with the help of a platform immediately afterwards, and if I hadn't have done that fast fall I would have been a frame too late to get the immediate wall clip. Another wall clip happens shortly afterward, using the spinning platform. This is frame precise, and only saves a few seconds, but saved time is still saved time.
	$LF
]p
[h3 
	" Possible Improvements
	$LF
]h3
[p 
	"Like I said earlier, a different prize world code that's faster to input would likely be the biggest improvement to be made. There could be a few frames of optimization left, perhaps some new tricks could be found, who knows.
	$LF
]p
[h3 
	" Special Thanks
	$LF
]h3
[ul 
	[li 
		" First of all, I'd like to thank micro500 for all the TAS work he's done on this game. I referred to his last WIP (from 2011) pretty heavily when running the first three stages, and had it not been for the health underflow glitch and some of the new tricks I found, there wouldn't have been much difference between this run and the one he was working on. He wasn't directly involved in this run, but the prize code entry is his input, and it's basically the first and main reason why this run exists. Yes, my laziness and his hard work is why this run exists.
		$LF
	]li
]ul
[ul 
	[li 
		" Thanks to the other TASers of this game: Brushy, khvuser, and CeSaR74, for providing other runs and WIPs to refer to.
		$LF
	]li
]ul
[ul 
	[li 
		" Huge thanks to Mecha Richter for finding and reporting the health underflow glitch and for running this game in the first place, which got me interested in it. I referred to his 21:49 RTA run pretty heavily when running Stages 4-6, which also gave me the idea to try skipping the boots. A second, similarly huge thanks to PJ for finding a really nice setup for the health underflow glitch. The health underflow glitch is the second reason why this run exists.
		$LF
	]li
]ul
[ul 
	[li 
		" Thanks to Tim Follin, the composer for this game, for the awesome soundtrack. The music is the third reason why this run exists: It's just that good.
		$LF
	]li
]ul
[ul 
	[li 
		" Shoutouts and thanks to mklip2001 for arguably being the nicest and most supportive person on the forums.
		$LF
	]li
]ul
[ul 
	[li 
		" Shoutouts to slowbeef, of Let's Play and retsupurae fame, who said that this was the 
		[a class=extlink href=http://ask.fm/slowbeef/answer/114757602217 rel=nofollow 
			"worst video game he's ever played
		]a
		", and to Khad, of Something Awful infamy, who did 
		[a class=extlink href=http://lparchive.org/Treasure-Master/ rel=nofollow 
			"this back in 2008
		]a
		".
		$LF
	]li
]ul
[ul 
	[li 
		" Thanks to everyone watching this, of course
		$LF
	]li
]ul
[pre 
	$LF
]pre
[h3 
	" Suggested Screenshots
	$LF
]h3
[p 
	[img class=embed src=http://media.tasvideos.org/TMwalk.gif 
	]img
	$LF
]p
[hr 
]hr
[p 
	[a class=intlink href=/Users/Profile/Feos 
		"feos
	]a
	": Judging...
	$LF
]p
[p 
	[a class=intlink href=/Users/Profile/Feos 
		"feos
	]a
	": Updated the submission with a 
	[a class=intlink href=/Forum/P/380562#380562 
		"30-frame shorter file
	]a
	".
	$LF
]p
[p 
	[a class=intlink href=/Users/Profile/Feos 
		"feos
	]a
	": Updated the 
	[a class=intlink href=/Forum/P/380663#380663 
		"file
	]a
	" again.
	$LF
]p
[p 
	[a class=intlink href=/Users/Profile/Feos 
		"feos
	]a
	": Publishing for acceptation.
]p
