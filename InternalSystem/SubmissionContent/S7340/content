8
[div class=p 
	"The Game & Watch brand is a series of handheld electronic games developed, manufactured, released, and marketed by Nintendo from 1980 to 1991.
	$LF
	"Between July 2009 and April 2010 Nintendo released nine separate Game & Watch ports for DSiWare. Donkey Kong Jr. is one of them.
	$LF
]div
[ul 
	[li 
		"Hardest difficulty
		$LF
	]li
	[li 
		"Genre: Platform
		$LF
	]li
]ul
[h3 id=TechnicalInformation 
	" Technical Information
	$LF
]h3
[div class=p 
	"This run is done on BizHawk 2.8 DSi mode with firmware from a 
	[a href=https://bulbapedia.bulbagarden.net/wiki/2010_World_Championships rel=noopener external nofollow 
		"PWC 2010 event
	]a
	" device.
	$LF
	"The system is formatted before the start of the movie. As such, the movie starts from setting up the system.
	$LF
]div
[h3 id=GoalChoice 
	" Goal Choice
	$LF
]h3
[div class=p 
	"Donkey Kong Jr. arguably has the least ambiguous ending point out of all G&W games (except other Donkey Kong related games). In fact, its ending point is probably not any more ambiguous than that of Donkey Kong Jr. on NES.
	$LF
	"Therefore, I recorded this movie, which continues the game until one more full loop is done after the difficulty stops increasing in Mode B.
	$LF
]div
[div class=p 
	"How do I know when the difficulty stops increasing, you may ask. Good question!
	$LF
]div
[div class=p 
	"The mechanism for difficulty in this iteration of the game seems to work similarly to that of the version of the game included in Game & Watch Gallery 4 on GBA as explained by ThunderAxe31 
	[a href=https://tasvideos.org/462105 rel=noopener external nofollow 
		"here
	]a
	".
	$LF
]div
[div class=p 
	"00143938		w	u	0	Main RAM	Score
	$LF
]div
[div class=p 
	"00145F45		b	u	0	Main RAM	Max En.
	$LF
]div
[div class=p 
	"00145F46		b	u	0	Main RAM	Speed
	$LF
]div
[div class=p 
	"00145F47		b	u	0	Main RAM	Spawn
	$LF
]div
[div class=p 
	"00145F48		b	u	0	Main RAM	Unknown
	$LF
]div
[div class=p 
	"00145F50		b	u	0	Main RAM	Sub loop
	$LF
]div
[div class=p 
	"The 4 values that affect the difficulty change as the player gets higher score.
	$LF
	"After reaching a score of around 990, the maximum encounter stays at 9 (it is 10 on GBA, but not that the difference is really visible in an "any%" TAS), the enemy speed stays at 8, the enemy spawn rate stays at 128, and the unknown value stays at 112.
	$LF
	"While some of these variables might be at a higher value at some point during the gameplay before reaching the last score threshold, this is the combo that remains unchanged after that and is hence the highest difficulty of this game.
	$LF
]div
[div class=p 
	"I could have killed two more enemies in the last subloop of the penultimate loop seen in this movie to make the game reaches that difficulty level and technically finishes a loop while being in that state,
	$LF
	"but I decided that it's better to finish a full loop afterwards so the score threshold is reached during the scoring process after the penultimate loop in the movie instead.
	$LF
]div
[h3 id=SpecialThanks 
	"Special Thanks
	$LF
]h3
[ul 
	[li 
		"ThunderAxe31, for the research done on the GBA iteration of this game.
		$LF
	]li
	[li 
		"EZGames69, for the GBA submission.
		$LF
	]li
	[li 
		"CasualPokePlayer, for adding DSi support to BizHawk which allows this movie to be made.
		$LF
	]li
	[li 
		"Arisotura, for DSi support in melondDS and melondDS in general.
		$LF
	]li
	[li 
		"YOU, for reading the submission text and watching the movie.
		$LF
	]li
]ul
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Interesting movie with quite a few things to address.
	$LF
]div
[h4 id=Scoring 
	" Scoring
	$LF
]h4
[div class=p 
	"Apparently this wasn't explained, even though it's the main optimality faction in the movie. Here's a screenshot from the game manual:
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://files.tasvideos.org/common/SubmissionFiles/7340S/scoring.png 
	]img
	$LF
]div
[div class=p 
	"There are only a few places where you can jump over enemies, because most of the time you just grab the vine and not gain score. There are only a few cases where you can kill 2 enemies at once, and even fewer cases when you can kill an alligator at the bottom.
	$LF
]div
[h4 id=Optimization 
	" Optimization
	$LF
]h4
[div class=p 
	"I checked every loop and I was only able to gain more score 
	[em 
		"while a bit of saving time
	]em
	" only in 1 sections. In 4 sections getting higher score led to severe time loss.
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://files.tasvideos.org/common/SubmissionFiles/7340S/branches.png 
	]img
	$LF
]div
[div class=p 
	"I wasn't brave enough to test where losing score would save time, let's leave this for future TASers.
	$LF
]div
[h4 id=Difficulty 
	" Difficulty
	$LF
]h4
[div class=p 
	"I jumped on a vine and kept hanging there for 2k frames while point memory. I was able to get fewer spawns and slower enemies by setting lower values, but couldn't make the game more difficult by setting higher ones than this movie reaches.
	$LF
]div
[h4 id=Ending 
	" Ending
	$LF
]h4
[div class=p 
	"It is correct that when aiming for maxing out the difficulty in a game without an ending, one has to actually complete the most difficulty loop. We don't really care about how the score is displayed at that time, especially when the internal counter keeps going after the visible counter has looped back to 0. How one decides to time the ending of the movie is probably not critical, especially when the exact point when the loop is considered beaten has to be defined by humans.
	$LF
]div
[h4 id=DsiNand 
	" DSi NAND
	$LF
]h4
[div class=p 
	"If every DSI has unique NAND and there's no definitive version what many authentic devices share, I don't think there can be a strict rule of which exact NAND you end up using. Of course one can argue that the NAND has to not be patched by humans to give unfair advantages, but if we don't have anything to match those against, how exactly do we ensure it's clean? At the very least this run synced on 2 different PWC NANDs I was able to find, none of them having the same hash as in this movie, before or after formatting.
	$LF
]div
[div class=p 
	"Yeah you have to format the NAND using melonDS, since bizhawk can't 
	[b 
		"write
	]b
	" to NAND. Just launch to DSi firmware, enter settings, and format system memory.
	$LF
]div
[h4 id=Accepting 
	" Accepting
	$LF
]h4
[div class=p 
	"Accepting.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Spikestuff 
		"Spikestuff
	]a
	": Publishing.
]div
