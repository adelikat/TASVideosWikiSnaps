4
[div class=p 
	"Skunny is a DOS game made in 1993 by Copysoft. It's a rather terrible platformer, infamous by all those who have played it for its catastrophically slippery controls and very fast gameplay that means you'll just slip and slide into pits. The company who made it, Copysoft, is also known for the famous travesty that is Skunny Kart, a game built of corporate espionage and terrible decisions. But we're not talking about that today. Today, it's time for the first Skunny game, Skunny: Back to the Forest!
	$LF
]div
[div class=p 
	"This game was recently on the bad games tournament Kusogrande, run by Brossentia on twitch. I was in that match, and it was a high stakes match. Four people, the top three would move onto the next stage of the tournament, but the loser would go to a tie-breaker round where they'd have a chance to be knocked out! Every single person in that match absolutely despised this game, except me, who asked the question mid-race of "Does this game have runs? Or a TAS?" I won the match, by the way.
	$LF
]div
[div class=p 
	"It did not. So, I picked it up to do a cursory TAS to explore what a speedrun of this game would even look like. It's short, ten levels. The object of the game is to go through each level, avoiding frogs and pits (you have health but it's barely an issue, toads kill you in one hit though). Once you reach the end of the level, there's a nut you pick up that lets you go into a totally not superman mode. You then fly back through the level and hit all the toads, freeing your friends from their evil clutches. Through exploration, I've created what I believe to be a rather good TAS showcasing the perfect route through each level. Hopefully I can actually put some of this into RTA but uh, I seriously doubt it.
	$LF
]div
[div class=p 
	(youtube|v=mQzUJ5PEo64)
	$LF
	"WARNING: THERE IS A LOUD BEEP AT THE START OF THE VIDEO BECAUSE DOS EMULATION.
	$LF
]div
[h3 id=TasObjectives 
	"TAS Objectives
	$LF
]h3
[ul 
	[li 
		"Aims to complete the game as fast as possible, while also being entertaining.
		$LF
	]li
	[li 
		"Play as Skunny's girlfriend, Rosie, because even though it loses me literally 3 frames or so, ladies are cooler so there. You DO miss a squirrel in a varsity jacket though.
		$LF
	]li
	[li 
		"Find effective strategies and tricks to get through the levels
		$LF
	]li
	[li 
		"No! No! Hitting Toads is a bad idea!
		$LF
	]li
]ul
[h3 id=StrategiesEmployedInTheTas 
	"Strategies employed in the TAS
	$LF
]h3
[ul 
	[li 
		[b 
			"Running
		]b
		". Skunny (Or Rosie in this case) walks very slowly, for a short period of time, and then begins to pick up speed. If she runs too fast, she becomes literally uncontrollable. We want to be in this stage as often as possible, because obviously it's the fastest.
		$LF
	]li
	[li 
		[b 
			"Jumping
		]b
		". Jumping conserves your momentum from when you were running, so if possible, we wait until we're running to jump. This is not always possible, but is employed whenever we possibly can. You can jump as soon as you touch the ground, and those jump inputs DO have a buffer window so it's possible to do frame perfect jumps relatively easily RTA.
		$LF
	]li
	[li 
		[b 
			"Bouncing
		]b
		". The fastest movement possible is jumping from the fastest running speed and hitting an enemy. This will LAUNCH the squirrel far away. Whenever possible, we want to chain bounces. Sometimes this is impossible, and if there isn't a good reason to jump (AKA jumping over a pit), then jumping on an enemy to launch isn't worth it, for the amount of time it takes for Skunny to fall back down with gravity.
		$LF
	]li
	[li 
		[b 
			"Mid-air directional changes
		]b
		". When Skunny is at the highest speed possible on the ground, if he lets go of the direction he's moving, or tries moving in the opposite direction, he slides for like a millionty billion frames (It's maybe a second long). You cannot jump when you're sliding, making sliding useless, and it will be the cause of almost all deaths RTA. So how do we change directions? Well, there's no sliding when in the air. In fact, there's no momentum change whatsoever. You can immediately change direction and keep all momentum, making for an easy way to bounce if enemies are nearby your descent, or an easy way to dodge obstacles in a tricky jump.
		$LF
	]li
	[li 
		[b 
			"Sliding
		]b
		". Although Sliding is practically useless, it has one use: entering levels. When you're running and you hit a wall, Skunny is stunned for about half a second, wasting precious precious frames in your very exciting and important speed game. So, what is one to do? Well, if you let go and hold back to slide, but then let go of the back movement, Skunny will slide into the entrance to the level and not bonk. 
		$LF
	]li
	[li 
		[b 
			"Praying to God
		]b
		". It's really only appropriate when you interact with Skunny, though obviously, God cannot hear you. He's too busy being overwhelmed by that incredible tune. Yes, singular.
		$LF
	]li
]ul
[div class=p 
	"For the most part, gameplay is simple. Run and jump whenever you need to, bounce when you can, dodge obstacles. Level 9 and 10 are when things slow down tremendously, with platforms that have no way for you to keep momentum and you have to, gasp, wait for cycles! Scandalous! 
	$LF
]div
[div class=p 
	"Fun things to note is that Skunny moves every three frames, but your input is locked in after one frame of input, and that level 5's toad-killing nut section is literally impossible the first time around, which is why I faff around a bit. Basically, when you grab a super nut, time starts counting down EXTREMELY fast for some reason, and it gives you a specific amount of time to get all the toads. When you die it counts down as normal. The fast count down is impossible to do in level 5, extremely tight on level 2 (you can do no misses basically), and fine everywhere else.
	$LF
]div
[div class=p 
	"Also, important note for those who wish to play back this video: You will need the image files (REDACTED by slamo: This linked to an image of the registered version, and I can't find any evidence this was released as freeware, so just to be safe let's remove the link. Refer to the jrsr file for the image contents). These are the FreeDOS image and the Skunny image (basically, roms for the operating system and the game respectively). To play this, simply put both images in the disklibrary folder, then put the freeDOS image in the Fda image slot and the Skunny image in the Hda image. Then, replace the Modules with simply "org.jpc.modules.SoundCard" and you're good to go! Just go to Snapshots>Load>Movie, and you're all set to go! Note that if you've never used JPC-RR before, there's no way to actually hear any sound. Also, for the youtube video I submitted, yes the quality is low, and the sound is broken in some spots. That's part emulation errors and part low quality dump. Not much I can do about either, DOS TASing is rough buddy (Though if you have suggestions hit me up, I wanna do a Return to Zork TAS next and if I can get it looking sparkly clean that'd ROCK!)
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/slamo 
		"slamo
	]a
	": This is not a very good game, but the run is actually entertaining thanks to the quick movement and enemy chaining. Having some past experience with this game, it seems like you understand the mechanics quite well.
	$LF
]div
[div class=p 
	"However, there were some optimization problems, which were mainly addressed in the forum thread. It's always recommended for inexperienced TASers to post WIPs and ask for feedback on the forums, as this would have caught certain errors such as increasing the hit bonus counter. Also, the rerecord count is an indicator that not a lot of different routes were tested (my WIP through level 5 had about 2100 rerecords); we encourage TASers to think outside the box and try everything that they can think of, even if you think it may not work. I hope the WIP I posted gives you some ideas, and I'd like to see you revisit this game.
	$LF
]div
[div class=p 
	"That being said, this run does not meet our standards for optimization. Rejecting.
]div
