6
[h2 id=Introduction 
	"Introduction
	$LF
]h2
[div class=p 
	"GO Series - 10 Second Run (Often abbreviated to "10 Second Run") is a DSiWare game where the player is in control of a red stick figure character whose only purpose in life is to reach the goal tape 60 times (seems like a rather simplistic life if you ask me). There are 50 regular trials, where you have to reach the goal within 10 seconds, and 10 special trials, where you have to reach the goal within a second.
	$LF
]div
[h2 id=SyncSettingsAndRunNotes 
	"Sync Settings and Run Notes
	$LF
]h2
[ul 
	[li 
		" Emulator Used: BizHawk 2.8 (x64)
		$LF
	]li
	[li 
		" melonDS core
		$LF
	]li
	[li 
		" DSi Mode/Use Real BIOS/Firmware Override: True
		$LF
	]li
	[li 
		" Aims to beat all 60 stages in the fastest time
		$LF
	]li
]ul
[h2 id=GoalChoice 
	"Goal Choice
	$LF
]h2
[div class=p 
	"The game offers 3 different modes to the game. 10 second run, 1 second run and 10 second timer. This run only does the first two as the 3rd mode is just a "stop the timer at 10 seconds exactly" mode. I didn't see this mode worthwhile including in the TAS, especially since it's quite a change from the rest of the game, and the game doesn't have much in the way of tracking completion of that mode outside of tracking how close you get to 10.00 seconds. If you wish to see a TAS do this mode, 
	[a href=https://www.youtube.com/watch?v=GaIU74fDUJU&t=900s rel=noopener external nofollow 
		"that can be found here
	]a
	".
	$LF
]div
[h2 id=PlaybackInformation 
	"Playback Information
	$LF
]h2
[div class=p 
	"As seems to be the standard, this TAS uses the PWC 2010 firmware, and uses melonDS 0.9.3 (As packaged with BizHawk 2.8)
	$LF
]div
[h2 id=ThereSSoMuchWaiting 
	"There's so much waiting!
	$LF
]h2
[div class=p 
	"I know, this game contains a lot of arbitrary wait times if you're completing every trial first try. Over half the run is comprised of these. As such, I have created a special edited down version of the encode which removes all waiting between when "GOAL" disappears after beating a trial and when "1" appears upon starting a trial. This version can be found here:
	$LF
	(youtube|v=Ei08Xn7p7zM)
	$LF
]div
[h2 id=Mechanics 
	"Mechanics
	$LF
]h2
[div class=p 
	[b 
		"Running
	]b
	$LF
]div
[div class=p 
	"10 Second Run has 3 primary speeds for the stick figure character. Standing still (0u/f), walking (4096u/f) and running (8192u/f). Each step is 1f away from each other, therefore, it takes 2f to get to full running speed from standing still. Likewise, to go from running in one direction to running in the opposite direction, it takes 4f. This knowledge does come into play throughout the run as rubbing against a wall when you're jumping to head in a certain direction may result in a slower run completion time.
	$LF
]div
[div class=p 
	[b 
		"In Game Time
	]b
	$LF
]div
[div class=p 
	"The in-game timer isn't locked to the frame. As such, two trials which end on the same frame may have differing in-game times. Since this run was going up against a 
	[a href=https://www.youtube.com/watch?v=GaIU74fDUJU rel=noopener external nofollow 
		"9-month old TAS by マジあり
	]a
	", I optimized each stage so that the in-game time always matched or improved on their run, despite no time save benefit. If you wish to see how my run compared against theirs, I have a spreadsheet which details my times vs theirs for all 60 trials: 
	[a href=https://docs.google.com/spreadsheets/d/18nCP3gTIURUVbHZ28K-9RM3jQT-987UKmwF6HrKZEhY/edit?usp=sharing rel=noopener external nofollow 
		"Link
	]a
	".
	$LF
]div
[div class=p 
	"In total, the old TAS took 271.26s total (IGT) for all 60 trials, whereas mine took 270.75s. This comes to a IGT time save of 0.51s
	$LF
]div
[h2 id=PossibleImprovements 
	"Possible Improvements
	$LF
]h2
[div class=p 
	"There's a lot of stages within this game which can't be improved upon at all as it's a simple "Run right to win" kind of stage. However, the more technical stages, with a lot of brute force, could save a couple hundredths of a second in IGT compared to this TAS. There are some times where we have to slow down as well for obstacles that can't be navigated around, notably in trial 38 where we have to wait for 2 spiked enemies to move out of the way in order to progress. As such, any new tech which allows us to skip those kinds of waits would save a second or two. Obviously, any new tech which enables us to go faster than 8192u/F would also save time.
	$LF
]div
[h2 id=MemoryAddresses 
	"Memory Addresses
	$LF
]h2
[ul 
	[li 
		" 0x0A503C - X Position
		$LF
	]li
	[li 
		" 0x0A5040 - Y Position
		$LF
	]li
	[li 
		" 0x0A5044 - X Velocity
		$LF
	]li
	[li 
		" 0x0A5048 - Y Velocity
		$LF
	]li
]ul
[h2 id=SuggestedScreenshot 
	"Suggested Screenshot
	$LF
]h2
[div class=p 
	"44162 - A tight squeeze between two spiked enemies
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.imgur.com/IE31IcR.png 
	]img
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/Samsara 
		"Samsara
	]a
	": Claiming for judging. The file has been replaced with an identical version starting from the DSi first time setup, courtesy of 
	(__wikiLink|displaytext=EZGames69|href=/Forum/Posts/518235)
	". This provides parity with other published DSi runs at the time of judgement, and prevents sync issues down the road by using a more standardized start point.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Samsara 
		"Samsara
	]a
	": Stress by proxy in video game form. This game's Hell Music has this uncanny ability to make me feel stressed as a casual viewer watching a TAS that I know is going to complete every stage as fast as possible. I'm kinda into it! I'm also into the TAS itself. It's not the most complex game, but what's there is exciting to watch, and the nature of the game leads to a lot of close calls and neat little strategies. Accepting!
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/EZGames69 
		"EZGames69
	]a
	": Processing...
]div
