2
[p 
	"This run aims to beat Pokemon Blue as fast as possible without save corruption. It uses the warp manipulation to warp to the hall of fame. However, to do so, you have to change your item bag into a hex editor.
	$LF
]p
[pre 
	$LF
]pre
[h3 
	" Game objectives
	$LF
]h3
[ul 
	[li 
		" Emulator used: BizHawk 1.11.6
		$LF
	]li
	[li 
		" Complete the game as fast as possible
		$LF
	]li
	[li 
		" Heavy glitch abuse
		$LF
	]li
	[li 
		" Luck manipulation
		$LF
	]li
	[li 
		" No save corruption
		$LF
	]li
]ul
[h3 
	" Route
	$LF
]h3
[h4 
	" Oak Speech
	$LF
]h4
[p 
	"After the game boots up, options are set to 
	[b 
		"Fast/Off/Set
	]b
	", which is the fastest combination of them. Then, new game is started and we have to choose the names. The player is named with the default name 
	[tt 
		[b 
			"BLUE
		]b
	]tt
	", because it doesn't really matter for any glitch, but the name of the rival is crucial.
	$LF
]p
[p 
	"At the end, a value of 
	[b 
		"118
	]b
	" is needed, which is the index of the 
	[b 
		"Hall of Fame
	]b
	". To obtain it the fastest way possible, a space in rival's name is used, which is 
	[b 
		"127
	]b
	". Also, to avoid glitch items which take a long time to scroll through, the character 
	[b 
		"MN
	]b
	" is used, which makes the item 
	[b 
		"TM26
	]b
	". So, the name of the rival is "
	[tt 
		[b 
			"MN 
		]b
	]tt
	"", where 
	[b 
		"MN
	]b
	" is one character.
	$LF
]p
[h4 
	" The almost average beginning
	$LF
]h4
[p 
	"The only thing that is different than normal playthrough in this part is RNG manipulation, in contrast to every other, where glitches begin. We exit our house and go to the grass to trigger Prof. Oak. 
	[b 
		"Bulbasaur
	]b
	" is chosen as the starter, because it is needed to have 
	[b 
		"16 Special
	]b
	" to do Brock Through Walls. While all pokemon can do that, Bulbasaur has the highest base special, so it can do it the fastest. Bulbasaur's IVs are manipulated to be 
	[b 
		"14/10/15/13
	]b
	" (Atk/Def/Spd/Spc) and rival fight begins. Nothing special here, except again, RNG manipulation.
	$LF
]p
[p 
	"Then, the only possible step is to go to Viridian City, get the Oak's Parcel and deliver it, but when walking through grass, sometimes it is necessary to wait for one or two frames to avoid random encounters. The classic time saver is used: talk to Prof. Oak from the left of back while delivering the parcel to make the rival walk less. It works because 
	[b 
		"NPCs walk two times slower than you
	]b
	".
	$LF
]p
[p 
	"When back in Viridian City, 
	[b 
		"3 Pokeballs
	]b
	" are bought, together with 
	[b 
		"Parlyz Heal
	]b
	" and 
	[b 
		"Burn Heal
	]b
	". Then, we go to Route 2, before the Viridian Forest, and encounter a 
	[b 
		"Pidgey
	]b
	" using RNG manipulation. That Pidgey has to have 
	[b 
		"15 HP
	]b
	" in order to Brock Through Walls to work. We go through Viridian Forest and skip most trainers, 
	[b 
		"collecting the Antidote
	]b
	". The last trainer however, commonly referred to as the "
	[b 
		"Weedle Guy
	]b
	"", cannot be skipped. BTW, this is the last fight we have to win in this route. Also, the 
	[b 
		"hidden potion
	]b
	" in front of the weedle guy is picked up. After the fight, bulbasaur levels up to lvl 7 and gets 
	[b 
		"16 Special
	]b
	". It has to be this exact value for Brock Through Walls to work.
	$LF
]p
[h4 
	" Brock Through Walls
	$LF
]h4
[p 
	"In Pewter City an 
	[b 
		"Escape Rope
	]b
	" is bought and Brock Skip glitch is performed. 
	$LF
]p
[p 
	"Normally, you are supposed to defeat Brock before continuing your adventure. It is enforced by a guy, which tells you about Brock and shows you, where his gym is. The game forces you to follow him. However, after the dialog box, but before the cutscene, 
	[b 
		"A, B, Select and Start
	]b
	" aren't locked (D-Pad however is). This can be used to save the game in that point, provided that the start menu cursor 
	[b 
		"is moved to the save option
	]b
	" before activating the brock guy. After the game is restarted, the cutscene is resumed, but the state isn't saved right and you aren't forced to move and you can exit Pewter City.
	$LF
]p
[p 
	"However, there is more. If you turn back and talk to the guy from the right, the game softlocks, because you were never supposed to do it. It happens because the game searches for your coordinates in the memory. Normally, it finds them on a special list in the game's data, but when not found there, it goes through the whole Game Boy address space. Because of that, we can prevent the crash by preparing the memory. Our coords in that place are 
	[b 
		"16 and 36
	]b
	". One entry on the list the game searches is 
	[b 
		"four bytes long
	]b
	". Because of the address of the first entry, the byte 16 has to be on an address ending with 
	[b 
		"2, 6, A or E
	]b
	". Bulbasaur's Special is at 
	[b 
		"D196
	]b
	", so it can be used as the first byte. This byte is however the last one in a Pokemon data structure, so next bytes are stored in the Pidgey. First byte of such structure is the Pokemon' internal ID, which is 36 for Pidgey.
	$LF
]p
[p 
	"You might have noticed, that the structure is four bytes long, however the coordinates use only two bytes. The next two are used to store a pointer to the walking sequence. If we control them, we can use them for interesting things. The one we use here is 0F00, written by 15 HP, which overwrites the disallowed buttons variable, meaning that we retain control. Also, when the walking sequence is active, collision detection is disabled, what means we can walk through walls now. However, when we want to walk down, we have to hold B.
	$LF
]p
[h4 
	" Item duplication glitch
	$LF
]h4
[p 
	"Using the Walk Through Walls, we go to Saffron City and heal in the Pokemon Center to setup blackout location. Also, bulbasaur is deposited into the PC because of the upcoming deathfly. On the sixth slot, there has to be an item 
	[b 
		"usable in battle
	]b
	", so Escape Rope is switched with Potion. Now the item bag looks like this:
	$LF
]p
[ol 
	[li 
		" Pokeball x2
		$LF
	]li
	[li 
		" Parlyz Heal
		$LF
	]li
	[li 
		" Burn Heal
		$LF
	]li
	[li 
		" Antidote
		$LF
	]li
	[li 
		" Escape Rope
		$LF
	]li
	[li 
		" Potion
		$LF
	]li
]ol
[p 
	"Now a death-based trainer-fly glitch is activated using the first trainer on Route 6. The guard in the gate says no passage, but because you are not supposed to be able to enter Saffron without unlocking the gates, the script moves you away from Saffron and you 
	[b 
		"can go through the gate
	]b
	" anyway. To activate the deathfly, RNG manipulation is used to encounter a Pokemon 
	[b 
		"in the same time
	]b
	" we move into the trainer's line of sight. Then we allow the Meowth to kill us, so that when the trainer notices us, we will be in front of the Pokemon Center. We go to the 
	[b 
		"Fighting Dojo
	]b
	" and lose to the 
	[b 
		"first trainer
	]b
	". We have to make him 
	[b 
		"walk to us
	]b
	", because the game will freeze otherwise.
	$LF
]p
[p 
	"After the blackout, we have to flash the menu to set the dialog ID right (menu is also treated as dialog), and then we go to Route 6 again. Just in front of the gate, start menu will pop-up. After closing it, 
	[b 
		"missingno appears
	]b
	". When this happens, the highest bit in 6th item' count variable is set, effectively 
	[b 
		"adding 128
	]b
	" (but only if it is less that 128 in the first place). This is because missingno has pokedex number set to 0, which makes the game treat is as 256, what makes it calculate the flag address that way.
	$LF
]p
[p 
	"Next, two potions are used to make the quantity 127 and MissingNo is caught. This makes the potions copy again, because when the caught flag is set, so is the seen flag. This is done because the code for marking pokemon in pokedex is also used in situations like trade, when both flags have to be set. Oh, and MissingNo's cry is rather long. And it turns into Rhydon after catching.
	$LF
]p
[h4 
	" Item counter underflow glitch
	$LF
]h4
[p 
	"The purpose of item counter underflow is to make the item counter decrement below zero, therefore making it 255 again and giving the player an ability to manipulate the game's memory using the items beyond slot 20.
	$LF
]p
[p 
	"The Saffron gate is entered and a bunch of inventory manipulation happens. If you are watching the video, make sure not to blink.
	$LF
]p
[ul 
	[li 
		" Potions are switched to slot 3. Item counter is at 6
		$LF
	]li
	[li 
		" Pokeball is thrown away. Parlyz Heal moves up as expected, but Potions move up and stay in the same place, effectively copying themselves. It happens, because the game moves the bytes until an FF byte (255 in decimal), which is also moved. That value is used to mark the end of the list. It works just fine because there is no item with such ID and you can have 99 items max. But using glitches, you 
		[b 
			"can
		]b
		" obtain quantities larger than 99, which we are abusing. Also, tossing the pokeball decremented the counter to 5
		$LF
	]li
	[li 
		" Parlyz heal is thrown away. Now there are three stacks of Potion x255 and the counter is at 4.
		$LF
	]li
	[li 
		" 255 Potions are tossed from the first slot three times, making the counter 1. Tossing 255 of any item doesn't change anything because of the special meaning that number has.
		$LF
	]li
	[li 
		" 253 Potions are tossed from the first slot to make the quantity 2.
		$LF
	]li
	[li 
		" First two slots are swapped, but because it is the same item, the game attempts to merge the two stacks. 255 + 2 = 257, which it truncated to 1 because the value is stored in 8 bits. Also, because of the merge, the item counter is 0 now.
		$LF
	]li
	[li 
		" First two slots are swapped again, making the quantity 0 (255 + 1 = 256 (mod 256) = 0). The counter is decremented and due to integer underflow it is set to 255.
		$LF
	]li
]ul
[h4 
	" The warp
	$LF
]h4
[ul 
	[li 
		" The inventory is scrolled down until a TM26 x127 (rival name), which is swapped with Master Ball x17 down below (exit location ID).
		$LF
	]li
	[li 
		" Nine TM26s are tossed, making the count 118 - hall of fame. Now the menu could have been closed and upon exiting the gate a warp to Hall of Fame would occur, but that action is postponed.
		$LF
	]li
	[li 
		" One 
		"[]
		"j. glitch item is tossed from a stack of 193 of them, changing the options to make the text speed set to hidden fastest setting. It is probably used in the game during trades.
		$LF
	]li
]ul
[p 
	"Now the menu is closed and upon exiting the gate, a warp to Hall of Fame occurs. Prof. Oak tells us about the Hall of Fame (congratulations, this is the hall of fame, "POKeMON LEAGUE champions are honored for their exploits here!" :] )... and the ending animation starts. Thanks to the fastest text speed, the Professor Oak talks for only about five seconds. The movie stops with advancing the pokedex rating text.
	$LF
]p
[h3 
	" Possible improvements
	$LF
]h3
[p 
	"There are some things that could be improved, such as making the options 
	[b 
		"Fast/Off/Shift
	]b
	", or changing them in-game, but I'm not going to do them, because of the RNG manipulation going on everywhere, what would mean almost everything would have to be redone. Also, Pokemon Red could be faster for that route, but previous plan was to get Abra at Celadon Game Corner, what was way faster on Blue. Now however, Red would be better because charmander is on the title screen instead of squirtle, making the beginning cry 7 frames shorter and because of shorter default name, saving one frame each time it is shown in a textbox.
]p
