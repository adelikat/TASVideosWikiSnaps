4
[div class=p 
	[b 
		"Objectives
	]b
	$LF
]div
[ul 
	[li 
		" Uses hardest difficulty
		$LF
	]li
	[li 
		" Genre: Board
		$LF
	]li
]ul
[div class=p 
	[b 
		"About this version of Checkers
	]b
	$LF
]div
[div class=p 
	"This game uses official checkers rules which, most notably, means jumping is always madatory: if a player has the option to jump, he/she must take it, even if doing so results in a disadvantage for the jumping player.
	$LF
]div
[div class=p 
	[b 
		"Difficulty Choice:
	]b
	" Hi Skill is the hardest difficulty and was chosen here.
	$LF
]div
[div class=p 
	[b 
		"Routing
	]b
	$LF
]div
[div class=p 
	"Routing a game like this where the main thing to optimize is computer thinking time is particularly difficult, as the "best" move is seldom the one that'll save you the most time. Lots of trial and error will be required. There are two good rules to follow in general however, which are:
	$LF
]div
[ul 
	[li 
		" Don't make the position complicated. More complicated positions and more move options greatly increase AI thinking time.
		$LF
	]li
	[li 
		" End the game in the least moves possible that does not complicate positioning. In the case of checkers, that would be done by either trading many pieces as early as possible, or trapping an opponent's pieces.
		$LF
	]li
]ul
[div class=p 
	"Compared to my submission for Atari 2600 Checkers, this movie is notably different due to the AI being notably different as well. In Atari 2600 Checkers, we used a trapping strategy to reduce both position complexity and total move count by leaving five opponent checkers trapped when the game ends. Here, the early trading method proved to be far more effective as the Intellivision AI seems to have a much higher willingless to also initiate trades, compared to the Atari 2600's very conservative play style (which allowed the trap setup to be possible).
	$LF
]div
[div class=p 
	"In this TAS, by both sides initiating many trades, we whittle white's position down to six checkers very quickly. After this point, trades are harder to initiate while not putting oneself in a losing position or causing the AI to think a lot (think times seem to be worst if it is a complex 
	[b 
		"endgame
	]b
	" position!). After much empirical testing, the fastest pattern I found was this one where we set up a front on the right side for a couple turns which, when released, very quickly removes four more of white's checkers. After this, even with two checkers left, the AI still has to think some but it is a decisive victory at this point for a 4-0 win!
	$LF
]div
[div class=p 
	[b 
		"RNG
	]b
	$LF
]div
[div class=p 
	"There is some randomness to computer moves when more than one move is found to be about the best. Not much manipulation of RNG was needed to obtain this run.
	$LF
]div
[div class=p 
	[b 
		"Suggested Screenshot:
	]b
	" Frames 7317-7584 or 7645-7647
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Everything looks good, accepting.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/despoa 
		"despoa
	]a
	": Processing...
]div
