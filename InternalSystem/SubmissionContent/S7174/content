40
[div class=p 
	"This submission completes all of 
	[em 
		"Super Smash Bros. Melee
	]em
	"'s 25 Break The Targets stages with an in-game time of 
	[b 
		"2:39.97
	]b
	".
	$LF
]div
[div class=p 
	"The re-record count is unknown, as in-game tools were used for the individual levels and re-records were not tracked. Including re-records to find successful RNG seeds, a conservative estimate would number in the mid 6 figures across the 25 stages.
	$LF
]div
[h2 id=Settings 
	" Settings
	$LF
]h2
[ul 
	[li 
		" Emulator: 
		[a href=https://github.com/SwareJonge/Dolphin-Lua-Core/releases/tag/v3.5 rel=noopener external nofollow 
			"Lua Dolphin v3.5
		]a
		$LF
	]li
	[li 
		" Game version: 
		[em 
			"Super Smash Bros. Melee
		]em
		", PAL
		$LF
	]li
	[li 
		" Starts from boot with a save file generated by 
		(__wikiLink|displaytext=Mothrayas' SSBM Character unlock movie|href=/Userfiles/Info/68587254092346677)
		" (required to unlock all characters)
		$LF
	]li
]ul
[h3 id=GameObjectives 
	" Game objectives
	$LF
]h3
[ul 
	[li 
		" Complete all Break The Targets stages
		$LF
	]li
	[li 
		" Heavy luck manipulation
		$LF
	]li
	[li 
		" Takes damage to save time
		$LF
	]li
	[li 
		" Optimizes for in-game time
		$LF
	]li
	[li 
		" Genre: Fighting(?)
		$LF
	]li
]ul
[h2 id=About 
	" About
	$LF
]h2
[h3 id=TargetTest 
	" Target Test
	$LF
]h3
[div class=p 
	"There are three modes in the 'Regular Match' submenu of 
	[em 
		"Super Smash Bros. Melee
	]em
	"'s 1-P Mode menu: Target Test, Home Run Contest, and Multi-Man Melee. Target Test is more commonly known as 'Break The Targets', as 1) that is what it was called in 
	[em 
		"Super Smash Bros.
	]em
	", and 2) the announcer yells 'Break The Targets!' every time the character select screen is loaded.
	$LF
]div
[div class=p 
	"Break The Targets, as in 
	[em 
		"Melee
	]em
	"'s prequel, provides each character with their own unique stage, generally designed to take advantage of their attributes and attacks. Each stage contains 10 targets which the player can attack to break, with the goal of breaking all 10 in the shortest amount of time.
	$LF
]div
[div class=p 
	"The stages are generally very short, ranging in length from 2.58 seconds to 12.67 seconds of in-game time (real-time minus 2/3rds of a second, as the timer does not start counting up until the 41st frame of player control) in this movie. Most stages are open-ended, which means that routing is critical if one wishes to save time.
	$LF
]div
[h3 id=History 
	"  History
	$LF
]h3
[h4 id=20072015ActionReplayAndEarlyDolphinTases 
	" 2007-2015: Action Replay and Early Dolphin TASes
	$LF
]h4
[div class=p 
	"Despite (or perhaps because of) their short length, these stages have been hotly contested in the individual level RTA category since 
	[em 
		"Melee
	]em
	"'s release in 2001.
	$LF
]div
[div class=p 
	"The earliest 
	[em 
		"Melee
	]em
	" TASes were created in 2005 using an Action Replay to enable the game's built-in debug mode, which had been rendered inaccessible but not removed from retail copies. ajp_anton made some of the earliest Break The Targets TASes in this manner starting in 2007, in addition to assisting RTA runners with strat-finding. Starting in 2010, he optimized his times using Dolphin Emulator and its superior tools (including savestates); by the end of 2015, he held TAS records for 18 of 
	[em 
		"Melee
	]em
	"'s 25 characters. At that time, the sum of world record times was 2:44.97.
	$LF
]div
[h4 id=20162021HacksGeckoCodesAndOptimization 
	" 2016-2021: Hacks, Gecko Codes, and Optimization
	$LF
]h4
[div class=p 
	"Improvements in tools (such as the 20XX Hack Pack, which exposes memory values including characters' exact position and speed), Gecko codes (to conquer the stages which have RNG elements), and game knowledge (to develop new routes, especially on stages where previous TAS routes were similar to their RTA counterparts) have driven times down further in recent years. In addition to ajp_anton, PracticalTAS has attempted to optimize every stage and Mario 64 Master and tauKhan have both chosen to focus on a smaller subset where they felt time could be saved; all four have found success.
	$LF
]div
[div class=p 
	"At the end of 2019, the world record sum was 2:44.10, driven primarily by a new route and optimizations on Peach's stage which saved a total of 0.6 seconds. Since then, the pace of change has increased rapidly - 22 of the 25 records standing at the end of 2019 have been broken in 2020 or 2021. The oldest records that remain are Pichu (ajp_anton, 2010), Kirby (ajp_anton, 2012), and Mewtwo (PracticalTAS, 2016).
	$LF
]div
[div class=p 
	"The current sum of best times is 2:39.93, though only 2:39.97 is achievable on a single save due to version differences.
	$LF
]div
[div class=p 
	"As of the time of submission, the combined RTA world record times of the individual levels (taking the best of PAL and NTSC where there is a difference between the two) is 2:56.73.
	$LF
]div
[h3 id=VersionChoice 
	" Version Choice
	$LF
]h3
[div class=p 
	"Some of 
	[em 
		"Melee
	]em
	"'s characters have attack or attribute differences in PAL which affect their Break The Targets completion time:
	$LF
]div
[ul 
	[li 
		" Bowser: slightly heavier in PAL, decreasing the efficiency of damage boosting (though by a small enough amount that PAL and NTSC are tied in TAS)
		$LF
	]li
	[li 
		" Fox: slightly lighter in PAL, increasing the efficiency of damage boosting (though by a small enough amount that PAL and NTSC are tied in TAS)
		$LF
	]li
	[li 
		" Kirby: faster run speed and larger forward-aerial hitbox in PAL, saving time (optimal in PAL, 2 frames slower in NTSC)
		$LF
	]li
	[li 
		" Mario: slower air speed in PAL (though by a small enough amount that PAL and NTSC are tied in TAS)
		$LF
	]li
	[li 
		" Marth: slightly lighter in PAL, increasing the efficiency of damage boosting (though by a small enough amount that PAL and NTSC are tied in TAS), and slower air speed in PAL, costing time (optimal in NTSC, 2 frames slower in PAL)
		$LF
	]li
	[li 
		" Sheik: weaker up-aerial in PAL, decreasing the amount of hitlag suffered when breaking two targets by one frame each (optimal in PAL, 2 frames slower in NTSC)
		$LF
	]li
]ul
[div class=p 
	"Only Marth is suboptimal in TAS in PAL, while Kirby and Sheik are suboptimal in NTSC. In total, PAL is 2 frames faster than NTSC; for this reason, PAL was chosen.
	$LF
]div
[h2 id=StageByStageComments 
	" Stage-By-Stage Comments
	$LF
]h2
[div class=p 
	"Unlike its prequel, five of 
	[em 
		"Melee
	]em
	"'s Break The Targets stages contain RNG elements. The naive chance of completing the first four back-to-back without RNG manipulation is roughly 1 in 6 quadrillion (1 in 6,000,000,000,000,000, or 1.7e-16); given that 
	[em 
		"Melee
	]em
	"'s RNG seed is an unsigned 32-bit integer (4.295e9), it's pretty safe to say that this is not possible without setup. Successful completion of the fifth RNG stage, Mewtwo, is a common occurrence at 70%; since Mewtwo's also requires setup (see the 'Hazard Invincibility Glitch' section), it's performed with the non-RNG stages.
	$LF
]div
[h3 id=Setup 
	" Setup
	$LF
]h3
[h4 id=RngInitialization 
	" RNG Initialization
	$LF
]h4
[div class=p 
	"The submission DTM is set to start at 
	[b 
		"2023-04-20 22:59:15
	]b
	".
	$LF
]div
[div class=p 
	[em 
		"Melee
	]em
	"'s RNG seed is initialized using the current contents of the GameCube's timebase register, using a mftbl (move from timebase low) instruction. The timebase register iterates at 40.5 MHz, as the GameCube has a 162 MHz bus and a custom "Gekko" PowerPC processor which (like many PowerPC processors) iterates its timebase register once every four bus clocks. We only care about the timebase low register, which rolls over to 0 each time it reaches 0xFFFFFFFF.
	$LF
]div
[div class=p 
	"On a console, the timebase register can contain any value on startup, but Dolphin only initializes 
	[em 
		"Melee
	]em
	" with the current time in 
	[em 
		"seconds
	]em
	" - thus, only 1 in every 40.5 million timebase values is achievable on initialization (since this occurs before any player input is accepted, there is no way to affect this process outside of changing the clock).
	$LF
]div
[div class=p 
	"This is a more minor issue than it would seem, as the fact that the timebase low bits roll over at 0xFFFFFFFF means that the number of achievable initial seeds is governed by the greatest common factor of 40,500,000 and 2^32. This number is 32, which means that 1 in every 32 RNG seeds is eventually achievable as a starting seed, as long as you are willing to adjust the start time of the DTM by up to 2^27 seconds. More specifically, it was empirically determined that all starting seeds which pass the bitmask
	$LF
]div
[pre 
	"   XXXX XXXX XXXX XXXX XXXX XXXX XXX1 1101
	$LF
]pre
[div class=p 
	"(i.e. low byte 0x1D, 0x3D, etc. up to 0xFD) are achievable as starting seeds. The start time listed above initializes the RNG seed at 0xF6909E
	[b 
		"7D
	]b
	"; after the constant 42 RNG iterations that occur during 
	[em 
		"Melee
	]em
	"'s startup, the seed becomes 0x18C52128, which is the desired starting seed for Peachâ€™s stage once one extra RNG call is triggered with RNG music (see below).
	$LF
]div
[div class=p 
	"For Samus, Bowser, and Sheik, we do not end the prior stage exactly on the desired seed. The remaining RNG iterations are manually triggered by random selecting a character on the character select screen; each selection triggers two RNG calls, the first to determine character and the second to change color in case the same character has been selected twice in a row. This can be controlled because 
	[em 
		"Melee
	]em
	"'s RNG function is a Linear Congruential Generator (with parameters a = 214013, c = 2531011, m = 2^32, resulting in an optimal period of 2^32). For more details, please read 
	[a href=https://old.reddit.com/r/SSBM/comments/71gn1d/the_basics_of_rng_in_melee/ rel=noopener external nofollow 
		"this informative post
	]a
	".
	$LF
]div
[h4 id=RngMusic 
	" RNG Music
	$LF
]h4
[div class=p 
	"All stages besides Sheikâ€™s use series-specific music rather than the Break The Targets theme; this is done by holding L when loading the stage, and triggers one RNG call to determine which song to play. Crucially, this allows us to achieve the correct RNG seed if we are otherwise off by one, without needing to waste time going into the nametag creation menu and random selecting a name (which is also guaranteed to iterate by one seed on the first random selection).
	$LF
]div
[div class=p 
	"The RNG manipulations for the other three characters which require it are routed to use this additional RNG call, but since Sheik's seed is an even number of iterations from the previous character's ending seed, the Break The Targets theme is played for her.
	$LF
]div
[h4 id=Routing 
	" Routing
	$LF
]h4
[div class=p 
	"In-game tags are made to denote which author first achieved the current version-agnostic world record for each character: by order created in the submission, 'PTAS' for PracticalTAS, 'tau' for tauKhan, 'M64M' for Mario 64 Master, and 'AJP' for ajp_anton.
	$LF
]div
[div class=p 
	"The four main RNG records are run first, both to simplify optimization and to allow for reuse of work in the event that future submissions feature improvements in any of the other 21 stages. As by far the least likely run, a seed for Peach was found first and the search space for the other seeds was limited to the seeds immediately following Peach. The second least likely run is Sheik, and a seed which completes the run was found 17,317 seeds after the end of Peach's. This allowed for the placement of Samus' run (which causes 12,597 RNG iterations including the extra 1 for RNG music) and Bowserâ€™s run (which causes 4,658 RNG iterations including RNG music) between Peach and Sheik. The initial set of Bowser inputs caused 4,744 RNG iterations, which was 24 iterations past the ideal Sheik seed (thus making that seed unusable and requiring wasting time traveling to a much farther seed), but luckily a slight adjustment to the inputs caused fewer RNG calls while still completing Bowser's stage in the same amount of time.
	$LF
]div
[div class=p 
	"After the RNG characters are complete, we exit Break The Targets and enter Adventure Mode to trigger the Hazard Invincibility Glitch. During 1-player modes, including Break The Targets and the platforming sections of Adventure Mode, a flag is set which provides the player with 1.5 seconds of intangibility upon taking damage; this flag is unset during battles with CPUs.
	$LF
]div
[div class=p 
	"Crucially, this flag is not set if the player loses their last life in Adventure Mode and triggers a Game Over, nor is it actually set when starting Break The Targets (it is set on boot and Break The Targets simply uses the current value). When this flag is unset, we are able to rapidly damage boost off hazards in Break The Targets to save time; the fastest boosts are twice in six frames, which is obviously impossible if the flag is set. Five characters (in order in this submission, Luigi, Falco, Mewtwo, Marth, and Roy) complete their runs faster with the Hazard Invincibility Glitch on than would be possible with it off, and it is never suboptimal to have it on.
	$LF
]div
[div class=p 
	"However, entering Adventure Mode (or specifically triggering the Hazard Invincibility Glitch, we do not care which) changes the number of RNG calls made during Break The Targets runs, which would ruin our manipulation for the first four characters and require that we find different seeds; as this run optimizes for in-game time, this additional work was deemed unnecessary.
	$LF
]div
[div class=p 
	"Following the triggering of the Hazard Invincibility Glitch, the remaining characters are grouped by author (to minimize the number of tag switches) and played in character select screen order. PracticalTAS' runs are completed first as his tag is already on, and ajp_anton's runs are completed last as his Pichu has the longest time of all 25 characters between final input and stage completion.
	$LF
]div
[h3 id=RngCharacters 
	" The RNG Characters
	$LF
]h3
[h4 id=1Peach 
	" 1. Peach
	$LF
]h4
[div class=p 
	"Peach's down-special usually spawns a turnip (127 in 128 chance), but it also rarely spawns a Bob-omb (1 in 384), Mr. Saturn (1 in 256), or Beam Sword (1 in 768). The optimal route contains four item pulls: a turnip, then three Bob-ombs, for a naive 1 in 57,068,955 chance of occurring.
	$LF
]div
[div class=p 
	"Starting from the second pull, the number of iterations between pulls was analyzed in order to find seeds which were guaranteed to pull one Bob-omb and more likely than average to pull all three. Of 6,190 seeds tested, 657 (10.6%) pulled two Bob-ombs, and 8 of those pulled three Bob-ombs. Of those 8, only 
	[b 
		"1
	]b
	" was achievable from the start of a run and resulted in a successful completion - since some particle effects cause variable numbers of subsequent RNG calls, two initial seeds which are n iterations apart at the start of the run are not necessarily n iterations apart by the time the second pull occurs.
	$LF
]div
[div class=p 
	"This process actually yielded 16 total seeds which complete Peach's run, all of which 'sync up' and all pull the first Bob-omb on the same seed then remain synced for the rest of the run. This is an overall success rate of 0.26%, almost 150,000 times more likely than the naive search rate.
	$LF
]div
[div class=p 
	"Of the 16 seeds available, 1 did not require any additional RNG manipulation via random selections on the character select screen, so that one was chosen for the submission.
	$LF
]div
[div class=p 
	[em 
		"Note
	]em
	": targets are numbered in the order that the attack that broke them is started, then in order by when they are actually broken, then arbitrarily if two targets are broken on the same frame by the same attack.
	$LF
]div
[div class=p 
	"Regarding the actual route, the first down-special pull is optimally a turnip because turnips have more horizontal throw arcs than the rare items, so a turnip can be thrown from higher to hit target 3 earlier. A Bob-omb is the only item which breaks target 4 through the ceiling. The third and fourth pulls use aerial turnip pulls, a glitch triggered by pressing down-special on the frame Peach walks or slides off of ground. Bob-ombs and Beam Swords have a much higher range than turnips or Mr. Saturn when thrown upwards; a Bob-omb is optimal for target 5 as its smaller hitbox allows it to avoid an off-screen wall sooner, and a Bob-omb is optimal for target 9 as Bob-ombs have slightly higher upwards velocity than Beam Swords. The last Bob-omb is thrown backwards because items thrown upwards are released behind Peach's head, and a forward-facing Bob-omb does not reach target 9; turning around costs 2 frames before saving 6 due to throw speed, for a net time save of 4 frames.
	$LF
]div
[div class=p 
	"Peach also uses her unique float mechanic to both travel horizontally in the air and 'float cancel'. Float canceling is a glitch where Peach starts an aerial while floating, cancels the float, and lands before the aerial ends. This replaces the aerial-specific landing lag with the constant 4 frames of regular landing lag, allowing her to act quicker. All four throws also are airdodge-canceled; the first three frames of an airdodge can be canceled into an item throw if the player is holding an item, and airdodges can use any of 
	[em 
		"Melee
	]em
	"'s 6,456 unique angles, so an incredibly precise level of control is available in TAS here.
	$LF
]div
[h4 id=2Samus 
	" 2. Samus
	$LF
]h4
[div class=p 
	"Samus' RNG occurs by target 9, during the grapple release; the exact shape of the grapple is governed by RNG, which results in variable distance traveled on retraction. The exact mechanism has not been reverse engineered, but empirically this results in a rate of roughly 1 completion per 500 attempts at the optimal time of 6.77 seconds. A seed 85 iterations away from the end of Peach was found, so the seed was set with 42 random selections and RNG music.
	$LF
]div
[div class=p 
	"While it may be possible that another frame could be saved, this is not considered likely; even really good 6.77s have leeway of 0.05 in-game units, while Samus travels 0.89 units per frame (ie, an additional 0.84 unit improvement would be needed to save another frame). The worst retractions result in completion times that are 8 or more frames slower.
	$LF
]div
[div class=p 
	"Samus utilizes no-impact lands, which replace the normal 4-frame landing lag with only 1 frame if the the character lands while moving slower downward than 1 unit per frame (including landing while moving upward). She also uses pivots, which are 1-frame stick presses in the opposite direction that one is currently facing in order to turn around immediately, and wall jumps, which are exactly what one would think (minus 
	[em 
		"Melee
	]em
	"'s various arbitrary requirements for triggering one, none of which come up with Samus). Finally, her first down-special is triggered from a crouch, which speeds up the animation by 2 frames at the cost of 1 frame to trigger the crouch after landing.
	$LF
]div
[div class=p 
	"Samus uses two super wavedashes, a physics exploit which allows her to move at a peak speed of over 7 times faster than her normal terminal horizontal air speed. When Samus uses her down-special, she has radically different physics if pressing in the direction she is moving versus pressing in the opposite direction. While grounded and pressing away from the direction she is moving, her control stick input is multiplied by a very large number to calculate her acceleration on the next frame, and her subsequent speed is uncapped. A cap is enforced if she then presses in the new direction, and her speed is set to 0 if she releases the control stick, but no cap is enforced if she holds in the opposite direction; instead, deceleration is applied proportional to the stick x-magnitude.
	$LF
]div
[div class=p 
	"Samus can maintain her high speed and minimize the effect of deceleration in one of two ways: 1) by timing the acceleration to be on frame 42 of a grounded down-special, as that is the last frame on which the special physics is applied, or 2) by going airborne on the acceleration frame and holding slightly backwards in midair, as airborne down-special deceleration is a fraction of the magnitude of grounded deceleration. The second variant is also called a 'Goomy Zoomy', after the player who pioneered its use in competitive play. Samus uses it twice in this run, moving slowly in one direction, pressing fully in the opposite direction for one frame to maximize acceleration and simultaneously go airborne, then pressing slightly in the original direction to prevent the cap from limiting her speed. Despite the time required to set up the super wavedash, it is still optimal to use twice.
	$LF
]div
[div class=p 
	"For more info on the super wavedash, please read 
	[a href=https://smashboards.com/threads/official-super-wavedash-discussion-please-read-and-post-here.55424/page-16#post-21902610 rel=noopener external nofollow 
		"this post
	]a
	".
	$LF
]div
[h4 id=3Bowser 
	" 3. Bowser
	$LF
]h4
[div class=p 
	"Bowser's RNG is in his fire puffs, which have a random angle between 35 and 55 degrees downward. Empirically, the completion rate at the optimal time of 7.48 seconds is roughly 1 in 50, which allowed brute forcing. The earliest seed which completes Bowser's run is 103 iterations away from the end of Samus, which is achieved with 51 random selections on the character select screen plus RNG music.
	$LF
]div
[div class=p 
	"Bowser is the first character which uses a damage boost, canceling his fire breath by getting hit and performing Smash Directional Influence ('Smash DI') each frame while in hitlag (the 'freeze frames' which occur upon getting hit). Each Smash DI travels up to 6 units for all characters, which is between 4.4 and 8.9 times faster than their terminal horizontal air speed and can be executed in nearly any direction. Bowser also uses Directional Influence ('DI') at the end of hitlag to optimize the distance he travels while in knockback after the hit. Bowser only damage boosts once, which means he does not require the Hazard Invincibility Glitch to be active for optimal speed. Bowser is also the first character to wavedash or waveland, a physics exploit in which a character airdodges into the ground at an angle and their residual horizontal momentum keeps them moving during the airdodge's 10 frame landing lag.
	$LF
]div
[div class=p 
	"In addition to shield dropping, Bowser also performs L-canceling (pressing L before landing during an aerial attack to halve landing lag) and edge canceling (canceling an aerial attack animation by landing on stage then sliding off an edge, though this is not possible for all attacks). He also autocancels a neutral-aerial after target 7, using the attack to contort his Environmental Collision Box ('ECB', the diamond which causes a character to land when touching ground and collide when touching a wall or ceiling) then touch ground before the attack's initial autocancel window ends. Depending on the attack, an autocancel may be allowed either before the first hitbox comes out, after the last hitbox ends, neither, or both.
	$LF
]div
[h4 id=4Sheik 
	" 4. Sheik
	$LF
]h4
[div class=p 
	"Sheik's RNG occurs in her neutral-special needles, which each are released at one of nine heights. Originally this run had a completion rate of 1 in 59,049 (9^5), but targets 2 and 3 had some positional leeway and so were optimized to maximize the number of needle heights which successfully hit them. This resulted in an improved success rate of 2/9 and 7/9, respectively, and improved the overall completion rate to 1 in 4,218. It would be suboptimal to improve the range for targets 1, 4, and 9, as this would slow the run down; these three targets all require maximum height needles. Targets 7 and 8, while being hit by needles, work with every height.
	$LF
]div
[div class=p 
	"In testing, it was determined that a relatively small variety of RNG seed iterations occur before the first needle height is decided. Specifically, roughly 50% of runs result in either 68 or 71 iterations before the needle height is decided, so only seeds which would result in a maximum height needle at both of those counts were tested. As the other 50% of runs still had a 1/9 chance of resulting in a maximum height needle, the completion rate of target 1 in testing was roughly 5/9 and the completion rate of the overall run in testing was estimated at 1 in 840. Some completion seeds were expected to be missed, as only 1 of every 81 seeds was being tested, but the greatly decreased time required to find a successful seed meant this trade-off was worth making.
	$LF
]div
[div class=p 
	"No successful seed was found in this batch of 1,220, so seeds which result in a maximum-height needle at 
	[em 
		"either
	]em
	" iteration count were tested (a first target success rate of ~31% and testing success rate estimated at 1 in 1,225). 3 successes were found in the first 3,882 seeds tested, and the first of those was found to be suitable after adjusting Bowserâ€™s inputs. This seed ended up being 62 iterations away from the end of Bowser, and was achieved with 31 random selections without RNG music.
	$LF
]div
[div class=p 
	"Sheik uses autocanceling, where an attack animation (in this case her needle throw) is coded to cancel upon landing and trigger only her neutral 4-frame landing lag rather than an animation-specific lag. She also uses shield dropping, which is performed by pressing shield then partially down on the control stick, resulting in a 2-frame drop through a platform rather than the standard 4 frames if only down was pressed.
	$LF
]div
[div class=p 
	"Sheik is also the only character in the game whose air deceleration has a quirk (similar to Samus' super wavedash) in which holding backwards causes slower deceleration than neutral or forwards. This is because Sheik has low base 
	[a href=https://www.ssbwiki.com/Air_acceleration rel=noopener external nofollow 
		"air acceleration
	]a
	" (which governs the effect of the control stick on air speed, including holding back) and very high 
	[a href=https://www.ssbwiki.com/Air_friction rel=noopener external nofollow 
		"air friction
	]a
	" (which governs the effect of decreasing speed when not holding the control stick, or when holding forward while above maximum horizontal terminal velocity). After a maximum-horizontal-speed jump or double jump, Sheik briefly travels faster than her terminal horizontal velocity, so holding slightly backward until she reaches terminal horizontal velocity increases her average speed. This quirk saves 3 frames.
	$LF
]div
[h3 id=HazardInvincibilityGlitch 
	" Hazard Invincibility Glitch
	$LF
]h3
[div class=p 
	"While the total submission length would likely be faster if the run started with triggering the Hazard Invincibility Glitch, entering Adventure Mode changes the number of RNG calls made during subsequent Break The Targets runs. This means that RNG seeds which complete a Peach, Samus, Sheik, or Bowser run from boot will not necessarily do the same after the Hazard Invincibility Glitch is activated. As RNG manipulations from boot are more desirable, and since this submission is targeting in-game time, it was decided that the analysis and manipulation steps would not be redone.
	$LF
]div
[div class=p 
	"Settings are changed to one stock and very hard difficulty to minimize the amount of time spent self-destructing and maximize the effects of damage boosting, respectively. The earliest spot that the glitch can be triggered is the Yoshi fight at the end of the first stage, so two damage boosts are used to get there quickly after an initial damage application (ironically enough, used to gain intangibility to set up the first damage boost quickly). Pichu is used as he is the lightest character (maximizing damage boost distance) and his up-special can be used to quickly travel in arbitrary directions and can be edge canceled for maximum speed.
	$LF
]div
[div class=p 
	"Once Pichu self-destructs and Game Over is seen, the glitch is active and enables faster damage boosting for the remaining characters. We return to Break The Targets and complete the remaining characters, grouped by author, in character select screen order.
	$LF
]div
[h3 id=RemainingCharacters 
	" The Remaining Characters
	$LF
]h3
[h4 id=5Luigi 
	" 5. Luigi
	$LF
]h4
[div class=p 
	"Luigi's run is the first to use double damage boosts, in which he gets hit by a flipper, Smash DIs through it, and gets hit by it a second time in order to redirect the subsequent knockback to a favorable direction. This is done twice. Simultaneously hitting a target and taking damage, and hitting two targets on the same frame, are used to minimize hitlag (as hitlag does not stack). Additionally, the back-aerial which hits targets 6 and 7 is triggered on the second aerial frame, as a quirk in 
	[em 
		"Melee
	]em
	"'s physics means that attacks triggered on the first aerial frame cancel the first aerial physics frame, resulting in a lower jump height.
	$LF
]div
[h4 id=6DonkeyKong 
	" 6. Donkey Kong
	$LF
]h4
[div class=p 
	"Donkey Kong uses a series of edgecancels to minimize lag upon landing from attacks or airdodges. He also uses neutral-special cancels to turn around in midair and face the correct direction (outwards, which allows him to teeter and subsequently grounded jump after edgecanceling rather than being limited to slipping off the platform and going airborne).
	$LF
]div
[h4 id=7CaptainFalcon 
	" 7. Captain Falcon
	$LF
]h4
[div class=p 
	"Captain Falcon uses autocancels and no-impact lands to traverse his level quickly. The optimal attack for target 7 is a pivot jab; previous routes used an aerial attack for this target before landing on the platform, but jab's low total animation length is faster despite grounded normals being a relative rarity in Break The Targets.
	$LF
]div
[h4 id=8Ganondorf 
	" 8. Ganondorf
	$LF
]h4
[div class=p 
	"Ganondorf's stage is cycle-based. He too damage boosts, performing 8 Smash DI inputs during the 8 hitlag frames that spikes cause. He edgecancels an attack as well as the knockback from the second spike hit, using the residual knockback to reach the final target faster. This route is completed without utilizing the Hazard Invincibility Glitch, as this time was first achieved without it, but the glitch does not slow Ganondorf down.
	$LF
]div
[h4 id=9Falco 
	" 9. Falco
	$LF
]h4
[div class=p 
	"Falco's stage is cycle-based, as a target travels from one end of the screen to another in a few frames and an attack must be timed to hit it while it is in motion. Falco uses a wall tech after the first two instances of burner damage in order to halt his momentum, and slides off after the third in order to maintain his momentum and clear the gap under the right side of the stage. His down-special after target 9 is canceled with a jump, which is canceled with a ceiling bonk, which is canceled by immediately landing and puts Falco in an actionable state. This allows him to pivot jab to hit the final target.
	$LF
]div
[h4 id=10Fox 
	" 10. Fox
	$LF
]h4
[div class=p 
	"The majority of Fox's targets are broken with precise application of his rapid-fire lasers. A very precise wall jump is required to reach target 6, and Fox damage boosts with Smash DI after his burner hit in order to edgecancel his knockback by sliding off the platform below him. This stage is bottlenecked by the travel time of the target 9 laser; Fox can break target 10 at 5.21 in PAL, but his up-aerial is delayed by 1 frame both to maintain the same inputs as NTSC and as a stylistic choice resulting in a same-frame final hit.
	$LF
]div
[h4 id=11Ness 
	" 11. Ness
	$LF
]h4
[div class=p 
	"Ness uses his double-jump cancel, where his non-standard jump arc is terminated early by performing an attack, several times in his run. He also performs a pivot drop after target 7, which is done by landing on the ledge, pivoting to turn around, and falling off the stage on the next frame. This results in Ness facing to the left, which allows him to hit target 8 with a falling forward-aerial. His jump arc also has a few frames with speed higher than his terminal horizontal air velocity, so a double-jump cancel is used after target 8 to save a frame (since the limiting factor for target 10 is his horizontal movement).
	$LF
]div
[h4 id=12IceClimbers 
	" 12. Ice Climbers
	$LF
]h4
[div class=p 
	"Popo the Ice Climber (as he is without his partner Nana while breaking targets) uses several edge cancels and a few attack startup autocancels to climb his stage. Most notably, target 1 is broken using a trick with Popo's neutral-special. The ice block would usually break the bricks on  the stage, but it has its own ECB which extends past its hitbox and interacts with the bricks' ECBs instead of breaking them. Thus, it bounces off the bricks to the target. Additionally, the brick directly below Popo is broken by the hammer swing, resulting in the attack being edgecanceled. This saves 0.75 seconds over the old record which did not use this trick. The ice block hit for target 7 is delayed by the hitlag of the hammer hitting target 6, allowing the ice block to fall off the moving cloud later and not miss its intended target. The bird holding target 10 is not RNG-dependent. This stage is also the only one which plays series-specific music by default.
	$LF
]div
[h4 id=13YoungLink 
	" 13. Young Link
	$LF
]h4
[div class=p 
	"Young Link's and Link's boomerangs are absurdly overpowered tools in Break The Targets. As they lose their ECB upon hitting something or completing their forward motion, and they do not lose their hitbox, they can break multiple targets behind the player and even curl in the direction the player is moving. The first boomerang is thrown down and chased upward, causing it to curl up and eventually hit 3 targets. The second boomerang is thrown down and not chased upward, causing it to curl down and hit 4 more targets. Young Link's grapple also does not interact with ceilings on the first frame it is active, which allows it to travel through the angled ceiling and hit target 10 from the other side.
	$LF
]div
[h4 id=14Pikachu 
	" 14. Pikachu
	$LF
]h4
[div class=p 
	"Like Pichu in Adventure Mode, Pikachu uses a precise up-special edgecancel. This is notable because the edgecancel requires a 'shortened' up-special, executed by holding the control stick partway to the edge of the gate while moving. This precise maneuver has actually been performed in several world record runs for Pikachu, and indeed this TAS route is identical to RTA.
	$LF
]div
[h4 id=15Jigglypuff 
	" 15. Jigglypuff
	$LF
]h4
[div class=p 
	"Jigglypuff damage boosts off a burner, then uses a floor tech and maximizes her time spent in the tech animation on the ground in order to minimize her horizontal speed. She also hits the burner out of the startup of her airdodge, which results in a V-Cancel and multiplies her launch velocity by 0.95. A clip is performed in the RTA route where Jigglypuff is pushed through a wall by a moving block, but the TAS travels so fast that the block is not in position in time. The blocks are also not RNG-dependent.
	$LF
]div
[h4 id=16Mewtwo 
	" 16. Mewtwo
	$LF
]h4
[div class=p 
	"Mewtwo is the last RNG-dependent stage, as his neutral-special shadow ball has a random trajectory and empirically misses target 7 approximately 30% of the time. He is completed with the non-RNG stages since he requires the Hazard Invincibility Glitch to be active for an optimal time, and luckily his high chance of completion is not too inconvenient (as either the Adventure Mode section or other characters' stages could be adjusted without time loss to get a good RNG seed for Mewtwo if necessary). Mewtwo is bottlenecked by the moving platform he lands on after target 3, as well as the burner he hits after target 5. He also damage boosts with Smash DI twice, and hits target 9 through the stage with his back-aerial on the same frame that he hits target 8 and takes damage from a moving burner.
	$LF
]div
[h4 id=17MrGameWatch 
	" 17. Mr. Game & Watch
	$LF
]h4
[div class=p 
	"Mr. Game & Watch's stage is the shortest of all Break The Targets stages and one of only two that clocks in under 3 seconds in TAS. His neutral-aerial actually cannot be L-canceled, but his next fastest option for targets 2 and 3 is the slightly slower forward-aerial (which can be L-canceled). Neutral-aerial nets a total of 2 frames saved with a lower jump and 1 less instance of hitlag, more than making up for having higher hitlag and not being able to L-cancel.
	$LF
]div
[h4 id=18Marth 
	" 18. Marth
	$LF
]h4
[div class=p 
	"Marth is the only character that is suboptimal in PAL; PracticalTASâ€™ NTSC 7.40 can be found 
	[a href=https://www.youtube.com/watch?v=d_5UEj6yKDg rel=noopener external nofollow 
		"here
	]a
	". Marth's run starts with a set of wavedashes; this is faster than running for several characters including Marth. He also does a double damage boost twice, first after target 8 (redirecting an initial leftward knockback to downward), then before target 9 (redirecting rightward to leftward).
	$LF
]div
[h4 id=19DrMario 
	" 19. Dr. Mario
	$LF
]h4
[div class=p 
	"Dr. Mario's stage is cycle based, and a few RTA runners have performed the cycle skip shown here fast enough to beat the cycle. While rising, Dr. Mario needs to wait a few frames - that time is filled with a taunt cancel (performing a taunt while moving sideways, then edgecanceling the taunt, which is only doable in 
	[em 
		"Melee
	]em
	" with Dr. Mario and Young Link). On the way back down after target 6, Dr. Mario's position is precisely controlled in order to trigger the fastest possible landing lag animation edgecancel.
	$LF
]div
[h4 id=20Link 
	" 20. Link
	$LF
]h4
[div class=p 
	"Link's boomerang is used just as efficiently as Young Link's, also breaking 7 targets in 2 throws. Link climbs the wall after target 6 with a grapple break, where the grapple animation is canceled by the middle of the grapple hitting the wall, putting Link in an actionable state and bypassing  a long grapple retraction animation. Unlike Samus' grapple, Link's and Young Link's have no RNG element. A second grapple break is used as a stylistic choice before target 10.
	$LF
]div
[h4 id=21Yoshi 
	" 21. Yoshi
	$LF
]h4
[div class=p 
	"Yoshi's stage makes liberal use of his up-special, which allows both angle and distance control. Most notably is the egg for target 8, which is frame-perfect with a very small spacing tolerance, and allows Yoshi to face left to double-jump cancel his back-aerial for targets 9 and 10.
	$LF
]div
[h4 id=22Roy 
	" 22. Roy
	$LF
]h4
[div class=p 
	"Roy's run is probably the most precise out of all 25. In order to optimize the double damage boost after target 5, phantom Smash DI is used. A phantom hit occurs when a hitbox intersects with a hurtbox by less than 0.01 units (targets and hazards cannot be phantom hit). Smash DI requires the victim to be in both a knockback animation and in hitlag, and a phantom only triggers the hitlag state. However, if one is already in the knockback state from a previous move, the hitlag from the phantom is sufficient to allow Smash DI. Then, if one Smash DIs into the full hit of the move or hazard, the phantom is canceled and regular Smash DI can be performed. This results in one additional Smash DI pulse and allows a TASer to precisely select their knockback direction, as the direction is chosen at the start of the full hit, which is after the first Smash DI. The usage of phantom Smash DI optimizes Roy's horizontal movement, allowing him to slide off the first platform to become actionable, airdodge to the second platform for even more speed, and hit the flipper at target 8 from the left for another damage boost to reach targets 9 and 10.
	$LF
]div
[h4 id=23Mario 
	" 23. Mario
	$LF
]h4
[div class=p 
	"Mario performs a no-impact land followed by an edgecancel while jumping up the elevator after target 6. He also briefly touches the ground after target 7 in order to refresh his double jump to reach target 10. Mario is the character with the second longest amount of time after final input at 32 frames.
	$LF
]div
[h4 id=24Kirby 
	" 24. Kirby
	$LF
]h4
[div class=p 
	"Kirby's route is significantly faster in PAL due to a plethora of buffs received. The run also contains several wavelands, edgecancels, and waveland edgecancels. His side-special facing backwards is actually the optimal move choice for target 10.
	$LF
]div
[h4 id=25Pichu 
	" 25. Pichu
	$LF
]h4
[div class=p 
	"Like Pikachu, Pichu's route is the same as RTA. Pichu is the character with the longest time between final input and stage completion at 36 frames, so he was chosen to end the run.
	$LF
]div
[h2 id=OtherComments 
	" Other comments
	$LF
]h2
[h3 id=PossibleImprovements 
	" Possible Improvements
	$LF
]h3
[div class=p 
	"No in-game-time improvements are known at this time. Menuing and the Hazard Invincibility Glitch section have been reasonably optimized, but there may be frames to save. After the RNG characters are done, we could save real time for some characters by using random select instead of moving the character selection chit across the entire character select screen.
	$LF
]div
[h3 id=ScreenshotSuggestions 
	" Screenshot Suggestions
	$LF
]h3
[div class=p 
	"Author's suggestion:
	$LF
]div
[ul 
	[li 
		" Peach 3.40 (Frame 505, Peach pulling a Bob-omb with an explosion on screen)
		$LF
	]li
	[li 
		" Frame 7712 (Freeze frame of Fox hitting the final 2 targets simultaneously, with 'Complete!' on screen but not covering him)
		$LF
	]li
]ul
[div class=p 
	"Other possibilities:
	$LF
]div
[ul 
	[li 
		" Peach 4.41 (Frame 566, Peach hitting target 6 as a Bob-omb flies to target 5) or 7.06 (Frame 725, Peach throwing a Bob-omb upward)
		$LF
	]li
	[li 
		" Ganondorf 4.26 (Frame 6612, Ganondorf barely hitting target 9)
		$LF
	]li
	[li 
		" Ice Climbers 4.85 (Frame 9244, Popo hitting target 5 with two ice blocks on screen)
		$LF
	]li
	[li 
		" Young Link 4.31 (Frame 9981, Freeze frame of Young Link hitting targets 8 and 9 simultaneously, before 'Complete!')
		$LF
	]li
	[li 
		" Mr. Game & Watch 1.63 (Frame 12187, Mr. Game & Watch hitting 3 targets simultaneously)
		$LF
	]li
	[li 
		" Marth 7.43 (Frame 12969, Freeze frame of Marth hitting targets 9 and 10 simultaneously, before 'Complete!')
		$LF
	]li
	[li 
		" Dr. Mario 5.70 (Frame 13668, Dr. Mario taunt-canceling on the rising platform)
		$LF
	]li
	[li 
		" Yoshi 6.52 (Frame 15280, Yoshi hitting target 10 while target 8 is hit by an egg, before 'Complete!')
		$LF
	]li
	[li 
		" Mario 6.90 (Frame 16569, Mario throwing a fireball at target 10)
		$LF
	]li
]ul
[h3 id=SpecialThanks 
	" Special Thanks
	$LF
]h3
[ul 
	[li 
		" My co-authors ajp_anton, tauKhan, and Mario 64 Master, for pushing this game mode to its limit; this could not have been done without you
		$LF
	]li
	[li 
		" Achilles1515, for the 20XX Hack Pack
		$LF
	]li
	[li 
		" UnclePunch, metaconstruct, Dan Salvato, 212 Degrees, Eon, djwang88, Savestate, and everyone else who's ever written a Gecko code I've used or helped me with other aspects of 
		[em 
			"Melee
		]em
		$LF
	]li
	[li 
		" Mothrayas, for the unlock movie
		$LF
	]li
	[li 
		" SwareJong, Malleo, and Tales-Carvalho for Lua Dolphin, without which this submission never would have happened
		$LF
	]li
]ul
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/CasualPokePlayer 
		"CasualPokePlayer
	]a
	": Replacing movie file with 48 frames improvement.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/CasualPokePlayer 
		"CasualPokePlayer
	]a
	": Replacing movie file with 488 frames improvement.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Amazing work! The amount of nuances explained in the submission is mind-blowing, and it shows why RNG manipulation and attention to details in this run is also mind-blowing. Everything looks legit, even switching across game modes to activate a glitch. The audience loved the movie too. Accepting to Moons.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/fsvgm777 
		"fsvgm777
	]a
	": 
	[del 
		"Processing.
	]del
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/fsvgm777 
		"fsvgm777
	]a
	": Dropping, because I'm running into graphics issues on OpenGL (which aren't present on D3D11), and dumping on D3D11 results in a completely broken dump for me. Someone else can take over.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/EZGames69 
		"EZGames69
	]a
	": I'll take a stab at it.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": I forgot to address this while judging, but we want to mention the actual internal name of the mode in the branch label, not something some people prefer to call it unofficially. fsvgm777 agrees.
]div
