6
[div class=p 
	"Legally this is a SNES submission and not a Flash submission, but it feels like a Flash submission in spirit.
	$LF
]div
[h3 id=Introduction 
	"Introduction
	$LF
]h3
[div class=p 
	"Super Mario Star Seeker Adventure is an entry in the Questionable Level Design Contest 2023 by hackers bebn legg, icrawfish, and Segment1Zone2. It was awarded a Top Ten award for it's creativity and commitment to its bit. The base SMW game is hacked to resemble early 2000s amateur Flash games of that era, with wonky physics and other changes that someone would potentially expect.
	$LF
]div
[div class=p 
	"The patch for this hack as well as the QLDC 2023 entries can be obtained here: 
	[a href=https://www.smwcentral.net/?p=viewthread&t=124298 rel=noopener external nofollow 
		"https://www.smwcentral.net/?p=viewthread&t=124298
	]a
	$LF
]div
[h3 id=RunNotes 
	"Run notes
	$LF
]h3
[ul 
	[li 
		"Emulator used: BizHawk 2.9.1
		$LF
	]li
	[li 
		"BSNESv115 core
		$LF
	]li
	[li 
		"Takes damage to save time
		$LF
	]li
	[li 
		"Takes a minor bit of entertainment tradeoff with the music
		$LF
	]li
]ul
[h3 id=MechanicsAndTechniques 
	"Mechanics and techniques
	$LF
]h3
[div class=p 
	"A fair amount of SMW knowledge can be carried over, so this will cover the important changes done in this hack.
	$LF
]div
[div class=p 
	[b 
		"Horizontal movement
	]b
	$LF
]div
[div class=p 
	"The most immediate change is that the Run buttons (X & Y) no longer function. The walking speed has been adjusted to be around what Mario's running speed before P-speed is. However, this is achieved via changed horizontal oscillation speeds. Said speeds are a mix of walking, running, and P-speed values. Thus the fastest method of horizontal movement is to get the fastest oscillation speed values, releasing left/right, and jumping to maintain the higher than normal speed values. There's a slight problem with using jumps to maintain fast speed, though...
	$LF
]div
[div class=p 
	[b 
		"Jump movement
	]b
	$LF
]div
[div class=p 
	"Both the normal and spin jump heights have been changed to fixed values. This means it's not possible to adjust jump height by normal means and there's no incentive to hold either jump buttons down. However, there's still differences between the jumps.
	$LF
]div
[div class=p 
	"A normal jump onto an enemy will keep Mario's momentum as the enemy is hit rather that bounce Mario up, kind of mimicking wonky hit detection. This can potentially let Mario get another jump sooner from the ground.
	$LF
]div
[div class=p 
	"A spin jump partially retains a bounce in that Mario's vertical speed is reset upon spin jumping an enemy that can be defeated with a spin jump. This allows for Mario to maintain extra air time. Spin jump collisions also give Mario a very brief window of invulnerability to the enemy Mario makes contact with which can help avoid deaths.
	$LF
]div
[div class=p 
	"Both jumps have situations where one is a better choice than the other so their unique properties even in this hack have to be considered.
	$LF
]div
[div class=p 
	[b 
		"Power ups
	]b
	$LF
]div
[div class=p 
	"The only power up available is the super mushroom. The power up and power down animations are changed to be instant so control isn't lost. Most super mushrooms are either a bit too out of the way or lead to problems with an increased size. There is one case where a super mushroom is obtained in stage 41 to do a damage boost in stage 42.
	$LF
]div
[div class=p 
	[b 
		"! switches
	]b
	$LF
]div
[div class=p 
	"The ! switches toggle the ON/OFF blocks. Unfortunately they have an RNG component to them now to mimic the idea of functions that sometimes but not always work in Flash. Some inputs needed to be adjusted so that the ! switches actually activate when they're needed.
	$LF
]div
[div class=p 
	[b 
		"Coin count, shoulder buttons, and music
	]b
	$LF
]div
[div class=p 
	"There's one thing that this hack does to mimic those weird Russian Mario bootlegs on the Sega Genesis. There's a "random" chance that the music will change to one of the 250+ music tracks in this hack.
	$LF
]div
[div class=p 
	"The truth is that it's not random at all. The music changes with whatever the coin count is upon clearing a stage, dying in a stage, or hitting Select if the coin count doesn't match what music track is playing. At the end of the hack, it's revealed that this can be further changed with the L/R buttons on the controller. The shoulder buttons directly manipulate the coin counter and can be used to retain the same track of music if desired rather than having it shuffled.
	$LF
]div
[div class=p 
	"With that all in mind, I intentionally adjust the coin counter to keep the music the same, reducing load times between levels to a minimum. The only times I change the music is in stages 1, 21, and 41. This was a conscious choice by me to change up the music as an entertainment tradeoff.
	$LF
]div
[h3 id=PossibleImprovements 
	"Possible improvements
	$LF
]h3
[div class=p 
	"Again, this uses SHA-1 enhancements and that might be why the SuperMarioWorld.Lua script didn't work with this hack. So there's probably some better movement that I didn't notice or discover. There's also the factor of having to adjust RNG for the ! switches for improvements found.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": The questionability!
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": Accepting.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/despoa 
		"despoa
	]a
	": Processing...
]div
