5
[h4 id=Objectives 
	"Objectives
	$LF
]h4
[ul 
	[li 
		" Heavy luck manipulation
		$LF
	]li
	[li 
		" Genre: Board game
		$LF
	]li
]ul
[h4 id=ConceptOfCandyLand 
	"The Concept of Candy Land
	$LF
]h4
[div class=p 
	"Candy Land is a children's game in which you draw a card and move to the space indicated. There is no decision-making to be had and no skill to be applied. The game is literally 100% luck, as you can only perform a single action based on one of the 64 cards you can draw:
	$LF
]div
[ul 
	[li 
		" 6 of each of the six single color cards
		$LF
	]li
	[li 
		" 4 of each of the six double color cards (except green and orange, which only have 3 copies)
		$LF
	]li
	[li 
		" 6 character cards which instantly send the player to a certain square on the board
		$LF
		[ul 
			[li 
				" Gingerbread Tree (position 9)
				$LF
			]li
			[li 
				" Mr. Mint (position 20)
				$LF
			]li
			[li 
				" Jolly (position 42)
				$LF
			]li
			[li 
				" Gramma Nutt (position 69)
				$LF
			]li
			[li 
				" Lolly (position 92)
				$LF
			]li
			[li 
				" Princess Frostine. This is the highly coveted card, which sends the player to space 102 of 134, 3/4 of the way through the game (a must-get for this TAS!).
				$LF
			]li
		]ul
	]li
]ul
[div class=p 
	[a href=https://static.wikia.nocookie.net/candy-land/images/b/b7/Candy_Land_2004_Board.jpg/revision/latest?cb=20211127002500 rel=noopener external nofollow 
		"The Candy Land board
	]a
	$LF
]div
[h4 id=FastestGameInTheory 
	"Fastest Game in Theory
	$LF
]h4
[div class=p 
	"As far as the fastest game possible, the game can be completed in as little as four turns: a Princess Frostine card followed by any 3 double color cards, except for 3 double reds.
	$LF
]div
[div class=p 
	"Upper and lower bounds for the probability of achieving such a game can be naively calculated as:
	$LF
]div
[ul 
	[li 
		" (1/64) * (22/62) * (21/60) * (20/58) = about a 1 in 1500 chance.
		$LF
	]li
	[li 
		" (1/64) * (21/62) * (19/60) * (15/58) = about a 1 in 2300 chance.
		$LF
	]li
]ul
[div class=p 
	"which depends on what cards the players have previously drawn and what's left in the deck. This is interesting when comparing to other mathematical analyses of Candy Land, which through computer simulations have estimated the shortest game as having a 1 in 
	[a href=http://datagenetics.com/blog/december12011/index.html rel=noopener external nofollow 
		"10,000
	]a
	" to 
	[a href=http://www.lscheffer.com/CandyLand.htm rel=noopener external nofollow 
		"25,000
	]a
	" chance of occurring. So regardless of whoever's right, the perfect game of Candy Land is basically 
	[em 
		"kind of rare
	]em
	".
	$LF
]div
[h4 id=Rng 
	"RNG
	$LF
]h4
[div class=p 
	"Any card drawn in the game is not like some sort of Schrodinger's cat situation, where you could manipulate luck and draw a different card by waiting a certain number of frames before drawing. No, the entire deck is shuffled and the draw sequence set all the way back when pressing "Start" on the 
	[em 
		"main
	]em
	" title screen (the one for all three games). Going back to the main title screen will not advance RNG in any meaningful way (i.e., it will simply start over). Therefore, the only way to change the cards drawn in any game of Candy Land is to wait more frames on the main title screen. This also means if we have to wait a long time on the main title screen to manipulate a four-turn game, it may end up being slower in favor of a game taking more turns but didn't have to wait on the main title screen as long. The question is, how could we quickly filter our what main title screen start frame yields the fastest game? After all, that is a lot of games to check. 
	$LF
]div
[h4 id=TasingProcess 
	"TASing Process
	$LF
]h4
[div class=p 
	"In this TAS we select a 1 player vs 1 computer mode. However, there is another mode available which makes this significantly easier to TAS, which is that you can make BOTH players be controlled by the computer. In selecting this mode, you wouldn't need to press a single button to watch the game reach its conclusion. This means in theory, we could write a lua script which would iterate through each main title screen start frame, navigate through a predetermined sequence of inputs to get through the subsequent menus, do nothing as the two computers duke it out, then output the time when one of the players reaches the final space on the board in a timely manner. This will give us a rough idea of which games would be fastest when replayed with an active player introduced.
	$LF
]div
[div class=p 
	[a href=https://tasvideos.org/UserFiles/Info/638476644181040600 rel=noopener external nofollow 
		"The Lua script can be downloaded here
	]a
	$LF
]div
[div class=p 
	"Interestingly, the fastest game after I processed all candidate computer simulations into played games was the frame 1011 start, which not only lasted 5 turns, but also had player 2 finish first (that's 1.5 turns more than best). Despite this, it ended up being fastest because 1) The wait on the title screen wasn't that long, and 2) Player 1 (the losing player) had relatively quick turns. Compare this to the first 4-turn game I found which not only occurs at start frame 1728 (717 frames later), but the losing player also had longer turns. That game finishes 556 frames slower than the one in this submission.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/Darkman425 
		"Darkman425
	]a
	": Let's see if my judging skills are up for a game of pure luck.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Darkman425 
		"Darkman425
	]a
	": It's interesting to see how the different RNG seeds worked out. Despite the submitted input being a 5 turn victory, the fact that it as faster than the earliest 4 turn game by virtue of needing a low wait as well as faster turns means that the intuitively fastest game ended up slower due to extra factors. I certainly found this interesting. Good work on finding that good RNG seed for a fast completion!
	$LF
]div
[div class=p 
	"Accepting to Standard.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/fsvgm777 
		"fsvgm777
	]a
	": Processing.
]div
