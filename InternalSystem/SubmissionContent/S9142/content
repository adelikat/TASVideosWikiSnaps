5
[div class=p 
	"I'll take a cue from 
	[a class=intlink href=/Users/Profile/Samsara 
		"Samsara
	]a
	"'s Shin Megami Tensei "game end glitch" submission to say at the outset that I have no real idea how this run works.
	$LF
]div
[h3 id=GameObjectives 
	" Game objectives
	$LF
]h3
[ul 
	[li 
		" Emulator used: Bizhawk 2.9.1
		$LF
	]li
	[li 
		" any% (Neutral ending)
		$LF
	]li
	[li 
		" Manipulates starting RNG for very specific encounters and outcomes.
		$LF
	]li
	[li 
		" Then manipulates memory via (I think?!) inventory-based glitches to ultimately trigger the Neutral ending.
		$LF
	]li
]ul
[h3 id=BasicRouteBreakdown 
	" Basic route breakdown
	$LF
]h3
[h4 id=CreateASaveFile 
	" Create a save file
	$LF
]h4
[div class=p 
	"A save file is necessary for the RNG manipulation, so the first task is to save and then reset.
	$LF
]div
[h4 id=ManipulateRngByStartingTheGameOnASpecificFrame 
	" Manipulate RNG by starting the game on a specific frame
	$LF
]h4
[div class=p 
	"The RNG value is stored at address 0x7E03FA, and needs to be 72 (decimal) for optimum routing.
	$LF
]div
[h4 id=SpecificRoutingEncountersAndMovements 
	" Specific routing, encounters, and movements
	$LF
]h4
[div class=p 
	"What follows is a series of extremely specific encounters and movement patterns. Once the demon Empusa is acquired on the bridge, everything is ready to go.
	$LF
]div
[h4 id=PreparingForTheMemoryManipulation 
	" Preparing for the memory manipulation
	$LF
]h4
[div class=p 
	"The inventory is first set up in a specific way. Then Empusa casts warp in Disco. Some more specific encounter manipulations, healing, reducing magnetite to 0, and removing all demons except Cerberus. Now we're ready to execute the memory manipulation, after a save and reset.
	$LF
]div
[h4 id=ExecutingTheMemoryManipulation 
	" Executing the memory manipulation
	$LF
]h4
[div class=p 
	"We cast Mapper and then get Cerberus's health to 441. Hiroko also needs a specific MP value. The Spartan demon is summoned into slot 1. The heal cost (279) is shown for Hiroko and Cerberus. Now we walk around until Spartan dies, triggering some glitchy goodness. We access a "RAM checker" (a debug menu) and set some specific flags. Warp, exit, enter the left entrance of the building, and exit. Voila, lengthy ending sequence triggered.
	$LF
]div
[h3 id=OtherComments 
	" Other comments
	$LF
]h3
[div class=p 
	"I take no credit for the routing (well, other than a couple of minor improvements over the RTA) nor the manipulations that lead to the glitches. Hopefully someone with a deeper understanding of the game has some explanations?!
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/CoolHandMike 
		"CoolHandMike
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/CoolHandMike 
		"CoolHandMike
	]a
	": Using these memory manipulations to get into a debug menu and then after changing some flags straight to the credits are entertaining. Nice to see long rpgs completed in a fraction of the standard playtime. For this tas there is a lengthy and complex series of events to get to the debug menu with a lot of steps listed out on SRC's guide page here 
	[a href=https://www.speedrun.com/smt2/guides/gq2kv rel=noopener external nofollow 
		"https://www.speedrun.com/smt2/guides/gq2kv
	]a
	".  Good optimization with nothing wrong I could point to.
	$LF
]div
[div class=p 
	""any%" as the goal is not necessary to write in here since the Standard with no listed goal is already "any" by default aka fastest completion.  Removing explicitly defined "any%" goal.
	$LF
]div
[div class=p 
	"Accepting to Standard.
	$LF
]div
[div class=p 
	"Congratulations!
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/despoa 
		"despoa
	]a
	": Processing...
]div
