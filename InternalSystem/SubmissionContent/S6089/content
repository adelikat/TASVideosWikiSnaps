6
[p 
	"Mickey's Dangerous Chase is a simple platformer for the GameBoy. You can play as either Mickey or Minnie and the goal is to get back a present that Pete stole. The character can walk, jump and pickup blocks and throw them. It heavily resembles Chip n Dale Rescue Rangers for the NES except with some autoscrollers with vehicles.
	$LF
]p
[p 
	(youtube|v=-y-4afbPRmY)
	$LF
]p
[h3 id=Gameobjectives
 
	" Game objectives
	$LF
]h3
[ul 
	[li 
		" Emulator used: Bizhawk 2.3 (GBHawk core)
		$LF
	]li
	[li 
		" Takes damage to save time
		$LF
	]li
]ul
[h3 id=Comments
 
	" Comments
	$LF
]h3
[p 
	[b 
		"Memory
	]b
	": I decided to investigate 
	[a class=intlink href=/6068S 
		"EZGames69's last submission
	]a
	" while judging and I found plenty of improvements. I decided to look into more improvements and so I decided to work on it myself.
	$LF
]p
[p 
	"I used EZ's input as a base and most of my strategies are the same as his, with the exception of lag reduction and some minor movement changes here and there.
	$LF
]p
[h4 id=Techniques
 
	" Techniques
	$LF
]h4
[p 
	[b 
		"Memory
	]b
	": Jumping a certain amount of frames before a lag frame may cancel it. This is the most common method I implement to reduce lag in the game. Other methods include reducing sprites... including Mickey himself by jumping offscreen.
	$LF
]p
[p 
	"Another improvement was the usage of clipping corners to get pushed forwards. You move forward 2 pixels instead of 1 on a single frame if you do it. It was thought this would cause lag but I discovered that this was not always the case and implemented it where I could.
	$LF
]p
[h4 id=Emulatordifferences
 
	" Emulator differences
	$LF
]h4
[p 
	"EZGames69: When I started working on this game, I noticed that the Screen transitions for GBHawk are noticeably faster compared to Gambette.  in Gambette, the transitions take 11 lag frames while in GBHawk it's only 1 lag frame.  So this is movie is about 84 frames faster than if it was done on Gambette.
	$LF
]p
[p 
	"what's interesting is even when the movie files were done on either core to playback on a GBP, it would still make it to the first level just fine, even though the differences occur during the screen transitions.  Hopefully this movie can help determine if anything needs to be fixed in the GBHawk core.
	$LF
]p
[h3 id=TableofimprovementsfromPublishedmovie
 
	" Table of improvements from Published movie
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Level
			]th
			[th 
				"Frames saved
			]th
		]tr
		[tr 
			[td 
				"1-1
			]td
			[td 
				"33
			]td
		]tr
		[tr 
			[td 
				"1-2
			]td
			[td 
				"15
			]td
		]tr
		[tr 
			[td 
				"1-3
			]td
			[td 
				"23
			]td
		]tr
		[tr 
			[td 
				"2-1
			]td
			[td 
				"29
			]td
		]tr
		[tr 
			[td 
				"2-2
			]td
			[td 
				"18
			]td
		]tr
		[tr 
			[td 
				"2-3
			]td
			[td 
				"37
			]td
		]tr
		[tr 
			[td 
				"3-1
			]td
			[td 
				"47
			]td
		]tr
		[tr 
			[td 
				"3-2
			]td
			[td 
				"47
			]td
		]tr
		[tr 
			[td 
				"3-3
			]td
			[td 
				"14
			]td
		]tr
		[tr 
			[td 
				"4-1
			]td
			[td 
				"84
			]td
		]tr
		[tr 
			[td 
				"4-2
			]td
			[td 
				"24
			]td
		]tr
		[tr 
			[td 
				"4-3
			]td
			[td 
				"33
			]td
		]tr
		[tr 
			[td 
				"5-1
			]td
			[td 
				"42
			]td
		]tr
		[tr 
			[td 
				"5-2
			]td
			[td 
				"13
			]td
		]tr
		[tr 
			[td 
				"5-3
			]td
			[td 
				"11
			]td
		]tr
		[tr 
			[td 
				"Total
			]td
			[td 
				"470
			]td
		]tr
	]tbody
]table
[h4 id=1-1
 
	" 1-1
	$LF
]h4
[p 
	[b 
		"Memory
	]b
	": I first started to save frames here by experimenting with the jumps. I found that I actually saved frames by moving the second jump earlier, which ultimately pushed me to look further into improvements for this game. Experimenting with the block toss timing also saved some time.
	$LF
]p
[p 
	"Whenever I jump seemingly randomly, the point is to reduce lag.
	$LF
]p
[p 
	"I changed the exact timing when Mickey got hit by the enemy to control lag.
	$LF
]p
[h4 id=1-2
 
	" 1-2
	$LF
]h4
[p 
	[b 
		"Memory
	]b
	": Mostly additional jumps and experimented with timings to reduce lag.
	$LF
]p
[h4 id=1-3
 
	" 1-3
	$LF
]h4
[p 
	[b 
		"Memory
	]b
	": A ton of time was saved here and on most the autoscrollers through lag. In this case it was mostly just the jump a certain number of frames before certain lag frames method.
	$LF
]p
[h4 id=2-1
 
	" 2-1
	$LF
]h4
[p 
	[b 
		"Memory
	]b
	": When you throw the blocks is crucial to determining the amount of lag you get.
	$LF
]p
[h4 id=2-2
 
	" 2-2
	$LF
]h4
[p 
	[b 
		"Memory
	]b
	": I managed to get past a bouncing rock two frames faster than EZ by holding right instead of left for one frame when trying to jump past. Otherwise more of the same lag reduction techniques.
	$LF
]p
[h4 id=2-3
 
	" 2-3
	$LF
]h4
[p 
	[b 
		"Memory
	]b
	": Picked up 3 of the orbs to reduce lag. Also picked up an invincibility to remove enemies and reduce lag. Collecting the stars might sometimes cause lag so I avoided it when it would. Some levels you want to collect the stars, others you want to avoid.
	$LF
]p
[h4 id=3-1
 
	" 3-1
	$LF
]h4
[p 
	[b 
		"Memory
	]b
	": Jumping in the spikes at the beginning causes a little less lag than jumping into the bird.
	$LF
]p
[p 
	"Power-ups that come from the Question Mark blocks cause a lot of lag when they appear so you want to collect them ASAP.
	$LF
]p
[p 
	"Often you can fall slightly faster by jumping and hitting the ceiling with 2 frames of A-input instead of 1 or walking off the edge.
	$LF
]p
[h4 id=3-2
 
	" 3-2
	$LF
]h4
[p 
	[b 
		"Memory
	]b
	": Jumping before getting hit by the bat at the start helps reduce lag for some reason.
	$LF
]p
[p 
	"At 5:21 in the encode is the first instance in which I knowingly used the corner clipping technique.
	$LF
]p
[h4 id=3-3
 
	" 3-3
	$LF
]h4
[p 
	[b 
		"Memory
	]b
	": Jumping off screen frequently reduced lag so I implement it whenever possible. Ultimately lag comes down to trial and error.
	$LF
]p
[p 
	"Lag can also be caused by holding directions at certain periods so I'm sorry if the entertainment on the autoscrollers isn't quite as good.
	$LF
]p
[h4 id=4-1
 
	" 4-1
	$LF
]h4
[p 
	[b 
		"Memory
	]b
	": Managed to save a lot of time here. A lot of it was lag reduction, but I also implemented a cleaner strategy picking up the block with the spike ball on top of it.
	$LF
]p
[p 
	"I timed collecting the star thing that appears from the ? block but it wasn't worth waiting for. It ultimately just creates a 1-up sprite which might cause lag anyways. I still managed to reduce lag from it by jumping repeatedly, however.
	$LF
]p
[h4 id=4-2
 
	" 4-2
	$LF
]h4
[p 
	[b 
		"Memory
	]b
	": Some lag and movement optimizations.
	$LF
]p
[h4 id=4-3
 
	" 4-3
	$LF
]h4
[p 
	[b 
		"Memory
	]b
	": I picked up the star at the beginning as soon as possible to minimize lag. I also grabbed an additional orb.
	$LF
]p
[h4 id=5-1
 
	" 5-1
	$LF
]h4
[p 
	[b 
		"Memory
	]b
	": Experimenting with when and where you get hit was key to determing lag.
	$LF
]p
[p 
	"Jumping from the higher platform at the end also reduced lag.
	$LF
]p
[h4 id=5-2
 
	" 5-2
	$LF
]h4
[p 
	[b 
		"Memory
	]b
	": Lag reduction picking up more orbs and staying off-screen. You want to jump a lot earlier here to avoid lag than most other stages.
	$LF
]p
[h4 id=5-3
 
	" 5-3
	$LF
]h4
[p 
	[b 
		"Memory
	]b
	": A lot of the lag here I couldn't do much about but I took what I could. Collecting stars helped with lag here.
	$LF
]p
[p 
	"There is one block where I landed on the corner and it looks like I lose time but delaying the jump causes more lag anyways so it doesn't actually matter.
	$LF
]p
[h3 id=Othercomments
 
	" Other comments
	$LF
]h3
[p 
	[b 
		"Memory
	]b
	": I wouldn't be surprised if there is more time to save through lag and maybe some more minor optimizations. However, this TAS is much harder to improve on than earlier iterations, which was ultimately the point of me working on the project.
	$LF
]p
[hr 
]hr
[p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": Judging.
	$LF
]p
[p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": Solid improvement. Accepting for obsoleting the 
	[a class=intlink href=/3625M 
		"current publication
	]a
	".
	$LF
]p
[p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Pub.
]p
