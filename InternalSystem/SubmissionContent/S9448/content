8
[div class=card mb-2 
	[div class=card-header 
		[strong 
			"Table of contents
		]strong
	]div
	[div class=card-body 
		[ul 
			[li 
				[a href=#Introduction 
					" Introduction
					$LF
				]a
			]li
			[li 
				[a href=#SoftwareHardware 
					" Software + Hardware
					$LF
				]a
				[ul 
					[li 
						[a href=#RomInformation 
							" Rom Information
							$LF
						]a
					]li
					[li 
						[a href=#Emulator 
							" Emulator
							$LF
						]a
					]li
					[li 
						[a href=#RoutingBot 
							" Routing Bot
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#Encodes 
					" Encodes
					$LF
				]a
				[ul 
					[li 
						[a href=#RawInputMovie 
							" Raw Input Movie
							$LF
						]a
					]li
					[li 
						[a href=#ComparisonMovie 
							" Comparison Movie
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#Improvements 
					" Improvements
					$LF
				]a
				[ul 
					[li 
						[a href=#ConsiderationForEndOfStageScoreTallying 
							" Consideration for End-Of-Stage Score Tallying
							$LF
						]a
					]li
					[li 
						[a href=#ChefStef 
							" Chef_Stef
							$LF
						]a
					]li
					[li 
						[a href=#ArkbotSCoreEmulator 
							" Arkbot's Core Emulator
							$LF
						]a
					]li
					[li 
						[a href=#UseOfArkanoidController 
							" Use of Arkanoid controller. 
							$LF
						]a
					]li
					[li 
						[a href=#PreciseDecisionPoints 
							" Precise Decision Points
							$LF
						]a
					]li
					[li 
						[a href=#FullRngManagement 
							" Full RNG Management
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#EntertainmentInputs 
					" Entertainment inputs
					$LF
				]a
			]li
		]ul
	]div
]div
[h3 id=Introduction 
	" Introduction
	$LF
]h3
[div class=p 
	"This submission improves on 
	(__wikiLink|href=/5327M|implicitdisplaytext=5327M)
	" by 2134 frames (~35.5 seconds).
	$LF
]div
[div class=p 
	"I was satisfied with the result of my previous movie and thought no further improvements could be made without considerable effort. However, 
	[a href=https://tasvideos.org/Users/Profile/Sand rel=noopener external nofollow 
		"Sand
	]a
	" mentioned I was 
	[a href=https://tasvideos.org/Forum/Posts/522668 rel=noopener external nofollow 
		"forgetting to optimize
	]a
	" the end-of-level score tallying into consideration. Even though he was right, I still didn't feel that justified entering a multi-month-long project once again -- not unless some other big discoveries appeared.
	$LF
]div
[div class=p 
	[b 
		"AND OH BOY DID THEY APPEAR!!!!!111one
	]b
	$LF
]div
[h3 id=SoftwareHardware 
	" Software + Hardware
	$LF
]h3
[h4 id=RomInformation 
	" Rom Information
	$LF
]h4
[ul 
	[li 
		" Name: Arkanoid (USA)
		$LF
	]li
	[li 
		" ROM: Arkanoid (U) 
		"[!]
		".nes
		$LF
	]li
	[li 
		" SHA1: 230FC31D2C2EB20E78711C82574F29F28117EBA3
		$LF
	]li
	[li 
		" MD5: 0CCC1A2FE5214354C3FD75A6C81550CC
		$LF
	]li
]ul
[h4 id=Emulator 
	" Emulator
	$LF
]h4
[ul 
	[li 
		" EmuHawk 2.9.1 (Core: NESHawk)
		$LF
	]li
]ul
[h4 id=RoutingBot 
	" Routing Bot
	$LF
]h4
[ul 
	[li 
		" Bot: 
		[a href=https://github.com/SergioMartin86/jaffarPlus rel=noopener external nofollow 
			"JaffarPlus
		]a
		$LF
	]li
	[li 
		" Routing Core: 
		[a href=https://github.com/SergioMartin86/QuickerArkBot rel=noopener external nofollow 
			"QuickerArkBot
		]a
		$LF
	]li
	[li 
		" Platform: 
		$LF
		[ul 
			[li 
				" 2 x AMD Epyc 7742 (128 cores, 256 threads) + 384Gb RAM
				$LF
			]li
			[li 
				" Exploration Rate: 1.5 Mstates/s 
				$LF
			]li
		]ul
	]li
]ul
[h3 id=Encodes 
	" Encodes
	$LF
]h3
[h4 id=RawInputMovie 
	" Raw Input Movie
	$LF
]h4
[div class=p 
	"If you find the entertainment inputs too distracting, you can enjoy the following encode of my first draft that keeps the paddle static and only adds precise inputs to solve the levels.
	$LF
]div
[div class=p 
	(youtube|v=nf74n_ItWIc)
	$LF
]div
[div class=p 
	"Here you can find the corresponding 
	[a href=https://tasvideos.org/UserFiles/Info/638715906598957576 rel=noopener external nofollow 
		"movie file
	]a
	".
	$LF
]div
[h4 id=ComparisonMovie 
	" Comparison Movie
	$LF
]h4
[div class=p 
	"The following movie compares our solution to 
	(__wikiLink|href=/5327M|implicitdisplaytext=5327M)
	$LF
]div
[div class=p 
	(youtube|v=4cmNDQzolAM)
	$LF
]div
[div class=p 
	"You can see this new movie improvements on all stages. That is, except for stage 28, where the same frame solution is achieved but presumably a 'lag' effect makes it finish one frame slower.
	$LF
]div
[h3 id=Improvements 
	" Improvements
	$LF
]h3
[div class=p 
	"Here is a list of ground-breaking improvements in this movie:
	$LF
]div
[h4 id=ConsiderationForEndOfStageScoreTallying 
	" Consideration for End-Of-Stage Score Tallying
	$LF
]h4
[div class=p 
	"Took Sand's comment into account and added this factor into the bot to not finish exploration as soon as the last block break, but rather as soon as the tally ends. A simple optimization that saved a bunch of frames on those levels with plenty of silver blocks (huge uncounted score pikes).
	$LF
]div
[h4 id=ChefStef 
	" Chef_Stef
	$LF
]h4
[div class=p 
	"Perhaps the most important drawback of my previous movie was the decision to go solo and not recruit the help of 
	[a href=https://tasvideos.org/Users/Profile/Chef_Stef rel=noopener external nofollow 
		"Chef_Stef
	]a
	" who probably knows most about this game. As soon as I reached to him on Discord, he was extremely generous with his time and sharing his technical knowledge. He went as far as making 
	[a href=https://github.com/sbroger/arkbot rel=noopener external nofollow 
		"Arkbot
	]a
	", his own bespoke Arkanoid emulator and brute forcer public on github for me to analyze. 
	$LF
]div
[div class=p 
	"We spent some time discussing the idea of a new movie (including all of other the improvements you'll read next) and we even had a call to polish some of those points. I am very grateful for his help; this movie wouldn't have been possible without it.
	$LF
]div
[h4 id=ArkbotSCoreEmulator 
	" Arkbot's Core Emulator
	$LF
]h4
[div class=p 
	"Arkbot contains a core emulator that perfectly reproduces the game's logic without the need of a NES emulator. Just by using it, the emulation time went from several milliseconds to practically nothing. Furthermore, thanks to it being open source, I was able to to create 
	[a href=https://github.com/SergioMartin86/QuickerArkBot rel=noopener external nofollow 
		"QuickerArkBot
	]a
	", a state-reduced variant that allowed me to fit many more states in memory.
	$LF
]div
[h4 id=UseOfArkanoidController 
	" Use of Arkanoid controller. 
	$LF
]h4
[div class=p 
	"During last year, I don't remember exactly why I decided to test how was it to play the game with 
	[a href=https://www.nesdev.org/wiki/Arkanoid_controller rel=noopener external nofollow 
		"Arkanoid's special controller
	]a
	" using BizHawk. Since I didn't know you could bind the mouse to play with it, I started fooling around with manually inputting the potentiometer coordinates into TAStudio.
	$LF
]div
[div class=p 
	"It took me a few seconds to realize... you can put ANY value into it and the paddle will go there immediately. This means that the game can be played with an infinite-speed paddle. The impact of this realization on botting is tremendous, as you can imagine.
	$LF
]div
[h4 id=PreciseDecisionPoints 
	" Precise Decision Points
	$LF
]h4
[div class=p 
	"In my previous mode I had, at every node of the exploration tree, three options: "Left", "Right", and "Stay". You can imagine this very quickly exploded into an infinity of combinations that I had to tame with some heuristics.
	$LF
]div
[div class=p 
	"Now, however, each node has a single option: "Stay". This keeps the exploration tree from growing out, until there is a decision point. These points are frames where the paddle's position has en effect. 
	$LF
]div
[div class=p 
	"Fortunately, these decision points happen very seldom and therefore it takes a lot of frames to full bring the exploration tree to fill my server's memory.
	$LF
]div
[div class=p 
	"Decision points are:
	$LF
]div
[ul 
	[li 
		" A ball is low enough to be within the paddle reach. At this frame we decide between placing the paddle at one of the points that launch the ball in any of the 8 possible directions, or bring the paddle to the other side of the screen to not impact the ball now. 
		$LF
	]li
]ul
[ul 
	[li 
		" RNG events, as detailed below:
		$LF
	]li
]ul
[h4 id=FullRngManagement 
	" Full RNG Management
	$LF
]h4
[div class=p 
	"Thanks to Chef_Stef and the Arkbot I learned all the secrets about RNG manipulation in this game. These are the only events whose result depend on RNG:
	$LF
]div
[ul 
	[li 
		" Powerup Type (when you destroy a special tile)
		$LF
	]li
	[li 
		" Gate from which the new enemy will appear (left/right)
		$LF
	]li
	[li 
		" Enemy movement (when he hits a tile, left/right)
		$LF
	]li
]ul
[div class=p 
	"All these events will draw from the same RNG generator that takes as inputs several things, but crucially: (a) the current score's hundredth's value, and (b) the current position of the paddle.
	$LF
]div
[div class=p 
	"The fact that score dictated the result was tragic because it meant that, to find a global optimum, you cannot just stitch each of the stage's optima together. You've got to consider what scores you start with and end for a total of 100 combinations. 
	$LF
]div
[div class=p 
	"HOWEVER, since we are using the Arkanoid controller, we have 160 ways to affect RNG arbitrarily. With this in mind, I developed an 
	[a href=https://github.com/SergioMartin86/QuickerArkBot/blob/bc48c9725e8dedb8db5ba08166dc117cfb4e5579/source/new/core/source/GameOperations.h#L433 rel=noopener external nofollow 
		"RNG manipulation logic
	]a
	" that looked ahead and told me exactly which paddle positions returned the RNG value I needed for each event.
	$LF
]div
[div class=p 
	"As a result of this optimization, we can be sure that reaching each stage optima will bring us the global optimum.
	$LF
]div
[h3 id=EntertainmentInputs 
	" Entertainment inputs
	$LF
]h3
[div class=p 
	"After finishing the first draft of the movie, I felt the movie was missing some 'spice'. So I decided to develop an 'entertainment' algorithm that allows me to create some cool effects while checking that none of the additional inputs caused the solution to desync. I hope you like the effects I came up with!
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/nymx 
		"nymx
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/nymx 
		"nymx
	]a
	": 
	[a class=intlink href=/Users/Profile/eien86 
		"eien86
	]a
	"...you've done it again!! Congratulations! The combined effort between you and 
	[a class=intlink href=/Users/Profile/Chef_Stef 
		"Chef_Stef
	]a
	" is waaaay beyond what I could have expected, when you first mentioned the idea of teaming up with the previous TASer. Now the hard work of both of you will stand for a LONG TIME! I am shocked at the cuts, and on top of that...you blew us all away with some incredible entertainment!
	$LF
]div
[div class=p 
	"So, there is no reason to hold on to this submission. It speaks for itself.
	$LF
]div
[div class=p 
	"Accepting over 
	(__wikiLink|href=/5327M|implicitdisplaytext=5327M)
	"!!!!!! and of course, it will earn the rating as with past submission....STARS!!!
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/EZGames69 
		"EZGames69
	]a
	": Processing...
]div
