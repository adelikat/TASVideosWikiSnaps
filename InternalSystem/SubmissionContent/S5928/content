6
[h3 id=Submitting5880sAsTwoSeparateSubmissionsAsSuggestedByFeosThisIsALiteralCopyPasteOfThePreviousInputsAllExplanationsCanBeFoundThere 
	" Submitting 
	(__wikiLink|href=/5880S|implicitdisplaytext=5880S)
	" as two separate submissions as suggested by feos. This is a literal copy&paste of the previous inputs. All explanations can be found there.
	$LF
]h3
[div class=p 
	[br 
	]br
	$LF
	[br 
	]br
	$LF
	[br 
	]br
	$LF
]div
[hr 
]hr
[div class=p 
	[br 
	]br
	$LF
	[br 
	]br
	$LF
	[br 
	]br
	$LF
]div
[div class=p 
	"Copy of the game mechanics section of 
	(__wikiLink|href=/5880S|implicitdisplaytext=5880S)
	" since the submission form doesn't like short description texts.
	$LF
]div
[h3 id=GameMechanics 
	" Game mechanics
	$LF
]h3
[div class=p 
	"The game as a whole is very simple: fly through the barns in the shortest amount of time.
	$LF
]div
[h4 id=GameModes 
	" Game modes
	$LF
]h4
[div class=p 
	"The game features 4 game modes, which differ in the amount of barns you need to fly through and the pattern of buildings and geese on the map.
	$LF
	"Game mode 4 is supposed to be random, but all it randomizes is the starting position in the pattern, the patterns themselves are still fixed.
	$LF
]div
[div class=p 
	"This run only considers game mode 1, which requires the least amount of barns and can be completed the fastest.
	$LF
]div
[h4 id=Movement 
	" Movement
	$LF
]h4
[div class=p 
	"The movement looks like a simple auto-scroller, but has quite some oddities to it which make it hard to optimize.
	$LF
	"The plane moves forward at 1.5 pixels/frame by default, and up to 2.3125 pixels/frame when pressing B.
	$LF
	"However, when pressing up or down, it only moves at 15/16 its normal speed, so you want to fly straight as much as possible.
	$LF
]div
[div class=p 
	"Vertically, the plane moves up to 1.4375 pixels/frame up or down. The vertical speed gradually builds up and resets to 0 immediately once you stop the input.
	$LF
]div
[div class=p 
	"Fractional movement amounts are stored in subpixel variables. However, the fractional amounts don't have any direction, it's easier to think of them as movement potential: potential built up moving upwards can also be used to accelerate moving downwards.
	$LF
	"One of the quirks is that the speeds are only updated every second frame, but they are applied to your movement every frame.
	$LF
	"This, in combination with the fractional movement buffers, means that it's not optimal to hold up or down to move vertically.
	$LF
	"It's better to only press up/down every second frame to keep the speed up, and use the in-between frames only if you have enough fractional potential stored up to move 2 pixels instead of 1.
	$LF
	"That way, for each frame you press up or down and therefore lose out on horizontal distance, you get more vertical distance on average.
	$LF
]div
[h4 id=Buildings 
	" Buildings
	$LF
]h4
[div class=p 
	"Another quirk is that the barns and windmills don't have a fixed distance between them.
	$LF
	"They're not laid out on a fixed track, instead the next building spawns as soon as the last building left the screen (there are "blank" buildings which sometimes create gaps, but they follow the same rules).
	$LF
	"The new building always spawns at the same relative position to you at the right edge of the screen, independent of how much you were moving.
	$LF
	"That means it's possible to overshoot and waste a pixel of distance during this transition, depending on how your position aligns with the one of the current building.
	$LF
	"To avoid that, you can intentionally slow down, using the extra slack to start moving vertically early for free, or aligning your subpixels better.
	$LF
]div
[h4 id=Collisions 
	" Collisions
	$LF
]h4
[div class=p 
	"Collisions in this game are kind of painful to predict, because it is based on the hardware collision detection of the Atari 2600 console, which does pixel-perfect collision detection.
	$LF
	"That means you collide if and only if your pixels overlap.
	$LF
	"And this is affected by the animation cycles of the different objects, so you may or may not hit a windmill at a certain height depending on where it is in its animation when you pass over.
	$LF
	"But it also means you can thread the needle through objects in some instances, and this runs shows some instances of that.
	$LF
]div
[h4 id=Geese 
	" Geese
	$LF
]h4
[div class=p 
	"Whenever you are moving at more than 2 pixels/frame, geese spawn at the top of the screen.
	$LF
	"Their patterns are based on a fixed cycle, hitting them costs a lot of time, and avoiding them also costs time since you need to move up and down around them, costing you horizontal distance.
	$LF
	"So the best situation is when they don't get in your way at all.
	$LF
	"There are two ways to manipulate the geese. The first one is slowing down to avoid spawning them, but this is not practical for obvious reasons.
	$LF
	"The second, way more effective method shown in this run is using the difficulty switch.
	$LF
	"The right difficulty switch controls the number of geese that spawn, when switched it doubles the rate at which the game cycles through the geese patterns.
	$LF
	"So toggling it mid-game can be used to speed up or slow down where you are in the pattern cycle, making the geese spawn earlier or later.
	$LF
	"By using this strategically, you can avoid the geese ever getting in your way without slowing down.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": There's no reason to consider abusing difficulty switches of A2600 illegal. It is input that is just as valid as Reset. And games are supposed to handle it the way they want. It so happens that some games allow switching them during play and process this action like they normally do. It resembles how Reset can be explicitly rejected during saving to SRAM to prevent save corruption: games that allow this action passively let us corrupt our save data. TASing is not expected to avoid this like some sort of a cheat, just like we don't avoid Left+Right.
	$LF
]div
[div class=p 
	"So while this run is fully legitimate, and it has some awesome research behind it, we're still only talking about a game with 2.4 
	(__wikiLink|displaytext=entertainment|href=/Publications/Rate/3352)
	" 
	(__wikiLink|displaytext=rating|href=/Publications/Rate/3545)
	". No matter how crazily you play it, you only get that. Which means this game can only exist in Vault. Which, in turn, means that there can only be one any% branch of it. We don't accept runs that avoid some technique for entertainment into Vault. And for this game, the fastest any% run is 
	(__wikiLink|href=/5929S|implicitdisplaytext=5929S)
	", which uses the same shenanigans with difficulty switching.
	$LF
]div
[div class=p 
	"Rejecting this run for an unvaultable goal.
]div
