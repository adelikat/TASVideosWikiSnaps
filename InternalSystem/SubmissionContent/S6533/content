5
[div class=p 
	[b 
		"Description
	]b
	$LF
]div
[div class=p 
	"Junction is an action-puzzle game published by Konami and ported to the Sega Genesis / Mega Drive by Micronet in 1990. The box art is labeled 
	[b 
		"H Rated
	]b
	" with the tagline 
	[q 
		"High Level of Intellect Needed To Complete This Game
	]q
	", but in the realm of tool-assisted speedruns, this is not much of a challenge.
	$LF
]div
[div class=p 
	"The back story is non-existent, though judging by the short introduction movie, a drunken armadillo robot is caught red-handed eating apples. Punishment for its crime is to be transformed into a red ball that must traverse a tangled path of interconnecting tiles. If our armadillo friend successfully navigates through 50 levels of madness, it is transformed back to its original form where he can be with his robot buddies (and presumably eat more apples).
	$LF
]div
[hr 
]hr
[div class=p 
	[b 
		"Objectives
	]b
	$LF
]div
[ul 
	[li 
		"Emulator used: BizHawk 2.3.1
		$LF
	]li
	[li 
		"Aims for fastest time
		$LF
	]li
]ul
[hr 
]hr
[div class=p 
	[b 
		"Game Mechanics
	]b
	$LF
]div
[div class=p 
	"The general idea is to guide the red ball through various "checkpoints" positioned around the outer edge of the playfield with a slide-puzzle type mechanic. Each checkpoint can only be passed through once and will disappear from the initial crossing. The main grid is in an 8x5 form with a variety of tiles placed specifically to challenge the player to navigate. The user must shift these various tiles around the board in order to create passable junctions for the red ball to pass through. If the ball hits a dead end, falls into the black void, collides with an enemy, or runs out of time, then the board is reset including any checkpoints that were previously completed.
	$LF
]div
[div class=p 
	"The game manual for this can be found 
	[a href=https://segaretro.org/images/2/2d/Junction_MD_US_Manual.pdf rel=noopener external nofollow 
		"here
	]a
	" (PDF Warning).
	$LF
]div
[hr 
]hr
[div class=p 
	[b 
		"Configuration & Controls
	]b
	$LF
]div
[div class=p 
	"The settings menu include the following options:
	$LF
]div
[ul 
	[li 
		"Stage (Level select)
		$LF
	]li
	[li 
		"Stock (Lives)
		$LF
	]li
	[li 
		"Rank (Difficulty)
		$LF
	]li
	[li 
		"Music
		$LF
	]li
	[li 
		"Sound
		$LF
	]li
	[li 
		"Operation (See below)
		$LF
	]li
	[li 
		"BGV Mode (Screensavers)
		$LF
	]li
]ul
[div class=p 
	"I avoid changing any settings and go straight into the game. If you change the Operation mode to 1, then you can move more than one tile at a time, but this introduces more time than usual since it requires additional inputs with the C button and is therefore slower.
	$LF
]div
[div class=p 
	"The controls are pretty basic. The player moves around a black void with the D-Pad which in turn shifts tiles around.
	$LF
]div
[div class=p 
	"Other buttons include:
	$LF
]div
[ul 
	[li 
		"A (Slow down)
		$LF
	]li
	[li 
		"B (Speed up)
		$LF
	]li
	[li 
		"C (Slow down in "Operation 0"; Block movement in "Operation 1")
		$LF
	]li
	[li 
		"Start (Pause/Unpause)
		$LF
	]li
]ul
[hr 
]hr
[div class=p 
	[b 
		"Tiles
	]b
	$LF
]div
[div class=p 
	"Most tiles contain simple pathways that terminate in up to four cardinal directions along with a few special varieties.
	$LF
]div
[div class=p 
	"Tile types include:
	$LF
]div
[ul 
	[li 
		"Straight
		$LF
	]li
	[li 
		"Curved
		$LF
	]li
	[li 
		"Forked
		$LF
	]li
	[li 
		"Circular
		$LF
	]li
	[li 
		"Dead-end
		$LF
	]li
	[li 
		"Pyramid
		$LF
	]li
	[li 
		"Blank
		$LF
	]li
	[li 
		"Golden
		$LF
	]li
]ul
[div class=p 
	"The curved & circular tiles give the player the illusion of choice in direction, but in reality, the ball will take a seemingly random direction. It appears this direction can be altered by player movement before the ball reaches the tile, but I don't fully understand how this works.
	$LF
]div
[div class=p 
	"A "Dead-end" tile has only a single point of entry. When the red ball reaches the center of this tile, it will reverse direction to where it entered.
	$LF
]div
[div class=p 
	"Pyramids allow the player to jump over the next tile coming up. This will be required for some stages.
	$LF
]div
[div class=p 
	"Golden tiles cannot be moved by the player. A common solution for some stages with golden tiles is to jump over them using a pyramid.
	$LF
]div
[hr 
]hr
[div class=p 
	[b 
		"Items & Enemies
	]b
	$LF
]div
[div class=p 
	"These will spawn somewhere on the grid as time goes on. Multiple items & enemies may appear more than once on a single stage as well.
	$LF
]div
[div class=p 
	"Items include:
	$LF
]div
[ul 
	[li 
		"1-up
		$LF
	]li
	[li 
		"Slow Down (Player)
		$LF
	]li
	[li 
		"Speed Up (Player)
		$LF
	]li
	[li 
		"Enemy Slowdown
		$LF
	]li
	[li 
		"Time Extend
		$LF
	]li
]ul
[div class=p 
	"There is a single enemy type that may also spawn during play. These will similarly follow along the various paths and may pose a threat to the red ball, but can be moved out of the way by shifting tiles around. They can only be removed if caught on top of a vanishing checkpoint, otherwise, they just reverse direction upon hitting a barrier. Multiple enemies can also appear on the same stage.
	$LF
]div
[div class=p 
	"The levels are completed so fast that most items & enemies are not even given a chance to appear, but there is a single "Speed Up" powerup that I do collect though the effect is negated by the fact that I was already holding down the B button.
	$LF
]div
[hr 
]hr
[div class=p 
	[b 
		"Levels & Bonus Stages
	]b
	$LF
]div
[div class=p 
	"Stages are grouped in sets of 10 as the game progress while generally increasing in difficulty the further the player gets. Each group of these stages has different background animations and music. As you progress through these sets of stages, your red ball also evolves into an ever-more complex shape.
	$LF
]div
[ul 
	[li 
		"Stage 01-10 "Ripple" (A serene beach fills the background)
		$LF
	]li
	[li 
		"Stage 11-20 "Fly Away" (An old airplane & birds fly through the clouds)
		$LF
	]li
	[li 
		"Stage 21-30 "Flowing" (A DNA-like double helix spinning forever)
		$LF
	]li
	[li 
		"Stage 31-40 "Fun Fair" (A fun carnival goes on without you)
		$LF
	]li
	[li 
		"Stage 41-50 "Mecha" (The machine your armadillo is trapped in is hard at work)
		$LF
	]li
]ul
[div class=p 
	"Upon completion of level 50, if the player has a score of at least 100,000 points, then the game will display the "good ending" which consists of the end credits and a happy transformation for our armadillo friend. An additional 10 bonus stages are also unlocked within the configuration menu, but these are not likely considered part of the main quest.
	$LF
]div
[hr 
]hr
[div class=p 
	[b 
		"TAS Strategy & Challenges
	]b
	$LF
]div
[div class=p 
	"The main strategy for completing Junction as fast as possible is to limit the number of tiles required to pass over while holding down the B button for as long as possible. From what I can tell, about 24 frames of gameplay are needed to traverse a single tile 
	[em 
		"while moving fast
	]em
	". The best-case scenario is to utilize only a single tile in between each checkpoint. For the most part, this strategy is used throughout the run.
	$LF
]div
[div class=p 
	"The main challenge in authoring this speed run comes down to the tile variety & layout as well as checkpoint placements. Some layouts simply require the user to travel over more than one tile between the checkpoints while others need the use of pyramids to reach your destination. Another challenge comes with the distance the ball must travel across the play area. If the player-controlled "black void" is adjacent to a tile-riding ball, then the movement of that tile can shift up to four (and sometimes five) places while at maximum speed. If the distance is larger than this, then releasing the B button for a few frames will allow enough time for the player to "catch-up" before the ball exits. In general, if the distance is 7 or fewer tiles away, then it's usually fastest to slow down the ball rather than using another tile. The break-even point of this tradeoff is 48 frames so anything longer than this is best used with maximum speed across 2 tiles.
	$LF
]div
[div class=p 
	"Vanishing checkpoints may also introduce additional frames where inputs could be ignored and must be considered as well.
	$LF
]div
[hr 
]hr
[div class=p 
	[b 
		"Final Thoughts
	]b
	$LF
]div
[div class=p 
	"I became aware of Junction only recently while watching Twitch user 
	[a href=https://www.twitch.tv/sharpieplays rel=noopener external nofollow 
		"SharpiePlays
	]a
	" complete it over the course of a few days. The gameplay looked simple enough yet difficult to perform in realtime which gave me the feeling that a tool-assisted speedrun would be both relatively easy to create and somewhat interesting to watch.
	$LF
]div
[div class=p 
	"Now that I've completed the run, I mostly agree that this was rather easy to put together with the one caveat that studying the layout before starting each level reduced a lot of potential mistakes or slower approaches. In the end, it may not be the most entertaining TAS to watch, but I hope this is good enough for Vault-tier status. That being said, there is potential for a "play-around" run of this game by shifting tiles around to make shapes or spell out words, but I focus only on speed here.
	$LF
]div
[div class=p 
	"The final input on Stage 50 occurs on frame 49835 which brings us to the High Score table. I then use additional inputs to fill out a name so that the end credits will appear afterward, though I'm guessing the last few button presses would not be considered in the final time. I believe the official time would be 13:51.671, but I defer to others if my calculation is off.
	$LF
]div
[hr 
]hr
[div class=p 
	[b 
		"Screenshots
	]b
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.imgur.com/7TIRtoP.png 
	]img
	[img class=embed mw-100 src=https://i.imgur.com/mTnPlHi.png 
	]img
	[img class=embed mw-100 src=https://i.imgur.com/DXyoigO.png 
	]img
	[img class=embed mw-100 src=https://i.imgur.com/DVoYmLx.png 
	]img
	[img class=embed mw-100 src=https://i.imgur.com/a8OZeHd.png 
	]img
	$LF
]div
[hr 
]hr
[div class=p 
	[b 
		"Temporary YouTube Encode
	]b
	$LF
]div
[div class=p 
	(youtube|v=Q63aDKYdkHc)
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/slamo 
		"slamo
	]a
	": This is an interesting little puzzle game. It's definitely non-trivial to optimize this and you did a good job, the trick to move the ball around quickly is quite useful.
	$LF
]div
[div class=p 
	"The tier for this is a borderline case. Feedback was pretty good, albeit limited, but I have a hard time justifying Moons due to the repetitive nature of the run. If the ratings justify it then a case can be made to move it up to Moons, but for now I'm accepting to Vault.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Spikestuff 
		"Spikestuff
	]a
	": Publishing.
]div
