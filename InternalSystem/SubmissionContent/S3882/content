9
[h3 
	" The Game
	$LF
]h3
[p 
	"This is Hunchback, a 16kB MSX conversion by Ocean of the 1983 arcade game. It was released on tape, which makes this probably makes it also the very first submission of a tape based game. 
	$LF
]p
[p 
	"From http://www.arcade-history.com/?n=hunchback&page=detail&id=1154 we learn the following... 
	$LF
]p
[h4 
	" Description
	$LF
]h4
[p 
	"The player takes on the role of the eponymous bell-ringer, Quasimodo, in his quest to rescue the beautiful Esmeralda from the tower of the castle fortress.
	$LF
]p
[p 
	"To reach Esmeralda, Quasi must run and jump through a number of screens - each representing part of a castle wall - to reach the tower and complete his rescue. Each screen presents the player with a different set of platform-based obstacles. These range from spear-toting guards, to ramparts and fiery chasms (the latter of which is cleared by carefully timed jumps onto and off a constantly swinging rope).
	$LF
]p
[p 
	"Most of the game's screens also feature projectiles - in the form of fireballs and arrows - that must be avoided. Contact with either a projectile or guard will result in Quasi falling from the castle wall, resulting in the loss of a player life.
	$LF
]p
[p 
	"To complicate matters further, each screen must be completed within a strict time limit. This takes the form of an enemy guard climbing the castle walls; if the guard reaches the top of the wall, he will walk towards Quasi to burn the Hunchback with his torch. If Quasi rings the bell before the guard has scaled the wall, a bonus score is rewarded. If five screens are completed without a life being lost, a 'Super Bonus' is awarded.
	$LF
]p
[p 
	"Once completed, the game starts over with a much higher level of difficulty and tighter time limits.
	$LF
]p
[h4 
	" Scoring
	$LF
]h4
[p 
	"Scoring points is based on how quickly you can finish a round, although there is no actual on-screen indication as to how much bonus time is left. No points are awarded for merely jumping over obstacles. The best way to achieve a high score is to complete five consecutive screens without losing a life; at the end of each stage a bell is awarded, and once five bells are collected in this way, a Super Bonus worth between 10,000 and 30,000 points is awarded.
	$LF
]p
[h3 
	" The TAS
	$LF
]h3
[p 
	"So, as the last paragraph explains, the score of each stage is also directly telling you how well you TASed the stage. Now, that's comfy :) This means the TAS also aims for the highest score.
	$LF
]p
[p 
	"The goal is to rescue Esmeralda in the shortest possible time (implying also the maximum score). After rescuing her (at the end of the 15th screen), the game will repeat itself (see above), so that's where I stopped.
	$LF
]p
[p 
	"Tricky of this game to be played optimally is optimizing the combination of jumping over the ramparts (with guards using spears) and at the same time avoiding the obstacles. In some stages you see a slight hiccup in the jump... This is an intentional delay in order to avoid the obstacles in the most optimal way (with more entertainment than simply stopping walking...).
	$LF
]p
[p 
	"Furthermore, to make the run a bit more entertaining, I jump a lot, because the game features such a funny bouncy-bouncy sound effect. So, whenever possible, the player is bouncy-bouncy. Other entertainment features are very close shaves, even when not necessary. No time was wasted on entertainment, though.
	$LF
]p
[h3 
	" Tape game
	$LF
]h3
[p 
	"So, indeed, it's a tape game. It means that the total run time calculated by the site will include the loading time. And the loading time can be different, depending on when you type the loading command (auto typed by openMSX in this case) and how exactly you recorded the game on the tape. For this run, I use the CAS format, which contains the actual tape data, which openMSX converts to the actual sound signal of the tape on the fly. (These are the sounds you hear during loading.) That conversion can be done with several baud rates. For emulator convenience, the baudrate that openMSX uses is higher than normal (2760 baud). Normal games either use 1200 or 2400 baud.
	$LF
	"Anyway, all of this means that when someone wants to improve the run, we should not include the loading time of the game in the comparison of the achieved time.
	$LF
]p
[h3 
	" Last words...
	$LF
]h3
[p 
	"Well, enjoy the run... I did enjoy creating it. And oh darn, it wasn't easy....
	$LF
]p
[p 
	"Here's a video showing the run (after loading the game):
	$LF
	(youtube|v=xTkHco91Bh0)
	$LF
]p
[hr 
]hr
[p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Accepting for Vault.
	$LF
]p
[hr 
]hr
[p 
	[a class=intlink href=/Users/Profile/Ilari 
		"Ilari
	]a
	": Fun loading times...
	$LF
]p
[p 
	[a class=intlink href=/Users/Profile/Ilari 
		"Ilari
	]a
	": Submission file made compatible with vanilla openMSX 0.9.1.
]p
