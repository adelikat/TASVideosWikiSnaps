7
[div class=p 
	"Mylo Steamwitz is back with another get-rich-quick scheme after the failure of his twibble ranch in volume 1, and must return to the Crystal Caves to scrape up the capital to start a medicinal slug farm.
	$LF
]div
[h3 id=GameObjectives 
	" Game objectives
	$LF
]h3
[ul 
	[li 
		" Emulator used: JPC-RR r11.7
		$LF
	]li
	[li 
		" Aims for fastest time
		$LF
	]li
	[li 
		" Takes damage to save time
		$LF
	]li
	[li 
		" No cheats or out-of-bounds glitch
		$LF
	]li
]ul
[h3 id=Comments 
	" Comments
	$LF
]h3
[div class=p 
	"You can see 
	(__wikiLink|displaytext=my submission of the first volume|href=/5959S)
	" for a summary of game mechanics. This video uses the same HDD image, BIOS, and FreeDOS image as that video.
	$LF
]div
[h3 id=RunCommentary 
	" Run Commentary
	$LF
]h3
[div class=p 
	"Like the first volume, this is a platformer where quality of execution and efficient routing are your only tools for saving time. The few scenes that I think are noteworthy:
	$LF
]div
[ul 
	[li 
		" The first stage in the recording is the craziest; there's tons of monster dodging, falling stalactites, and tight jumps in weird spaces.
		$LF
	]li
	[li 
		" The jump around 6:17-6:18 is trickier than it looks. I spent an entire day testing the jump from different pixels before discovering that I had to stutter-step and start running from a new position before the jump could work.
		$LF
	]li
	[li 
		" I love the dinosaur chase sequence at 9:00
		$LF
	]li
	[li 
		" Room 12 (using the games internal numbering system), which runs from 17:35-19:34, caused me to abandon this run in frustration for a while. The platforms are out of sync, the gravity reverse lasts way too long, and it's literally impossible to jump out from the upper left or right platforms if you enter them using reverse gravity.
		$LF
	]li
]ul
[h3 id=PotentialImprovements 
	" Potential Improvements
	$LF
]h3
[div class=p 
	"I have put my best effort into using the most efficient routing, but JPC makes it incredibly difficult to make improvements once you've moved past a particular timestamp. It may be the case that a faster route is possible by using a different level order on the overworld map, but it would essentially require multiple complete TAS recordings to compare. There may be opportunities for individual level routing improvement, especially in room 12 (17:35-19:34), and if the overworld routing changes the RNG seeds for enemy positioning, falling boulder timing, etc.
	$LF
]div
[h3 id=Acknowledgements 
	" Acknowledgements
	$LF
]h3
[div class=p 
	"My thanks to the forums for support and feedback during the WIP stage, and to the Crystal Caves Speedrun discord channel for routing assistance and encouragement.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": As it was said many times, we really love your enthusiasm, DungeonFacts! Please keep on trying and learning. It just happens that at this point, with this game's complexity, a higher level of skills is required. After having watched your work and tried this game myself (it's weird to think that I learned JPC-RR TASing just to reject a movie), I am not even sure you tried to optimize everything.
	$LF
]div
[div class=p 
	"You bump into corners while jumping, losing speed, delay jumps for a few frames for no reason, even delay starting running. This means you need to understand that every action you intend to do should happen as soon as possible, and also how to achieve that. It's also been noted that JPC-RR is very bad at being handy, so all you traditionally had was saving a series of states on consecutive frames and then trying to start your action from each state, checking whichever works out the best. That way you don't have to remember how many frames you need to delay from your rewind keyframe state: it serves as a backup, while optimization is done using all the other slots you have. Each result you like should be saved to an extra state, and if you're checking all the results at some new keyframe point, all resulting states should be saved at that same point. Then you just load them one by one, noting the difference and picking the winner. This should happen for 
	[b 
		"every
	]b
	" event and action that affects your overall progression speed. You're not doing it for at least 
	[em 
		"a lot
	]em
	" of such events.
	$LF
]div
[div class=p 
	"Another critical aspect is minor routing. While major routes one can plan out while playing without TAS tools, there are always several ways to approach some parts of the movie. As a test, just to see how it works, sloppy input can be used, but if you're unsure which option is actually better, you then optimize each of them and do the comparison as described above.
	$LF
]div
[div class=p 
	"Next, redoing the same room. After having done the room for the first time, even with all the above optimization, you now have the knowledge about it that you didn't have when starting. Moreover, you now have some of the options already tested, so you can try beating your own times. Rewatch your segment in a separate instance (or in a video editor to trivialize rewind) and just try to beat the old strats.
	$LF
]div
[div class=p 
	(__wikiLink|displaytext=Here's the page|href=/TasingGuide/TASArt)
	" where I tried to collect all the hints on how to improve your TASing skills. And here's 
	(__wikiLink|displaytext=the whole Guide|href=/TasingGuide)
	" that page belongs to, it has lots of really useful advices for all cases.
	$LF
]div
[div class=p 
	"Rejecting for sub-optimality, and better luck next time!
]div
