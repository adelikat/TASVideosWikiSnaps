15
[p 
	(youtube|v=dNUMflvjoyE|w=480|h=360)
	$LF
	"You can change the size of the subtitles by pushing - and +.
	$LF
]p
[p 
	"Emulator used: Snes9x 1.51.
	$LF
]p
[pre 
	"Sync Settings:
	$LF
	"Allow Left+Right / Up+Down: OFF
	$LF
	"Volume Envelope Height Reading: ON
	$LF
	"Fake Mute desync workaround: ON
	$LF
	"Sync samples with sound CPU: ON
	$LF
	$LF
]pre
[h4 id=Aims: 
	" Aims:
	$LF
]h4
[ul 
	[li 
		"Aims for fastest time 
		$LF
	]li
	[li 
		"Takes (lots of) damage to save time 
		$LF
	]li
	[li 
		"Manipulates luck 
		$LF
	]li
	[li 
		"Entertaining as possible during waiting segments
		$LF
	]li
]ul
[h4 id=Subtitles: 
	" Subtitles:
	$LF
]h4
[p 
	"Especially for those who haven't played the game, the simulation sections can be rather boring.  So we decided to add subtitles that explain various aspects of the game during the simulations' downtime.  We talk about things like the how the simulation works, tricks we used, and what is going in the story since the dialogue is skipped past quickly.  We also included Ryusui's translation of the introduction from the Japanese manual during the lengthy waiting of Kasandora.  It explains the backstory of the game.  The subtitles can be found here: http://tasvideos.org/userfiles/info/3505341360933661
	$LF
]p
[pre 
	$LF
]pre
[h4 id=GameIntroduction: 
	" Game Introduction:
	$LF
]h4
[p 
	"In ActRaiser, you literally play God.  After a battle with Satan and his six guardians, God has been badly wounded.  He retreats to his Sky Palace and goes into a long deep sleep to heal his wounds.  But in the meantime, Satan and his minions take over the world, turning God's adherents into monsters.  Several hundred years later, God wakes up.  However, he has lost much of his power with the loss of his faithful subjects.  Before he can hope to take the world back from Satan and his guardians, he must build his powers back up again.  He must destroy the monsters roaming the world and use those freed souls to build towns and restore the people's faith in him. 
	$LF
]p
[p 
	"This game is interesting because it fuses action and simulation.  In the action parts, God takes the form of a warrior in side-scrolling stages "purifying" the land; ridding it of monsters including a boss at the end of each stage.  In the simulation mode, you build up towns with the aid of an angel assistant, using souls freed from monsters.  You clear obstacles, direct the people to build roads, aid them when disasters occur, fend off monsters, and in general help the people develop the town.  In the process, God becomes more powerful. 
	$LF
]p
[pre 
	$LF
]pre
[h4 id=Improvement: 
	" Improvement:
	$LF
]h4
[p 
	"This is an improvement of 51089 frames (14 minutes, 11.48 seconds) over OgreSlayerR's TAS, and 3226 frames (53.77 seconds) over our previous attempt, http://dehacked.2y.net/microstorage.php/info/1320456877/ActRaiser_%28U%29_Zidanax_and_Dunnius.smv  This is one of the oldest TASes on the site not to have been obsoleted, and it's a game we happen to like a lot, so we separately decided to work on it.  OgreSlayerR's TAS was done in the bad old days when SNES9x didn't have as many features, such as memory watching, frame advance, and lua scripts.  Nevertheless, OgreSlayeR did a pretty good job given SNES9x's limitations at the time.  Apart from greater precision, the action segments also features tricks discovered by OgreSlayeR later and some from Zidanax and some from various other people as listed in the acknowledgements.  The biggest improvements of the run are in the simulations.  There were some discoveries by some folks at GameFAQs that improve the knowledge of the game's mechanics.  Zidanax did the overall planning of the route, and dunnius improved soul gathering and other discoveries to speed up the simulation further.  We also made sure that the Earthquake spell is cast at the beginning of Marahna, for those who have watched OgreSlayerR's TAS.
	$LF
]p
[h4 id=History: 
	" History:
	$LF
]h4
[p 
	"Zidanax started this run back in April 2007.  He did quite a bit early on, then sort of worked on it off and on for a few months.  He then lost motivation and didn't start again for about a year and three months.  Lua support had recently been added, which was quite helpful for manipulating the Stardust patterns.  dunnius had also started TASing, and was focusing on improving the simulation segments.  They combined their efforts; Zidanax did the action segments, and dunnius did the simulations.  They were able to find improvements that neither would have thought of alone.  So perhaps it was destiny that it took so long for the TAS to resume. :)  After completing the run, more discoveries for the action were found, so the entire run had to be redone.  During that time, more improvements were found in the simulation.  So overall, redoing the run turned out to be a benefit.
	$LF
]p
[h4 id=ScrollManagement: 
	" Scroll Management:
	$LF
]h4
[p 
	"We don't retrieve as many scrolls in this run because it turns out that scroll usage doesn't save quite as much time in boss fights as one might expect.  And many of the scrolls take a rather long time to retrieve.  Zidanax tested how much time using scrolls would save in each boss fight over using no scrolls.  He then compared how long it took to pick up the scrolls.  Usually the time saved by stardust past one or two scrolls was negligible if not non-existent.  We ended up getting 3 scrolls that take very little time to obtain.
	$LF
]p
[h4 id=TricksforActionSegments: 
	" Tricks for Action Segments:
	$LF
]h4
[p 
	"There is now a Game Resources page for ActRaiser at http://tasvideos.org/GameResources/SNES/ActRaiser.html. Please visit that link if you want to see the tricks we used.
	$LF
]p
[p 
	"However, here are a few level-specific notes:
	$LF
]p
[h4 id=FillmoreAct1: 
	" Fillmore Act 1: 
	$LF
]h4
[p 
	"I travel along the trees instead of the ground in the first section.  It turns out that it's slightly faster in spite of all the jumps.  Probably due to the big jump at the end of the segment. 
	$LF
]p
[pre 
	$LF
]pre
[h4 id=AitosAct1: 
	" Aitos Act 1: 
	$LF
]h4
[p 
	"While waiting for the bird platform, I kill a bunch of monsters for entertainment's sake.  It takes a few frames longer to end the level, but I think it's worth it. 
	$LF
]p
[pre 
	$LF
]pre
[h4 id=AitosAct2: 
	" Aitos Act 2:
	$LF
]h4
[p 
	"I strike one of those red eyeball monsters to keep it from damaging God.  Big thanks to OgreSlayeR since it requires literally frame-perfect precision and I ended up copying OgreSlayeR's run in that part. 
	$LF
]p
[pre 
	$LF
]pre
[h4 id=MarahnaAct2: 
	" Marahna Act 2:
	$LF
]h4
[p 
	"The moving platform near the beginning of the level doesn't start moving until you are over the center.  Hence the jump, since I speed up slightly before the jump. 
	$LF
]p
[p 
	"You'll notice that I take the left route when the level splits.  The right route has a pit that takes longer to fall through due to more platforms.  It also has more obstacles to get hit past before the pit, leaving God with insufficient life to get quickly through the last part of the level. 
	$LF
]p
[pre 
	$LF
]pre
[h4 id=NorthwallAct1: 
	" Northwall Act 1:
	$LF
]h4
[p 
	"There is an ice block at one point that I have to wait for.  While going down a slope just before falling into that part of the level, I move backwards for a few frames.  That is to reduce lag, which is actually rather rare in action segments (not simulation segments though). 
	$LF
]p
[h4 id=TricksforSimulationSegments: 
	" Tricks for Simulation Segments:
	$LF
]h4
[p 
	"By far the biggest improvements are in the simulations.  There were some very important discoveries by some folks at GameFAQs.  Admiral's Maximum Population Guide says that the number of structures that are built each turn depends on the number of souls that have been freed.  Killing one monster frees 1 soul, destroying a lair frees all souls in that lair.  This means that before the first lair has been sealed, we kill as many monsters as possible in order to maintain maximum growth, 6 structures each construction, so our early growth in each town is much faster than OgreSlayeR's run.
	$LF
]p
[p 
	"Using the Strength of Angel (makes monsters die in one hit, except Skull Head which require two) and Bomb (kills all monsters) items really help with soul gathering.  The people find those items when a lair is sealed.  Two of of the lairs in a town give items (except Bloodpool which only gives a bomb) and the other two increase the civilization level.
	$LF
]p
[p 
	"At level 1, the soul requirement for structures and the population they increase is 4.  At level 2 it is 6, and at level 3 it is 8.  When a food structure is built, the souls required for it are returned to the soul counter.  This makes soul gathering slightly easier for cycle 2.  Upgrading the fields to wheat/rice increases population growth because less fields have to be built.  Fillmore is not upgraded because it takes too long for the minimal savings, Aitos does not have fields, and Northwall does not have to worry about population growth.  Bridges also act as food structures, and increase population growth for the same reason.
	$LF
]p
[p 
	"There are also major route changes to the pointer movement.  Building in more than one direction at a time causes more pointer movement, but it is made up by being able to seal the lairs in fewer cycles and by providing more squares to build on to ensure maximum growth every cycle.  This is very important after Act 2 because the town will grow every 6 cycles after leaving.  Extra roads are built for this reason; they should be done with minimal frame cost.  One aspect of moving the pointer is finding the movement that leads to the least amount of time during the "Town under construction" phases (making the people take a quicker path), but do not take up too much time moving the pointer.  There is a limit of 8 squares per pointer movement.  However, reaching that limit causes 8 frames of lag, so it is best to limit the number to 7 squares.  It is faster by about 160 frames to make the last lair sealed be one that has an item.  This replaces the Act 2 message with the item message, and saves having to listen to an extra message.  This is done in all but Fillmore and Northwall, which force the lair order.  
	$LF
]p
[p 
	"It is important to reduce the frames that stop the construction counter.  Obviously the time in menus, messages, pointer movement, random lag, and placing miracles and items should be minimized.  It is faster to consolidate taking offering items because it reduces the number of the "Take an Offering" screens.  Despite miracles giving lots of time to gather souls, it is faster to do only those that are needed for the town to build on.  There are many messages (and items) that can be skipped by avoiding the triggers.  One common message skip is quickly (8 frame window) leaving the town after Act 2 to avoid the thank you message.  A pointer movement must be started within a small square in the middle of the main square.  It is faster to start from the edge of that middle square.  The pointer movement should end at the edge of the final square.  dunnius made a lua script which shows the squares, as well as a bunch of other simulation information.
	$LF
]p
[p 
	"The angel takes damage and gets knocked backwards when colliding with a monster.  If the life bar reaches 0, the angel cannot shoot arrows.  The angel can do a damage boost by facing the opposite direction before taking damage, just like the action.  However, this has very little use.  Even though the simulation segments are shorter, there is still way too much waiting time.  So the angel has to do all sorts of entertaining movements to pass the time.  Bisqwit will be happy to know that the movement is not headache enducing.  dunnius made a heads up display for the simulation: http://pastey.net/146457
	$LF
]p
[h4 id=FillmoreSimulation: 
	" Fillmore Simulation:
	$LF
]h4
[p 
	"The initial pointer movement of up, down, up prevents houses being built on the square above the temple.  They would catch on fire and cause extra messages and a miracle.  There is luck manipulation in the first 2 cycles to make the blue dragon stay in place.  It takes too long to kill it.  Waiting one more cycle in Fillmore would have caused the message about the rock that hides the fireball.
	$LF
]p
[h4 id=BloodpoolSimulation: 
	" Bloodpool Simulation:
	$LF
]h4
[p 
	"The Strength of Angel from Fillmore is used because most monsters require more than 1 hit.  Building over the Eastern blue dragon lair converts Fillmore's fields to wheat.  However, the extra pointer movement and message is not worth it because Fillmore only has 2 fields and is only building factories.  There is no need to use lightning to expose the red demon lair; the Magic Skull does not check.  It is possible to interrupt either of the lake clearing messages with a monsters' lair being sealed.  It takes some close timing.  If the wheat/rice item was used on the unconverted field any sooner, it would cause an extra field to be built, and there would not be enough population for the second level-up.  The thank you message after Act 2 is required to get the Magical Stardust spell.  It is important to leave before the people fight and stop population growth.  These type of events only occur by staying in the town after Act 2.
	$LF
]p
[h4 id=KasandoraSimulation: 
	" Kasandora Simulation:
	$LF
]h4
[p 
	"This town has most difficult cycle 1 to get 24 souls.  It was cut very close with 2 frames remaining.  2 Bomb items (from Fillmore and Bloodpool) were used (paired with rain so that waiting for the souls does not affect the construction counter) at the beginning to get 8 souls.  This was done because Bloodpool did not have a Strength of Angel item.  There was luck manipulation in cycle 1 to get the Southeast red demon to move closer to the angel.  This is also the hardest town to plan the route because there are many routes possible through the vast desert.  The fastest route ended up using 1 extra rain.  Quite surprising!  It is faster to delay building on the square with the pyramid for faster construction times.  It is also better to delay sealing the last lair and building on its square because it affects how fields are built.  Building on it earlier slows down future growth.  A big change is not building to the people lost in the desert.  It has a longer pointer movement and 2 extra messages.  The resulting Source of Magic is not worth it.  This also prevents the plague, though it occurs by staying in the town after Act 2, so that is not a concern.  The bomb item is not obtained, but the Strength of Angel is.
	$LF
]p
[h4 id=AitosSimulation: 
	" Aitos Simulation:
	$LF
]h4
[p 
	"The Strength of Angel from Kasandora is used.  24 souls in cycle 1 is impossible without it.  Using rain on the injured guy has no effect on town growth, so it is skipped since the miracle takes time.  During the required wind miracle, the blue dragon is blown into the arrow headed in the same direction, and gets hit.  This is the only way that will happen.  This trick causes the angel to get hit, so that is intentional.  The reason for doing Act 2 early is that the mountaineers will find the Source of Magic only after Act 2 since the volcano erupting halts messages.  This happens in all towns after the last lair is sealed.  The volcano erupting animation causes lag, so there is no waiting after sealing the final lair before Act 2.  The Sheep's Fleece and Source of Magic are obtained, but the Strength of Angel and Bomb are skipped.  It is faster by several frames to skip those items due to faster navigation when using items.
	$LF
]p
[h4 id=MarahnaSimulation: 
	" Marahna Simulation:
	$LF
]h4
[p 
	"The earthquake miracle is used before any construction this time around.  No items are used because the Earthquake adds 22 to the construction counter for some reason.  It is faster by about 30 frames of pointer movement to delay sealing the closest lair until cycle 3.  It is easy to obtain 24 souls in the second cycle.  No offerings are used or taken.
	$LF
]p
[h4 id=NorthwallSimulation: 
	" Northwall Simulation:
	$LF
]h4
[p 
	"Population growth is no longer a concern.  The goal is faster construction and getting to the lairs quickly.  The up, right, up, forces the people to build on both squares with 2 structures.  The sheep's fleece is used because the town would stop growing (too cold) after reaching 22 population.  Using the fleece early causes a substitute message (generic thanks message) at 22 population.  But keeping the population low before sealing 3 lairs skips the message.  It is possible to skip the sheep's fleece by uncovering the lake.  The lake messages delay the message about the people being cold long enough to seal all 4 lairs.  But the skip takes longer than using the sheep's fleece, so it is not done.  There is a pointer counter that identifies when to move the pointer to the next square.  It is possible to save frames by manipulating it to move immediately after the final construction.  It is only a concern here because the remainder will not be carried over to the next town.  The skull head was not killed at the end.  The game does not care if the monsters are alive.
	$LF
]p
[h4 id=Improvements: 
	" Improvements:
	$LF
]h4
[p 
	"Yes, there are improvements, though they are small.  The Stardusts are probably improvable.  There are probably faster construction paths in the simulations, Northwall can be done about 10 frames faster if the pointer counter is manipulated to be optimal, and it may be possible to do more message skipping.  But all those require knowing how the game's code works, so they are not short term improvements.
	$LF
]p
[h4 id=SuggestedScreenshots: 
	" Suggested Screenshots:
	$LF
]h4
[p 
	"4754, 16062, 20525, 22312, 22387, 22412, 22848, 23317, 23340, 28530, 28612, 37595, 37626, 37974, 38337, 38371, 38395, 39179, 40265, 40429, 42044, 47987, 48397, 49364, 52447, 57520, 57575, 58022, 59366, 65981, 67760, 68324, 71070, 72418, 79060, 84576, 85533, 86061, 87206, 94538, 95359, 95993, 97060, 97070, 97081, 101776, 105860, 106994, 108301, 109951, 110052, 114745, 116559, 117149, 128603, 130279, 130640, 136514, 143662, 143700, 146111, 150540, 155354, 156501, 159244, 160159, 160498, 164116, 165022, 165205, 165219, 165245, 165315, 165325, 165388, 165430, 165445, 165448, 165547, 165564, 165568, 168346, 174150, 176039, 176163, 177773, 177944, 178134, 178666, 185147, 185158, 191217, 192867, 196750 :), 198560 :P 
	$LF
]p
[h4 id=Dedication: 
	" Dedication:
	$LF
]h4
[p 
	"This run is dedicated to dunnius' dog, Sugar, who died October 13, 2009, and dunnius' friend's dog, Frisky, who died September 25, 2010.
	$LF
]p
[h4 id=Acknowledgements: 
	" Acknowledgements: 
	$LF
]h4
[ul 
	[li 
		"OgreSlayeR, maker of the previous ActRaiser TAS.  He did an amazing job on the action segments given the tools he had at his disposal.  He also discovered several useful tricks after he made his run.  The action segments would be a good bit slower without those tricks. He also gave some good feedback on the run. 
		$LF
	]li
	[li 
		"Sir VG, maker of the realtime speedrun over at Speed Demos Archive.  We had some good discussion about things like planning which scrolls to get, and he also gave feedback on the run. 
		$LF
	]li
	[li 
		"Admiral and all the people who contributed to his/her guide on GameFAQs: the guide has tons on informations on the workings of population growth, including the soul counter system.  The sims in this run are much faster thanks to the guide. 
		$LF
	]li
	[li 
		"PJ, speedrunner of the Professional mode, for finding the walljump in Marahna Act 1.
		$LF
	]li
	[li 
		"Rick N. Bruns for his ActRaiser maps over at snesmaps.com.  It was nice to have good-quality maps to give myself an overview of a level when I wanted it. 
		$LF
	]li
	[li 
		"FatRatKnight for his subtitles script and expanding it to include everything but the kitchen sink :). 
		$LF
	]li
	[li 
		"DarkKobold for his script that tracks enemies, including off-screen enemies.  It was a great start to the current lua script.
		$LF
	]li
	[li 
		"Neo_Omegon, who noted that ending levels higher up on the screen saves some time.
		$LF
	]li
	[li 
		"大根さん who uploaded a TAS at nicovideo which showed the walljump and fast fall tricks.
		$LF
	]li
	[li 
		"Ryusui for his translation of the intro in the Japanese manual, which is used in our subtitles.
		$LF
	]li
	[li 
		"All the people in the ActRaiser thread for their feedback and encouragement. 
		$LF
	]li
]ul
[p 
	"If we forgot about someone please let us know and we'll add them!
	$LF
]p
[hr 
]hr
[p 
	[a class=intlink href=/Users/Profile/DarkKobold 
		"DarkKobold
	]a
	": I've been waiting for this submission for quite some time. Claiming.
	$LF
]p
[p 
	[a class=intlink href=/Users/Profile/Mister Epic 
		"Mister Epic
	]a
	": YouTube module added with subtitles!
	$LF
]p
[hr 
]hr
[p 
	[a class=intlink href=/Users/Profile/DarkKobold 
		"DarkKobold
	]a
	": I've been following this run for some time, and actually had hoped to become a judge before it was submitted so that I could be the one to judge it. I stopped watching WIPs midway through the 2nd time, so that I could enjoy the run in full. After all this time, the run was not a disappointment. This is my personal vote for TAS of 2011. Congrats on an amazing and well optimized run.
	$LF
]p
[p 
	"... Oh yeah, and accepting. 
]p
