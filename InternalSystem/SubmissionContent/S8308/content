12
[div class=p 
	"Download link to the game can be found here, version 0.1.5 of the game specifically because the run is significantly slower on v0.1.6 (the latest version as of writing this): 
	[a href=https://github.com/GTcreyon/SM63Redux/releases/tag/v0.1.5 rel=noopener external nofollow 
		"https://github.com/GTcreyon/SM63Redux/releases/tag/v0.1.5
	]a
	$LF
]div
[div class=p 
	"Super Mario 63 Redux is a game that aims to remake the entirety of Super Mario 63. This is a TAS of the demo version, since the full version is still going to be in development for quite a while.
	$LF
]div
[div class=p 
	"The demo features 1 level, divided into 4 rooms.
	$LF
]div
[hr 
]hr
[div class=p 
	"Ohoho where do I even begin with this one
	$LF
]div
[div class=p 
	"This is probably the most complicated TAS I've ever made, I just want to give a little backstory to the effort put into this 14 second insanity before talking about anything else, I will explain the tricks I mention afterwards:
	$LF
]div
[div class=p 
	"The day the demo was released, I made a TAS that clocked in at 23.250 with very primitive strats, a day later I improved it to a 21.816 (which was posted to the Super Mario 63 Redux Twitter account :D!!).
	$LF
]div
[div class=p 
	"Roblox8192 then improved the TAS to a 19.317, implementing a new trick known as a Low Dive Recover and a trick called the High Backflip, both of which were found by them.
	$LF
]div
[div class=p 
	"A few days later, I found a trick known as Dive Chaining, which significantly improved room 1 and brought the TAS down to a 18.582.
	$LF
]div
[div class=p 
	"Explaining every small improvement made over time would be way too long, so I'm going to make a list of the final times:
	$LF
]div
[table 
	[tbody 
		[tr 
			[td 
				"18.167 
			]td
		]tr
		[tr 
			[td 
				"18.117 
			]td
		]tr
		[tr 
			[td 
				"18.067 
			]td
		]tr
		[tr 
			[td 
				"18.050 
			]td
		]tr
		[tr 
			[td 
				"18.033 
			]td
		]tr
		[tr 
			[td 
				"18.016 
			]td
		]tr
		[tr 
			[td 
				"17.716 
			]td
		]tr
		[tr 
			[td 
				"17.649 
			]td
		]tr
		[tr 
			[td 
				"17.632 
			]td
		]tr
		[tr 
			[td 
				"17.617 
			]td
		]tr
		[tr 
			[td 
				"17.483 
			]td
		]tr
		[tr 
			[td 
				"17.100 
			]td
		]tr
		[tr 
			[td 
				"17.050 
			]td
		]tr
		[tr 
			[td 
				"16.916 
			]td
		]tr
		[tr 
			[td 
				"16.899 
			]td
		]tr
		[tr 
			[td 
				"16.816 
			]td
		]tr
		[tr 
			[td 
				"16.766 
			]td
		]tr
		[tr 
			[td 
				"16.699 
			]td
		]tr
		[tr 
			[td 
				"16.566 
			]td
		]tr
	]tbody
]table
[div class=p 
	"After this, I discovered a huge glitch that allows for near infinite height very quickly, called Hover Shifting, and I immediately improved the TAS down to a 15.199 and then a 14.550
	$LF
]div
[div class=p 
	"Roblox8192 then improved the TAS to a 14.516 and I improved it to a 14.467 quickly followed up by a 14.432, 14.366 a few days later and then and finally a 14.349.
	$LF
]div
[div class=p 
	"In the end, Roblox8192 did not have any inputs or strats left in the TAS, so I did not include them as an author, Tomothy also did a lot of the improvements.
	$LF
]div
[h2 id=Strats 
	" The strats:
	$LF
]h2
[h4 id=LowDiveRecover 
	" Low Dive Recover
	$LF
]h4
[div class=p 
	"Low Dive Recover is a trick where you press X and Up at the same frame to do a dive recover but immediately cancel it on the same frame, which gets you in the spinning animation where you can do a dive again on the next frame way lower to the ground than normally possible.
	$LF
]div
[h4 id=HighBackflip 
	" High Backflip
	$LF
]h4
[div class=p 
	"If you press C and do a backflip on the same frame, your backflip will be way stronger because of the FLUDD pushing you upwards.
	$LF
]div
[h4 id=BackflipChaining 
	" Backflip Chaining
	$LF
]h4
[div class=p 
	"After doing a backflip, you can backflip again and gain even more speed from that backflip, which is exponential, but the rooms are too short to showcase this.
	$LF
	"Something interesting about backflip chaining is that after reaching a certain amount of speed, diving into the direction you're not facing actually gains you speed into that direction instead of making the game try to move you forwards.
	$LF
]div
[h4 id=HoverShifting 
	" Hover Shifting
	$LF
]h4
[div class=p 
	"This is the trick used to gain insane amounts of height super quickly.
	$LF
	"When you start holding C and your power meter is filled to 100% (the orange bar next to the water meter), the first frame of the upwards force will be much greater. Since your power meter fills up in the air if you do not have FLUDD equipped you can constantly press Shift (the button for switching FLUDD) to keep switching back and forth and keep getting the 100% power meter boost over and over.
	$LF
]div
[h4 id=WaterBoosting 
	" Water Boosting
	$LF
]h4
[div class=p 
	"The developers wanted to add a way to move faster in the water, so they made it that when you are holding X and press Up, you gain speed when bonking into a ceiling.
	$LF
	"What the developers didn't realise though, is that this had no speed cap and can also be activated using the semicolon button (the semicolon button in this game is a sort of easter-egg button that allows you to automatically swim upwards every single frame) so you can gain infinite speed in water.
	$LF
]div
[h4 id=GroundpoundDive 
	" Groundpound dive
	$LF
]h4
[div class=p 
	"When you press Down to do a dive, you can press Z to do a groundpound on the same frame or a maximum of 5 frames after that to initiate the groundpound dive. Your vertical momentum is cancelled and your horizontal speed is angled downwards at a 36 degree angle.
	$LF
]div
[h4 id=DiveGrinding 
	" Dive grinding
	$LF
]h4
[div class=p 
	"You can combine low dive recovers and groundpound dives to slide across the floor while building up speed, alternating between the two every frame, which is used in the beginning of every room.
	$LF
]div
[h4 id=BackflipDive 
	" Backflip dive
	$LF
]h4
[div class=p 
	"While in the backflip animation, your dive is way faster, no idea why but it's useful in room 2.
	$LF
]div
[hr 
]hr
[h2 id=Run 
	" The run:
	$LF
]h2
[h3 id=Room1 
	" Room 1:
	$LF
]h3
[div class=p 
	"Since you start in the falling animation when you spawn into a room, you can simply press down to dive immediately.
	$LF
]div
[div class=p 
	"In Room 1, dive grinding is used 5 times to build up speed in the beginning, follwed up by another low dive recover into a normal dive to set up for the backflip chaining.
	$LF
]div
[div class=p 
	"The backflip chain route is pretty simple:
	$LF
]div
[ul 
	[li 
		" Backflip against the sloped surface after the first bridge
		$LF
	]li
	[li 
		" Spin to gain a little bit of height
		$LF
	]li
	[li 
		" Dive towards the first hill
		$LF
	]li
	[li 
		" Backflip off the hill
		$LF
	]li
	[li 
		" Groundpound dive onto the bird
		$LF
	]li
	[li 
		" Backflip off the bird
		$LF
	]li
	[li 
		" Dive to get a little extra speed
		$LF
	]li
]ul
[h3 id=Room2 
	" Room 2:
	$LF
]h3
[div class=p 
	"The room starts off with 2 dive grinds, followed up by a backflip and some left taps to get into a better position for the next part and then a backflip dive to get a lot of speed.
	$LF
]div
[div class=p 
	"This is then followed up by a low dive recover into a dive, I dive recover and spin a frame later to get more height than usual instead of less height, and holding down while in the spinning animation and moving up gets you a little more height because you decelerate slower while holding down, then I do a dive and groundpound into the water.
	$LF
]div
[div class=p 
	"In the water, the water boost is used to get through very quickly, but these 12 frames are actually the most complicated in the whole TAS.
	$LF
]div
[div class=p 
	"First, a 1 frame down arrow press is used, it doesn't lose time but I think was a leftover from the previous strat used to exit the water.
	$LF
]div
[div class=p 
	"The semicolon button is released for 2 frames and on the 2nd frame the X button is also released, this lowers your vertical position from if you were just holding them so that you can start spamming up earlier and make it across the corner with upwards momentum allowing for more speed after exiting the water since you have to spend less time getting out of the water.
	$LF
]div
[div class=p 
	"3 left arrow inputs are used to lower the horizontal speed to avoid bonking on the wall.
	$LF
]div
[div class=p 
	"After exiting the water, the position of the player is in such a position that it detects that you can jump off the semisolid collision of the bridge. You have to do a double jump to get over the final hill, so you want to find a way to single jump first as soon as possible. It is possible to get even more speed or even more height out of the water, but these adjustments don't get the required position for the bridge jump.
	$LF
]div
[div class=p 
	"After that it's just a double jump followed by a spin and a dive to get over the hill.
	$LF
]div
[h3 id=Room3 
	" Room 3:
	$LF
]h3
[div class=p 
	"You actually spawn quite a bit above the ground in this room, so that's why there is such a long time between the first dive and the dive grinds, after waiting, 6 dive grinds are used followed by a low dive recover into normal dive and a normal dive recover to get the right height to hit the FLUDD box and collect FLUDD.
	$LF
]div
[div class=p 
	"You don't actually need to pick up FLUDD to unlock it, so you can just press Shift to switch to FLUDD immediately after opening the FLUDD box.
	$LF
]div
[div class=p 
	"After getting FLUDD, a single frame of FLUDD is used to get height and make it onto the mushroom platform.
	$LF
]div
[div class=p 
	"After landing on the mushroom platform, a backflip is used followed up by doing a hover shift 3 times to get enough height to make it over to another mushroom platform without losing any speed.
	$LF
]div
[div class=p 
	"A dive while using FLUDD is used to land on the mushroom platform and a low dive recover with a normal dive is used after that to bounce on the Koopa and make it over the small pool of water.
	$LF
]div
[div class=p 
	"Bouncing on a Koopa gains you speed for some reason, so that's nice. Using FLUDD in the dive animation at this speed it not beneficial anymore.
	$LF
]div
[h3 id=Room4 
	" Room 4:
	$LF
]h3
[div class=p 
	"In this room you also spawn a bit above the ground, but you can get down quickly by diving and using FLUDD to go down and sideways faster. This is then followed up by 5 dive grinds and backflip, and then just hover shifting all the way up the mountain. (Fun fact, the platforms you pass through while doing this actually push you up a little bit)
	$LF
]div
[div class=p 
	"All the way at the end, a groundpound dive is used to land on the ending trigger as soon as possible, since the ingame timer ends when you touch the ground on top of that mountain this is the fastest way to trigger it.
	$LF
]div
[hr 
]hr
[div class=p 
	"And that's how you beat the Super Mario 63 Redux Tiny Demo in 14.439 seconds! Hope you enjoyed watching and thanks for reading all the way through.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Adding Roblox8192's name per agreement with the author due to having worked on this movie.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": The movie looks really good! Accepting, until the full game is released and TASed.
	$LF
]div
[div class=p 
	"Publisher, please use 
	(__wikiLink|displaytext=this movie|href=/UserFiles/Info/638226135377584209)
	" for encoding, it contains input to read the sign at the end which says it's just a demo and the full game is blah blah. To be readable it required 2 distant inputs so I didn't feel like extending the main movie just so the viewer could read, but for the encode (and as a secondary pub file) it's perfect.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/despoa 
		"despoa
	]a
	": Processing... Gonna 
	(__wikiLink|displaytext=extend|href=/UserFiles/Info/638228235322090787)
	" the provided movie myself to give more time to read the final sign.
]div
