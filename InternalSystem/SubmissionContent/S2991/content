7
[h3 id=Boringstuff 
	"Boring stuff
	$LF
]h3
[ul 
	[li 
		"Emulator used: PCSX-rr-v013a
		$LF
	]li
	[li 
		"BIOS: SCPH1001
		$LF
	]li
	[li 
		"Abuses programming errors
		$LF
	]li
	[li 
		"Uses damage and death to save time
		$LF
	]li
	[li 
		"Normal ending (Not 100%)
		$LF
	]li
]ul
[h3 id=Overview 
	"Overview
	$LF
]h3
[div class=p 
	"Croc is a game about a crocodile that uses his power of floatation to glide through the world and save his gobbo friends. Only this run doesn't collect any gobbos and Croc only floats because of heavy glitching.
	$LF
]div
[div class=p 
	"I started this run last August as a “warm-up” for a 100% TAS. Turns out this took way more work than I thought it would, but such is TASing. At the time of writing these comments, I do still plan to do a 100% TAS, so keep your eyes peeled for that.
	$LF
]div
[div class=p 
	"Angles, angles, angles. Since this is a 3D game with 2D U/L/D/R controls, getting a perfect angle is much harder than it looks and takes up the a lot of time and rerecords. To complicate matters, there is a constant tension between angles and speed, since changing angles faster than normal or making a turn sharper requires cutting speed. I found myself opening paint and solving geometry problems more than once, trying to decide the best way to proceed.
	$LF
]div
[div class=p 
	"There are a lot of minor tricks used to optimize angles, but I won't go into all of them. That would require a full explanation of the degree system, and I don't think it is really needed to enjoy watching the run.
	$LF
]div
[h3 id=GeneralTricks 
	"General Tricks
	$LF
]h3
[div class=p 
	[b 
		"Hovering:
	]b
	" I’ve had multiple people come up to me while I was working on this and ask why the game is about a flying crocodile. It isn’t – this is just a glitch that you will see me use almost constantly during the run. If you do a short jump on frame X, cancel your ability to pound (via being near the ground, performing a 180, or tail attacking), and try to pound anyways on frame X+10, Croc will hover in the air. This does not last forever!  If during the run you question “why didn’t he just hover over that” or “why did he stop there”, the answer is most likely because it is too far to hover across.
	$LF
]div
[div class=p 
	[b 
		"Moving Diagonally:
	]b
	" Croc’s horizontal and vertical speed are dealt with separately. Therefore, when you are moving up and right/left, you are moving more pixels per second than moving straight forward. By moving diagonally, I increase my movement speed by around 10%. This isn’t huge, but over the course of the run it saves A LOT of time (and allows me to clear some gaps I couldn’t otherwise). To get the maximum left-right velocity, I need to be airborne. This is why I constantly hover – the more time I spend in the air, the more I get to stay at top speed.
	$LF
]div
[div class=p 
	[b 
		"Slope Boosting:
	]b
	" Running downhill, your speed increases. Running uphill, your speed decreases. Makes sense. At various points in the run, I will cut my hover short specifically so I can land on a small downhill section and boost my speed for a few frames (the boost is extremely minor, often only worth about a tenth of a frame…but every bit counts!).
	$LF
]div
[div class=p 
	[b 
		"Wall Jumping:
	]b
	" For some reason, the only time this is ever useful is the second world, where it is used quite frequently. It simply requires really precise positioning and jumping the frame you land. This only works in very specific places where the walls are designed a certain way.
	$LF
]div
[div class=p 
	[b 
		"Hyper Turning:
	]b
	" By alternating holding up and letting it go every frame, Croc turns at about triple the speed. Unfortunately, letting go of forward obviously slows you down. Despite this, it had a fair amount of applications during the run since it is so much faster than normal turning.
	$LF
]div
[div class=p 
	[b 
		"Grab Boosting:
	]b
	" When you grab a ledge in a “wrong” way, you may sometimes do a “false grab”, where you perform the animation but fall anyways. Under very specific height and angle circumstances, if you press up at the correct frame during a false grab, you will get a height boost that can propel you onto the ledge.
	$LF
]div
[div class=p 
	[b 
		"Loading Zone Tricks:
	]b
	" There are a few things that fall under this. First off, I’ll sometimes enter a loading zone from the side (a few times in world 4) or the top (3-1). This just allows me to have a more direct route. In the case of 3-1 and 4-4, this also allows me to skip collecting a gold key. Secondly, in the ice world, during any “icy” (outside) section, you will randomly activate the loading zone up to ten frames early. It was just a matter of trial and error to figure out how to activate this. Finally, when entering into the pot-like loading zones, you can save 3 or 4 frames by landing on the proper place on top of them instead of falling into them. For some unknown reason, this trick didn’t work in two places in the run (see if you can spot them!)
	$LF
]div
[div class=p 
	[b 
		"Movement Anomalies:
	]b
	" A lot of interesting things happen if you alternate directions every frame or every other frame. There are about ten different patterns of strange movement I use throughout the run, mostly for playaround during boss fights.
	$LF
]div
[h3 id=Stagespecificcomments 
	"Stage specific comments
	$LF
]h3
[div class=p 
	[b 
		"Pre-game:
	]b
	" I actually had to redo the very start of this run thanks to YouTube user ilovemadnesscombat, who alerted me to the fact that if you press R1 halfway through the opening cutscenes, it will skip them. Why only R1 works and why you can’t use it earlier in the scene is beyond me.
	$LF
]div
[div class=p 
	[b 
		"1-1:
	]b
	" Nothing of note…damage boosting on lava allows me to take a much faster angle and does not slow me down at all (except for the one extra frame it took to collect the crystal).
	$LF
	[b 
		"1-2, 1-3:
	]b
	" Mostly self-explanatory stuff
	$LF
	[b 
		"1-B1:
	]b
	" If you look closely a bit after I get the first hit, you can actually see the Feeble hovering high above the ground for a few frames. This is the result of him zipping up an invisible wall as he tries to get back into the stage.
	$LF
	[b 
		"1-4, 1-5:
	]b
	" Mostly self-explanatory stuff
	$LF
	[b 
		"1-6:
	]b
	" Moving platforms…my arch nemesis. When you are over a platform, it’s speed gets added to yours. Unfortunately, a vast majority of the platforms in the run are working against me. That is why I avoid jumping on the logs in the second room. I do a strange angle change near the end of the final room, because turning for long enough very slightly increases your height, and allows you to land on the edge I do.
	$LF
	[b 
		"1-B2:
	]b
	" Spinning platforms suck. They create weird fields of invisible walls that will randomly kill your momentum. Sorry,  just had to rant about those.
	$LF
]div
[div class=p 
	[b 
		"2-1:
	]b
	" Wall jump shortcut skips pushing the box
	$LF
	[b 
		"2-2:
	]b
	" Wall jumping to get a better angle + slope boost
	$LF
	[b 
		"2-3:
	]b
	" The reverse route is a bit faster. The second gold key is pathetically easy to skip here.
	$LF
	[b 
		"2-B1:
	]b
	" Self-explanatory
	$LF
	[b 
		"2-4:
	]b
	" I am able to bounce twice on the waterfall because I actually do a false grab in between the two hits, resetting my bounce counter while still under mercy invincibility. Pretty cool trick.
	$LF
	[b 
		"2-5:
	]b
	" Sliding is faster in the first room. Grab boost skips pushing the block
	$LF
	[b 
		"2-6:
	]b
	" Wall jump to catch platforms a cycle earlier than otherwise
	$LF
	[b 
		"2-B2:
	]b
	" Get wrecked by spawn manipulation, Demon Itsy
	$LF
]div
[div class=p 
	[b 
		"3-1:
	]b
	" Really cool gold key skip in the first room, fairly self-explanatory
	$LF
	[b 
		"3-2:
	]b
	" I don’t think I mentioned this before, but I hate swimming sections. I really do. 
	$LF
	[b 
		"3-3:
	]b
	" First deathwarp of the run. I hate world 3. And water sections.
	$LF
	[b 
		"3-B2:
	]b
	" Still hate water sections. For some reason, you can do strange ceiling zips in room 2, which I guess are cool. But I hate water sections.
	$LF
	[b 
		"3-4:
	]b
	" Another deathwarp
	$LF
	[b 
		"3-5:
	]b
	" There is actually a 1-frame zip in this level, see if you can spot it
	$LF
	[b 
		"3-6:
	]b
	" Last deathwarp of the run…what is with world 3 and this key fetish? 
	$LF
	[b 
		"3-B2:
	]b
	" Cactus Jack becomes vulnerable at very strange times. Quite a lot of strategy and testing went into this fight, as he doesn’t really behave a logical pattern (a pattern, but not a logical one).
	$LF
]div
[div class=p 
	[b 
		"4-1:
	]b
	" World 4 is pro, especially after world 3. In room 4, I actually land on an invisible wall that marks the sides of a staircase.
	$LF
	[b 
		"4-2:
	]b
	" I hate staircases. If you are wondering why I don’t just jump off the sides, it is because of the invisible walls mentioned before.
	$LF
	[b 
		"4-3:
	]b
	" Minigames? In my any% run? Hahahaha. Had to manipulate a fast box pattern (there are only 3, so this isn’t hard). Used sidestepping to quickly blow up the balloon.
	$LF
	[b 
		"4-B1:
	]b
	" Lots of luck manipulation is required on this boss – the arch it sends the dynamite back at is completely random.
	$LF
	[b 
		"4-4:
	]b
	" Gold key skip by entering the loading zone from the side.
	$LF
	[b 
		"4-5:
	]b
	" You die after falling a certain ammount, which is why I stop myself with the roof of the door on the way down. In the second room, they cancelled die-from-falling-too-far until you hit the ground from the initial fall at the start. Thus, I fall straight to the goal, cutting the En Guarde and Ya Ha factors of this run by 50%.
	$LF
	[b 
		"4-6:
	]b
	" A bunch of crazy platform stuff here; most are self-explanatory. I can jump on the spikes at the very end because Platform Pete is about to spin the platform around.
	$LF
	[b 
		"4-B2:
	]b
	" While messing around, I found out that you can actually fall out of bounds or do a sizable zip on phase 2 of the fight. Unfortunately, I couldn’t do either without wasting time by making him turn.
	$LF
]div
[div class=p 
	"And that concludes my essay/run comments. I realize now some stuff I could have explained, but I think I’ve already written enough. Thanks for watching! 
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/Mukki 
		"Mukki
	]a
	": Judging...
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Mukki 
		"Mukki
	]a
	": Great run. Some complaints were raised about the glitch, however, it put an interesting twist on level completion as the levels became more complex. Clearly a lot of effort was put into this, which is admirable for a 3-D run, nevermind a first submission! Congratulations, I look forward to seeing more of your work. Accepting.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Aktan 
		"Aktan
	]a
	":  Processing.... may take some days...
]div
