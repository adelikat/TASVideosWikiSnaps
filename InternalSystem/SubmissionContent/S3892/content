7
[h3 
	"Boring Stuff
	$LF
]h3
[ul 
	[li 
		" Emulator used: VisualBoy Advance-v24m-svn-r422
		$LF
	]li
	[li 
		" Uses death and damage to save time
		$LF
	]li
	[li 
		" Normal Ending (not 100%)
		$LF
	]li
]ul
[h3 
	"Overview
	$LF
]h3
[p 
	"I promised a few people that after I finished my Croc: Legend of the Gobbos 100% TAS I would do an any% TAS of Croc 2. I don't want to, so as a loophole I made this TAS of the silly gameboy version. This bizarre game is obviously nothing like the Playstation/PC version.
	$LF
]p
[p 
	"This run simply reaches the credits as fast as possible - it does not get the 100% ending that requires all Golden Gobbos. I may make a 100% run, but before routing it seems like it might require too much crystal grinding.
	$LF
]p
[h3 
	"Physics
	$LF
]h3
[ul 
	[li 
		" Horizontal and vertical movement are independent. This means if I'm going in one direction, I am free to move however I want on the other axis. Everything Pythagoras taught you is thrown out the window, so that explains a lot of the very bizarre movement patterns I use, usually for no purpose but to mix things up.
		$LF
	]li
]ul
[ul 
	[li 
		" In certain scenarios you can get an extra frame off an edge before you jump...this allows for essentially all the unintentional shortcuts I use in the run.
		$LF
	]li
]ul
[ul 
	[li 
		" The height system is really poorly done, not going to bother explaining more than that.
		$LF
	]li
]ul
[p 
	"I could do some more detailed comments about a few of the bigger timesavers, but that probably isn't necessary. A good rule of thumb is if I make a large diagonal jump with no obvious connectors between where I takeoff and where I land, it is a medium-large shortcut.
	$LF
]p
[hr 
]hr
[p 
	[a class=intlink href=/Users/Profile/Nach 
		"Nach
	]a
	": Nice run, accepting.
	$LF
]p
[hr 
]hr
[p 
	[a class=intlink href=/Users/Profile/natt 
		"natt
	]a
	": procesing
]p
