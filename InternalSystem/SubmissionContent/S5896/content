4
[p 
	"This completes the Playstation port of Terry Pratchet's Discworld II-Missing Presumed...?, in approx 39:37.  The PSX Port maintains all of the key features, but sadly with the addition of occasional load screen or lag spike, but nothing that you'd notice if you weren't paying attention.
	$LF
]p
[h3 id=Gameobjectives 
	" Game objectives
	$LF
]h3
[ul 
	[li 
		" Emulator used: Bizhawk 2.2.1
		$LF
	]li
	[li 
		" Genre:  Point & Click Adventure
		$LF
	]li
]ul
[h3 id=Comments 
	" Comments
	$LF
]h3
[h4 id=CursorControl 
	" Cursor Control
	$LF
]h4
[p 
	"The cursor cannot be controlled with the analogue stick, and so it gets done with the D-pad instead, and so only the basic 8 directions for us.  Its speed will constantly accelerate while moving, eventually to the point where the motions are so big that it'll be too fast to be useful.  It'll just skip straight past where we want to click, and so the speed needs to be reset at some point.  Up until then though, we still need to derive creative movements such that the cursor can maintain its high speed while still being able to direct it to wherever we need it.  Such movements include using staggered patterns of diagonal movement, to control when and thus how large each vertical increase will be, to produce specific patterns which add up to the correct height we need.  Other techniques include shoving the cursor to the edge of the screen to give a displacement which might only be half of its regular size.  Quick zigzags may help, or simply patiently waiting until the speeds to sync up with where you need to be.  A small pause here will still save time over slowly moving the cursor after it resets back to 0 speed again.
	$LF
]p
[h4 id=InventoryManagement 
	" Inventory Management
	$LF
]h4
[p 
	"Rincewind can only store 2 items, and we cannot click Rincewind to access them while he is moving.  This means a potential trick of storing useful items on Rincewind for faster access is something which cannot really be used.  The time wasted to stop movement, access inventory, and then restart movement, is far worse than the extra frames to retrieve it from the Luggage on the other side of the screen instead.  Likewise for keeping things on Rincewind if the luggage isn't on screen yet, very rarely is there an opportunity where it still saves time to deposit it on Rincewind first.  There is a slight exploit where we can keep an object on our cursor to be able to use it in a new area immediately, even if it's in an area where the luggage can't even access.  This saves time over needing to deposit it in Rincewind first.
	$LF
]p
[h4 id=EarlyAction 
	" Early Action
	$LF
]h4
[p 
	""Using" a given object will not perform the initial requested action once Rincewind reaches it, but rather updates to whatever is currently on the cursor.  This means that if tell Rincewind to use an object on a person, but simply ditch the object during the movement to said person, then when Rincewind arrives he will now do a blank-cursor Use action, which is simply to talk.  This means we can perform commands before we've gone into our inventory to get the correct item out, thus starting things earlier.  This is doubly important as every new action we give to Rincewind will pause him a for a few frames, so we want to do things in a few clicks as possible.
	$LF
]p
[h4 id=Encode 
	" Encode
	$LF
]h4
[p 
	(youtube|v=kHvkeSPYrRw)
	$LF
]p
[hr 
]hr
[p 
	[a class=intlink href=/Users/Profile/Mothrayas 
		"Mothrayas
	]a
	": A solid looking adventure run, although it is not particularly remarkable to watch. The constant lag spikes and loading screen interruptions really don't help the run, either. Accepting for the Vault.
	$LF
]p
[p 
	[a class=intlink href=/Users/Profile/fsvgm777 
		"fsvgm777
	]a
	": Processing.
]p
