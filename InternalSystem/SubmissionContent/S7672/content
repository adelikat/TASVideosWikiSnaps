6
[div class=p 
	[b 
		"Note:
	]b
	" The temp encode plays the run without loads first so the game as a whole is easier to digest. After, the run plays again with loads included.
	$LF
]div
[div class=p 
	[b 
		"Objectives
	]b
	$LF
]div
[ul 
	[li 
		" Uses hardest difficulty
		$LF
	]li
	[li 
		" Genre: Board
		$LF
	]li
]ul
[div class=p 
	[b 
		"About this version of Checkers
	]b
	$LF
]div
[div class=p 
	"This game uses official checkers rules which, most notably, means that jumping is always madatory: if a player has the option to jump, he/she must take it, even if doing so results in a disadvantage for the jumping player.
	$LF
]div
[div class=p 
	"Umm... white always moves first though?? That's not the official rule but ok.
	$LF
]div
[div class=p 
	[b 
		"Difficulty Choice
	]b
	$LF
]div
[div class=p 
	"Game 3 (expert) is the hardest difficulty and was chosen here. At Game 3, the manual claims the computer will take 2-4 minutes per move, with an entire game lasting 2+ hours. Here are the stats on the computer's thinking time during this run:
	$LF
]div
[ul 
	[li 
		" Average: 33.92 seconds
		$LF
	]li
	[li 
		" Maximum: 2 minutes, 3.20 seconds
		$LF
	]li
	[li 
		" Minimum: 0.22 seconds
		$LF
	]li
]ul
[div class=p 
	[b 
		"Routing
	]b
	$LF
]div
[div class=p 
	"Routing a game like this where the main thing to optimize is the computer thinking time is particularly difficult, as the "best" move is seldom the one that'll save you the most time. Lots of trial and error will be required. There are two good rules to follow in general however, which are:
	$LF
]div
[ul 
	[li 
		" Don't make the position complicated. More complicated positions and more move options greatly increase AI thinking time.
		$LF
	]li
	[li 
		" End the game in the least moves possible that does not complicate positioning. In the case of checkers, that would be done by either trading many pieces as early as possible, or trapping an opponent's pieces.
		$LF
	]li
]ul
[div class=p 
	"Well, trading a whole bunch of pieces early turns out to not work in our favor. Once all the front and most of the second-row pieces are traded, the AI begins to think for a VERY long time as the large separation between the two opponents' pieces means suddenly there's an extraordinary number of outcomes to consider.
	$LF
]div
[div class=p 
	"In this TAS, we used a trapping strategy. What's effective about this is you're progressively reducing the complexity of the position as AI pieces become trapped (options to calculate for them are basically nil) and the player's dominance of the board becomes stronger. It will also ultimately reduce the total number of moves played in the game. The main thing to watch out for will be to not let the AI undermine your trap from the other side!
	$LF
]div
[div class=p 
	[b 
		"RNG
	]b
	$LF
]div
[div class=p 
	"There is some randomness to computer moves when more than one move is found to be about the best. During the making of this run, I completed this very movie first without any luck manipulation. I then went back to see if I could manipulate the AI to make worse moves—or equal moves without as much thinking time. I did not come up with any better results so this movie is without luck manipulation.
	$LF
]div
[div class=p 
	[b 
		"Game Summary
	]b
	$LF
]div
[table 
	[tbody 
		[tr 
			[th 
				"Move
			]th
			[th 
				"White
			]th
			[th 
				"Red 
			]th
			[th 
				"Load Time
			]th
			[th 
				"Commentary
			]th
		]tr
		[tr 
			[th 
				"1   
			]th
			[td 
				"22-18 
			]td
			[td 
				"11-16
			]td
			[td 
				"1:02.20   
			]td
			[td 
				"Old Faithful opening. Out of all the opening moves, black thinks for the least amount of time 
				$LF
			]td
		]tr
		[tr 
			[th 
				"2   
			]th
			[td 
				"18-14 
			]td
			[td 
				"10-17
			]td
			[td 
				"0:00.36   
			]td
			[td 
				"Getting rid of some nuisance red pieces that would mess up our trap later
				$LF
			]td
		]tr
		[tr 
			[th 
				"3   
			]th
			[td 
				"21-14 
			]td
			[td 
				"9-18 
			]td
			[td 
				"0:03.19   
			]td
			[td 
				"Forced captures also usually means short thinking times for red
				$LF
			]td
		]tr
		[tr 
			[th 
				"4   
			]th
			[td 
				"23-14 
			]td
			[td 
				"8-11 
			]td
			[td 
				"1:09.22   
			]td
			[td 
				"In the end, white has control of the center and now we can go for our trap
				$LF
			]td
		]tr
		[tr 
			[th 
				"5   
			]th
			[td 
				"26-22 
			]td
			[td 
				"16-20
			]td
			[td 
				"1:43.53   
			]td
			[td 
				"Many options here. This move forces red to not think as much and traps a checker on the right
				$LF
			]td
		]tr
		[tr 
			[th 
				"6   
			]th
			[td 
				"22-18 
			]td
			[td 
				"6-9  
			]td
			[td 
				"1:23.01   
			]td
			[td 
				"Part of the trap complete... looks like red is trying to go around the left side...
				$LF
			]td
		]tr
		[tr 
			[th 
				"7   
			]th
			[td 
				"25-22 
			]td
			[td 
				"9-13 
			]td
			[td 
				"2:03.20   
			]td
			[td 
				"Let's make sure red doesn't try to slip by.
				$LF
			]td
		]tr
		[tr 
			[th 
				"8   
			]th
			[td 
				"30-26 
			]td
			[td 
				"11-16
			]td
			[td 
				"0:59.01   
			]td
			[td 
				"Many options here. This move forces red to not think as much and clump checkers on the right
				$LF
			]td
		]tr
		[tr 
			[th 
				"9   
			]th
			[td 
				"26-23 
			]td
			[td 
				"7-11 
			]td
			[td 
				"1:06.35   
			]td
			[td 
				"A diagonal of 5 white checkers; now we can move in front of these without getting jumped over 
				$LF
			]td
		]tr
		[tr 
			[th 
				"10  
			]th
			[td 
				"24-19 
			]td
			[td 
				"1-6  
			]td
			[td 
				"1:12.13   
			]td
			[td 
				"Time to get moving along the diagonal highway!
				$LF
			]td
		]tr
		[tr 
			[th 
				"11  
			]th
			[td 
				"19-15 
			]td
			[td 
				"3-8  
			]td
			[td 
				"0:27.07   
			]td
			[td 
				"Key losing move for red. Now if our planned trap unfolds, red will have 5 trapped checkers!
				$LF
			]td
		]tr
		[tr 
			[th 
				"12  
			]th
			[td 
				"28-24 
			]td
			[td 
				"6-9  
			]td
			[td 
				"0:14.54   
			]td
			[td 
				"Our trap will be set with the next move. Time to focus on the left side of the board
				$LF
			]td
		]tr
		[tr 
			[th 
				"13  
			]th
			[td 
				"24-19 
			]td
			[td 
				"2-6  
			]td
			[td 
				"0:05.69   
			]td
			[td 
				"If red moves 6-10 next, that would be bad for our setup so white's next move prevents that
				$LF
			]td
		]tr
		[tr 
			[th 
				"14  
			]th
			[td 
				"14-10 
			]td
			[td 
				"9-14 
			]td
			[td 
				"0:03.55   
			]td
			[td 
				"Because of this move, we can jump to 10-1 next instead of 18-9 and trashing our good setup
				$LF
			]td
		]tr
		[tr 
			[th 
				"15  
			]th
			[td 
				"10-1  
			]td
			[td 
				"14-17
			]td
			[td 
				"0:09.93   
			]td
			[td 
				"Red moves away from one of the checkers holding our trap together. Great!
				$LF
			]td
		]tr
		[tr 
			[th 
				"16  
			]th
			[td 
				"1-6   
			]td
			[td 
				"17-26
			]td
			[td 
				"0:00.63   
			]td
			[td 
				"Let's get our king piece into the action. Mutual capturing follows
				$LF
			]td
		]tr
		[tr 
			[th 
				"17  
			]th
			[td 
				"31-22 
			]td
			[td 
				"13-17
			]td
			[td 
				"0:03.87   
			]td
			[td 
				"From this point on, red has to make obviously terrible forced moves
				$LF
			]td
		]tr
		[tr 
			[th 
				"18  
			]th
			[td 
				"22-13 
			]td
			[td 
				"20-24
			]td
			[td 
				"0:02.67   
			]td
			[td 
				"Red finally decides to make a break for it on the right but there will be no chance of that!
				$LF
			]td
		]tr
		[tr 
			[th 
				"19  
			]th
			[td 
				"27-20 
			]td
			[td 
				"5-9  
			]td
			[td 
				"0:01.64   
			]td
			[td 
				"Red being a nuisance. Can't avoid my own pieces being in the way without messing up the trap
				$LF
			]td
		]tr
		[tr 
			[th 
				"20  
			]th
			[td 
				"6-10  
			]td
			[td 
				"9-14 
			]td
			[td 
				"0:00.32   
			]td
			[td 
				"Luckily, the king piece can get there just in time to stop our trap from being undone
				$LF
			]td
		]tr
		[tr 
			[th 
				"21  
			]th
			[td 
				"10-17 
			]td
			[td 
				"—    
			]td
			[td 
				"0:00.22   
			]td
			[td 
				"A 10-5 win on "expert"!
			]td
		]tr
	]tbody
]table
[div class=p 
	[b 
		"Suggested Screenshot:
	]b
	" Any frame after the game is won which shows all five trapped red checkers.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": The fact that gameplay completely disappears while the CPU is making up its mind is insulting (and illegal in some countries).
	$LF
]div
[div class=p 
	"I was unable to find any speedrun footage of this game (even TwinGalaxies features a 
	[a href=https://www.twingalaxies.com/game/checkers/atari-2600-vcs rel=noopener external nofollow 
		"completely different game
	]a
	" under this name), so this run has to be judged by its own merits, and I think the audience in the thread is correct about them: minimizing CPU thinking time while still beating the game on hardest difficulty is quite an optimization challenge.
	$LF
]div
[div class=p 
	"The game doesn't have an explicit ending, but it does end after you beat the CPU, so we're good. Accepting.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/despoa 
		"despoa
	]a
	": Processing...
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/nymx 
		"nymx
	]a
	": Changing the branch name to have clarity for its description, which is set to be obsoleted by an improved movie. Additionally, an any% type category (Mode 1) will also co-exist with the renaming of this branch.
]div
