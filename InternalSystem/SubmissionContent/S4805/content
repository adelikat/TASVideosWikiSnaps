8
[div class=p 
	"Cocacola Kid, known in Japan as Cokey Cokey Panic, is a charming Startropics spin-off game. It follows the exploits of Cokey Romero, played by Chris Kattan, as he travels far away from his home island of Cocacola. All your favorite Startropics characters are there: Yo-Yo, Dolphin Child, Old Gypsy Who Turns You Into A Woman, Julius Erving, Giant Octopus, Steve From Downtown, "The Sauce", and of course the main protagonist Mark, with his baseball bat and ability to turn into a flying demon.
	$LF
]div
[h2 id=Game(rfuel)Objectives 
	" Game(rfuel) Objectives
	$LF
]h2
[ul 
	[li 
		" Emulator used: BizHawk 1.11.1
		$LF
	]li
	[li 
		" Aims for fastest real time
		$LF
	]li
	[li 
		" Mild luck manipulation
		$LF
	]li
	[li 
		" Takes damage to save time
		$LF
	]li
	[li 
		" Probably abuses programming errors
		$LF
	]li
	[li 
		" Aims for best soft-drink related TAS on the site
		$LF
	]li
	[li 
		" Dissolves a tooth for your 4th grade science fair project, you unoriginal little scamp!
		$LF
	]li
	[li 
		" Does not have real sugar, unlike Mexican Coca Cola Kid
		$LF
	]li
	[li 
		" Softlock? More like soft drink!
		$LF
	]li
	[li 
		" Thank you, I'm here all week!
		$LF
	]li
	[li 
		" Remember to tip your waitress!
		$LF
	]li
	[li 
		" Restrooms are located in the back, next to the Miller Lite sign!
		$LF
	]li
	[li 
		" Try the veal!
		$LF
	]li
]ul
[h2 id="ThisgamelookslikeSonic!" 
	" "This game looks like Sonic!"
	$LF
]h2
[div class=p 
	"Coca-Cola Kid is actually built off of the Sonic the Hedgehog engine and the games play very much similarly.
	$LF
	[br 
	]br
	[em 
		"Coca-Cola Kid is actually built off of the Sonic the Hedgehog engine and the games play very much similarly.
	]em
	$LF
	[br 
	]br
	[b 
		[em 
			"Coca-Cola Kid is actually built off of the Sonic the Hedgehog engine and the games play very much similarly.
		]em
	]b
	$LF
	[br 
	]br
	[b 
		"Coca-Cola Kid is actually built off of the Sonic the Hedgehog engine and the games play very much similarly.
	]b
	$LF
]div
[h2 id=Author'sEn-Coke 
	" Author's En-Coke
	$LF
]h2
[div class=p 
	(youtube|v=vfULJrhLuS8)
	$LF
]div
[h2 id=ABriefDr.Pep-Talk 
	" A Brief Dr. Pep-Talk
	$LF
]h2
[div class=p 
	"The Coca-Cola Kid is a 1985 romantic comedy, starring Eric Roberts as Becker, a hotshot American marketing executive from the Coca-Cola Company. The story revolves around a fictional Australian town that refuses all Coke products, and Becker coming to grips with his role in the corporate mega-giant that is Coke.
	$LF
]div
[div class=p 
	"Now that you know that, let's talk about the game.
	$LF
]div
[div class=p 
	"Coca-Cola Kid is a Japan-exclusive game released for the Sega Game Gear in 1994. It was developed by Aspect Co., who are known for developing nearly every Sonic the Hedgehog game for the Sega Master System, Game Gear, and... Pico. I wasn't aware the Newgrounds mascot had any games released on him, but I suppose Sonic the Hedgehog is literally everywhere these days. Coca-Cola Kid is actually built off of the Sonic the Hedgehog engine and the games play very much similarly. The difference is that in one game you play a ridiculously fast mascot with attitude who's travelling way faster than he should, and in the other game you play as Sonic the Hedgehog. For more information about this game, please visit my Tumblr fan page, at hyper text transfer protocol colon backslash backslash cocainecolakid dot tumblr dot com.
	$LF
]div
[div class=p 
	"So here's a run that was technically started quite a while ago! I (Samsara, if it isn't already obvious) started testing out this game while working on Umihara Kawase back in February. I had intended to get it on the workbench for April Fools' Day with an 
	[a class=intlink href=/Samsara/Sarcasmsara 
		"even jokier submission text
	]a
	", but plans fell through once I started finding tons of improvements over my first run-through. Thankfully, none of those improvements made it into this file. Wait. I mean all of them made it in. Yeah. That's the one. All of them. For sure. No jokes here. This is completely serious. After April 2nd came about and my disappointment in my unintelligent TASing reached its peak, I dropped the project for a while, then picked it back up and invited dekutony to join me, who in turn invited ars4326 to join us to make it the first official Team SAD joint! Ironically, we're quite pleased with the final result. No, I haven't been saving that joke since Dream Team Contest 5. Why do you ask?
	$LF
]div
[h2 id=Pep-SpeedTricks 
	" Pep-Speed Tricks
	$LF
]h2
[h4 id=Spin-Dashing 
	" Spin-Dashing
	$LF
]h4
[div class=p 
	"That's right, Jay! Being built off the Sonic Game Gear engine means that ol' Cokey can spin-dash just like Sonic can! Well, it's technically not a spin-dash, but thanks to a little bit of faulty game logic, it turns into one and becomes the fastest form of movement in the game.
	$LF
]div
[div class=p 
	"That's right, Mike! The normal dash, down by crouching and pressing 1, is rarely seen throughout the game, as it has the terrible cosmic force known as "friction" applied to it. It will slowly lose speed over time before coming to a complete stop. We can't have that, so instead we spin-kick on the first frame possible after dashing. For whatever reason, this allows us to dash without losing speed, and as long as we have a flat surface we can travel at a staggering 7 pixels per frame! This can also be continued by spin-kicking again on the correct frame, usually about 40 frames later (not accounting for the ridiculous amount of lag this game has).
	$LF
]div
[h4 id=MidairSpeedControl 
	" Midair Speed Control
	$LF
]h4
[div class=p 
	"Your current speed, regardless of whether or not you're walking or sliding forward on one foot, is kept while jumping. If you jump without holding a direction, you will slow down, but if you do hold a direction then you will maintain the same speed throughout the course of the jump. This lets us control how far we jump, in case we need to land earlier for some reason or precisely control where we land.
	$LF
]div
[h4 id=FadeoutOptimization 
	" Fadeout Optimization
	$LF
]h4
[div class=p 
	"Landing as close as possible to the right edge of the screen will bring up the end-of-level fadeout a few frames earlier. The closer, the better. This is used in every level except for one, but we'll get into that in the stage comments.
	$LF
]div
[h4 id=MaintainingAttackHitboxes 
	" Maintaining Attack Hitboxes
	$LF
]h4
[div class=p 
	"Or the "infinite kick glitch", if you will. If you interrupt a kick with any other animation, such as jumping or climbing, then you will actually still be considered as kicking. For example, jumping out of a spin-dash will cause the game to think we're still attacking, allowing us to jump straight through enemies. This state ends once you're back in the running animation. Basically, if you notice an enemy dying seemingly out of nowhere, this is the most likely culprit.
	$LF
]div
[h4 id=HitboxExtension 
	" Hitbox Extension
	$LF
]h4
[div class=p 
	"When landing from a jump, if you air-kick on the very last frame possible, you will actually hit slightly farther ahead than you normally would. This is used to break objects that would otherwise obstruct our path: If we don't break these objects, we land directly next to them, leaving us unable to even dash, let alone spin-dash, so... yeah. We break them whenever possible. Which is all the time, because this is a TAS.
	$LF
]div
[h4 id=MomentumDamageBoost 
	" Momentum Damage Boost
	$LF
]h4
[div class=p 
	"Normally, a damage boost will send you back the way you came, but if you attack just before you get hit, then the momentum changes. This is used precisely once, but it saves quite a few seconds over a route that doesn't use it.
	$LF
]div
[h4 id=LedgeStop 
	" Ledge Stop
	$LF
]h4
[div class=p 
	"When flying high speed into a ledge you intend to climb, you will retain your momentum after climbing it. This is prevented by turning around just before we hit the ledge, so that our speed completely stops, then turning back around to grab the ledge. This means we grab the ledge a frame or two later than we would have, but it means we save 10-15 frames of skidding to a stop.
	$LF
]div
[h4 id=StairStop 
	" Stair Stop
	$LF
]h4
[div class=p 
	"Used in precisely one stage to save 10 frames, landing at the base of a stairset will almost instantly stop your movement. It's pretty rad.
	$LF
]div
[h4 id=TheMoonwalk 
	" The Moonwalk
	$LF
]h4
[div class=p 
	"Wait, Michael Jackson endorsed Pepsi, didn't he... OH NOOOOOOOOOOOOO
	$LF
]div
[h2 id=(Sha)StageComments 
	" (Sha)Stage Comments
	$LF
]h2
[h3 id=Downtown 
	" Downtown
	$LF
]h3
[div class=p 
	"This is where Steve is from! Remember that one-off joke from earlier in this submission text? ~*I do!*~
	$LF
]div
[h4 id=Area1-12seconds 
	" Area 1 - 12 seconds
	$LF
]h4
[div class=p 
	"Yep, definitely a Sonic engine game. Everything's moving really fast.
	$LF
]div
[div class=p 
	"One thing I wanna talk about here, since it's appropriate and needs to be gotten out of the way before people complain about it, is how slopes and stairs work in this game. They're... I'm pretty sure every stage handles slopes differently. For Downtown, you can spin-dash up slopes without losing any momentum, which is great! It's a very good thing.
	$LF
]div
[div class=p 
	"Stairs, on the other hand, are awful. As soon as you get somewhat close to them, they will lock your speed to one that is slower than your normal walking speed. Therefore, stairs are to be avoided at as many costs as possible, but in most cases we'll still have to walk up them. In most cases, we can at least jump up them as far as possible to minimize time spent slowly trudging up them. Keep that in mind, kids, as you chug down Coke like Al Pacino at the end of Scarface: You will have a hell of a time getting up stairs.
	$LF
]div
[div class=p 
	"Onto the rest of the stage. That little bridge can't be dashed over. It collapses, and dashing onto it would kill our dashing speed immediately, so it has to be jumped over. We almost always skid to a stop after jumping by holding the opposite direction as we land, as it allows us to stop faster than letting our momentum run out naturally. Given how fast we move normally, stopping earlier to start moving faster is always preferable to stopping later to be further ahead when we start moving.
	$LF
]div
[div class=p 
	"Later on, we land on a slope and stop immediately. For some strange reason, this is the only stage in the game where slopes act like that. No other slope allows you to stop immediately upon landing on it at a certain frame. We've tried with many other slopes and always came up short.
	$LF
]div
[h4 id=Area2-16seconds 
	" Area 2 - 16 seconds
	$LF
]h4
[div class=p 
	"Right at the beginning, we have a long staircase, the longest in the run in fact. Exciting as it is, there's some interesting stuff happening there. Right before it, we seemingly jump through a breakable barrel. This is pretty frame precise: Jumping later than we did would actually break the barrel and cause a lot of lag, ending up a couple frames slower. By jumping earlier, we're avoiding that lag. Landing slightly lower on the staircase is still faster than taking the lag and landing a bit higher.
	$LF
]div
[div class=p 
	"The rest of the stage is mostly similar to Area 1, lots of flat pathways to spin-dash down keeping speed high throughout most of the stage. Shame that staircase is there, though.
	$LF
]div
[h4 id=AreaBoss-5seconds 
	" Area Boss - 5 seconds
	$LF
]h4
[div class=p 
	"I love this boss. He's exactly that easy in realtime too. We attack him at the first opportunity (he's invincible up until that point) and basically stunlock him to death. Less noticeably, I slide just before the stage ends to put me as close to the edge of the screen as possible, saving a couple frames. Don't worry, other bosses actually require a little more strategy!
	$LF
]div
[h3 id=CentralPark 
	" Central Park
	$LF
]h3
[div class=p 
	"Try our Central Pork!
	$LF
]div
[h4 id=Area1-14seconds 
	" Area 1 - 14 seconds
	$LF
]h4
[div class=p 
	"The general consensus for routing is to find the fastest way to the top of the stage, then work your way down to the exit. Straight shots to the exit are pretty rare, and the top path is almost always the fastest. In this case, a tricky and very precise damage boost is used to get up to the top of the stage, and from there it's a straight shot to the exit.
	$LF
]div
[div class=p 
	"The reason that damage boost is frame precise is because we had to jump on the very last frame of the spin-dash in order to pull it off. A frame earlier and we would have killed the bird (see the "Maintaining Attack Hitbox" trick), a frame later and we wouldn't have kept my speed upon jumping. From there, it's basically a straight shot to the end of the level.
	$LF
]div
[div class=p 
	"My old file actually used the skateboard at the end of the level to avoid the stairs, but since the skateboard is slower than spin-dashing, that strategy also ended up a bit slower. Rest in peace, method-of-moving-fast-that-the-developers-actually-intended.
	$LF
]div
[h4 id=Area2-17seconds 
	" Area 2 - 17 seconds
	$LF
]h4
[div class=p 
	"Remember what I said back in Downtown Area 1? How slopes work differently in every stage? Well here's an example of that! The slopes in this area, for whatever reason, do not allow you to keep your speed when going up them even if you're spin-dashing. For this reason, taking the lower path instead of going up and over the slope is actually slightly faster.
	$LF
]div
[div class=p 
	"We hold left for a few frames on that long jump that lands on the slope later in the level, which allows me to maintain my speed while not clinging onto the wall we "pass through". The slope we land on, as you can somewhat see, slows me down considerably. At the top, we stop so we can get my speed back and set up the jump across the pits. The last box is broken by the Hitbox Extension trick, which saves us from having to cut our jump short and climb up the ledge to stop ourselves so we don't run into the box, leaving us unable to dash. That was a good sentence. Only barely understandable and about 30 words too long.
	$LF
]div
[h4 id=AreaBoss-16seconds 
	" Area Boss - 16 seconds
	$LF
]h4
[div class=p 
	"There's not too much to say about this guy. The first two hits are delivered offscreen, then he throws some things and you can almost tell this game is offensively Japanese. The last hit is actually delayed: we could hit him at the peak of my jump, but the stage end animation won't actually start until we hit the ground. Delaying the last hit will start the animation immediately, saving a bit of time over the "optimal" hit.
	$LF
]div
[h3 id=Ruins 
	" Ruins
	$LF
]h3
[div class=p 
	"Or: What I'm Apparently Doing To The Forums
	$LF
]div
[h4 id=Area1-18seconds 
	" Area 1 - 18 seconds
	$LF
]h4
[div class=p 
	"This is another area where climbing up and staying up is much faster than staying low then climbing up. A fairly straightforward (yet annoying to TAS) stage that ends in a strange way: Namely, not as close to the edge of the screen as possible.
	$LF
]div
[div class=p 
	""But Samsara," you ask, and I brace myself for the upcoming stupid question, "oh wait, you were going to talk about this according to the Tricks section. Carry on." Um... Thanks. I wasn't expecting that. Oh dear. I even had a snappy comeback and everything. Let me compose myself for a moment. Okay. Done. The triple bounce strategy we use at the end of the stage doesn't go far enough over to the right to optimize the end-of-level fadeout, of course... However, it goes far enough to hit the end of the stage. There was a strategy that involved not getting that third bounce, landing, then spin-dash jumping to the edge of the stage, but that's actually 8 frames slower than this strategy. It takes a lot of time to land, skid to a stop, then start spin-dashing again: More time than we "lose" from the fadeout.
	$LF
]div
[h4 id=Area2-16seconds 
	" Area 2 - 16 seconds
	$LF
]h4
[div class=p 
	"The first and only use of the Momentum Damage Boost is here! Had this not been found, we would have had to spend about 2 more seconds with another jump/wall-kick to the right just to get up to that platform.
	$LF
]div
[h4 id=AreaBoss-20seconds 
	" Area Boss - 20 seconds
	$LF
]h4
[div class=p 
	""Luck" ""manipulation"" was required on this boss to reduce his back-and-forth pattern to 1 cycle on each hit. I air-quote those words so heavily because it's not really RNG, and we never need to wait more than 3 frames to get the pattern we want.
	$LF
]div
[div class=p 
	"It works like this: Let's say you hit the boss on the first possible frame and he does 2 back-and-forth cycles. If you hit him a frame later, he'll do 3 back-and-forth cycles. If you hit him a frame later than that, he'll do 4. And if you hit him one frame later than that, he'll only do 1. It's a pretty simple boss, and we continue to play around with the movement physics as we did on the second boss.
	$LF
]div
[h3 id=SteelFactory 
	" Steel Factory
	$LF
]h3
[div class=p 
	"I don't know, it looks pretty big... You really think I can get away with it? I mean I've got pretty deep pockets, but what am I even going to do with a factory?
	$LF
]div
[h4 id=Area1-33seconds 
	" Area 1 - 33 seconds
	$LF
]h4
[div class=p 
	"Hey, the longest stage in the run! We jump at the beginning since we would bounce off the bottom barrels otherwise, causing about 14 more frames of lag. We stop at the end of the sludge in order to get a higher jump onto that wall. Without doing this, we wouldn't be able to kick off of the top wall, losing about half a second. This tiny crawlspace is interesting, because it's possible to zip in it... But only to the right, making it useless. Also, sliding! That's something that isn't used much in this game!
	$LF
]div
[div class=p 
	"The conveyors will remove/add 1 pixel-per-frame to your spin-dash speed, so naturally we make sure to stay off of the leftward moving conveyor and maximize time spent on the right-moving one. A bit later, we actually partially clip into a wall in order to get ourselves on a sloped conveyor. Once again, this slope works differently than the ones in Downtown and Central Park! Incredibly, we can't even move on it. If we jump, we'll jump straight up and straight back down. If we try to move, we won't go any faster. If we spin-dash any earlier than we do, we'll stop in place for a moment and not go anywhere. The end of the stage has more stop-and-go spin-dashing, much like every other stage in the game. Voila!
	$LF
]div
[h4 id=Area2-19seconds 
	" Area 2 - 19 seconds
	$LF
]h4
[div class=p 
	"This is a pretty straightforward stage with a few frame-precise movements... is probably what a GDQ couch commentator would say about this stage. I particularly like the precise drop into the tiny corridor. I would treat it as fine, modern art, but modern art is trash. Take THAT, modern art! How do you like me now!? Just try to paint-a-single-stroke-of-yellow-on-a-canvas your way out of THAT one!
	$LF
]div
[div class=p 
	"What was I saying? Oh, right. This is a pretty straightforward stage with a few frame-precise movements.
	$LF
]div
[h4 id=AreaBoss-33seconds 
	" Area Boss - 33 seconds
	$LF
]h4
[div class=p 
	"Much like the previous boss, this guy has a manipulable pattern based on the frame you hit him, so we manipulate him to use his "fastest" attack for each hit. This boss is a bit weird, so I'll try to explain it the best I can.
	$LF
]div
[div class=p 
	"The boss has three attacks:
	$LF
]div
[ul 
	[li 
		" Attack One: The boss jumps slowly across the screen, pointing his spear downwards
		$LF
	]li
	[li 
		" Attack Two: The boss jumps once, flies across 3/4 of the screen, then rolls away
		$LF
	]li
	[li 
		" Attack Three: The boss rolls across the screen in ball form
		$LF
	]li
]ul
[div class=p 
	"Attack One is the second slowest attack, but it's by far the most common one. Every time you hit him, he will launch into this attack regardless of his pattern and position on-screen. Attack Three is the slowest attack, because he's completely invincible whenever he's in ball form. He'll jump once, roll off to the left, then roll back to the right before becoming vulnerable again.
	$LF
]div
[div class=p 
	"So the strategy for this battle is to manipulate him into using Attack Two, and to hit him when he's as far left as possible (while he's vulnerable, and while still manipulating him to use Attack Two on the next cycle). This gives the illusion of a suboptimal battle, since he remains vulnerable for long periods of time, but it's actually at least 10 seconds faster than how a battle might go in real time. Hitting him earlier would cause him to spend more time on-screen when he's forced into Attack One.
	$LF
]div
[div class=p 
	"We take two hits near the end: The first one is taken in order to properly hit the boss at the last possible frame to minimize the wait time until the boss is vulnerable again, and the second hit is to set up for the spin-dash so we can not only hit the boss on the first frame possible, but continue on and end as far right as possible.
	$LF
]div
[div class=p 
	"Whew, that was a rough one.
	$LF
]div
[h3 id=Disco 
	" Disco
	$LF
]h3
[div class=p 
	"FIRE IN THE... TACO BELLLLLLLL
	$LF
]div
[h4 id=Area1-21seconds 
	" Area 1 - 21 seconds
	$LF
]h4
[div class=p 
	"The Disco stages are interesting for several reasons. They look neat, they're fun to play, but most importantly why are there even discos in the mid-90s? That doesn't make sense. I mean, coke and discos usually do go together really well, but still...
	$LF
]div
[div class=p 
	"The way the Disco stages are laid out is... confusing, to say the least. There are a lot of branching paths and shortcuts and paths that lead to nowhere. There's at least one path that looks like a huge shortcut but leads straight into a spike pit. I love video games. We have to climb and start and stop a lot, so the Ledge/Stair Stop tricks are quite handy here, even if Stair Stop is only used once. It's still cool. Maybe you didn't even notice it. But your brain did.
	$LF
]div
[h4 id=Area2-26seconds 
	" Area 2 - 26 seconds
	$LF
]h4
[div class=p 
	"Maybe the largest area in the game? Not the longest, but there are a huge number of paths to take here. This is one of them. It's the fastest one! Fancy that!
	$LF
]div
[div class=p 
	"The Disco in general has a lot of moments where we do precise wall-kicks to save overall time, and the one near the end of the stage is no exception: This non-obvious shortcut saves a clean 7 seconds or so. Maybe a dirty 8, possibly a filthy 9 if you're really into that. At the very least, a flawless 6. Sorry, I was rating people on the street again. Weird how I'm writing this submission text outside in the very early morning.
	$LF
]div
[h4 id=AreaBoss-29seconds 
	" Area Boss - 29 seconds
	$LF
]h4
[div class=p 
	"This was the weirdest mixture of saving lag frames and 
	[em 
		"causing
	]em
	" lag frames I've ever encountered in a TAS. The boss was, like the previous two, manipulated into a fast pattern, but accomplishing this took a little more than just delaying hits. We intentionally lag the game for a frame or two at certain points as it does affect her next move, and only one move leads to being able to hit her while she's in the air. The playaround stuff was mostly done keeping lag management in mind: As I said, we were reducing it as much as possible then causing a couple extra lag frames here and there. Weird mix. Hopefully it's noticeable. It probably isn't.
	$LF
]div
[h3 id=TheEnding 
	" The Ending
	$LF
]h3
[div class=p 
	"Japan.
	$LF
]div
[h2 id=SierraMist-akes 
	" Sierra Mist-akes
	$LF
]h2
[div class=p 
	"Lag is a pain in this game, there's a ton of it everywhere and it's nearly impossible to avoid in certain circumstances. Doing the same things at different times can lead to a lot more (or a lot less) lag, but oftentimes saving lag frames means losing gameplay frames. They usually either balance out or lose you time in the long run. I suppose lag can be reduced, but it would take a lot of hemming and hawing, and I'm no hemmer or hawer.
	$LF
]div
[h2 id=AllBarq'sAndNoBite 
	" All Barq's And No Bite
	$LF
]h2
[div class=p 
	"Samsara: Whew, this is like my 4th serious run in the past two months. We don't count Riddle of the Sphinx. Guess it's time to step back for a while and work on something on a much larger scale... And by that I mean "submit more tiny runs while working on two super long-term projects". See you soon, workbench~
	$LF
]div
[div class=p 
	"OTHER COMMENTS COMING LATER SINCE I (SAMSARA, YOU DING DONG) WAS IMPATIENT AND SUBMITTED EARLY
	$LF
]div
[h2 id=PayingSome(Mountain)Dues 
	" Paying Some (Mountain) Dues
	$LF
]h2
[ul 
	[li 
		" Samsara: I would like to thank the 
		[a class=extlink href=https://www.youtube.com/watch?v=_7elAKwPqZI rel=nofollow 
			"Men Drinkin' Coffee
		]a
		" for introducing me to this game in the first place. Despite not liking coffee (or men), watching that video made me realize that this game had mad TAS potential.
		$LF
	]li
]ul
[h2 id=Screen-spriteSuggestions 
	" Screen-sprite Suggestions
	$LF
]h2
[div class=p 
	"Frame 13070:
	$LF
]div
[div class=p 
	[img class=embed src=https://dl.dropboxusercontent.com/u/10529315/CCK13070.png 
	]img
	$LF
]div
[div class=p 
	"Frame 17815:
	$LF
]div
[div class=p 
	[img class=embed src=https://dl.dropboxusercontent.com/u/10529315/CCK17815.png 
	]img
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/Mothrayas 
		"Mothrayas
	]a
	": Judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Mothrayas 
		"Mothrayas
	]a
	": Pretty nice and fast-paced run overall. Good audience response. Accepting for Moons.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/fsvgm777 
		"fsvgm777
	]a
	": Processing coke.
]div
