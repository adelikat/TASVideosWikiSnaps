9
[h2 id=Arkiandruski'snotes 
	"arkiandruski's notes 
	$LF
]h2
[h3 id=Intro 
	"Intro
	$LF
]h3
[div class=p 
	"Aero the Acrobat 2 is shockingly the sequel to Aero the Acrobat. This game abandons the quest-based gameplay of the first game and instead goes for straight platformer levels. They also added a few new moves to Aero's arsenal. 
	$LF
]div
[div class=p 
	"According to the story, after Aero defeated Ektor the evil industrialist clown in the previous game, he decides to wander around Ektor's evil museum. Meanwhile Zero the Kamikaze squirrel rescues Ektor using his flying machine. While wandering the museum, Aero happens across a strange portal, which pulls him toward a far away past. Turns out the portal was a trap set by Ektor.
	$LF
]div
[div class=p 
	"The game was released for both SNES and Genesis. I used the Genesis version because that was my console. Based off my research, the SNES and Genesis versions are pretty similar. From what I can tell, the SNES version is more broken and it has way worse music, but a lot of the gameplay is pretty much the same. 
	$LF
]div
[h4 id=Thisrun: 
	" This run:
	$LF
]h4
[ul 
	[li 
		"aims for fastest time
		$LF
	]li
	[li 
		"abuses programming errors in the game
		$LF
	]li
	[li 
		"takes damage to save time
		$LF
	]li
	[li 
		"uses death to save time
		$LF
	]li
	[li 
		"Bizhawk 2.2.2
		$LF
	]li
	[li 
		"Uses six button controllers
		$LF
	]li
]ul
[div class=p 
	"The run was started when Bizhawk 2.2.2 was the latest version of the emulator, so I continued with that. It was started by me, then Exonym joined a little later. Exonym was the main trick and glitch finder of the run, and demonstrated a great understanding for how to completely break the game. 
	$LF
]div
[h4 id=Extraresources 
	" Extra resources
	$LF
]h4
[div class=p 
	"There are also a few things I would like to provide which aren't really necessary for enjoyment of the run, but may be interesting for people who want to do some deep digging into the making of this run. First off 
	[a class=intlink href=/Userfiles/Info/48108770145875170 
		"a list of RAM values used during the run
	]a
	", mostly centered around Aero's movement speed and position. The second is a subtitle commentary included in the moviefile, which features talk about certain level specific mechanics and intentional misinterpretation of the game's plot. The last thing I'd like to provide, like with 
	[a class=intlink href=/5970S 
		"my previous submission
	]a
	" is 
	[a class=extlink href=https://drive.google.com/file/d/1mmLAKIqfQmfkWeBSqYlBVKtyM_gFvfTQ/view?usp=sharing rel=nofollow 
		"The TAStudio project I was working on while making this run
	]a
	". Unlike the previous submission, though, that file is not made specifically for viewing, but rather consists of a bunch of branches I never bothered to delete, but if anyone wants to look into the history of how this run developed and see a few of the things we tried that were slower or didn't work, it might be interesting. 
	$LF
]div
[h4 id=Courtesyencode,providedbyEZGames69: 
	" Courtesy encode, provided by EZGames69:
	$LF
]h4
[div class=p 
	(youtube|v=rfaF3lUsW6c)
	$LF
]div
[h3 id=Generalgamemechanics 
	"General game mechanics
	$LF
]h3
[h4 id=Levelsandlag 
	" Levels and lag
	$LF
]h4
[div class=p 
	"One of the good things about this game, at least from a TASing perspective is that most RAM values are reset to 0 between levels. This means that each level starts in the same state no matter what frame they start on, which means the game is decently hex friendly. The only exception to that is when lag happens on a frame where we decided to jump in a previous level. Most of the time that can be fixed by moving the input a frame to either side, though. 
	$LF
]div
[div class=p 
	"Speaking of lag, the only thing that lag frames do is have a frame where the game won't accept input. The game continues to move forward on lag frames, so as long as we don't have to press a button on that specific frame, lag frames do not waste time at all. Lag gets more frequent as the game gets into later levels. It also seems to me like lag frames happen more often as we beat levels faster, so the extra lag might be from the system struggling to keep up with all the level loading that happens in the run. Annoyingly, that means that the last level of the game is the most prone to desyncs, with second place being Boardin' Zone for some reason.
	$LF
]div
[h4 id=Movementmechanics 
	" Movement mechanics
	$LF
]h4
[div class=p 
	"One thing I like about this game personally is that Aero has a decent list of moves and movement options that combine in really complicated ways, which means that a lot of testing is needed to figure out the best way to get from point A to point B. It was Aero's movement that attracted me to make a run for this game in the first place. As the run went on, we found ways to skip more gameplay and just get to the end of levels, though, so sometime in the distant future, I would like to do a run that showcases more of Aero navigating obstacles in unique and interesting ways. 
	$LF
]div
[div class=p 
	"First, let's talk about acceleration. Like Bubsy, Aero has a very high max velocity, but takes a while to get there, so, like Sonic, a lot of movement is based around getting and maintaining momentum. Aero only picks up speed when in contact with the ground, but once he reaches a certain speed, he can jump without slowing down. Like Sonic 2, though, Aero does have a way to get to higher speeds more quickly. Unlike Sonic 2, though it doesn't immediately pop him up to max speed, so he still has to accelerate past that. That move is the drill, which also serves as Aero's attack. The move is set at a constant speed around half of Aero's max and moves in a diagonal direction either up or down. Add that all together, and the best way to build up speed from a stop is to drill into the ground and then run until you've achieved max speed. If you have to jump, try to wait until the last second possible. That also means if you're faster than a certain speed, you want to avoid drilling when possible (it often isn't). One more thing the drill can be used for is to get extra height for your jump, or to make sure that your jump apex is exactly at the height you want. (Aero's jump height is fixed. He will jump the same height no matter how long you hold the jump button)
	$LF
]div
[div class=p 
	"Hitboxes in the game for the enemies and damaging objects tend to be larger than they look on screen. Enemies add an extra annoyance, since they tend to have behaviors that require you to deal with them rather than just bypassing them. Enemy behavior can be affected, though. It mostly involves jumping on the right frame (which is preferred because that usually makes no difference in speed) or slightly altering when they spawn (which is a small time sacrifice, but often worth it). 
	$LF
]div
[div class=p 
	"There are two ways to deal damage to enemies. One is to use your drill attack. The other is to shoot a star at them. If you want to maintain speed, the star is the best choice. On the ground, it'll slow Aero down, but in the air, it has no effect on his velocity. There are two downsides to the star. The first is that they are often not on the main path and involve going out of the way to grab. The second is that Aero is actually able to travel faster than them, so sometimes you have to shoot from right next to an enemy in order to hit them before Aero reaches them. 
	$LF
]div
[div class=p 
	"As I said, the drill will automatically slow you down to about half Aero's max speed. On top of that, Aero will bounce off enemies he hits. With some enemies, he'll be able to drill again immediately after hitting them, so you'll barely even notice it happened. For others, usually enemies that take more than two hits to kill (most bosses, for example, but there are enemies in level that are like this as well), the player will lose control of Aero until he hits the ground. This means that, at least for now, the dream of bouncing continually off bosses to kill them quickly is not a reality (there's other reasons why it doesn't work as well).
	$LF
]div
[div class=p 
	"Usually in this run, attacking enemies is not used to kill them or to get them out of the way, but to take advantage of the bounce that happens when Aero attacks them, which can be used to gain extra height on his jump and gain new maneuverability options. 
	$LF
]div
[div class=p 
	"Another move that's used in the run, but only when it has to be moved is the slide. The slide is done by pressing C when Aero is running. It slows him down and you can't do anything else until Aero's speed has reached 0 and he gets up from the slide. It's only use is for getting under low walls, which the game puts in specifically so that the slide move will have an actual use. Moving on.
	$LF
]div
[h4 id=Environmentdependantmovement 
	" Environment dependant movement
	$LF
]h4
[div class=p 
	"Slides have a lot of cool mechanics to them which can't be used that much because they often aren't placed in locations where you can take advantage of those mechanics. The slide accelerates Aero faster than running, so if you can manage to land on one when you're going less than max speed, you'll get a great acceleration boost. If you drill while close to a slide, Aero will land on it quickly at drill speed, which means that you can start accelerating from that speed. If you jump on a slide from the bottom while running at max speed, you will maintain that speed on the slide going up it. Don't even have to press directions to keep it going. Jumping while going up a slide at max speed will cause Aero to go through it.
	$LF
]div
[div class=p 
	"Ladders behave like in most games. You press up to grab them, then you can jump up them to travel up quickly. The game tries to force you into the climbing animation at the top, but if you move enough to the side, you can basically ignore it.
	$LF
]div
[h4 id=TheDownDrill 
	" The Down Drill
	$LF
]h4
[div class=p 
	"This gets it's own section because it's the move that broke the game. The down drill is done by pressing C in the air. The main important property of this move is that it stops momentum completely on the frame that it starts, which is useful if you want to end up in a very specific horizontal position without slowing down first. As such, it's often the quickest way to stop on a dime, or more importantly, partially within a wall. 
	$LF
]div
[div class=p 
	"Once you've gotten Aero slightly embedded in a wall, there's a few things you can do, for one, if you jump while inside a wall, Aero will land on it higher up. If you're frame perfect, you can jump from there as well, and if the wall is to Aero's right (but not if it's to his left) you can chain these jumps together into an infinite wall-jump. It's pretty cool, and sees almost no use in this run. 
	$LF
]div
[div class=p 
	"What we actually do with walls is use them to go through floors and ceilings. If you're far enough into a wall (and the distance needs to be almost perfect. The range is less than 100 subpixels) trying to drill into it will cause Aero to sink slightly further into it. After that, the game doesn't know which way to send you, so it uses the direction of the drill to say "Let's not go in that direction." Thus the wall will push back against Aero in the opposite direction of the drill until he finds a place that's in bounds again. The reason down drills are often preferred for getting into this position, especially when approaching walls from above, is because it's easy and quick to use midair shenanigans to get the the exact right subpixel for a zip. 
	$LF
]div
[div class=p 
	"But there's one more thing that down drills allow. If you press left or right and C on the same frame, Aero will move 70 subpixels in that direction. What's great about that is this movement ignores collision detection. So you can go up next to a wall and drill over and over to slowly move yourself inside. It takes around 3 or 4 drills to move yourself one pixel horizontally. After doing this enough, you will be deep enough into the wall that you can trigger that zip from the previous paragraph. You can help yourself out by running toward a wall and drilling on a frame when Aero is inside it, but the game hasn't realized it yet. That'll stop the game from pushing you out. of the wall.
	$LF
]div
[div class=p 
	"Since the levels in this game tend to be very windy and not a straight trek from left to right, there are quite a few places where you can cut corners. This is the main goal of many levels in this run in general. 
	$LF
]div
[div class=p 
	"With all that in mind, let's talk about some levels, huh?
	$LF
]div
[h3 id=Levelsummaries 
	"Level summaries
	$LF
]h3
[div class=p 
	"Broken down by world, since levels in each world tend to behave similar to each other.
	$LF
]div
[h4 id=BellCastle. 
	" Bell Castle.
	$LF
]h4
[div class=p 
	"These levels are generic platformers without much in the way of gimmicks. The walls here are mostly straight up and down, which helps make zips a little easier. In Fort Redstar, where the walls have pockets, you have to first go as deep into the wall as possible before starting a zip or else, one of the pockets will catch Aero before the zip becomes useful. When looking at maps, we noticed that the exit of Bell Castle 3 was right there near the entrance. To make it even more enticing, there's a secret area that extends out even closer to the entrance. After we got a little bit of a better understanding for zips, this is one of the first places we found to use it. The actual first place found was the barrel in Dis Industries. 
	$LF
]div
[h4 id=Boardin'Zone 
	" Boardin' Zone
	$LF
]h4
[div class=p 
	"I find these levels incredibly boring. What makes them worse is that there's a lot of things you can do to raise and lower your speed, so just holding right and coasting through them was not an option.
	$LF
]div
[div class=p 
	"While Aero is on the ground and holding right, your speed shuffles between the base speed of the ground and a speed that's one pixel per frame faster. When he jumps, the speed is constant at the base speed of the ground you jumped off of. The base speeds of different surfaces are:
	$LF
]div
[div class=p 
	"Steep uphill: 2
	$LF
	"Uphill: 3
	$LF
	"Flat ground: 5
	$LF
	"Downhill: 6
	$LF
	"Steep downhill: 7
	$LF
]div
[div class=p 
	"Based on all that, if you are just on flat ground, then you want to minimize time in the air. If you press C in the air, Aero's speed will pop up to a higher speed for one frame before returning to the previous speed. However, if you do that, he'll also stay in the air for longer. I tested this, and on flat ground, it's pretty much equal in terms of how fast you go in the long run whether you press C in the air or not. What pressing C does do, however, is give the player more control over where Aero lands. Another quirk of the C button is you don't want to press C in the air until Aero has reached the max speed of his jump because the C button will set the speed for the rest of the jump to whatever speed Aero was going when you pressed it. 
	$LF
]div
[div class=p 
	"Another consideration that you have to keep in mind is that acceleration (both speeding up and slowing down) is fast in the air and slow on the ground. That means if you jump on any surface, Aero will quickly go to the speed of that surface. When jumping uphill, his speed will slow to a crawl almost instantaneously, rather than slowly ticking down like it would if you were to just stay on the ground while going up. 
	$LF
]div
[div class=p 
	"You might notice that in the actual run we're jumping up hills and not slowing down at all. That's because if you land on a hill exactly right, you can trick the game into thinking that you're not on a hill. It's incredibly finicky for when this happens, though. A lot of our Boardin' Zone set up was making sure we landed on hills in this way.
	$LF
]div
[div class=p 
	"Ramps and cliffs and certain other surfaces will carry over the speed of the previous jump. If you jump off a downhill slope onto a ramp, your speed off the ramp will be 6. If you jump off a steep downhill slope onto a ramp, it'll be 7. This is useful in extending downhill slope speed past the slope.
	$LF
]div
[div class=p 
	"(Exonym's notes for Boardin Zone): There is also a speed boost that wasn't found until the run was almost done. This occurs on any cliffs that have an automatic jump mechanic built into them. If you jump on the right frame and press c immediately, the special move sticks you back to the ground instantly (similar to pressing a drill while near a switch platform and such). Since it sticks you back down to it you get launched for a second time and this boosts your speed for a few frames, even faster than you're able to get from any of the other slopes. The speed incrementation is this (the larger number is the subpixel speed value): 8+2262, 8+2227, 8+2192, 8+2157, 10+2652, 10+2617, 10+2582, 9+2547, 9+2512, 9+2477, 9+2442, 9+2407, 9+2372, 9+2337, 8+2302, 8+2267, 8+2232, 8+2197, 8+2162, 8+2127, 8+2092, 8+2057, 7+2022... etc This goes until it drops to 6+1777. This is opposed to jumping off one of the ramps which we can't even reach a speed of 7 from. When comparing the two, these special cliffs are almost always beneficial because of that huge speed boost.
	$LF
]div
[h4 id=FortRedstar 
	" Fort Redstar
	$LF
]h4
[div class=p 
	"The gimmick for these levels is destructable walls: Walls you have to explode or drill to pass through. The main feature of this level, though that affects us is that the walls are not flat. You can actually climb up them without glitches if you want. Sometimes this works out in our favor, like when a zippable portion of wall is sticking out over a platform where we can jump to reach it. Other times it makes things harder, like when a section of wall we need to drill into requires us to fit Aero inside a hole that's half his size. 
	$LF
]div
[div class=p 
	"This is also the place where the first clip glitch of the run was found. When Aero does a drill attack, the game looks at his speed and extends his hitbox out in front of him based on that speed to see if it'll run into anything. It does this for one frame before snapping back to Aero. Some platforms are skinny enough that the drill hitbox can reach through them and doesn't detect them, which allows Aero to pop through. By the way, when he down drills, his hitbox gets really wide and drops below him.
	$LF
]div
[h4 id=BaronBoris 
	" Baron Boris
	$LF
]h4
[div class=p 
	"Most bosses are only vulnerable when they are trying to damage Aero by throwing themselves into him. Also, they tend to have invulnerability after taking damage, though they do not give any indication of when it ends, so you just have to try random frames until you can narrow down when they actually become vulnerable again.
	$LF
]div
[h4 id=DiscoFever 
	" Disco Fever
	$LF
]h4
[div class=p 
	"The gimmick for this level is the keyboards at the end. You basically have to play a game of Simon Says to get the exit portal to appear. 
	$LF
]div
[div class=p 
	"The french horns on this stage actually have two walls. One extends to the ground and allows for a zip, the other stops in midair and will throw you out if you land on it. This made finding the right value for french horn zips a little more difficult than on other walls.
	$LF
]div
[div class=p 
	"The enemies in groups of three are just wide enough that you can't jump over them without drilling. The metronomes also tend to prevent you from just jumping over.
	$LF
]div
[div class=p 
	"Also, we both find it annoying that every single french horn in these levels blasts you straight into a wall, killing your momentum.
	$LF
]div
[h4 id=DisIndustries 
	" Dis Industries
	$LF
]h4
[div class=p 
	"The gimmick for these levels is the boss battle at the end. Dr. Dis pilots a machine to destroy Aero that's invulnerable until it stops moving and attacks. Usually you can hit it three times each attack cycle. It doesn't seem to have the damage invulnerability that other bosses have. You still have to wait until you land between attacks, though. If you take damage before attacking, it allows you to ignore the damage barrier. This in turn let's you have your first attack be just a little earlier, which barely, just barely, I mean the timing is incredibly tight, gives you just enough time to get four attacks into one cycle.
	$LF
]div
[div class=p 
	"The boss room is in the lower right hand corner of each map and in normal play you have to teleport to it. We found that the exit portal is in the boss room all the time, it's just deactivated when you teleport in. When you teleport, Aero is put in the center of the room, which despawns the teleporter and initiates the boss fight. If you happen to enter the left of the room and run to the right without going into the exit, it will despawn as well.
	$LF
]div
[h4 id=AlterAero 
	" Alter Aero
	$LF
]h4
[div class=p 
	"Mostly the same as Boris. By the way, all boss patterns are set. You're going to get the same series of attacks every time you go against a specific boss.
	$LF
]div
[h4 id=Performer'sDungeon 
	" Performer's Dungeon
	$LF
]h4
[div class=p 
	"The gimmick of these levels is that passageways are closed off until you hit a lever to open them. The walls that close them off are incredibly thick and very solid as well. We don't like needless backtracking,  though, so most of the time, we just tried to skip to the last bit. 
	$LF
]div
[h4 id=Ektor'sEngine 
	" Ektor's Engine
	$LF
]h4
[div class=p 
	"The final level of the game happens to be the only autoscroller in the entire game as well. There's not much you can do to speed this level up, so in a TAS setting you all know what that means. Dicking around. 
	$LF
]div
[h3 id=FinalThoughts 
	"Final Thoughts
	$LF
]h3
[div class=p 
	"That's about it from me. I decided to include all this information, even information of questionable relevancy to make sure that it was all there for anyone in the future to see, so that if anyone does try to beat this movie, or to make another movie of this game in another category (zipless is in the plans, but I need to get away from this game for a while, so I invite anyone out there to beat me to it), they can at least start from where we ended. 
	$LF
]div
[div class=p 
	"I'd like to thank Exonym helping me out on this movie and eventually becoming my partner in making this run. He was completely dedicated to breaking this game in any way possible and trying to get the shortest, most optimized movie out that we could make.
	$LF
]div
[div class=p 
	"Special thanks to r57shell, who provided maps for us to use, which we went over extensively when planning out routes and strategies for the different levels.
	$LF
]div
[div class=p 
	"With that, I believe I'm done. Thanks for watching, and I hope you enjoy. 
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": Judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": The efforts that have been put in the making of this movie resulted in beating the game very fast, as well as showing interesting quirks of the game. The informations provided in the submission text and the movie subtitles allow to appreciate even more the work behind this movie.
	$LF
]div
[div class=p 
	"The tricks and glitches were entertaining, as well as the game itself in general, thanks to the nice graphics and music. The playarounds executed during the train level helped a lot for keeping the pace. The audience response was also very welcoming.
	$LF
]div
[div class=p 
	"With all that said, accepting this movie for Moons.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Pub.
]div
