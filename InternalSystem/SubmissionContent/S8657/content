6
[div class=p 
	"My favorite part was when Gorf said "it's Gorfin' time" and Gorfed all over those guys. (Time ends when the parser says it does, minus one last vestigial non-input frame that BizHawk seemingly forces to be in the input file)
	$LF
]div
[pre 
	$LF
]pre
[h3 id=GameObjectives 
	" Game objectives
	$LF
]h3
[ul 
	[li 
		" Reach and complete the game's maximum rank/difficulty of "Space Avenger" at 6 cycles, playing through all unique stage variations (as quickly as possible, of course).
		$LF
	]li
	[li 
		" Force the judges and encoders to deal with jank in what should be an ordinary BizHawk movie
		$LF
	]li
]ul
[h3 id=EncodingPlaybackInstructions 
	" Encoding/Playback Instructions
	$LF
]h3
[ul 
	[li 
		" You need the following files:
		$LF
		[ul 
			[li 
				" GORF.ZIP - ignore the 'imperfect emulation' warning, that's because of alleged inaccuracy with the Votrax speech synthesizer, but the game plays totally fine
				$LF
			]li
			[li 
				" VOTRAX.ZIP - 
				[em 
					"Not
				]em
				" VOTRSC01.ZIP as used in the current standalone MAME version's romset as of 0.255 and above.
				$LF
			]li
			[li 
				" 
				[a href=https://tasvideos.org/UserFiles/Info/638319890943217926 rel=noopener external nofollow 
					"This modified MAME layout file
				]a
				", renamed to 'gorf.lay' and added to GORF.ZIP. While this doesn't affect sync, it prevents unnecessary margin and lamp overlay elements from being displayed, which are corrupted in BizHawk anyways and aren't part of the game's pure native video output. Also, any tasproj files made with one layout or the other will crash when attempting to load in the other modified/unmodified version of the ROM, which is annoying.
				$LF
			]li
			[li 
				" Finally, make sure to load up both GORF.ZIP and VOTRAX.ZIP with the multi-disk bundler, or BizHawk will choke and not know what to do with the ROM.
				$LF
			]li
		]ul
	]li
]ul
[h3 id=Comments 
	" Comments
	$LF
]h3
[div class=p 
	"This version of the game is way longer than nymx's 
	(__wikiLink|displaytext=movie|href=/8358S)
	" for C64 Gorf, which can be largely chalked up to slower movement speed, larger distances to cover, way less forgiving enemy behavior, longer stage transitions, and home ports' omission of the original Arcade version's Galaxians stage. In other words, basically everything about this particular version is harder than home ports, and there's also the fact that literally nobody speedruns this version of the game; the only TAS is for nymx's aforementioned C64 recording, and RTA speedrunners apparently use the Colecovision version of the game. As such, I'll go on a stage-by-stage basis to go over the broad differences and complications for this particular run.
	$LF
]div
[div class=p 
	"Also, as another note, the rerecord count is complete BS, as I spent most of my time scrubbing the TAStudio piano roll; as such, mentally multiply that number by 20 or more to get a more accurate picture.
	$LF
]div
[h3 id=StageByStageComments 
	" Stage by stage comments
	$LF
]h3
[h4 id=Stage1AstroBattles 
	" Stage 1: Astro Battles
	$LF
]h4
[div class=p 
	"The Space Invaders clone. A common theme throughout this run is that, since only one shot can be present on screen at all times, I have some leeway; so long as I always have a shot on screen and making its way to an enemy, I'm not losing much (if any) time. Additionally, I also move upwards as much as possible at the start of each stage to reduce the distance between myself and the enemies as much as possible. In the first cycle of Astro Blasters I was unable to immediately shoot the last ship remaining regardless of (efficient) route taken, so I just made sure to shoot all of the other ships as quickly as possible so that the last survivor would come back around as quickly as possible. Another additional quirk is that due to the limit on horizontal movement, it is literally impossible to shoot the leftmost or rightmost column of Space Invaders immediately, hence the comparitively less neat pattern taken in general compared to nymx's C64 run.
	$LF
]div
[h4 id=Stage2LaserAttack 
	" Stage 2: Laser Attack
	$LF
]h4
[div class=p 
	"In nymx's C64 run, he was able to simply obliterate the enemy formations by abusing the ability to manipulate their AI to predictably all dive down in formation. I wasn't so fortunate, however, as enemy ships in the Arcade version of Laser Attack simply don't 
	[em 
		"do
	]em
	" that, always peeling off individually. This is in addition to the vertical movement limit making it impossible to get as close to the enemies as nymx did, on top of the already poor movement speed to distance ratio. This is further hurt by the fact that the enemy front ships will 
	[em 
		"always
	]em
	" immediately fire off lasers, walling off both sides of the stage immediately to start the level. As such, I simply took the route that was the fastest and avoided any blatant delays, and with the help of perfect aim and prediction was able to make pretty good time despite all the aforementioned difficulties.
	$LF
]div
[h4 id=Stage3Galaxians 
	" Stage 3: Galaxians
	$LF
]h4
[div class=p 
	"The stage omitted from home ports due to copyright reasons, and the most complex and difficult stage(s) of this run just in general. While movement is somewhat less troubled due to the lack of laser walls, this is made up for with much more wily and speedy enemy maneuvers, a punishing lack of player mobility making it downright impossible to dodge amidst/through hails of enemy bullets (unlike most TAS recordings of schmup games), and a hellacious amount of lag in later cycles. However, the overall strategy was still broadly the same as Laser Attacks, just at a grander scale, and with a heavy emphasis on neatly destroying enemies column-by-column OR row-by-row in order to avoid having to navigate large gaps when cleaning up stragglers at the end of a given stage. There was only ONE instance where I was able to dodge 
	[em 
		"between
	]em
	" a large group of enemy bullets as opposed to around, as the lack of responsive and precise movement makes it literally impossible to do in 99% of situations, especially given how enemy bullets have a tendency to group VERY tightly together.
	$LF
]div
[h4 id=Stage4SpaceWarp 
	" Stage 4: Space Warp
	$LF
]h4
[div class=p 
	"A bland, elementary exercise in prediction & RNG manipulation. Amusing from a technical standpoint and utterly humanly impossible, sure, but really, REALLY ——ing boring to watch and to record. Moving immediately on.
	$LF
]div
[h4 id=Stage5FlagShip 
	" Stage 5: Flag Ship
	$LF
]h4
[div class=p 
	"Way more interesting than Space Warp, but only by comparison, and still pretty rote. The basic strategy is to fire 4 precise shots, breaking the forcefield, a tiny pixel off the outer hull of the flagship, another bit of forcefield, and then the PRECISE spot you already hit in order to just barely clip the core of the flagship, moving carefully right and upward as you go along in order to intercept the trajectory of the flagship. Uniquely to Cycle 4 (Mission 20), I was actually able to one-shot the flagship; however, I was TOTALLY UNABLE to replicate this in ANY other cycle, so I'm considering this a Cycle 4 exclusive trick, likely related to the speed that the flagship moves in that particular difficulty cycle. The way this stage works also means that it incorporates two layers of bruteforcing, as if you get the first set of shots incorrect, then you will be totally unable to kill the flagship with your second set of shots no matter how many permutations you try.
	$LF
]div
[h3 id=PossibleImprovements 
	" Possible Improvements
	$LF
]h3
[div class=p 
	"They exist in theory, of course; primarily theoretical better RNG rolls, which are really a given when it comes to TASing this sort of game, although mitigated by the rate-of-fire throttling how fast you can theoretically complete 
	[em 
		"any
	]em
	" given level. Barring that, the only two major possible improvements that come to mind are in an improved Stage 1 that manages to shoot the last Space Invader sooner, and in being able to replicate Cycle 4's one-shot against the flagship in all Flag Ship stages; however, both of those are possibilities that I have already tried and was unable to make work, so I'm pretty confident in assessing that there are no trivial improvements or fixable mistakes in the recording as it stands, thus fulfilling the optimization requirement.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/nymx 
		"nymx
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/nymx 
		"nymx
	]a
	": I'm dropping this, because I don't think I can be fair enough to judge on the basis of optimization....as I have been personally working with this game for close to 9 months. It is not easy to optimize this and I've already identified areas that don't look right.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Rejecting for optimization problems as 
	(__wikiLink|displaytext=described here|href=/Forum/Posts/526368)
	".
]div
