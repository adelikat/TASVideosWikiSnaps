23
[h2 id=EmulatorSyncSettings 
	" Emulator/Sync Settings
	$LF
]h2
[ul 
	[li 
		" Environment: Ubuntu 20.04 LTS x64, kernel Linux 5.4.0-77-generic
		$LF
	]li
	[li 
		" Emulator Used: LibTAS 1.4.2
		$LF
	]li
	[li 
		" Version used: Linux 1.15 (latest), 64-bit, DRM Steam
		$LF
	]li
	[li 
		" LibTAS Options: Virtual Steam Client
		$LF
	]li
]ul
[h2 id=GameObjectives 
	" Game Objectives
	$LF
]h2
[ul 
	[li 
		" Complete the main story as fast as possible
		$LF
	]li
	[li 
		" Contains speed/entertainment tradeoffs
		$LF
	]li
	[li 
		" Heavy luck manipulation
		$LF
	]li
	[li 
		" Takes damage to save time
		$LF
	]li
	[li 
		" Forgoes major skip glitch
		$LF
	]li
	[li 
		" Genre: Action
		$LF
	]li
	[li 
		" Genre: Adventure
		$LF
	]li
	[li 
		" Genre: Platform
		$LF
	]li
]ul
[h2 id=GameOverview 
	" Game Overview
	$LF
]h2
[div class=p 
	"Iconoclasts is an exploration platformer game developed by Swedish developer Joakim "konjak" Sandberg and released in 2018 for PC, PS Vita and PS4, with ports to Switch and Xbox One coming on later dates. The game follows Robin, a helpful and naive mechanic using her skills to help others as she becomes wanted by government agents for doing so. Following the usual "Metroidvania" formula, the player obtains upgrades and abilities as the game progresses, and they help both defeating enemies and solving puzzles to progress.
	$LF
]div
[h2 id=CategoryChoice 
	" Category Choice
	$LF
]h2
[div class=p 
	"Iconoclasts has a major glitch known as Airswimming. Robin only transitions in and out of her swimming state by hitting the surface of a water body, so by using out of bounds exploits, we can move Robin out of the water without actually breaching the surface. This allows the player to retain her swimming state in midair and skip huge portions of the game.
	$LF
]div
[div class=p 
	"This movie abides by the rules of the RTA any% “No Airswim” category, completing the game as fast as possible without making use of the Airswim glitch. This is done for two reasons:
	$LF
]div
[ul 
	[li 
		[b 
			"Eligibility
		]b
		" - The major sequence breaks involved in the RTA Airswim route end up skipping a flag needed to trigger the end credits. Without this flag, the game softlocks in a cutscene just before the credits can be reached, making the route potentially ineligible for a TASVideos submission.
		$LF
	]li
	[li 
		[b 
			"Entertainment
		]b
		" - The RTA Airswim route mostly involves airswimming out of bounds. A “No Airswim” movie allows us to showcase the plethora of interesting skips and tricks in the game, its diverse movement mechanics, and the strategies used for boss battles.
		$LF
	]li
]ul
[div class=p 
	"The game offers 3 difficulty modes out of the gate: Relaxed, Standard and Harder. Relaxed is intended as a very accessible difficulty, and it grants the player full invulnerability to damage by any source other than getting crushed. Harder increases the damage most enemies deal, adds some new enemies to the level layouts and replaces some with tougher variants, and modifies Boss AI compared to Standard. An additional difficulty, Challenge Mode, is unlocked upon beating the game which extends the difficulty of Harder by causing any source of damage to immediately kill your character. This run is performed on Standard Difficulty.
	$LF
]div
[h2 id=MechanicsAndTricks 
	" Mechanics and Tricks
	$LF
]h2
[h3 id=Tweaks 
	" Tweaks
	$LF
]h3
[div class=p 
	"During the game, the player can collect Materials and Schematics by exploring specific locations or solving puzzles. Then, by using the recipes from the Schematics and the right materials, Tweaks can be crafted. These Tweaks can be equipped to offer modifications to gameplay. Tweaks are equipped in one of 3 slots available, and taking any damage will disable the rightmost enabled Tweak slot and any Tweak equipped in said slot. Conversely, killing enemies or solving puzzles will recover energy for disabled Tweak slots (visually represented by small square particles that fly towards Robin).
	$LF
]div
[div class=p 
	"This run collects the materials needed for two Tweaks:
	$LF
]div
[ol 
	[li 
		[b 
			"Fleet Foot
		]b
		" - increases Robin’s maximum running speed cap by 50 units/frame.
		$LF
	]li
	[li 
		[b 
			"Dodger
		]b
		" - allows Robin to perform a dodge roll by pressing Wrench+Down (or Crouch). This move gives her a significant burst of forward speed.
		$LF
	]li
]ol
[div class=p 
	"The extra movement options provided by these two Tweaks are core to many skips throughout the run.
	$LF
]div
[h3 id=Movement 
	"Movement
	$LF
]h3
[div class=p 
	"Robin has a running speed cap of 470 units per frame (increased by 50 per every equipped Fleet Foot). The cap applies both on the ground and in the air, but the game only enforces it when Robin is accelerating: If her speed is directly set to a value higher than the cap, she keeps that speed until she decelerates or stops moving in that direction. Several tricks exist to obtain higher-than-normal speed:
	$LF
]div
[h4 id=GunBoosting 
	" Gun Boosting
	$LF
]h4
[div class=p 
	"Whenever Robin releases a charged shot from her gun, she receives recoil of 600 units/frame in the opposite direction of her shot. By quickly turning, we can carry this momentum and conserve the speed of 600. This can be used vertically as an extra jump or as a fastfall (which is handled as a special case and grants 1600 speed, matching Robin’s max falling speed), as well as horizontally as a boost. 
	$LF
]div
[div class=p 
	"It’s worth noting that the recoil direction is determined based on the held directional inputs on the frame the shoot button is released, while the direction the shot is released in depends on the direction input in the last frame the shoot button was held at. This allows us to redirect recoil into any direction independently of the direction the shot is aimed towards. We commonly refer to this as a fuck up shot.
	$LF
]div
[div class=p 
	"As an aside, the game has a specific set of rules to determine shooting direction and recoil direction, based on which directions are being held in the respective frames. If there’s no input given, or if Left+Right or Up+Down are being input, the game will default to the opposite direction of Robin’s facing direction. The game also prioritizes Up/Down over Left/Right (so, for example, Left+Down results in a shot downwards and upwards recoil).
	$LF
]div
[h4 id=SlopeBoosting 
	" Slope Boosting
	$LF
]h4
[div class=p 
	"Robin can perform a stomp move by inputting Jump+Down while in midair. After 14 frames, she will plummet down to the ground. This action, as any action that grants instant max falling speed, can be canceled by swinging the wrench. We use this action to break certain blocks and kill enemies.
	$LF
]div
[div class=p 
	"If Robin lands on the ground while stomping, she will strike a pose on landing. However, if she lands on a steep slope, she will instead start sliding down the slope. We can cancel this slide by jumping out of it. If we only press Jump for one frame, Robin will transition into her running animation, and holding the Jump button for any longer will cause her to jump instead. Both preserve the sliding speed for a total of 700 units/frame, being the fastest speed that can be preserved long term.
	$LF
]div
[h4 id=FastCrawling 
	" Fast Crawling
	$LF
]h4
[div class=p 
	"Robin has the ability to crawl, which she does automatically when entering any space too short for her to walk through. Her max crawling speed is substantially lower than her regular running speed. We can circumvent this issue by gun boosting once crawling, but there is another technique we can use instead: If Robin jumps during the first frame of her crawling animation when entering a crawl space, she will jump into it and transition into crawling while keeping her regular running speed cap.
	$LF
]div
[h4 id=LedgeJumpCancelling 
	" Ledge Jump Cancelling
	$LF
]h4
[div class=p 
	"Robin can grab a ledge if she runs into one while falling (having vertical speed greater than 0). Once she’s holding on to a ledge, she can drop off by pressing down, climb onto it by pressing up or the direction into the ledge, or jump away from the ledge by jumping+pressing the direction away from the ledge. Jumping out of a ledge gives Robin a speed of 500 in the direction she jumps towards.
	$LF
]div
[div class=p 
	"During her ledge jump and as long as she is ascending, the player cannot control Robin’s horizontal speed. However, we can cancel the ledge jump animation by either using the Wrench or pressing the Shoot button. This can be done even if the player cannot currently shoot due to the gun being on cooldown or the gun not even being equipped. Using the shoot is prefered since we can control Robin’s movement during her shooting animation, allowing us to quickly turn around and move into the ledge and on ground. This is only slightly faster than climbing the ledge, but has the benefit of making it into the ledge already having horizontal speed into our desired movement direction.  
	$LF
]div
[h4 id=DamageBoostingCrouchCancelling 
	" Damage Boosting/Crouch Cancelling
	$LF
]h4
[div class=p 
	"Robin receives knockback whenever she’s hit, and the knockback direction is only determined by her facing direction. As such, we can turn around before getting hit to receive knockback in any desired direction if required.
	$LF
]div
[div class=p 
	"This can be expanded further by the fact that Robin will take reduced knockback if she’s crouching when she gets hit. Due to this, she will also snap out of knockback stun and regain control faster, since this happens as soon as she lands on ground after getting hit. We use this combination of techniques when we cannot avoid getting hit or getting hit is faster than waiting.
	$LF
]div
[h4 id=DodgerMovement 
	" Dodger Movement
	$LF
]h4
[div class=p 
	"Dodger allows Robin to perform a roll dodge forward. Robin receives speed of 1000 units/frame when a dodge is started, and she slows down once she’s spent at least 4 frames on ground after a dodge. Robin can exit out of this dodger state by landing on ground, landing in water, getting hit after the invincibility frames run out, hitting a cutscene trigger, or grabbing onto a ladder.
	$LF
]div
[div class=p 
	"Once Robin has spent 4 frames on the ground after a dodge, she performs a recovery animation in which she spins and gets back on her feet. She preserves some momentum (~250 speed) during this recovery, and if she slides off of a platform while in this animation, it gets automatically canceled into her regular falling animation. We refer to this as a dodge cancel.
	$LF
]div
[div class=p 
	"As a side note, if Robin slides off of a platform during the 4 frames of landing on ground and not in the recovery animation, the dodge is not cancelled and it is extended until she lands on the next platform.
	$LF
]div
[div class=p 
	"If the player jumps the same frame they input a dodge, they will perform a dodge jump. This gives much higher vertical speed than a full height jump, but more importantly, it allows us to jump while preserving our crouching hitbox (Robin is considered to be crouching when performing a dodge). This can be used for several minor skips during the run.
	$LF
]div
[div class=p 
	"Hitting a cutscene trigger while in the dodger state preserves whatever momentum Robin had when she hits the trigger. Since most cutscenes can only be skipped once Robin reaches a specific position and is on ground, we use this in order to reach the desired position to perform the cutscene skip faster.
	$LF
]div
[h4 id=LadderMovement 
	" Ladder Movement
	$LF
]h4
[div class=p 
	"Robin will perform an animation if she climbs out of a ladder by getting to the top of it. As such, we will avoid this animation by jumping out of the ladder before we can hit its highest point. This animation takes priority over jumping should both actions be attempted on the same frame, and as such, it must be performed one frame before reaching the top of the ladder.
	$LF
]div
[div class=p 
	"While RTA speedruns use the intended fast climb (achievable simply by holding Wrench while climbing), TAS can use a different approach: by climbing for 3 frames and jumping for 3 more frames, we can preserve high jumpíng speed out of the ladder and ascend faster.
	$LF
]div
[h4 id=Swimming 
	" Swimming
	$LF
]h4
[div class=p 
	"Robin can swim by entering a body of water. She can swim in any of the 8 directions, and she will swim slowly (at about 240 units/frame). Robin can swim fast by pressing the jump button, which gives her a boost in swim speed (to 350) and will decay slowly towards regular swimming speed until the button is pressed again. Holding the jump button has no effect on swimming. 
	$LF
]div
[div class=p 
	"Robin cannot breathe underwater and has an air meter. Once her breath meter runs out, she will swim slower (around 180 units/frame speed) and gradually lose health. Pressing the swim button consumes more air.
	$LF
]div
[div class=p 
	"Due to these reasons, the run takes specific detours to recover air when required to avoid the slowdown penalty. If the distance without air would be slow enough, we may also sacrifice swimming speed to cover some more distance without spending all our air.
	$LF
]div
[h4 id=WrenchMovement 
	" Wrench Movement
	$LF
]h4
[div class=p 
	"Once Robin has acquired her Wrench, she can swing it by pressing the assigned button. This action can hit enemies and bosses, and it’s also used to interact with assigned nuts in levels to activate mechanisms and solve puzzles.
	$LF
]div
[div class=p 
	"The wrench animation takes 20 frames to perform assuming the wrench button is tapped and not held. If it is held, Robin starts spinning the wrench in front of them, which does minor damage and can deflect projectiles. If it is performed on ground, Robin will slowly decelerate as she performs the animation, hitting her final position in 7 frames. If performed in midair, Robin will preserve whatever speed she had when starting the animation for as long as she’s in midair, and stop in place if she lands during it. 
	$LF
]div
[div class=p 
	"If Robin swings her wrench while close to a nut or mechanism in a level, she will latch onto it. If done so at ground level, she will automatically snap to the correct position for her wrenching animation based on her current facing direction: if facing right, she will snap to the left of the nut, and vice versa. Activating any nut that takes only one turn for activation takes 8 frames. Robin can cancel out of said wrench use animation at any time by jumping or pressing left or right.
	$LF
]div
[div class=p 
	"If Robin latches to a nut in midair, she will hang onto it. She can jump out of them to reach higher positions. Later in the game, electrified networks of nuts can be used to travel through long distances.
	$LF
]div
[div class=p 
	"Finally, If Robin is on her wrench swing/spin state when entering a room transition, she will enter the next room cancelling said state into idle/fall. We use this strategically to lower our speed whenever we need to enter and exit a room as fast as possible.
	$LF
]div
[h4 id=KillJumps 
	" Kill Jumps
	$LF
]h4
[div class=p 
	"Whenever Robin kills an enemy by any means (throwing a box, stomping, or with a gunshot), the game freezes for about 4 frames. Pressing the jump button during that window allows Robin to jump again as if she were grounded, effectively giving us a double jump. Unlike double jumps from gun boosts, this is a proper jump and we can adjust its height by how long we hold the Jump button. 
	$LF
]div
[div class=p 
	"This action can be performed by killing any enemy in the currently loaded room, no matter the distance. As such, we can get a kill jump at any arbitrary location if we time the kill correctly and use the proper weapon for it.
	$LF
]div
[h4 id=Zips 
	" Zips
	$LF
]h4
[div class=p 
	"When Robin is to land on a fall-thru platform (via falling towards one or stomping into one) she will land on the platform as long as the platform is in contact with her body, she’s falling, and has spent at least 10 frames in midair. As such, she can be snapped onto a platform higher than her current location. We can exploit this by placing a box close to a ceiling. If we then jump into the box and stomp, Robin will land on top of the platform and clip into the ceiling. Whenever this happens, the game pushes Robin upwards as long as there's ground above. She can even hit room transitions this way if a room transition exists upwards (and she will end up in an OoB room if there’s no room). She will then perform her regular landing on landing on the first available floor.
	$LF
]div
[div class=p 
	"This can also happen if Robin performs a dodgeroll into out of bounds, which can happen if Robin hits a room transition from an unintended position. Robin then will be snapped to the floor above if any, and continue her dodge roll animation. 
	$LF
]div
[h3 id=CombatAndUpgrades 
	" Combat and upgrades
	$LF
]h3
[div class=p 
	"Robin’s gun gets three different kinds of ammo as she progresses through the game. We will discuss every weapon  in the order they are obtained in the movie.
	$LF
]div
[div class=p 
	"With all weapons, Robin can hold the shoot button for at least 35 frames to obtain a charged shot, which usually deals more damage and behaves differently from the uncharged version. While uncharged shots can be shot in any of the 8 directions (accounting for diagonals), charged shots can only be released in the 4 cardinal directions. Additionally, all charged shots induce a cooldown time during which Robin cannot shoot any projectile from her gun.
	$LF
]div
[h4 id=FastCharging 
	" Fast Charging
	$LF
]h4
[div class=p 
	"A quirk with how the charging system works allows us to obtain charged shots faster than intended by starting a charge during the final 25 frames of another one. This bypasses the cooldown timer, allowing us to obtain charged shots much more often.
	$LF
]div
[h4 id=StunGun 
	" Stun Gun 
	$LF
]h4
[div class=p 
	"Robin’s default gun. This weapon is the weakest in terms of damage per shot, but it can be shot every 8 frames. The game uses a system where after a shot has been fired, a 7 frame buffer window is activated, and as long as the player presses the shoot button again within that frame (and Robin is in a state where she can shoot) the next shot will be automatically released. Since the game runs at about 60 frames per second, this gives us 7.5 shots per second. 
	$LF
]div
[div class=p 
	"The uncharged shot can be fired in any of the 8 directions, and it has a soft auto-aim system: as long as the player aims the shot in the general direction, the shot will be aimed at the closest enemy in said direction.
	$LF
]div
[div class=p 
	"Charged shots can destroy white/silver rock blockades. 
	$LF
]div
[div class=p 
	"Notably, shots from this gun advance RNG. Several shots that hit no target are performed in this movie with the explicit intent of getting more favorable RNG for enemy spawns and behavior.
	$LF
]div
[h4 id=RollerBombShot 
	" Roller Bomb Shot 
	$LF
]h4
[div class=p 
	"This weapon is obtained during Shard Wastelands, and it is required to complete the game. When shot, it releases a small bomb that falls to the ground and rolls for a while until it loses momentum. The bomb detonates on contact with an enemy or after 150 frames have passed since it was shot. The bomb bounces off of walls.
	$LF
]div
[div class=p 
	"Holding the shoot button for at least 30 frames or longer before releasing the bomb causes the bomb to be shot with greater initial speed. We call this a fast bomb. Aside from being released with higher speed, this has no effect on its damage output or explosion time. Because this mechanic exists, bombs are only shot on 
	[em 
		"releasing
	]em
	" the shoot button, not on pressing it.
	$LF
]div
[div class=p 
	"Bomb explosions are required to break black rock blockades and to activate specific platforms that move on contact with an explosion. After a bomb is released, the player enters a cooldown similar to releasing a charged shot, during which Robin cannot shoot any projectile from her gun. 
	$LF
]div
[div class=p 
	"A fully charged bomb shot becomes a missile. The missile is released and travels a long distance decelerating across the way. If the missile is hit at this point, it bounces off of whatever it hits and deactivates, dealing no damage. If the missile comes to a stop by decelerating without hitting anything, it then activates and accelerates to a high speed, and at this point it will hit anything on its path, detonating once it does, similar to a bomb. This explosion can activate platforms and break blockades exactly like a bomb’s can. Due to the way this missile behaves, it can't be shot at a target at close range, and it requires some distance to work properly. 
	$LF
]div
[h4 id=UsurperShot 
	" Usurper Shot 
	$LF
]h4
[div class=p 
	"The Usurper Shot is the final shot available and it is unlocked late in the game during One Concern West. It is notably for dealing multihit damage and also for using a heat meter mechanic. A yellow meter can be seen over Robin’s head once it’s shot, and shooting it again while that meter is not empty will add more to it. If the heat meter is ever filled, the gun overheats and enters a cooldown similar to releasing a bomb or charged shot. Shooting any other shot will not affect Usurper Shot’s heat meter, and as such, switching weapons is a viable strategy to avoid weapon overheat.
	$LF
]div
[div class=p 
	"A fully charged shot has the unique property of causing Robin to swap places with whatever target is hit by the shot. This is intended for usage in several rooms for puzzles, but it has a very slow animation. As such, we will only use it when strictly necessary.
	$LF
]div
[h4 id=WrenchShotsAndDps 
	" Wrench Shots and DPS
	$LF
]h4
[div class=p 
	"Robin can swing her wrench every 20 frames. Wrench swings have a higher damage than stun gun shots, and as such, they provide some vital extra damage if we can locate ourselves close to our target. 
	$LF
]div
[div class=p 
	"Additionally, a shot can be fired the same frame a wrench swing is started. This is referred to as a wrench shot, and it can be used with any of the 3 available weapons. Of course, since bomb cooldown is considerably longer than the length of a wrench swing, this technique is usually reserved for Stun Gun shots and Usurper Shots. It provides the best DPS for bosses.
	$LF
]div
[h4 id=WrenchUpgrades 
	" Wrench Upgrades
	$LF
]h4
[div class=p 
	"Robin receives two upgrades to her Wrench as the game progresses. The first upgrade, called Electric Wrench, allows Robin to charge electricity by spinning her wrench. Once she’s charged enough, she becomes electrified. Electrified Robin can then use her electric wrench for more damage, and latching onto a nut cable will cause her to move much faster thru it, even breaking breakable blocks found in the way if any.
	$LF
]div
[div class=p 
	"The second upgrade, Galvanized Wrench, allows her to use this power even further to electrify objects such as yellow crates she picks up or bombs released from her gun. Electrified objects can act as sources of power for different mechanisms in the game and are required to solve puzzles. Additionally, fully charged missile shots release a ball of electricity on impact, which deals lingering damage to enemies and is useful for boss battles. 
	$LF
]div
[h3 id=QuantumLeaps 
	" Quantum Leaps
	$LF
]h3
[div class=p 
	"Room transitions attempt to smoothly transition the player between rooms. As such, the player is placed in the new room in a position that allows for smooth visual movement, and Robin’s speed and state is preserved (with the exception of Wrench Cancels, as discussed above). 
	$LF
]div
[div class=p 
	"When a player moves from an area to another by crossing a physical boundary, an area transition occurs. This area transition is identified in game by a slow white fadeout. Aside from this visual change, they work similarly to room transitions. 
	$LF
]div
[div class=p 
	"Interestingly enough, entering an area transition while holding a charged shot from your gun adds a second visual effect to the transition in the form of black bars at the top and bottom of the screen in a letterbox effect. Due to this, a transition when holding a charge shot is slightly slower than when not holding one. This is the cause of a major glitch called Quantum Leaps:
	$LF
]div
[div class=p 
	"If we hit an area transition while in a dodger jump state and holding a charge shot, the game delays the transition due to the added black bars but DOESN'T CANCEL ROBIN’S DODGER. As such, Robin moves further into the room and triggers a regular room transition. When the game finally loads the new area and room, it attempts to place Robin in the position she was in when the old room was unloaded, which is beyond the bounds of the room due to the delayed transition. As such, the game triggers a failsafe and instead places Robin at whatever was her last grounded position relative to the origin (top left corner) of the previous room, even if this position is out of bounds or inside a wall. This can be exploited in several ways, from minor time saves to major skips that can be done by reaching specific locations earlier than intended.
	$LF
]div
[h3 id=Controls 
	" Controls
	$LF
]h3
[div class=p 
	"Iconoclasts supports dual input from keyboard + controller at the same time. This is of major relevance for the TAS because a crouch button is accessible for controller players but not for keyboard players, and the crouch button has slightly different behavior from a Down directional input which is useful for some glitches and techniques. As such, this run uses input from both a controller and a keyboard. Crouch button is required to successfully perform quantum leaps.
	$LF
]div
[div class=p 
	"Other than the crouch button, controller inputs are functionally identical to Keyboard inputs. This TAS was first developed with keyboard inputs which is why it uses a keyboard for all inputs other than crouch. 
	$LF
]div
[h2 id=Route 
	" Route
	$LF
]h2
[div class=p 
	"This section will briefly explain every major area of the game, putting emphasis on any noteworthy tricks and rooms along the way. It contains a general outline of each area.
	$LF
]div
[h3 id=Blockrock 
	" Blockrock
	$LF
]h3
[div class=p 
	"Blockrock is the tutorial area of the game, and Robin does not have access to her wrench yet. We must complete a tutorial loop, including the first boss fight, before obtaining the wrench and being able to make progress. We collect one unit of Improvium material which is in the way.
	$LF
]div
[div class=p 
	"Most of the movement before the first boss is straightforward, aside from the first instance of a fuck up shot: in the room prior to the Controller fight, we have to break the rocks to progress. We use an f-up shot to redirect our recoil downwards while still shooting right in front of us. Recoil aimed up has no effect on Robin when she’s on ground, and as such, we’re able to preserve Robin’s slope boost speed from the prior room.
	$LF
]div
[dl 
	[dt 
		[b 
			"Boss - Spine Controller 1
		]b
	]dt
	[dd 
		"This boss has some minor RNG, as it can spawn at either the left or the right side of the room. This is largely irrelevant for the TAS as we can perform the kill as seen in this movie regardless of this choice. We use the final charged shot to boost us into the closest possible position to exit the room after the boss battle is over. 
		$LF
	]dd
]dl
[div class=p 
	"After acquiring the Wrench, we advance further in Blockrock. Some RNG manip is done in the first nut room to spawn the first Rupto further away from the final nut and to prevent it from launching towards Robin.
	$LF
]div
[div class=p 
	"The next room utilizes a kill jump to skip a room below intended to let us scale that section to the upper part of this room, and a gun boost + kill jump combination to jump towards the upper section. This is RNG dependent as it requires a favorable position for the killed Pluro. 
	$LF
]div
[div class=p 
	"In the next room, we delay our fall into the next room for a better Pluro spawn near the nut we latch towards. We then use a gun boosted jump to skip over the intended puzzle and reach the key sooner. With this key, we can reach Settlement 17.
	$LF
]div
[h3 id=Settlement17 
	" Settlement 17
	$LF
]h3
[div class=p 
	"Settlement 17 is a small village that houses Elro, Robin’s brother. This section requires us to complete some small quests for its inhabitants. We collect one unit of Ivory Oil material here by using one of the few required gun boosts in the game.
	$LF
]div
[div class=p 
	"The weird looking movement inside house 09 is required to activate a trigger: the player is supposed to talk to Mr. Andress at the upper floor, but the actual trigger to make Pontus appear in the room is just to both talk to Petra and reach a vertical trigger in the upper floor. We can reach it with careful positioning without ever having to land on the floor, saving us time.
	$LF
]div
[div class=p 
	"We take a small detour to enter house 06. This is required to progress the story and it also activates the Tweaks slots for us.
	$LF
]div
[div class=p 
	"After completing Elro’s quest in the church, Robin is captured by the Agents, who keep us locked in the community centre.
	$LF
]div
[h4 id=EscapeSequence 
	" Escape Sequence
	$LF
]h4
[div class=p 
	"An escape sequence plays here where we must sneak past One Concern Soldiers and not make noise. The game slows Robin’s crawling animation and disables all ways of fast crawl movement. Robin will be overheard if she hits 7 cycles of her crawling animation, and even if she stops crawling, the game keeps track of the current cycle and frame, which means you cannot move any further than 7 cycles.
	$LF
]div
[div class=p 
	"However, shooting cancels the crawl animation into crouch shooting while still moving us for one frame. As such, a minor time save is performed by shooting Robin’s gun the exact frame she would hit her 8th crawling cycle, moving us slightly ahead. We can repeat this every 22 frames, giving us extra movement between cycles.
	$LF
]div
[h4 id=CutscenelessKerthunkSkip 
	" Cutsceneless Kerthunk Skip
	$LF
]h4
[div class=p 
	"After escaping from the soldiers, we’re expected to move to the right, which would trigger a boss battle with Kerthunk. Instead, we can make use of a very unique exploit:
	$LF
]div
[div class=p 
	"In early versions of Iconoclasts, the cutscene with the Soldiers that triggers if Robin walks to the left and gets close to the church would induce a state in which Robin automatically cancels out of a wrench swing. Using the cutscene, therefore, allowed us to place Robin in a glitchy state where she is able to move during cutscenes.
	$LF
]div
[div class=p 
	"In v1.15 beta and its followup official release (the version this movie is performed in), Konjak patched the glitch as it colud affect several other cutscenes and cause softlocks, but added an specific check that allowed RTA runners to perform Kerthunk Skip regardless: Robin is put at X coordinate 2700 at the end of the cutscene, and in this version of the room, as long as Robin is placed between X coordinates 2699.5 and 2700.49, any action Robin performs will be instantly cancelled. This allows RTA runners to use the cutscene setup to reach that position, but in TAS we can just exactly hit it via simple movement. 
	$LF
]div
[div class=p 
	"Furthermore, this check is done solely for horizontal coordinates with no regard for Robin's vertical position. We show some of it with some wrench cancelling when climbing up the wall. We also showcase an unique glitch doable by stomping at X 2700, which causes Robin to be stuck in permanent fall. Interestingly enough, leaving ground causes Robin to be able to accelerate to arbitrarily high speeds without obeying the regular movement cap, but she then gets stuck the moment she lands back on ground. We use this for movement in order to reach the rock formation and shoot it, and perform a wrench swing to return to normal. Then, with the rocks broken, we simply reach the mentioned X position, wrench, and move to the right to perform cutsceneless Kerthunk Skip.
	$LF
]div
[h3 id=ShardWastelands 
	" Shard Wastelands
	$LF
]h3
[div class=p 
	"Shard Wastelands is a desertic area which we drift towards after the events in Settlement 17. We collect two Materials (Ivory Oil and Improvium) and the Sand schematic which unlocks the recipe to craft Fleet Foot. However, we don’t have all the materials required for Fleet Foot yet, so we cannot craft it at the moment. Even if we could craft it, some of the materials required for it overlap with materials required for crafting Dodger later, and so crafting it first would be suboptimal.
	$LF
]div
[div class=p 
	"Most rooms are uneventful, and all enemies in this section (bar the boss Kibuka) behave deterministically, so no RNG manipulation is required.
	$LF
]div
[div class=p 
	"The third room contains an interesting find, found by complete accident during the making of this movie: there’s a grabbable ledge in the rock formation. Grabbing the ledge is position dependent: if Robin is any higher she will just land in the nearby platform, and being too low causes her to miss the ledge entirely.
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/mvm532V/ledge.png 
	]img
	$LF
]div
[div class=p 
	"We grab this ledge and jump away from it to obtain ledge jump speed instantly, and it saves time compared to naturally accelerating to the left.
	$LF
]div
[div class=p 
	"We then perform two minor skips: in the cave room, we take a damage boost to reach the exit instead of activating the platforms as intended. In the next room, we use grace jumps (a period of 4 frames during which Robin can jump after leaving a platform by running off of it) to skip another puzzle. 
	$LF
]div
[div class=p 
	"Notably, we perform a precise set of movements including a one-frame jump to preserve slope boost speed into the Ivory Oil room.
	$LF
]div
[div class=p 
	"After all this, we reach the chemical room with the soldiers and complete a small set piece. This section is essentially an autoscroller and it can only be failed if we mix Circle and Triangle chemicals. We do some silly movement here to make this section as entertaining as possible. Once this is completed, we receive the Roller Bomb Shot, make our way back into the main hub and head towards the next boss. This section requires shooting several bombs and missiles to break rocks efficiently. 
	$LF
]div
[h4 id=BossKibuka 
	" Boss: Kibuka
	$LF
]h4
[div class=p 
	"Kibuka is a two-phase boss. The first phase involves luring Kibuka into position for Royal to hit it with his powers, and then shooting a bomb at its opening when this happens. 
	$LF
]div
[div class=p 
	"After every round, Kibuka sinks into the ground and shoots projectiles towards us. We don’t deflect the projectiles as doing so is slower. We also carefully manipulate Royal’s movement so he stays at a favorable position. If Royal is near Kibuka when Kibuka respawns, he will slide between its legs and cause Kibuka to perform a summersault to face back towards him, which loses time.
	$LF
]div
[div class=p 
	"Phase two goes much faster thanks to a bug: shooting a missile at the same time Kibuka shoots one of its projectiles causes the missile to act as a multi hit projectile on contact with Kibuka, dealing several times more damage than usual. We find a precise position to maximize said damage and hit Kibuka with the wrench several times to get a one-cycle kill on the second phase. This strategy is essentially unfeasible for RTA speedruns due to it being both position perfect and frame perfect.
	$LF
]div
[div class=p 
	"Once Kibuka is defeated, we head out of the desert and straight into a train ride where we get to fight another boss.
	$LF
]div
[h4 id=BossChrome 
	" Boss: Chrome
	$LF
]h4
[div class=p 
	"Chrome is also a two phase boss, albeit less apparent than Kibuka. The first boss involves waiting for Tolo to throw a grenade at us and deflecting it into the helicopter. Again, this section is mostly an autoscroller and an effort is made to make it as entertaining as possible.
	$LF
]div
[div class=p 
	"Once the helicopter has been hit with three grenades, Robin moves further into the train for the second phase. Most of this phase is wrench shot spam. We also shoot a bomb before the helicopter respawns to deal some free damage before the battle starts. There’s some RNG manipulation by jumping during the intermission between attacks to make the helicopter shoot bombs instead of performing the dive again.
	$LF
]div
[h3 id=IsilugarIsilugarDepths 
	" Isilugar/Isilugar Depths
	$LF
]h3
[div class=p 
	"Isilugar is the next major area of the game, being the place where the Isi people live. This section involves a lot of text, so it is a good moment to mention that we can advance text quickly by holding Jump+Wrench while talking to a character. 
	$LF
]div
[div class=p 
	"After completing some story triggers, the One Concern Agents attack Isilugar and we head towards the labs.
	$LF
]div
[div class=p 
	"First section involves a lot of swimming. Swimming routes are very direct and we can usually reach intended destinations within our allotted air, taking some detours when not possible.
	$LF
]div
[div class=p 
	"We run into several Squint in this section. They can only be hit by hitting their bulbous tails, and will recoil from hits anywhere else. We abuse this to make them stay in specific locations when they would interfere with Robin’s movement otherwise. 
	$LF
]div
[div class=p 
	"We perform a minor skip in the large puzzle room by using a ledge jump + gun boost to skip the intended puzzle.
	$LF
]div
[div class=p 
	"Later, we reach Isilugar Labs. Our mission here is to collect 3 Trinikeys. Labs contains some of the largest sequence breaks in this movie, which have larger ramifications. We first collect the nearest key in the pool room and use it to head deeper down.
	$LF
]div
[div class=p 
	"The puzzle room at the bottom of the Labs contains two skips. One is a fairly simple (and probably intended) skip to reach the upper nut without solving the left half of the room. Then, we head to the right side and perform another skip to hit the T shaped structure faster. We collect the first Trinikey and a small key in the process.
	$LF
]div
[div class=p 
	"As we head back to the central room, we shoot several bombs. All bomb shots are aimed in such a way that they detonate as soon as possible and don’t hit any of the Alburtus in the room, as doing so would incur freeze frames. We take a secret path to reach a hidden room and collect the Parkour Schematic. We return to the central room and craft the Dodger tweak. We equip Dodger and keep it for the rest of the run.
	$LF
]div
[dl 
	[dt 
		[b 
			"Tweak Crafting in Save Points
		]b
	]dt
	[dd 
		"Tweaks are supposed to be crafted in crafting tables, but can be equipped and unequipped in Icons of Prayer (the statues used to save the game). However, due to an oversight in menu structure, we can access the Tweak Crafting menu from the Tweak Equip menu by holding weapon swap and pressing Wrench at the text blurb about what Tweaks are. This allows us to bypass crafting stations entirely.
		$LF
	]dd
]dl
[div class=p 
	"With Dodger equipped, we proceed underwater to collect more Trinikeys and small keys. Once we’ve grabbed them, we set up for a relevant minor skip: by luring the two Manobite into specific positions, we can use a bomb and a missile to perform a double kill jump + gun boost upwards to reach the upper ledge in the room. This allows us to skip using our small keys. We perform this skip twice in this run, allowing us to exit Isilugar while holding two extra keys. This saves some time on Isilugar itself and allows us to sequence break Tower later.
	$LF
]div
[div class=p 
	"We proceed to the lower east area and collect the final Trinikey. We also collect the final material (another Ivory Oil) along the way. While heading back to the main hub, we’re entrapped in a hall and a battle against some Controllers begins. We perform RNG manips earlier to ensure they spawn in favorable positions to achieve a kill before any of them is able to possess the Toolboxes in the room (which would make it much slower). We return to the main hub, and craft/equip Fleet Foot. This will be the last interaction with the Tweaks system in the run.
	$LF
]div
[div class=p 
	"During the second key skip, we enter the long hallway to find it closed. A battle with Controllers is supposed to trigger (like the one earlier) but since we reached the room from an unintended exit, the door to the hallway is closed. We quickly exit the room and re enter again, which tricks the game into assuming we beat the controllers, and allows us to proceed towards the next boss.
	$LF
]div
[h4 id=BossInti 
	" Boss: Inti
	$LF
]h4
[div class=p 
	"Inti is one of the three bosses which allow us to take control of Mina as well as Robin. This battle makes use of a tag mechanic, as we can tag from one character to the other by reaching the door in the middle of the room. Mina moves similar to Robin but has different abilities: she uses a shotgun as her gun of choice, and has the ability to slide along the floor.
	$LF
]div
[div class=p 
	"The first phase involves activating a mechanism to make Inti vulnerable to damage. During this part, Inti’s hands will attempt to attack whichever character we’re currently controlling, and pick an attack at random to use. We use shot RNG manips to get favorable attacks on each cycle. 
	$LF
]div
[div class=p 
	"Once we’ve cleared Inti’s first HP bar, Phase 2 activates. Inti will move from side to side based on how much damage it receives, and we attempt to deal as much damage as possible by hitting the last possible shot with a charged stun gun shot for Robin. This allows us to finish the battle with only 5 shots from Mina’s shotgun.
	$LF
]div
[h4 id=WhiteSkip 
	" White Skip
	$LF
]h4
[div class=p 
	"Immediately after the Inti battle, a lengthy section with Agent White happens, Most of it is autoscroller rooms. However, after the swimming section, we can skip the proper Boss Battle against White by exiting the room at a specific frame of Mina’s running animation. This warps Robin out of the next room and skips the White battle.
	$LF
]div
[h4 id=SoldierRaid 
	" Soldier Raid
	$LF
]h4
[div class=p 
	"We head to the north section and back into Isilugar proper, which has been raided with soldiers. We must reduce all 13 soldiers. We use a combination of missile shots, stomps and wrench hits to stun them. Notably, we can hit the Concern Defenders with the wrench through their shields if we are close enough to them.
	$LF
]div
[div class=p 
	"We also make use of room transitions to negate kill freeze frames: if we kill an enemy the same frame we hit a room transition, the room transition takes priority and we receive no freeze frames from the kill.
	$LF
]div
[div class=p 
	"Once this is done, we’re rewarded with the Electric Wrench. We then complete some story triggers and move to the next major area.
	$LF
]div
[h3 id=FerrierShockwoods 
	" Ferrier Shockwoods
	$LF
]h3
[div class=p 
	"After completing Isilugar, we’re supposed to head towards Glass Strait and backtrack thru Settlement 17 and Blockrock to reach Ferrier Shockwoords. Instead, we perform two quantum leaps. First, we quantum leap out of Isilugar directly into Shard Wastelands. This skips a locked door and allows us to preserve our keys. We then head left to reach the exit to Glass Strait and quantum leap back to Shard Wastelands, which conveniently warps us right under the ground and directly above the Shard Wastelands fast travel location. This skips the entirety of Glass Strait, Blockrock 2, two bosses, and one of the playable Mina sections.
	$LF
]div
[div class=p 
	"Since fast travel is supposed to be unlocked in Shockwoods, Shockwoods is unlocked by default as a reachable location. We can then climb out, but we must perform a precise jump before entering Shockwoods itself in order to avoid a softlock. 
	$LF
]div
[div class=p 
	"We move through some puzzle rooms before reaching the next boss. We also take some time to move a bomb platform out of the way before reaching Carver, so we can use this room as a shortcut later.
	$LF
]div
[h4 id=BossCarver 
	" Boss: Carver
	$LF
]h4
[div class=p 
	"Carver is another two phase boss. The first phase happens in a circular room with a ring of cables we can latch to. Carver can only be damaged by hitting its “eye”, and since it is hidden in several of its attacks, we enter this battle with a proper RNG value to get a favorable attack pattern in order to maximize damage. 
	$LF
]div
[div class=p 
	"A second phase happens after defeating the first one, in which we must ram into the boss while electrified and once it’s been stunned by Elro’s sword. 
	$LF
]div
[h3 id=Tower 
	" The Tower
	$LF
]h3
[div class=p 
	"Tower is the next major section, and it starts with Elro, Mina and Robin getting captured and thrown in jail cells. Conveniently for us, Robin can escape her cell by stomping on a manhole. However, she’s been disarmed and holds neither her stun gun nor her wrench. Our first order of business is to recover them in order to proceed. We head to the basement to recover our wrench first, and then proceed.
	$LF
]div
[div class=p 
	"Thanks to the extra key we’re currently carrying and thanks to dodger, we can perform several sequence breaks. The first is entering the center of 03B leftside by dodger jumping into it from the left, which allows us to open the lock to 04B early. We then head to 05B, take a dev-intended shortcut to 04B and quickly recover our gun, while also using our second extra key. 
	$LF
]div
[div class=p 
	"We then head back down to 04B and activate another story trigger before reaching another key. We will need 3 keys by the end of the Tower in order to exit it. We also shoot a missile all the way through in order to hit an explosion platform at the other side. This unlocks the path upwards for the right side elevator, which will be required later.
	$LF
]div
[div class=p 
	"We take a detour to grab another key in floor 02, then head back to the basement to obtain the final Wrench upgrade.We then return to 03B and head to the right side of Tower, where we collect 3 more keys. We collect one more key than we need, as we will use it later for another sequence break. We head to 06B, and face the Silver Watchman.
	$LF
]div
[dl 
	[dt 
		[b 
			"Boss - Silver Watchman
		]b
	]dt
	[dd 
		"Silver Watchman is supposed to be fought by parrying its attacks, but it is vulnerable to bomb explosions that hit its back. We can quickly kill it by hitting 3 bombs as soon as it spawns. 
		$LF
	]dd
]dl
[div class=p 
	"We head back to the left side and climb to the top of the tower. A skip is performed here: when the elevator stops between 05B and 06B, a boss battle is supposed to trigger. However, this stop behaves as all other elevator stops, and we can skip the battle altogether by pressing Up as we’re about to stop. With this done, the rest is straightforward.
	$LF
]div
[h3 id=DarkCaveDarlandAscent 
	" Dark Cave/Darland Ascent
	$LF
]h3
[div class=p 
	"Dark Cave is quite straightforward. We perform a minor skip by using a kill jump + gun boost off of a Sadling to skip the entire left side of Dark Cave. We then charge electricity with two purposes, the first one being shooting a missile to power up a mechanism and activate the next boss fight.
	$LF
]div
[dl 
	[dt 
		[b 
			"Boss - Possessed Thunk
		]b
	]dt
	[dd 
		" The first phase of Possesed Thunk involves possessing the Silver Watchman. We can very quickly knock it out by shooting an electrified missile at it. We then shoot two more missiles to activate Phase 2. Phase 2 is an easy one-shot by a single missile.
		$LF
	]dd
]dl
[div class=p 
	"We move to the left to exit Dark Cave and reach Darland Ascent. Ascent rooms have constant wind to the left, which reduces Robin’s movement speed when going right and increases it when going left. We collect one more key on our way as we will need it to enter the deeper section, as we will use this key and the extra key we collected in Tower to get to the Omega Controller.
	$LF
]div
[h4 id=BossOmegaController 
	" Boss - Omega Controller
	$LF
]h4
[div class=p 
	"Before the boss battle proper, an extensive autoscroller section happens. The main drive of this section is that the Omega Controller slowly rises and is capable of hitting Robin, so we must repel it by hitting it with bombs.
	$LF
]div
[div class=p 
	"The first screen has 3 Controllers that must be killed to progress. Every other enemy is not killed if possible to avoid freeze frames. 
	$LF
]div
[div class=p 
	"The second screen adds doors that we must open both to allow Robin to progress and to allow our bombs to get towards Omega Controller.The final screen is a horizontal room. At the end of this room, we charge electricity and proceed to kill the Omega Controller with a single electrified missile. 
	$LF
]div
[div class=p 
	"After this, we move to the right to activate a story trigger. Our next mission is to infiltrate One Concern West, and before doing so, we need to backtrack to Tower and beat Ash. We do so using an available fast travel location.
	$LF
]div
[h3 id=Shockwoods2 
	" Shockwoods 2
	$LF
]h3
[div class=p 
	"We return to Shockwoods to face Ash, but before that, we take a short detour to Tower. Due to the sequence breaks we performed, we can now trigger the event that releases Mina and Elro from their jail cells, and obtain a small key. We will use this key for a skip in One Concern West.
	$LF
]div
[div class=p 
	"We perform two quantum leaps here. The first one, when entering Tower, allows us to speed up the transition and skip cutscenes faster. We also enter the release cutscene from a ladder and let ourselves fall out of the room, which triggers a failsafe and skips the first part of the cutscene, allowing us to skip the whole cutscene and get the key faster. We then perform another quantum leap to reach the ladder in Shockwoods faster and make our way to Ash. 
	$LF
]div
[h4 id=BossAsh 
	" Boss - Ash
	$LF
]h4
[div class=p 
	"Ash is the second boss battle to require usage of both Robin and Mina. He also requires both of them to hide, with Robin hiding behind bushes and Mina hiding underwater 
	[del 
		"(because she’s smelly. No I will not explain this any further)
	]del
	".
	$LF
]div
[div class=p 
	"Ash’s behavior is completely deterministic, and based off of Robin and Mina’s hiding positions. We hide in specific spots that allow us to quickly reach Ash and 2-cycle him with two missiles.
	$LF
]div
[div class=p 
	"We finish this section by returning to Ascent, and get inside One Concern West.
	$LF
]div
[h3 id=OneConcernWest 
	" One Concern West
	$LF
]h3
[div class=p 
	"One Concern West introduces new enemies and gives us the Usurper Shot, the final upgrade to our stun gun. We head to the upper floors, skipping some puzzles on the way. We skip a particularly long puzzle that gives us a key by using the extra key we got in Tower instead. 
	$LF
]div
[div class=p 
	"Several rooms in this section contain smoke. While Robin is in a smoke cloud, she holds her breath similarly to when she’s swimming. This does not reduce her mobility, but can lead to her losing health as she runs out of breath.
	$LF
]div
[div class=p 
	"We have to kill some of the Spotters found in the purple blocks room: while they are electrified, they will redirect any shot from our gun and absorb it without taking damage, preventing us from shooting the Usurper Shots required to progress. 
	$LF
]div
[div class=p 
	"We need to grab another key to make it to the Blocker battle, so we take it from the basement. This section contains another zip which we use to exit back to the first floor after collecting the key. We then head to the Blocker Battle. 
	$LF
]div
[dl 
	[dt 
		"Boss - Blocker
	]dt
	[dd 
		"Blocker is supposed to be defeated by using the Usurper Shot and placing it at a position where it can be damaged by spikes, but we can instead stun lock it by hitting bombs in a rhythm. 
		$LF
	]dd
]dl
[div class=p 
	"We grab another key in order to proceed back up, this one found in a room filled with a white liquid. Entering the liquid slows us down, so we jump and shoot downwards to preserve as much airtime as possible. 
	$LF
]div
[div class=p 
	"Before the Black battle most rooms are easy to explain. One room (the biggest one) contains a long puzzle that we can thankfully skip with a single bomb shot and a dodge. We then head directly to the Black 1 room.
	$LF
]div
[h4 id=BossBlack1 
	" Boss - Black 1
	$LF
]h4
[div class=p 
	"Black is one of the toughest battles to optimize. In any difficulty other than Challenge, she will always start the battle by performing an unavoidable grab that takes several seconds. This grab puts Robin at low HP regardless of whatever her current HP is, low enough to guarantee we will die to another grab.
	$LF
]div
[div class=p 
	"After this grab, she will move through the stage and attempt to punch Robin. After 3 punches, she will decide what to do: if she’s taken about 25% damage or more, she will always attempt another grab. Else she will perform a different attack chosen by RNG, and return to the punching after. 
	$LF
]div
[div class=p 
	"The strat for Black is as such: after the grab we deal just enough damage to avoid a second grab, then manip RNG to get a favorable attack pattern. We use this attack and the second punching phase to deal as much damage as possible. A second grab is unavoidable at this point, but we have dealt enough damage to make sure we can kill her before she can attempt another one. During this battle, we also have to manipulate RNG to ensure Controllers don't get too close to either Robin or Black, since we don't want to either get damaged by them or have them take damage. 
	$LF
]div
[div class=p 
	"After Black is stopped, we’re meant to head to One Concern East. Instead, we perform a quantum leap into the Fast Travel room. Right below the fast travel we can find a room in Rocket Platform, allowing us to skip the entirety of One Concern East, City One and Bastion. While this skip is already used in RTA runs, we perform a small variation by preserving our last grounded position before shooting the Usurper Shot, which allows us to avoid an extra room transition.
	$LF
]div
[h3 id=RocketPlatformMidway 
	" Rocket Platform/Midway
	$LF
]h3
[dl 
	[dt 
		[b 
			"Boss - Black 2
		]b
	]dt
	[dd 
		"Black 2 is more of a section than a boss fight, as it requires us to activate three electric posts and leave. We do this by charging electricity before the battle starts, shooting a bomb right away to activate the first one, climbing and using Robin’s body to activate the second, then recharging and shooting another bomb to activate the final one. With all three active, we head out.
		$LF
	]dd
]dl
[div class=p 
	"After leaving the elevator, we exploit a collision quirk with the ceiling as we hit the room transition and clip out of bounds. We can use this to skip straight into the space ship, skipping the Ivory Beast battle.
	$LF
]div
[div class=p 
	"Midway itself is uneventful and a straight path. The most notable thing about this is that this entire part happens in space, and therefore plays with low gravity. However, this takes a turn after we reach the rightmost room, and we must escape it while carrying Royal. We perform a small visual glitch here by holding down after picking up Royal, which makes Robin get stuck in a single frame of her animation cycle.
	$LF
]div
[div class=p 
	"We escape and return to the planet, returning to the first room of the game. We head left and perform another position-stored quantum leap to enter Impact Zone.
	$LF
]div
[h3 id=ImpactZone 
	" Impact Zone
	$LF
]h3
[div class=p 
	"Due to the glitched entry, we can skip the entirety of this section, which saves us from performing several rooms that require killing all enemies. We also position ourselves to avoid some cutscene triggers. 
	$LF
]div
[div class=p 
	"By the nature of this skip, the screen flashes white for several seconds. If possible, an epilepsy warning should be included in any encode were it to happen.
	$LF
]div
[div class=p 
	"The skip finishes, taking us to the Starworm battle.
	$LF
]div
[h4 id=Nightmares 
	" Nightmares
	$LF
]h4
[div class=p 
	"Before we can battle the Starworm, we must escape the four Nightmares, each representing a character from the game (Elro, Mina, Royal and Black respectively). The goal of each (except the final one) is to open the sunflowers in each room, each having its own means of activation.
	$LF
]div
[div class=p 
	"Elro requires us to wrench repeatedly. This section is quite straightforward, avoiding attacks and wrenching fast.
	$LF
]div
[div class=p 
	"During the transition between Elro and Royal, we press and hold wrench. This causes a glitch where Robin is considered to be spinning her wrench for the rest of the room. This is known as the Infinite Wrench Glitch. This also causes the game to keep Robin electrified for as long as the glitch happens. We use this to quickly activate the sunflowers in this nightmare and the following one.
	$LF
]div
[div class=p 
	"Black is the only unique nightmare, as we have to shoot it to finish it. 
	$LF
]div
[div class=p 
	"Before the Starworm Battle, we have a conversation with Polro, Robin’s father. We are then prompted with a decision: we can get to him and hug him, or head to the door and move away. Both take the same amount of frames, but hugging Polro affects the behavior of Birdman slightly, so we hug dad, because hugging your dad is faster.
	$LF
]div
[h4 id=BossStarworm 
	" Boss - Starworm
	$LF
]h4
[div class=p 
	"Starworm has a quite consistent attack pattern, and its weak point is its eye. We spam shots towards it until it reaches its last HP bar. It will then cover its eye with its hand, which we can easily dislodge by hanging from it. 
	$LF
]div
[h4 id=BossBirdman 
	" Boss - Birdman
	$LF
]h4
[div class=p 
	"The Final boss of the game. Birdman's patterns are heavily random, and it has several attacks at its disposal. We manip it to avoid it using its wrench, which would require us to back away, reducing damage output. We use wrench shots again, alternating between Usurper Shot and regular Stun Gun. We sacrifice some optimal usage of weapon swaps in order to manipulate RNG to obtain faster attacks from Birdman.
	$LF
]div
[div class=p 
	"After a certain amount of damage, Birdman will attempt to spawn some rocks around it to block damage. This is the reason we hugged Polro earlier: if we have hugged him, Birdman will spawn silver rocks that we can easily destroy with a single charged Stun Gun shot. Else it will spawn black rocks, which are much harder to destroy. 
	$LF
]div
[div class=p 
	"Final input happens after returning home, when the final Elro textbox is closed.
	$LF
]div
[div class=p 
	"This run finishes with an RTA time of 59:27.31 and an IGT of 1:01:17.00. IGT is visible after credits by pressing any button. 
	$LF
]div
[h2 id=PotentialImprovements 
	" Potential Improvements
	$LF
]h2
[div class=p 
	"Beyond expected movement improvements, some potential improvements include:
	$LF
]div
[ol 
	[li 
		[b 
			"Better Soldier Raid
		]b
		": This section is very RNG dependent, and as such a better RNG manip can lead to an even faster section.
		$LF
	]li
	[li 
		[b 
			"Friendship and Nightmares
		]b
		": Every major character (Elro, Mina, Royal and Polro) have a friendship level. In certain dialogues with them, we can cause them to get annoyed at us or to get calmer, in what the game calls Friendship levels. This has two effects in the run. The first is that Mina will show up at the final battle if she’s at max friendship. We add a dialogue line with her in Isilugar to prevent this from happening. The second is that having max friendship with a character pacifies their counterpart during the Nightmares sequence, preventing them from attacking us.  The game appears to pick a random option for any decision that happens in a quick skip dialogue or a cutscene skip, but the details are not fully understood yet. Better understanding of the Friendship system would allow us to manipulate all characters into proper friendship for the nightmares, improving our times in each.
		$LF
	]li
	[li 
		[b 
			"Polro Skip
		]b
		": Getting a one cycle on Birdman would allow us to skip hugging Polro entirely. This isn’t any faster but nobody wants to hug dad.
		$LF
	]li
	[li 
		[b 
			"Fleet Foot Skip
		]b
		": We suspect we can skip crafting and equipping Fleet Foot entirely. We have yet to evaluate if doing so would save more time than it gains, but I personally believe so, as we could eliminate some of the Tweak collecting required for it.
		$LF
	]li
]ol
[div class=p 
	"Finally, during the writing of this submission, a new skip has been found for No Airswim that allows us to skip straight to Rocket Platform after Isilugar by exploiting a clip using the key in Settlement 17. 
	[del 
		"A run with this new skip has yet to be completed, but it is likely to obsolete this run for several minutes.
	]del
	" An RTA run with this new route has been completed, being faster than this run for several minutes.
	$LF
]div
[div class=p 
	[a href=https://www.twitch.tv/videos/1124011565 rel=noopener external nofollow 
		"https://www.twitch.tv/videos/1124011565
	]a
	$LF
]div
[h2 id=Acknowledgements 
	" Acknowledgements
	$LF
]h2
[ul 
	[li 
		"Amber, for providing feedback during development of the movie
		$LF
	]li
	[li 
		"The Iconoclasts Speedrunning Community, for feedback and for providing resources for the development of the movie. 
		$LF
	]li
	[li 
		"Onyx, for proofreading this submission.
		$LF
	]li
]ul
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/Samsara 
		"Samsara
	]a
	": Judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Samsara 
		"Samsara
	]a
	": 
	[del 
		"Setting to Delayed while an improvement file is made. File replaced with a 692 frame improvement.
	]del
	" File replaced once again with a further 432 frame improvement.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Samsara 
		"Samsara
	]a
	": I'm setting this back to Delayed for now, because I honestly have no idea what to do with it. There's a lot going on with this movie, mostly in terms of how I feel the site should adapt for it, but they're all issues that can't be solved immediately.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Samsara 
		"Samsara
	]a
	": First off, I apologize for how long this submission took to judge. This was a real weird one, and any really clean solution would have had to leave this movie waiting even longer for a decision.
	$LF
]div
[div class=p 
	"For those who aren't aware of what was holding this up: At the bottom of the Potential Improvements section above, there is a note about a new skip that was found during the writing of the submission text, i.e after this run was finished but before it was submitted. Prior to this skip being discovered, this run was about 6-7 minutes faster than 
	[a href=https://www.speedrun.com/iconoclasts/run/z57o5nem rel=noopener external nofollow 
		"the RTA record for this category
	]a
	". With the skip's discovery, 
	[a href=https://www.speedrun.com/iconoclasts/run/yvo848ez rel=noopener external nofollow 
		"the new RTA record is now faster than this run by 20 minutes
	]a
	", so it's safe to say that implementing this skip into this category would result in a TAS of around 30 minutes.
	$LF
]div
[div class=p 
	"Why does this matter? Because the primary reason this category existed in the first place was to deviate from the extremely powerful 
	[a href=https://www.speedrun.com/iconoclasts/run/yv345xez rel=noopener external nofollow 
		"airswim glitch
	]a
	", which allows for a lot of the game to be skipped. Using modern (at time of writing) TASvideos terms, "no airswim" is essentially avoiding a major skip glitch, but the new skip that was discovered just adds in an almost equally powerful equivalent to that major skip glitch. The bigger problem though is that this run does still use large skips that, after discussing with the author, I would personally consider to be major in and of themselves. This means we can't accept this as a no MSG run.
	$LF
]div
[div class=p 
	"So in essence, the run is in purgatory. It was obsoleted both in time and in category upon submission, and both of which aren't exactly defined well enough in the rules to account for how we handle them. I should know, I started and finished rewriting the rules during the time this run was submitted. Normally, we don't count improvements found after a run's creation towards judgement, as obviously we can't say "You should have used this skip that literally nobody knew about" and reject over that. In that sense, we should be able to accept the run, but the bigger issue is with how the category itself is going to be treated on the site. A category explicitly meant to differentiate itself from any% by avoiding a major skip glitch now has its own major skip glitch. How exactly do we handle that?
	$LF
]div
[div class=p 
	"If we accept it completely as-is and let it be obsoleted by a new run that includes the new skip, then at that point we may as well just finish the obsoletion chain with a run that uses airswimming due to the similarities. This creates a paradox, because if our intent is for airswimming to eventually obsolete this run, then we can't accept this run in the first place because it doesn't use known techniques and is a full half hour slower than the RTA record. If we reject this run, that goes against our principles of not counting unknown improvements against the author, and it redefines the run into something it never intended to be in the first place.
	$LF
]div
[div class=p 
	"It took this long to come up with a solution, and that solution is admittedly a bit hacky. I am accepting the run as-is, but not 
	[em 
		"completely
	]em
	". What I'm going to do instead is bend our rules slightly and consider this the progenitor of a more glitchless/skipless category. Basically, this run would be obsoleted by a run that foregoes more skips, turning it more officially into a standard class "no MSG" category. It's not a clean solution, but I feel it's the most sane solution. It allows for a great run to be published and to not be punished by the usual TASvideos nonsense. We are slowly getting rid of that nonsense, of course, and perhaps we can find a better place for this run once it's all gone, but until then I can't let this run go to Grue in good faith as a Judge and representative of this site, as it did nothing to deserve that fate. The category will remain the same, I considered changing it but realized that it would only lead to further complication, but I will be accepting it to Moons to reflect that it is not strictly a standard version of this category. I'd also like a brief note in the publication description that explains the status of this category and how it will be treated and obsoleted in the future, as I know there will be confusion from people who see that this TAS is 20 minutes slower than the RTA record with the new skip.
	$LF
]div
[div class=p 
	"I apologize once again for how long this took. It was a weird, unique situation for us, but I'm glad it was able to end up this way.
	$LF
]div
[div class=p 
	"EZGames69 has claimed this, and has already started the publication process.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Made the branch lowercase, because it's not an intended mechanic with an official name.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/EZGames69 
		"EZGames69
	]a
	": 🐦🔧
]div
