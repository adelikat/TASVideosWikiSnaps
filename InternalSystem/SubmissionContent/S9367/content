3
[div class=p 
	"Toad’s Treasure Quest is AlexAR's latest SMB1 ROM hack. The foundation of this hack is what makes it special and highly enjoyable to play. A fellow ROM hacker, Googie, compiled a ROM containing hacks from various open-source Japanese SMB hacks. Googie then altered all the graphics (GFX) and sent the file to AlexAR for a collaboration project. Unfortunately, the project did not come to fruition. However, after a few months, AlexAR found some free time and decided to create a new SMB hack, using this incredible hack as a starting point.
	$LF
]div
[div class=p 
	"The hack contained new music, updated GFX, conveyor belts, new lead character animations, and upside-down pipes with Piranha Plants. None of the levels had been altered, though. So, using SMB Utility, AlexAR got to work, creating 16 original courses while ensuring the use of these exciting new features. This ROM hack is easier compared to AlexAR's previous work, Bowser’s Jumping Challenge, and the levels flow much more smoothly.
	$LF
]div
[div class=p 
	"The story explores how Toad came to possess all those helpful items in Super Mario Bros. 3. In this hack, players search for the warp flutes. While it’s known that Toad doesn’t actually give those flutes to the player in SMB3, the story imagines that Toad finds them and intends to give them to Mario. Unfortunately, Toad trips on a Goomba, drops the flutes, and they are stolen by Bowser’s henchmen.
	$LF
]div
[div class=p 
	"In Toad's Treasure Quest, a fan-made hack by AlexAR, the gameplay revolves around mastering a variety of complex tricks that push the limits of precision and timing. One of the core techniques I frequently employ is the frame-perfect wall jump. This maneuver demands impeccable timing, as I must press the jump button at the exact moment Toad touches a wall to leap off of it. These split-second wall jumps are crucial in several levels, allowing me to scale walls and bypass obstacles that would otherwise be impassable. In addition to this, many levels require well-timed jumps to clear large gaps or avoid hazards, making the hack both a test of skill and patience.
	$LF
]div
[div class=p 
	"A particularly tricky aspect of the game involves avoiding collision with hidden blocks. Throughout the hack, there are numerous invisible blocks that can sabotage a run if hit accidentally, as they often appear in places where you might instinctively jump. Interestingly, I’ve managed to avoid every single one of these hidden blocks, except for one tricky block located near a long wall in world 4-1. This specific block is unavoidable due to its placement, but with careful planning and execution, I am still able to navigate around it by relying on my frame-perfect wall jumps. It’s a satisfying challenge to work around the level’s hazards and keep the flow of the game intact.
	$LF
]div
[div class=p 
	"One of the quirks I find most amusing in Toad's Treasure Quest is a unique mechanic that takes place on rightward conveyor belts. If Toad is standing on one of these belts and you press left on the control pad while Toad is touching a wall to his right, there’s a small glitch that occurs where Toad slightly clips into the wall. This minor clipping can be exploited in some areas to gain a better position or avoid certain obstacles. It adds an interesting layer to the gameplay, as the conveyor belts themselves are a key component in many levels, and understanding how to manipulate this mechanic opens up new strategies for progression.
	$LF
]div
[div class=p 
	"Another oddity in the game occurs in world 1-2 with the spinies, the spiked enemies that crawl along the ground. In most levels, their speed is consistent, but for some unexplained reason, the speed of the spinies in this particular world varies greatly. Sometimes they move at breakneck speeds, racing across the level so fast that dodging them feels impossible. Other times, they crawl at a snail’s pace, or even stop moving altogether, as if the game is unsure how to handle their behavior. This inconsistency adds a strange, unpredictable element to the level, making it even more challenging to complete without taking damage.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/DrD2k9 
		"DrD2k9
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/DrD2k9 
		"DrD2k9
	]a
	": Welcome to TASVideos!  We're always glad to have new members showing an interest in our shared hobby.
	$LF
]div
[div class=p 
	"Our site strives to show off some of the best of what TASing has to offer; typically but not always (playarounds) from a speed optimization standpoint.  Even when there is an additional goal besides simply speed in a run, such as 
	[b 
		"Maximum Score
	]b
	", such runs are usually still expected to meet the stated goal as optimally as possible.
	$LF
]div
[div class=p 
	"As 
	(__wikiLink|displaytext=Asumeh|href=/Forum/Posts/532565)
	" mentioned in his forum post, this run is a good first effort.  Even though the game is a ROM hack, it is still based on a game engine with very well known optimization techniques.  Unfortunately your submitted run is lacking some of these well known tricks, which results in it being less optimal that it could be.  Further, there are other slowdowns that are unnecessary in your run.  For example coming up to the first pipe in 1-1:  In this submission, you jump from the block pillar to the side of the pipe where you perform a wall jump to get to the top of the pipe before continuing onward.  This technique is unnecessary, as it's possible to jump directly from the block pillar to the top of the pipe.
	$LF
]div
[div class=p 
	"I did some brief testing of my own on this ROM hack and was able to reach the flagpole at the end of 1-1 on frame 1263; this does use the fast start strategy, but does not use the flagpole glitch because I didn't want to mess with figuring out the subpixel stuff just for a test.  For reference, this submission first touches the flagpole on frame 1298.  So it's possible to get through this very first stage at least 35 frames faster.  That said, my hitting the flagpole on frame 1263 results in a timer of 356 resulting in 6 fireworks which delays the end of the stage.  So I did some more quick testing by delaying hitting the flagpole until the timer ticked to 355 then again compared my test to this submission in getting to the black screen after stage 1-1.  My testing got there at frame 1943 and this submission gets there at frame 1964.  So there are still a 21 frame savings by implementing the fast start and by not having unnecessary slowdowns.
	$LF
]div
[div class=p 
	"As Asumeh mentioned, we don't want to discourage you when it comes to TASing, but we also aren't able to publish runs where there is obvious sub-optimal play.  
	[em 
		"Please continue working on this game and others in the future
	]em
	".  We welcome you to seek feedback on your work via the 
	(__wikiLink|href=/Forum|implicitdisplaytext=Forum)
	" and/or 
	[a href=https://discord.gg/7KSr7eZVzG rel=noopener external nofollow 
		"via our Discord server
	]a
	" where many of us are available to help give pointers and suggestions on how to improve your skills.
	$LF
]div
[div class=p 
	"Once again, welcome!  Unfortunately, I must reject this run for reasons of optimization.
]div
