9
[p 
	"An odd Nintendo puzzler in the same vein as the old PC game Clockwerx and seen once again later as an extra in the GameCube game Animal Crossing.  The goal of Clu Clu Land is to uncover patterns of golden ingots buried under the ground by passing over them, which involves moving your character by having her grab onto pegs and spin around them.  This run controls two players simultaneously for more speed and entertainment.
	$LF
]p
[ul 
	[li 
		" Aims for fastest time
		$LF
	]li
	[li 
		" One player controls two players
		$LF
	]li
	[li 
		" Plays each stage once
		$LF
	]li
	[li 
		" Manipulates luck
		$LF
	]li
	[li 
		" Hard resets (power off and on) midway through
		$LF
	]li
	[li 
		" Genre: Puzzle
		$LF
	]li
	[li 
		" FCEU 0.98.15 used to record
		$LF
	]li
]ul
[h3 
	" General Notes
	$LF
]h3
[ul 
	[li 
		" In a normal playthrough of the game, it would start with the stage sequence (stage 1 .. stage 5, bonus); however, after beating the first bonus stage, the sequence permanently changes to (stage 2 .. stage 5, bonus, repeat).  As the purpose of this run is to play each stage (including the first stages) once, hard resetting is used at the end of each loop before the last (in which the bonus stage is played) to ensure this goal.  Deciding just when to reset can be rather arbitrary, however (Should the viewer get to see the score tally?  Should we just reset right after a stage is beaten?  etc.)  It was eventually decided that each reset should be immediately after the "blinking" effect of beating a stage ends (i.e. after the last blink ends; checking this out in frame advance should make my meaning clearer), so as to keep a timely pace without leaving the viewer bewildered; seeing the stage just instantly vanish when it's beaten would be confusing, while waiting on the score tally both misses the point of this run (fastest time in gameplay with no regard to score earned) and can cause the viewer to get impatient waiting for the next stage to start.
		$LF
	]li
	[li 
		" Luck manipulation in this run is used either to determine which stages appear in what order (by changing when Start is pressed on the title screen) and to cause enemies to move in certain ways (they can be ignored for the most part, but it seems that both pushing/coming into contact with a stunned enemy and trying to pass over an ingot will sometimes prevent the ingot from being uncovered the first time around).
		$LF
	]li
	[li 
		" Most of the time, you can grab a peg immediately after letting go of another (to turn in the opposite direction immediately, etc.)  However, the timing for this varies somewhat each time you do it (on stage 1 at least; with other stages it either works in a given instance or it doesn't), grabbing a peg straight out of longer turns doesn't work reliably (e.g. in the later stages it is somehow impossible to grab a peg immediately out of a U-turn), and sometimes just trying to perform this trick at all doesn't work regardless of the turn you're coming out of.  This seems to just happen randomly on stage 2 onward and I'm not sure why; sometimes I have to avoid this by using slower routes or spinning around on a peg for what seems at first to be a needlessly long time (I usually won't mention these in stage descriptions as it occurs in almost all of them).
		$LF
	]li
	[li 
		" When going on straightaways, you can grab pegs and immediately let go after the player "snaps" in alignment with them to gain some speed (sometimes you can do this straight out of a turn, but doing that always loses speed instead).
		$LF
	]li
	[li 
		" There are some odd inconsistencies between the players; sometimes player 1 is just a bit ahead of player 2 when they take symmetrical or otherwise similar routes, and vice-versa.
		$LF
	]li
]ul
[h3 
	" Loop 1
	$LF
]h3
[p 
	"(Only stages with anything that may raise questions aside from the above direction-changing glitch are mentioned; I'll answer questions about missing stages as they come)
	$LF
]p
[p 
	[b 
		"Stage 1 (robot thing):
	]b
	" Pretty odd route here with lots of moving around between blocks (in the interest of effectively dividing labor between players), I'm not sure what sort of improvements to this route there could be.
	$LF
]p
[p 
	[b 
		"Stage 4 (letter H):
	]b
	" I don't suspect there'd be any improvement if player 1's last two ingots (near the top-right corner) were done in a counterclockwise loop instead of clockwise.
	$LF
]p
[p 
	[b 
		"Stage 5 (maze 1):
	]b
	" The enemy from the near right black hole gets in player 2's way and forces about 8 in-game seconds lost from having to pass over a bar twice.
	$LF
]p
[h3 
	" Loop 2
	$LF
]h3
[p 
	[b 
		"Stage 2 (mime face):
	]b
	" Lots of spinning here thanks to the good ol' peg glitch; I'm not sure what other approaches could be taken to the mouth at the bottom.
	$LF
]p
[p 
	[b 
		"Stage 4 (5 rectangles):
	]b
	" Three 360-degree turns here because some bars inexplicably refuse to show up the first time around.  Also, I'm not sure if there's any benefit to going straight down from the first two rectangles (i.e. riding the wall to get to them)
	$LF
]p
[p 
	[b 
		"Stage 5 (spider?):
	]b
	" Same deal as the robot stage, though perhaps even more confusing.
	$LF
]p
[h3 
	" Loop 3
	$LF
]h3
[p 
	[b 
		"Stage 3 (wombat or whatever):
	]b
	" Not sure how else I could deal with the stopwatch that appears; player 1 has to change his route at the end to stall a bit so player 2 doesn't get frozen before completing his route.  The enemies thankfully stay put, though.
	$LF
]p
[p 
	[b 
		"Stage 4 (four courners):
	]b
	" Player 2 finishes slightly before player 1; I don't believe this has to do with the different way they handle the last two corners, just that player 1 started sagging behind a bit long before then.
	$LF
]p
[h3 
	" Loop 4
	$LF
]h3
[p 
	[b 
		"Stage 2 (spade):
	]b
	" Having the two players bump into each other near the beginning probably wouldn't make much difference (especially since the peg glitch bites extra hard here).
	$LF
]p
[p 
	[b 
		"Stage 4 (eight squares):
	]b
	" This stage took a few tries to manipulate enemy motion (which seemed oddly enough to arise simply fram natual differences in button timing, if only I could have that sort of luck in the maze); most of the time an enemy spawned in the bottom-left black hole which would've forced player 1 to pass over a certain ingot twice.
	$LF
]p
[p 
	[b 
		"Stage 5 (maze 2):
	]b
	" Some odd detours here because of the peg glitch and an effort to avoid hidden elastic barriers (they turn up if you go straight into them, but not if you turn on one of the pegs they're attached to)
	$LF
]p
[p 
	[b 
		"Bonus stage:
	]b
	" Perhaps my favorite in this run partly thanks to the music.  I end the movie as soon as possible, and there's probably a whole bunch of oddball routes I don't know about, but alas.
	$LF
]p
[hr 
]hr
[p 
	[a class=intlink href=/Users/Profile/Adelikat 
		"adelikat
	]a
	":  The response to this game has not been good. Therefore rejecting this submission for poor game choice.  The technical quality was good and using 2-players was nice but it failed to entertain the audience.
	$LF
]p
[p 
	"Good luck on future TASes.
	$LF
]p
[hr 
]hr
[p 
	[a class=intlink href=/Users/Profile/Baxter 
		"Baxter
	]a
	": Accepting for publication to the 
	(__wikiLink|/Vault|Vault)
	".
	$LF
]p
[hr 
]hr
[p 
	[a class=intlink href=/Users/Profile/Brandon 
		"Brandon
	]a
	": Publication underway.
]p
