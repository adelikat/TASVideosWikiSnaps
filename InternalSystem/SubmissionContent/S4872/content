9
[p 
	"Hello! Classic Kong Complete is a SNES homebrew version of the Donkey Kong game. Unlike the versions for NES and Atari, it includes all 4 original levels.
	$LF
]p
[p 
	"This submission is an improvement of 953 frames (15.86 seconds) to the 
	[a class=intlink href=/4494S 
		"previous TAS
	]a
	", being 940 frames faster than my previous movie. The improvement is detailed in the comments.
	$LF
]p
[p 
	(youtube|v=AvOooXbyEoQ)
	$LF
]p
[pre 
	$LF
]pre
[h3 
	" Game objectives
	$LF
]h3
[ul 
	[li 
		" Emulator used: Bizhawk 1.11.1
		$LF
	]li
	[li 
		" Aims for fastest speed
		$LF
	]li
	[li 
		" Manipulates luck
		$LF
	]li
	[li 
		" Abuses of glitches
		$LF
	]li
]ul
[p 
	"Since I found new tricks, this is my second submission of this game, saving much more time on this time. The entirety of this TAS was made with TAStudio, which thankfully didn't crash that frequently.
	$LF
]p
[h3 
	" Tricks used in this run
	$LF
]h3
[h4 
	" Stair boost
	$LF
]h4
[p 
	"If Jumpman is next to a stair and you press up or down to climb it, he will be warped a few pixels to the center of the stair. So, by start climbing it and then immediately leaving it, he will be boosted a bit. Fortranm forgot to use this trick in the stairs that were below Jumpman (ah, forget it, I'll just call him Mario), so I could save some time by doing that. Also, the game has a priority order:
	$LF
]p
[p 
	"First it checks if Mario is moving left or right;
	$LF
]p
[p 
	"Then it checks if he is starting climbing a stair
	$LF
]p
[p 
	"Then it checks if he is leaving a stair
	$LF
]p
[p 
	"Then it checks if he is jumping.
	$LF
]p
[p 
	"So, by pressing Right+Up+Down+B, you can walk to a stair, start climbing it, leave it and jump, for example, everything in the same frame. I saved at least one frame in every stair boost, since I pressed up + down instead of pressing up in a frame and down in the other frame, or vice versa.
	$LF
]p
[h4 
	" Running faster
	$LF
]h4
[p 
	"When you hold left or right, Mario moves a pixel to the said direction per frame, except in 1 out of 3 frames. So, his position will be something like 
	[em 
		"0, 1, 2, 2, 3, 4, 4, 5, 6, 6, 7, 8, 8...
	]em
	". Holding right + left, by the other hand, makes Mario to oscillate in 2 pixels, like 
	[em 
		"1, 2, 1, 2, 1, 2, 1, 2
	]em
	". However, if you hold right, or left, and press Right + Left in the frame Mario would not move a pixel, he will move the pixel! In 2 frames, he would be enable to move again, but them you can press right + left another time! So, if you press something like 
	[em 
		"L, LR, L, LR, L, LR..
	]em
	" or 
	[em 
		"R, RL, R, RL, R, RL...
	]em
	", Mario will move a pixel every frame, which means, he will be 50% faster! That's what I used to save a lot of time.
	$LF
]p
[p 
	"Doing this trick while moving left makes Mario to face right every other frame.
	$LF
]p
[h4 
	" Climbing faster
	$LF
]h4
[p 
	"When Mario is climbing up or down a stair, he moves 1 pixel every 3 frames. So, his positioning will be 
	[em 
		"0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3...
	]em
	" If, however, you press Up + Down in one of the frames Mario can't move, he will be able to move in the next frame (
	[em 
		"0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5
	]em
	"...)! So, with a similar input to the one used in the Running faster glitch, it's also possible to climb faster! The input will be 
	[em 
		"U, UD, U, UD, U, UD
	]em
	"... or 
	[em 
		"D, UD, D, UD, D, UD
	]em
	"... 
	$LF
]p
[p 
	"When climbing a stair with this glitch, it is facultative to press down (if you are climbing up) or up (if you are climbing down)in both the first and the last frames of the climbing. This can be used to address manipulation since pressing this buttons changes some addresses that determinate when Mario starts moving after climbing it, and at which Y position Mario will start climbing the next stair.
	$LF
]p
[h4 
	" RNG manipulation
	$LF
]h4
[p 
	"The game has one stage in which RNG manipulation is essential: the second one, 50m. The best way to manipulate RNG in this game seems to be jumping. It depends of the frame Mario jumped, the direction Mario jumped to, and it can also be affected by the jumps done in the previous stages. 
	$LF
]p
[h3 
	" Stage by stage comments
	$LF
]h3
[h4 
	" 25m
	$LF
]h4
[p 
	"I delayed in 1 frame the entrance of this level, because only that allows the background to load, for some reason. I don't lose any time here, since delaying this frame saves one frame of lag while the level is loading.
	$LF
	"The Running Faster and Climbing faster glitches allowed me to reach the top of the level sooner, and I didn't need to wait for the barrel. Some frames were also saved with better star boosts. Overall, 385 frames were saved in this stage.
	$LF
]p
[h4 
	" 50m
	$LF
]h4
[p 
	"I entered this level with a terrible RNG because of the changes in the previous level. The running and climbing faster glitches allowed me to reach the top of the level sooner, though, and I had more time to jump and manipulate RNG. So, I could make the stair to move up 6 frames sooner, and extra frames were saved by climbing faster its last pixels. Overall, 28 frames were saved here.
	$LF
]p
[h4 
	" 75m
	$LF
]h4
[p 
	"Again, running and climbing faster makes the difference. My previous strat, of jumping in order to reach the ground in a frame multiple of 3 but not multiple of 2, become useless. Since I reached the moving platform much sooner, I didn't wait it to move up and used a different route. Star boosts were also improved here. 52 frames were saved. 
	$LF
]p
[h4 
	" 100m
	$LF
]h4
[p 
	"In this stage I just used the moving faster tricks, improved the stair boosts and performed them in the stairs that were below Mario, saving 488 frames.
	$LF
]p
[h3 
	" Thanks
	$LF
]h3
[p 
	"I'd like to thank Kaizoman and Kaizoboy, for some help to not have 166 MB as the size of the movie file... Thanks also to Fortranm, for the previous movie!
	$LF
]p
[hr 
]hr
[p 
	[a class=intlink href=/Users/Profile/ars4326 
		"ars4326
	]a
	": Judging!
	$LF
]p
[p 
	[a class=intlink href=/Users/Profile/ars4326 
		"ars4326
	]a
	": Hi again, BrunoVisnadi.  I've gotta say, the running and ladder speed tricks you implemented here was fantastic!  These improvements were especially noticeable in the first and last stages.  All in all, another well done Donkey Kong obsoletion.
	$LF
]p
[p 
	"Accepting as an improvement to the 
	[a class=intlink href=/2727M 
		"published run
	]a
	"!
	$LF
]p
[p 
	[a class=intlink href=/Users/Profile/fsvgm777 
		"fsvgm777
	]a
	": Processing.
]p
