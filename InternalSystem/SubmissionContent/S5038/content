8
[div class=p 
	"“Conquer 21 Levels… War the Wiz… Free the Babe.”
	$LF
]div
[div class=p 
	"The Legend of Galahad is a side-scrolling adventure/platformer for the Sega Genesis. The game is a port of Leander for the Amiga, which was the first game developed by Travellers Tales. You play as Galahad on his quest to stop the Wicked Wiz of the East who has made off with Princess Leandra. Galahad must explore 21 levels in 3 different worlds in search of a hidden key in each level to progress, collecting coins to buy rune bombs, armor, and sword upgrades along the way.
	$LF
]div
[div class=p 
	"This TAS completes the game as fast as possible on the hardest difficulty while utilizing damage, death, and a major glitch to save time.
	$LF
]div
[div class=p 
	"The Tempest Blade is a sword upgrade that is extremely important in this TAS. By holding the sword button down, the Tempest Blade will charge up, indicated by the meter at the bottom of the screen. When released, Galahad will enter a tornado animation and his speed will double from 2 to 4 units per frame. This trait alone makes the Tempest Blade an obvious choice for a speedrun of this game, but it gets better. There is a glitch allowing Galahad to pass through walls and maintain height, achieved by ducking while in the Tempest Blade's tornado state. My current theory on how this works is that while ducking, the game subtracts 2 from Galahad's horizontal speed in an attempt to stop the player moving horizontally. Since Galahad moves at 4 units per frame while in the Tornado state, and 2 is subtracted while ducking, he moves horizontally at 2 units per frame while ducking. Likely to save some CPU time, the game doesn’t check horizontal collision while ducking since a check was put in place to stop the player moving  and as a result you can pass through walls. Also, since vertical position is locked, you can navigate over large gaps without falling and make jumps that would not normally be possible.
	$LF
]div
[div class=p 
	"Since clipping is slower than normal movement, often the glitchless route for a level is faster. There are some optimizations that can be done when executing this glitch. If you are moving into a wall, you will not clip through if you collide with it before ducking. Furthermore, if you have previously collided with a wall in the same direction (left/right) then you will not clip through at full speed. Instead, you will oscillate in the speed range of 0-2. So, in a room where a clip is needed, it is best not to collide with any walls beforehand. Another optimization is that when moving through a wall, letting go of down for 1 in roughly every 6 frames will allow movement at 4 units per second for that frame. This is vital to pass through some walls in one charge cycle. 
	$LF
]div
[div class=p 
	"Due to the nature of Tempest Blade charge cycle management, I had to put a lot of time and effort into finding the optimal time to release charge. This was a very hard TAS to optimize.
	$LF
]div
[div class=p 
	"25,273 is the rerecord count that should be used, but it’s technically an underestimate since I updated Bizhawk to a version that tracks rerecords in TAStudio after starting the TAS.
	$LF
]div
[div class=p 
	"Played on Bizhawk 1.11.5
	$LF
]div
[div class=p 
	"I've uploaded video of the TAS here:
	$LF
	(youtube|v=wztRFjWFOJ8)
	$LF
]div
[h2 id=ILComments 
	"IL Comments
	$LF
]h2
[h3 id=1-1 
	"1-1
	$LF
]h3
[div class=p 
	"Falling too far results in stopping before resuming movement. When exiting the cave, I fall on the ledge halfway down to avoid this. This is a time save over the previous WIP by UraniumAnchor. I also saved some more time by jumping over the first barrel instead of destroying it.
	$LF
]div
[h3 id=1-2 
	"1-2
	$LF
]h3
[div class=p 
	"Here I start collecting the 2000 coins needed for the Tempest Blade. Taking damage during the falling rock section doesn’t save time as you have to wait for a cyclic platform anyway. I use that damage to speed up the end of the level instead.
	$LF
]div
[h3 id=1-3 
	"1-3
	$LF
]h3
[div class=p 
	"I die and use the invincibility frames to pass through the dragon, saving a lot of time over the previous WIP.
	$LF
]div
[h3 id=1-4 
	"1-4
	$LF
]h3
[div class=p 
	"Finally, I get the Tempest Blade. I tested an alternate route for this level in which I did the cave before buying the Tempest Blade, it was slower.
	$LF
]div
[h3 id=1-6 
	"1-6
	$LF
]h3
[div class=p 
	"I tested multiple different glitched paths inside and outside of the cave. In both cases the intended path was fastest.
	$LF
]div
[h3 id=1-7 
	"1-7
	$LF
]h3
[div class=p 
	"A lot of optimization here to kill the spider on the frame that I run out of charge for the Tempest Blade.
	$LF
]div
[h3 id=2-1 
	"2-1
	$LF
]h3
[div class=p 
	"I use the locked vertical position of the Tempest Blade glitch to make some tight jumps in this level. You can’t grab objects while using the Tempest Blade tornado, so this limits my route for the cave. The short stop after falling a large distance can be done earlier in the air by using the Tempest Blade. So when I reach the ground, I am free to move right away.
	$LF
]div
[h3 id=2-2 
	"2-2
	$LF
]h3
[div class=p 
	"The extra frames of full speed movement through the wall are very important to do the first clip in this level quickly.
	$LF
]div
[h3 id=2-3 
	"2-3
	$LF
]h3
[div class=p 
	"I climb on some out of bounds tiles to reach the cave. I’m glad that I got to use the glitched route for this level.
	$LF
]div
[h3 id=3-1 
	"3-1
	$LF
]h3
[div class=p 
	"The cave could be faster by taking damage, but since you have to wait for a cyclic platform it would be a waste of health.
	$LF
]div
[h3 id=3-3 
	"3-3
	$LF
]h3
[div class=p 
	"This level was surprisingly difficult to optimize.
	$LF
]div
[h3 id=3-4 
	"3-4
	$LF
]h3
[div class=p 
	"There is a very glitched method to doing the first half of this level which was slower, but I get to use the same glitch in 3-5. I also tested the second half using both paths, left was slightly faster.
	$LF
]div
[h3 id=3-5 
	"3-5
	$LF
]h3
[div class=p 
	"I use a major glitch here to get to the cave. The cave and the level are loaded at the same time, separated by an out of bounds region. I navigate to the cave across this out of bounds region. But the cave has the wrong tileset/collision and the objects aren’t loaded. So I have to enter the door in the cave to come back to the main level, then enter it again to come into a properly loaded cave. This was 39 frames faster than the intended route and I’m really glad that this made it into the TAS.
	$LF
]div
[h3 id=3-6 
	"3-6
	$LF
]h3
[div class=p 
	"Falling between the platform and the wall is harder than it looks. Especially since the Tempest Blade glitch doesn’t work on objects like the moving platform. I don’t really understand how falling through the gap works, but it’s a big time saver.
	$LF
]div
[h3 id=3-7 
	"3-7 
	$LF
]h3
[div class=p 
	"I have to manipulate the Wiz to be near Leandra as he became vulnerable. This means that as I swipe my sword for the last time, I can end my input straight away. You can swipe more frequently if you’re hitting an enemy behind you, so I face away from the Wizard. Interestingly, by turning around on my second to last swipe, it hits twice. This means I can end my input earlier.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/Truncated 
		"Truncated
	]a
	": Judging.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/Truncated 
		"Truncated
	]a
	": Seems to be well optimized. I will accept it. Even though it's not terribly varied, the extra movement speed which has to be planned, and the trick to move through walls brings this into Moon territory for me.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Bublishink.
]div
