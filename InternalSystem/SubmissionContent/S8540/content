5
[div class=p 
	[b 
		"Objectives
	]b
	$LF
]div
[ul 
	[li 
		" Uses easiest difficulty
		$LF
	]li
	[li 
		" Genre: Board
		$LF
	]li
]ul
[div class=p 
	[b 
		"About this version of Checkers
	]b
	$LF
]div
[div class=p 
	"This game uses official checkers rules which, most notably, means that jumping is always madatory: if a player has the option to jump, he/she must take it, even if doing so results in a disadvantage for the jumping player.
	$LF
]div
[div class=p 
	"Umm... white always moves first though?? That's not the official rule but ok.
	$LF
]div
[div class=p 
	[b 
		"Difficulty Choice
	]b
	$LF
]div
[div class=p 
	"Game 1 is the easiest difficulty and was chosen here (I also submitted alongside this a TAS playing at Game 3, the hardest, so check that out if you're not interested in seeing easiest difficulty). At Game 1, the manual claims the computer will take 5-15 seconds per move, with an entire game lasting 15 minutes. Here are the stats on the computer's thinking time during this run:
	$LF
]div
[ul 
	[li 
		" Total: 43.65 seconds
		$LF
	]li
	[li 
		" Average: 2.18 seconds
		$LF
	]li
	[li 
		" Maximum: 5.36 seconds
		$LF
	]li
	[li 
		" Minimum: 0.10 seconds
		$LF
	]li
]ul
[div class=p 
	[b 
		"Routing
	]b
	$LF
]div
[div class=p 
	"Routing a game like this where the main thing to optimize is the computer thinking time is particularly difficult, as the "best" move is seldom the one that'll save you the most time. Lots of trial and error will be required. There are two good rules to follow in general however, which are:
	$LF
]div
[ul 
	[li 
		" Don't make the position complicated. More complicated positions and more move options greatly increase AI thinking time.
		$LF
	]li
	[li 
		" End the game in the least moves possible that does not complicate positioning. In the case of checkers, that would be done by either trading many pieces as early as possible, or trapping an opponent's pieces.
		$LF
	]li
]ul
[div class=p 
	"Unlike Game 3, where the AI thinks for a 
	[em 
		"very long
	]em
	" time, that is not the case here, the AI generally thinking very little no matter what kind of move we make. So reducing the number of turns has higher relative importance compared to thinking times in Game 1 versus Game 3 in a speedrun setting. Despite this we end up using a similar trapping strategy as in our Game 3 TAS. What's effective about this is you're progressively reducing the complexity of the position as AI pieces become trapped (options to calculate for them are basically nil) and the player's dominance of the board becomes stronger. It will also ultimately reduce the total number of moves played in the game. The main thing to watch out for will be to not let the AI undermine your trap from the other side!
	$LF
]div
[div class=p 
	[b 
		"Some Interesting Cursor Tech
	]b
	$LF
]div
[div class=p 
	"If you input Up+Left+Right or Down+Left+Right, this will cause the cursor to move two squares to the right. Normally, the cursor can only be moved in single diagonal increments so this can essentially be used as a "double cursor move" in certain situations. What's even more curious is when these inputs are performed on one of the rightmost squares on the board, the cursor will wrap to the leftmost square one row above, which can save several cursor movements. Each cursor movement saved equals 3 frames saved.
	$LF
]div
[div class=p 
	[b 
		"RNG
	]b
	$LF
]div
[div class=p 
	"There is some randomness to computer moves when more than one move is found to be about the best, and will choose one of up to two different moves which can change based on when the player's previous move is confirmed.
	$LF
]div
[div class=p 
	[b 
		"Game Summary
	]b
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://cdn.britannica.com/43/57543-004-1F90064A/Checkerboard-notation-squares.jpg title=Checkerboard move notation 
	]img
	$LF
]div
[table 
	[tbody 
		[tr 
			[th 
				"Move
			]th
			[th 
				"White
			]th
			[th 
				"Red 
			]th
			[th 
				"Load Time
			]th
			[th 
				"Commentary
			]th
		]tr
		[tr 
			[th 
				"1   
			]th
			[td 
				"22-18 
			]td
			[td 
				"12-16
			]td
			[td 
				"0:04.56   
			]td
			[td 
				"Old Faithful opening. Out of all the opening moves, black thinks for the least amount of time 
				$LF
			]td
		]tr
		[tr 
			[th 
				"2   
			]th
			[td 
				"18-14 
			]td
			[td 
				"9-18 
			]td
			[td 
				"0:00.37   
			]td
			[td 
				"Getting rid of some nuisance red pieces that would mess up our trap later
				$LF
			]td
		]tr
		[tr 
			[th 
				"3   
			]th
			[td 
				"23-14 
			]td
			[td 
				"10-17
			]td
			[td 
				"0:00.10   
			]td
			[td 
				"Forced captures also usually means short thinking times for red
				$LF
			]td
		]tr
		[tr 
			[th 
				"4   
			]th
			[td 
				"21-14 
			]td
			[td 
				"8-12 
			]td
			[td 
				"0:04.37   
			]td
			[td 
				"In the end, white has control of the center and now we can go for our trap
				$LF
			]td
		]tr
		[tr 
			[th 
				"5   
			]th
			[td 
				"26-23 
			]td
			[td 
				"6-9  
			]td
			[td 
				"0:04.76   
			]td
			[td 
				"Setting up the trap
				$LF
			]td
		]tr
		[tr 
			[th 
				"6   
			]th
			[td 
				"23-18 
			]td
			[td 
				"9-13 
			]td
			[td 
				"0:04.00   
			]td
			[td 
				"Part of the trap complete... looks like red is trying to go around the left side...
				$LF
			]td
		]tr
		[tr 
			[th 
				"7   
			]th
			[td 
				"25-22 
			]td
			[td 
				"16-20
			]td
			[td 
				"0:04.34   
			]td
			[td 
				"Let's make sure red doesn't try to slip by.
				$LF
			]td
		]tr
		[tr 
			[th 
				"8   
			]th
			[td 
				"31-26 
			]td
			[td 
				"11-16
			]td
			[td 
				"0:05.36   
			]td
			[td 
				"Many options here. This move forces red to not think as much and traps a checker on the right
				$LF
			]td
		]tr
		[tr 
			[th 
				"9   
			]th
			[td 
				"26-23 
			]td
			[td 
				"7-11 
			]td
			[td 
				"0:03.52   
			]td
			[td 
				"A diagonal of 5 white checkers; now we can move in front of these without getting jumped over 
				$LF
			]td
		]tr
		[tr 
			[th 
				"10  
			]th
			[td 
				"24-19 
			]td
			[td 
				"3-8  
			]td
			[td 
				"0:04.24   
			]td
			[td 
				"Time to get moving along the diagonal highway!
				$LF
			]td
		]tr
		[tr 
			[th 
				"11  
			]th
			[td 
				"28-24 
			]td
			[td 
				"1-6  
			]td
			[td 
				"0:02.29   
			]td
			[td 
				"Key losing move for red. Now if our planned trap unfolds, red will have 5 trapped checkers!
				$LF
			]td
		]tr
		[tr 
			[th 
				"12  
			]th
			[td 
				"19-15 
			]td
			[td 
				"6-9  
			]td
			[td 
				"0:01.40   
			]td
			[td 
				"Our trap will be set with the next move. Time to focus on the left side of the board
				$LF
			]td
		]tr
		[tr 
			[th 
				"13  
			]th
			[td 
				"24-19 
			]td
			[td 
				"2-6  
			]td
			[td 
				"0:01.07   
			]td
			[td 
				"If red moves 6-10 next, that would be bad for our setup so white's next move prevents that
				$LF
			]td
		]tr
		[tr 
			[th 
				"14  
			]th
			[td 
				"14-10 
			]td
			[td 
				"13-17
			]td
			[td 
				"0:00.55   
			]td
			[td 
				"In my Game 3 TAS, you'll notice red did not move 2-6 and made the terrible 13-17 move 
				[em 
					"first
				]em
				". Manipulating red to do that here would be ideal as well but i couldn't for the life of me get red to do that. Red always wants to go 2-6 or 2-7 on move 13 in Game 1 which is interesting cause, you know, this is supposed to be the 
				[em 
					"easiest
				]em
				" difficulty. Attempts to alter RNG by making different moves earlier in the game did not work as the AI was able to thwart everything I threw at it with some bogus move that undermined my trap! Because of this, in a curious twist of events, we end up with a Game 1 TAS that takes more turns than the Game 3 TAS LOL.
				$LF
			]td
		]tr
		[tr 
			[th 
				"15  
			]th
			[td 
				"22-13 
			]td
			[td 
				"20-24
			]td
			[td 
				"0:00.45   
			]td
			[td 
				"Red finally decides to make a break for it on the right but there will be no chance of that!
				$LF
			]td
		]tr
		[tr 
			[th 
				"16  
			]th
			[td 
				"27-20 
			]td
			[td 
				"9-14 
			]td
			[td 
				"0:00.27   
			]td
			[td 
				"Because we moved 14-10 on move 14, we can jump to 10-1 next instead of 18-9 and undermining our trap!
				$LF
			]td
		]tr
		[tr 
			[th 
				"17  
			]th
			[td 
				"10-1  
			]td
			[td 
				"14-17
			]td
			[td 
				"0:00.62   
			]td
			[td 
				"Red moves away from one of the checkers holding our trap together. Great!
				$LF
			]td
		]tr
		[tr 
			[th 
				"18  
			]th
			[td 
				"32-28 
			]td
			[td 
				"17-21
			]td
			[td 
				"0:01.13   
			]td
			[td 
				"We manipulate red into moving into the side of the board, trapping yet another checker!
				$LF
			]td
		]tr
		[tr 
			[th 
				"19  
			]th
			[td 
				"29-25 
			]td
			[td 
				"5-9  
			]td
			[td 
				"0:00.13   
			]td
			[td 
				"Red is forced to have their last active piece captured
				$LF
			]td
		]tr
		[tr 
			[th 
				"20  
			]th
			[td 
				"13-6  
			]td
			[td 
				"â€”    
			]td
			[td 
				"0:00.13   
			]td
			[td 
				"An 11-6 win!
			]td
		]tr
	]tbody
]table
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/nymx 
		"nymx
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/nymx 
		"nymx
	]a
	": Running with the precedent set by other similar games. Game 1 = Easiest level = similarity to any%.
	$LF
]div
[div class=p 
	"Accepting.
	$LF
]div
[div class=p 
	"Note to publisher: Please fix the branches to reflect the category being played...as this game will be running with two branches now. Thanks.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/despoa 
		"despoa
	]a
	": Processing...
]div
