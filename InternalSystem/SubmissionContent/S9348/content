6
[div class=p 
	"Professor Layton and the Curious Village is the first game released in the Professor Layton series, following Professor Layton and his apprentice Luke Triton to the town of St. Mystere to investigate an artefact known as the Golden Apple. Rather than take the time to ask the residents about the goings on in the town, Layton and Luke instead rush from place to place, solving just enough puzzles to reach the home of the Golden Apple, and reveal the mysteries of the town.
	$LF
]div
[h3 id=VersionDifferences 
	"Version Differences
	$LF
]h3
[div class=p 
	"Four Version of Professor Layton and the Curious Village were released: The original Japanese version, The NTSC version, The PAL version, and the updated Japanese version, dubbed "Friendly Edition". There are numerous changes amongst the versions, but for the purposes of a speedrun, the main three are:
	$LF
]div
[ol 
	[li 
		" Text
		$LF
	]li
	[li 
		" Loads
		$LF
	]li
	[li 
		" Puzzles
		$LF
	]li
]ol
[div class=p 
	[b 
		"Text
	]b
	$LF
	"For Curious Village, text scrolls 1 character at a time unless you either press the screen using the stylus, or press the A button, which causes that entire section of text to appear. Because we can do that on the first frame possible and make all text appear at once every time it's on screen, text doesn't play a huge factor in the timing of the run. There are a couple of lines of text that can be skipped a frame earlier if the line is short enough, but there are not enough of them to counterbalance the other points.
	$LF
]div
[div class=p 
	[b 
		"Loads
	]b
	$LF
	"From testing, it seems that all the games have varying load times, with PAL being the slowest and Japanese Friendly Edition being the fastest. Just from starting the game to reaching the prologue screen, PAL loses ~14 seconds to Japanese Friendly. As with most DS TASes, loads aren't completely accurate to console, so loads were compared on Bizhawk 2.9.2 to check, and Japanese Friendly comes out fastest.
	$LF
]div
[div class=p 
	[b 
		"Puzzles
	]b
	$LF
	"Each version of the game has a handful of puzzles that are different between versions. For example, Puzzle 107 on the Japanese versions of the game is a typical "circle the right answer" puzzle, whereas on the PAL and NTSC versions, this is replaced with a sliding puzzle instead. Same with some of the Kanji based puzzles, which are changed rather than being translated. Considering the types of puzzles that are quickest, as well as the locations that are quickest to find puzzles in, ultimately Japanese Friendly Edition comes out on top.
	$LF
]div
[h3 id=Routing 
	"Routing
	$LF
]h3
[div class=p 
	"As a point-and-click puzzle game, routing which puzzles need to be completed is the biggest part of the TAS. Throughout the story, there are 24 puzzles that you will come across through intended actions. However, 7 of these puzzles occur in the final stretch of the game, after you've passed the final Puzzle Check. Out of the 17 that you meet before that check, 5 of them are optional puzzles that can be quit out of and skipped, but because of the timeloss of still having to enter the puzzle, then quitting out, and then also finding a different puzzle to complete in its place, all 17 are done.
	$LF
]div
[div class=p 
	"Throughout the game, there are 4 Puzzle Checks, where the game checks how many total puzzles you have completed before letting you progress in the story. They are as follows:
	$LF
]div
[ol 
	[li 
		" 12 Puzzle Check - When first passing through the clocktower into the north part of town.
		$LF
	]li
	[li 
		" 30 Puzzle Check - When pressing Crumm for information about a rumoured kidnapping.
		$LF
	]li
	[li 
		" 50 Puzzle Check - When asking Archibald to examine a desk once owned by the late baron.
		$LF
	]li
	[li 
		" 75 Puzzle Check - When entering the Tower to get to the last portion of the game.
		$LF
	]li
]ol
[div class=p 
	"Therefore, alongside the 17 story puzzles we complete, we also have to solve 58 optional puzzles. These puzzles are found either by talking to the residents of the town, clicking on objects of interest (such as candles, clocks, cats, etc), or by clicking on parts of the level to uncover hidden puzzles. More information about specific puzzle time can be found below. The Professor Layton series also has another way of solving puzzles however. Because the game is set up to tell a story, with events happening that change who is in the town, where they are, and how they interact, there are certain puzzles that can be lost. Once a puzzle is lost, it is transferred to Granny Riddleton's Shack, located in the centre of town. To gain entry to the building that houses the shack, you must complete Puzzle 58 (1501 frames), and also talk to Granny Riddleton (824 frames), which are both optional. Once this is done though, there are a total of 36 puzzles that can end up being lost throughout the game that are then transferred to GR's Shack (technically 41 if you include Story Puzzles, but they're faster to solve when they're found).
	$LF
]div
[div class=p 
	"When a puzzle is found in the Overworld, the pattern goes as follows:
	$LF
]div
[ul 
	[li 
		" Click on the object/person, which causes a fade-out
		$LF
	]li
	[li 
		" Fade-in, talk to person/chat about object, fade-out
		$LF
	]li
	[li 
		" Fade-in on Puzzle, do Puzzle, fade-out
		$LF
	]li
	[li 
		" Fade-in to Overworld again, more talking to person/about object, rewards pop-up, fade-out
		$LF
	]li
	[li 
		" Fade-in back to the Overworld
		$LF
	]li
]ul
[div class=p 
	"When a puzzle is completed in Granny Riddleton's Shack, the pattern goes as follows:
	$LF
]div
[ul 
	[li 
		" Click on Puzzle in list, confirm, fade-out
		$LF
	]li
	[li 
		" Fade-in on Puzzle, do Puzzle, fade-out
		$LF
	]li
	[li 
		" Fade-in on Shack, rewards pop-up, fade-out
		$LF
	]li
	[li 
		" Fade-in on Puzzle list
		$LF
	]li
]ul
[div class=p 
	"Therefore, by doing the puzzles from the Shack as opposed to in the Overworld, you save time from not having to do any dialogue, as well as an additional black screen, and a quicker puzzle entry from clicking on the puzzle in the list instead of waiting for the !-mark in the Overworld. On average, you're saving ~150-200 frames per puzzle done in Granny Riddleton's, and the majority of the puzzles are quick puzzles (with only 2 being slow enough to not be worth doing for Any%), so you save approximately 5000 frames across all puzzles. You lose time to having to talk to Granny Riddleton, as well as adding an extra journey back to Granny Riddleton's at the end of the game, but you still come out almost 3000 frames faster than not using the Shack.
	$LF
]div
[div class=p 
	"When deciding upon the other puzzles chosen for the run, you then have to take into account a few points. Firstly, what type of puzzle it is, as certain puzzles are faster/slower than others. Secondly, the dialogue coming into and going out of the puzzle. Any time the person talking in the conversation changes, the game has to fade out one text box, and then fade into another, wasting several frames. Lastly, location. There are several puzzles that exist off the main path of the story, which would require either revisiting previous locations, or heading to new locations not visited in this TAS. Some of these puzzles are faster than some of the puzzles in this TAS. However, because of the time taken to move to another screen and also move back, these puzzles end up losing time to puzzles that are already on the direct route.
	$LF
]div
[h3 id=Puzzles 
	"Puzzles
	$LF
]h3
[div class=p 
	"There are several different types of puzzle throughout the game:
	$LF
]div
[ul 
	[li 
		" Input Answer
		$LF
	]li
	[li 
		" Multiple Choice Answer
		$LF
	]li
	[li 
		" Circle the Correct Answer
		$LF
	]li
	[li 
		" Matchstick Puzzles
		$LF
	]li
	[li 
		" Sliding Block Puzzles
		$LF
	]li
	[li 
		" One-Off Style Puzzles
		$LF
	]li
]ul
[div class=p 
	"Multiple Choice puzzles are the fastest puzzles, taking 5 frames to complete the puzzle. After that, the next fastest is Circle the Correct Answer Puzzles, taking 7 frames. Matchstick Puzzles take 3(No of Matchstick Movements)+2 frames. For Input Answer Puzzles, it takes 41 frames+the number of frames needed to write the answer. For all other puzzles, the amount of time taken can vary massively depending on the type of puzzle and how long the puzzle is.
	$LF
]div
[div class=p 
	"As well as the actual puzzle screen, the Pictarats result screen and final answer screen typically are fairly consistent across puzzles, as long as you skip both screens on the first possible frames. However, for certain puzzles, there isn't a dedicated final answer image - which tends to be the case for puzzles that don't have a definitive final look to the solution (sliding block puzzles) - which means that the game doesn't need to fade out from the Pictarat screen to load in the final answer screen, which saves a decent chunk of frames also. For this TAS, all puzzles were independently timed to get the fastest selection of puzzles.
	$LF
]div
[h3 id=OptimisingInputs 
	"Optimising Inputs
	$LF
]h3
[div class=p 
	"As a point-and-click, saving frames on how inputs are registered is super important. Below is listed different ways in which inputs are optimised, and would differ from optimal human play.
	$LF
]div
[ul 
	[li 
		" In the Overworld, anytime you click on either the shoe, an object of interest or a door after a black screen, you have a small frame window during the fade-in from black (typically 2-4 frames) to hold down the stylus, which then allows you to lift the stylus one frame earlier than normal to interact with the object. This has the bonus side effect of removing the ripple effect that normally appears when you click the screen, which means that this can only be seen right at the start of the run when you have to press twice on the screen without a transition between.
		$LF
	]li
	[li 
		" When a travel option has more than one way to trigger (i.e. Both clicking on the shoe and clicking on the door itself), it is sometimes faster enter using the shoe, and sometimes faster to enter using the door itself. This is very much a case by case basis, and normally is only a 5 frame difference, however certain doors have a 25 frame difference depending on how you interact with them.
		$LF
	]li
	[li 
		" When loading in a puzzle, if you touch the screen on the last possible input frame whilst the puzzle number is moving from bottom screen to top screen, the puzzle will load immediately on the first possible frame, which saves 3 frames over normal clicking.
		$LF
	]li
	[li 
		" On the Pictarat results screen, pressing the screen 73 frames after the Correct graphic hits the top screen will allow the Pictarat total to be added up 1 frame quicker.
		$LF
	]li
]ul
[div class=p 
	"There's also a few things that don't save time, but look more interesting from a viewer perspective:
	$LF
]div
[ul 
	[li 
		" When completing a circle puzzle, by buffering in the first input, the game doesn't draw the first line that is created, although it is still registered by the game. This means for puzzles 52 and 89, it looks like a weird bucket shape is showing the answer, but the 4th edge does exist in the game, it just never exists visually.
		$LF
	]li
	[li 
		" For Sliding Block Puzzles (Excluding puzzle 97), it takes the same number of frames to wait to move a block as it does to move a different block instead. Therefore, no time is lost by moving multiple blocks at the same time, rather than moving a single block 2 spaces in a row.
		$LF
	]li
]ul
[h4 id=Text 
	"Text
	$LF
]h4
[div class=p 
	"Text skipping in this game follows an easy to follow pattern. Characters are split into 3 groups, although 1 of these groups only contains 1 type of text. For the other 2 groups, some characters can press the A button to load the entirety of their first text box 3 frames before the first letter is shown, and some characters can press the A button 2 frames before. Once the initial A button press, you then have a frame of no input, then a frame of stylus press. This pattern then follows through into all following textboxes. There are certain situations where you press the A button, then the immediate next frame touch the screen, which is saved for either super short lines of dialogue, or any type of exclamation a character makes. The table below lists the characters and where they fall on the list. The 3rd group is saved for Red Text, used when reading Dahlia's Diary. For these lines, you have to press the A button the frame before the text appears instead.
	$LF
]div
[table 
	[tbody 
		[tr 
			[th 
				"3 Frame A Press
			]th
			[th 
				"2 Frame A Press
			]th
		]tr
		[tr 
			[td 
				"Luke
			]td
			[td 
				"Layton
			]td
		]tr
		[tr 
			[td 
				"Ingrid
			]td
			[td 
				"Beatrice
			]td
		]tr
		[tr 
			[td 
				"StachenScarfen
			]td
			[td 
				"Rodney
			]td
		]tr
		[tr 
			[td 
				"Pauly
			]td
			[td 
				"Crouton
			]td
		]tr
		[tr 
			[td 
				"Gordon
			]td
			[td 
				"Flick
			]td
		]tr
		[tr 
			[td 
				"Chelmey
			]td
			[td 
				"Gerard
			]td
		]tr
		[tr 
			[td 
				"Agnes
			]td
			[td 
				"Granny Riddleton
			]td
		]tr
		[tr 
			[td 
				"Marco
			]td
			[td 
				"Zappone
			]td
		]tr
		[tr 
			[td 
				"Lucy
			]td
			[td 
				"Percy
			]td
		]tr
		[tr 
			[td 
				"Archibald
			]td
			[td 
				"Martha
			]td
		]tr
		[tr 
			[td 
				"Adrea
			]td
			[td 
				"Sylvian
			]td
		]tr
		[tr 
			[td 
				"Marco
			]td
			[td 
				"Ramon
			]td
		]tr
		[tr 
			[td 
				"Deke
			]td
			[td 
				"Matthew
			]td
		]tr
		[tr 
			[td 
				"Dahlia
			]td
			[td 
				"Simon
			]td
		]tr
		[tr 
			[td 
				"Proscuitto
			]td
			[td 
				"Tutorial Screens
			]td
		]tr
		[tr 
			[td 
				"Guiseppe
			]td
			[td 
				" 
			]td
		]tr
		[tr 
			[td 
				"Franco
			]td
			[td 
				" 
			]td
		]tr
		[tr 
			[td 
				"Jarvis
			]td
			[td 
				" 
			]td
		]tr
		[tr 
			[td 
				"Flora
			]td
			[td 
				" 
			]td
		]tr
	]tbody
]table
[h3 id=PotentialImprovements 
	"Potential Improvements
	$LF
]h3
[ul 
	[li 
		" All of the written answers were worked out using trial and error to achieve the fastest drawing for each number/letter/kanji needed. There is definitely potential to save frames on some of these, although the writing recognition in the game is pretty wonky.
		$LF
	]li
	[li 
		" Any Sliding Puzzle has potential to have some improvement by using a different route to move the blocks.
		$LF
	]li
	[li 
		" In the game, loads get longer as you get later into the story. This seems to be the only factor that causes this, but there may be another factor, like certain puzzles being solved, or completing certain events, that may change this and improve load times.
		$LF
	]li
	[li 
		" As Bizhawk becomes more console accurate with loads, the puzzle choices may change for an optimal TAS.
		$LF
	]li
]ul
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/DrD2k9 
		"DrD2k9
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/DrD2k9 
		"DrD2k9
	]a
	": Updating with 
	(__wikiLink|displaytext=a movie file|href=/UserFiles/Info/638650265920797831)
	" that syncs on BizHawk 2.9.1.  Also changing the emulator version to 2.9.1 instead of 2.9.2
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/DrD2k9 
		"DrD2k9
	]a
	": Appears well researched and executed.  Accepting.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/fsvgm777 
		"fsvgm777
	]a
	": Processing.
]div
