4
[div class=p 
	"GBC NHL 2000. Fastest win. Ends input early. Player team is green.
	$LF
]div
[ul 
	[li 
		" Emulator used: BizHawk 2.9.1
		$LF
	]li
	[li 
		" Genre: sports
		$LF
	]li
	[li 
		" Goal: win a game (exhibition mode)
		$LF
	]li
	[li 
		" Aims for fastest time (end input early)
		$LF
	]li
	[li 
		" Uses hardest difficulty
		$LF
	]li
	[li 
		" Manipulates luck
		$LF
	]li
]ul
[div class=p 
	"Going to the options wastes time, so let's just start the game with the hardest difficulty and hope for the best. No team changes were made because it would waste too much time.
	$LF
]div
[div class=p 
	"I have to add some frames of input after the shot to manipulate the outcome. Otherwise the opponent makes a goal. I could end input 24 frames faster, but with all my attempts the opponent always won, so I have to accept this result since I don't have a reliable method for testing all button combinations. The game seems chaotic enough that the opponent could make own goal with extreme luck. Theoretically we could end input after a few frames of gameplay. The problem is that we need to watch the whole match each time to see if the player won or not. I believe a winning match could easily be among the first 100,000 shortest input patterns, so it should be brute-forceable with a bot and then it would be the optimal TAS forever.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/eien86 
		"eien86
	]a
	": Claiming for judging.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/eien86 
		"eien86
	]a
	": Yet another abuse of less than competent hockey AI. This one is extremely lucky to survive for full 15 minutes after the initial goal.
	$LF
]div
[div class=p 
	"Accepting to Standard
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/despoa 
		"despoa
	]a
	": Processing...
]div
