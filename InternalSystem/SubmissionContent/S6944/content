7
[div class=p 
	"The Adventures of Captain Comic
	$LF
	"is an early console-style side-scrolling platform game for the PC.
	$LF
	"It is a kind of Metroidvania
	$LF
	"in which you explore a world,
	$LF
	"collecting items that increase your abilities
	$LF
	"and open up new areas.
	$LF
]div
[h3 id=GameObjectives 
	" Game objectives
	$LF
]h3
[ul 
	[li 
		" Emulator used: JPC-RR 11.8-rc2
		$LF
	]li
	[li 
		" Aims for fastest time
		$LF
	]li
	[li 
		" Uses death to save time
		$LF
	]li
	[li 
		" Abuses programming errors
		$LF
	]li
]ul
[h3 id=GameVersion 
	" Game version
	$LF
]h3
[div class=p 
	"There are 
	[a href=https://tcrf.net/The_Adventures_of_Captain_Comic_(DOS)#Revisional_Differences rel=noopener external nofollow 
		"five revisions
	]a
	$LF
	"of the game, released between 1988 and 1991.
	$LF
	"Revisions 1 and 2 have a glitch
	$LF
	"that makes the route more interesting
	$LF
	"(the hover glitch, described below).
	$LF
	"This run uses Revision 1.
	$LF
]div
[div class=p 
	"The physics, enemy spawn logic, and level layouts of this DOS version are totally different from those of the 
	(__wikiLink|displaytext=NES version|href=/3080M)
	" of the game. As far as we know, none of the DOS tricks work on the NES version, nor the NES tricks on DOS.
	$LF
]div
[div class=p 
	"The files in the disk image come from the
	$LF
	"Internet Archive item
	$LF
	[a href=https://archive.org/details/MicroCom_394_Captain_Comic rel=noopener external nofollow 
		"MicroCom_394_Captain_Comic
	]a
	".
	$LF
	"The item
	$LF
	[a href=https://archive.org/details/TheAdventuresOfCaptainComic rel=noopener external nofollow 
		"TheAdventuresOfCaptainComic
	]a
	$LF
	"also has Revision 1,
	$LF
	"but it is missing the file COMIC.DOC (which does not affect gameplay).
	$LF
]div
[h3 id=Items 
	" Items
	$LF
]h3
[div class=p 
	"Items collected in this run:
	$LF
]div
[table 
	[tbody 
		[tr 
			[td 
				[img alt=Crown class=embed mw-100 src=https://www.bamsoftware.com/computers/tasvideos/comic-crown-32x32.gif 
				]img
				" 
				[img alt=Gold class=embed mw-100 src=https://www.bamsoftware.com/computers/tasvideos/comic-gold-32x32.gif 
				]img
				" 
				[img alt=Gems class=embed mw-100 src=https://www.bamsoftware.com/computers/tasvideos/comic-gems-32x32.gif 
				]img
				" 
			]td
			[td 
				"The Crown, the Gold, and the Gems are the treasures that Captain Comic has to recover. The game ends when you collect all three of these, in any order. Treasures do not affect Comic's abilities in any way, apart from granting an extra life. 
			]td
		]tr
		[tr 
			[td 
				[img alt=Door Key class=embed mw-100 src=https://www.bamsoftware.com/computers/tasvideos/comic-doorkey-32x32.gif 
				]img
				" 
			]td
			[td 
				"The Door Key lets Comic use doors. 
			]td
		]tr
		[tr 
			[td 
				[img alt=Blastola Cola class=embed mw-100 src=https://www.bamsoftware.com/computers/tasvideos/comic-blastolacola-32x32.gif 
				]img
				" 
			]td
			[td 
				"Blastola Cola lets Comic shoot fireballs. The more cans he collects, the more shots he can have on screen at once, up to a maximum of five. 
			]td
		]tr
		[tr 
			[td 
				[img alt=Teleport Wand class=embed mw-100 src=https://www.bamsoftware.com/computers/tasvideos/comic-teleportwand-32x32.gif 
				]img
				" 
			]td
			[td 
				"The Teleport Wand warps Comic a few tiles ahead, even through solid obstacles. Teleporting is slightly faster than walking, but only when moving left. 
			]td
		]tr
		[tr 
			[td 
				[img alt=Shield class=embed mw-100 src=https://www.bamsoftware.com/computers/tasvideos/comic-shield-32x32.gif 
				]img
				" 
			]td
			[td 
				"A Shield refills Comic's HP. If he is already at full HP, a Shield grants an extra life. 
			]td
		]tr
	]tbody
]table
[div class=p 
	"Items not collected:
	$LF
]div
[table 
	[tbody 
		[tr 
			[td 
				[img alt=Corkscrew class=embed mw-100 src=https://www.bamsoftware.com/computers/tasvideos/comic-corkscrew-32x32.gif 
				]img
				" 
			]td
			[td 
				"The Corkscrew makes Comic's fireballs wobble up and down, so they can hit enemies on the ground. It's not helpful for the speedrun. We pass by the Corkscrew at 6:12 in this run, when entering BASE level. 
			]td
		]tr
		[tr 
			[td 
				[img alt=Boots class=embed mw-100 src=https://www.bamsoftware.com/computers/tasvideos/comic-boots-32x32.gif 
				]img
				" 
			]td
			[td 
				"The Boots make Comic jump higher. They would not take much time to collect, but it is faster overall to use the hover glitch whenever we need extra vertical movement. 
			]td
		]tr
		[tr 
			[td 
				[img alt=Lantern class=embed mw-100 src=https://www.bamsoftware.com/computers/tasvideos/comic-lantern-32x32.gif 
				]img
				" 
			]td
			[td 
				"The Lantern lights up the castle level. Because we do not collect it, we have to play the castle in the dark. Collecting the Lantern is meant to require traversing two whole levels. In Revision 1, there is 
				[a href=https://tcrf.net/The_Adventures_of_Captain_Comic_(DOS)#Maps rel=noopener external nofollow 
					"a trick
				]a
				" to collect it early using the Teleport Wand, but it still would take extra time. 
			]td
		]tr
	]tbody
]table
[h3 id=Route 
	" Route
	$LF
]h3
[div class=p 
	"The physics of this game are simple.
	$LF
	"Optimization is mostly about routing
	$LF
	"and only a little about player movement.
	$LF
	"Because the three treasures may be collected in any order,
	$LF
	"there are many viable routes.
	$LF
	"A typical glitchless route might look like this:
	$LF
]div
[div class=p 
	[a href=https://www.bamsoftware.com/computers/tasvideos/comic-route-basic-20201120.svg rel=noopener external nofollow 
		[img alt=A route that goes through forest, lake, space, base, cave, lake again, shed, comp, forest again, then all three castle stages. class=embed mw-100 src=https://www.bamsoftware.com/computers/tasvideos/comic-route-basic-20201120.png 
		]img
	]a
	$LF
]div
[div class=p 
	"It is possible, though difficult, to skip collecting the Lantern and play through the castle level in the dark,
	$LF
	"which removes the need to enter the "shed" and "comp" levels.
	$LF
	"That is the speedrunning route used in revisions of the game that do not have the hover glitch:
	$LF
]div
[div class=p 
	[a href=https://www.bamsoftware.com/computers/tasvideos/comic-route-lanternless-20201120.svg rel=noopener external nofollow 
		[img alt=A route that goes through forest, lake, space, base, cave, lake again, forest again, then all three castle stages. class=embed mw-100 src=https://www.bamsoftware.com/computers/tasvideos/comic-route-lanternless-20201120.png 
		]img
	]a
	$LF
]div
[div class=p 
	"The glitched route used in this run
	$LF
	"further eliminates most of the "space" and "base" levels
	$LF
	"by breaking the intended sequence for getting into the "cave" level.
	$LF
	"The route uses seven intentional deaths,
	$LF
	"which are used as death warps or to activate the hover glitch.
	$LF
	"See the "Route optimization" section below for details of how this route was arrived at:
	$LF
]div
[div class=p 
	[a href=https://www.bamsoftware.com/computers/tasvideos/comic-route-20201120.svg rel=noopener external nofollow 
		[img alt=A route that goes through forest, one stage of castle, forest again, lake, cave, base, and one stage of space. class=embed mw-100 src=https://www.bamsoftware.com/computers/tasvideos/comic-route-20201120.png 
		]img
	]a
	$LF
]div
[h3 id=Tricks 
	" Tricks
	$LF
]h3
[div class=p 
	"See also 
	(__wikiLink|href=/GameResources/DOS/CaptainComic|implicitdisplaytext=GameResources/DOS/CaptainComic)
	".
	$LF
]div
[h4 id=HoverGlitch 
	" Hover glitch
	$LF
]h4
[div class=p 
	"The most important trick in the run is the hover glitch,
	$LF
	"which lets Captain Comic fly for a limited time.
	$LF
	"It is done by holding the jump key while respawning.
	$LF
	"The glitch is canceled by walking on the ground or by going through a door.
	$LF
	"Because you can only hover after dying,
	$LF
	"any time saved by using the glitch
	$LF
	"must be weighed against the time needed to die.
	$LF
]div
[div class=p 
	"The technical cause of the hover glitch is an integer underflow.
	$LF
	"There is an unsigned 8-bit variable that controls how long Comic may accelerate upward during a jump.
	$LF
	"It is normally set to 4 (or 5 when Comic has the Boots)
	$LF
	"and decreased by 1 for every game tick that Comic is in the air.
	$LF
	"The bug is that the variable is set to 0 when Comic respawns.
	$LF
	"An immediate jump after respawning causes the counter to underflow to 255.
	$LF
]div
[div class=p 
	"In this run, you will see the hover glitch used
	$LF
	"in the forest at 1:25,
	$LF
	"in the castle at 2:27,
	$LF
	"at the lake at 4:47,
	$LF
	"and in the cave at 5:20 and 5:37.
	$LF
]div
[h4 id=HoverUnderflow 
	" Hover underflow
	$LF
]h4
[div class=p 
	"While Comic hovers at the top of the screen, his vertical velocity, stored as a signed byte, constantly decreases. Eventually the velocity underflows, changing from a large negative to a large positive number and shooting Comic towards the bottom of the screen. When this happens, you can continue to hold the jump key to make Comic die by falling off the bottom of the screen, or release the jump key to overflow the vertical velocity again and send him back to the top (unless there was a tile right above his head, which will set his vertical velocity to zero).
	$LF
]div
[div class=p 
	"The velocity underflow trick is used to escape the castle after collecting the Crown at 2:35, by death warping back to the entrance.
	$LF
]div
[h4 id=LeftTeleports 
	" Left teleports
	$LF
]h4
[div class=p 
	"The base unit of distance in the game is 8 pixels, or half a tile.
	$LF
	"The action of the Teleport Wand is intended to be this:
	$LF
	"move Comic 6 units in the direction he is facing,
	$LF
	"to the lowest vertical position where there is room to stand.
	$LF
	"A teleport lasts 6 game ticks and moves Comic 6 units forwards,
	$LF
	"so teleporting is nominally no faster than
	$LF
	"Comic's walking speed of 1 unit / tick.
	$LF
	"But the destination horizontal position is always rounded down to a multiple of 2,
	$LF
	"which means that if Comic starts at an odd horizontal coordinate,
	$LF
	"a left-facing teleport actually moves him 7 units
	$LF
	"(and a right-facing teleport moves him only 5 units).
	$LF
	"The upshot is that a left teleport can move Comic 7 units over 6 game ticks,
	$LF
	"which is a little faster than walking:
	$LF
	"every time you do it, it saves 1 game tick, or about 110 ms.
	$LF
	"Each left teleport moves Comic closer to the edge of the screen,
	$LF
	"and you can only do a small number of them
	$LF
	"before the game won't let you teleport any farther.
	$LF
]div
[div class=p 
	"In this route, the left teleport trick is used only a few times.
	$LF
	"There is not much leftward movement required
	$LF
	"after collecting the Teleport Wand.
	$LF
	"You will see the trick used while moving to the exit of the cave level starting at 5:53,
	$LF
	"and just before collecting the Gems at 6:32.
	$LF
]div
[h4 id=EnemySpawnManipulation 
	" Enemy spawn manipulation
	$LF
]h4
[div class=p 
	"Sometimes we need to take damage from enemies for an intentional death.
	$LF
	"When that happens, we try to manipulate enemies to appear as quickly, and as near to Comic, as possible.
	$LF
	"The main rules for enemy spawns are:
	$LF
]div
[ol 
	[li 
		" Enemies spawn a short distance offscreen, in the direction Comic is facing. How far offscreen is determined by a global cyclic counter that cycles through 0, 2, 4, and 6 units.
		$LF
	]li
	[li 
		" When Comic enters a level or respawns, all enemies are scheduled to spawn after 21 ticks. When an enemy despawns, it is scheduled to respawn after 21, 41, 61, 81, or 101 game ticks, according to another global cyclic counter.
		$LF
	]li
	[li 
		" Enemies can only spawn directly above a solid map tile, at the lowest open space that is at or above the level of Comic's feet.
		$LF
	]li
	[li 
		" Enemies despawn when they are 30 units away or farther from Comic.
		$LF
	]li
]ol
[div class=p 
	"It is sometimes necessary to manipulate enemy spawns throughout a stage
	$LF
	"in order to set up favorable conditions for the beginning of the next stage.
	$LF
	"Manipulation is most commonly done by jumping (because enemies cannot spawn below the level of Comic's feet),
	$LF
	"or by momentarily facing in the opposite direction.
	$LF
]div
[h4 id=CollisionDetection 
	" Collision detection
	$LF
]h4
[div class=p 
	"For the purpose of collision with map tiles,
	$LF
	"while Comic is moving upward, only his upper half is solid;
	$LF
	"and when moving horizontally or downward, only his lower half is solid.
	$LF
	"In some circumstances, this makes it possible to pass through
	$LF
	"apparently solid walls.
	$LF
]div
[div class=p 
	"This trick is used to enter the room containing the Crown at 2:32.
	$LF
]div
[h3 id=LevelByLevelComments 
	" Level-by-level comments
	$LF
]h3
[div class=p 
	"The first half of the run requires a lot of backtracking.
	$LF
	"We start directly in front of the castle that contains the Crown,
	$LF
	"but we cannot enter it without the Door Key.
	$LF
	"We trek across two and a half stages of the forest level, collect the Door Key,
	$LF
	"then do an immediate death warp to cut out part of the return journey.
	$LF
	"As a side effect, the death warp activates the hover glitch,
	$LF
	"which we take advantage of to get over a tall tree without stopping.
	$LF
	"Then we march across two stages, back to where we started,
	$LF
	"meanwhile taking damage to set up a quick death inside the castle.
	$LF
]div
[div class=p 
	"The castle level is designed to show you the Crown right away,
	$LF
	"but then make you traverse three stages before you can collect it.
	$LF
	"We skip most of the level by clipping through a wall.
	$LF
	"Immediately after entering the castle,
	$LF
	"we take damage from an enemy and die to initiate hover.
	$LF
	"We abuse collision detection to clip through
	$LF
	"the corner of the wall that surrounds the Crown,
	$LF
	"Once inside the treasure room, however,
	$LF
	"there is no way to clip back out,
	$LF
	"so we continue hovering until the velocity underflow glitch
	$LF
	"throws us off the bottom of the screen.
	$LF
	"Comic dies and respawns at the entrance.
	$LF
]div
[div class=p 
	"The interior of the castle is dark,
	$LF
	"because we do not have the Lantern.
	$LF
	"This is what the castle segment would look like with the lights on:
	$LF
]div
[div class=p 
	[img alt=An animation of Captain Comic hovering through a wall to collect the Crown in the castle, then dying to respawn at the entrance class=embed mw-100 src=https://www.bamsoftware.com/computers/tasvideos/comic-crown-deathwarp-20201120.gif 
	]img
	$LF
]div
[div class=p 
	"After exiting the castle, we cross the forest again, for the third and last time.
	$LF
	"On the way, we grab a Shield at full HP to earn an extra life.
	$LF
	"We have taken three intentional deaths so far, and will need to take four more.
	$LF
	"In the lake level we pick up a Blastola Cola,
	$LF
	"which lets Comic shoot one fireball at a time.
	$LF
	"Enemies are easy to dodge,
	$LF
	"so shooting them is mostly for show,
	$LF
	"though it can be used to affect spawn patterns.
	$LF
]div
[table 
	[tbody 
		[tr 
			[td 
				[img alt=Comic standing at the right edge of LAKE2, with a hole 12 units away class=embed mw-100 src=https://www.bamsoftware.com/computers/tasvideos/comic-lake2_rb-20201016.png 
				]img
				" 
			]td
			[td 
				[img alt=Comic standing at the left edge of LAKE1, with a hole 4 units away class=embed mw-100 src=https://www.bamsoftware.com/computers/tasvideos/comic-lake1_lb-20201016.png 
				]img
				" 
			]td
		]tr
		[tr 
			[td 
				"12 units to the hole. 
			]td
			[td 
				"4 units to the hole. 
			]td
		]tr
	]tbody
]table
[div class=p 
	"In the third lake stage, the wall next to the rocket
	$LF
	"is meant to require the Boots or the Teleport Wand to get over.
	$LF
	"We get over it using a hover instead.
	$LF
	"At the transition into the third stage,
	$LF
	"we cross the boundary, cross back, die (initiating hover), respawn, then cross the boundary a third time.
	$LF
	"That little shuffle is because it's slightly faster to die
	$LF
	"on the right side of the boundary than the left side,
	$LF
	"which outweighs the cost of crossing and re-crossing the boundary.
	$LF
	"At the beginning of the hover,
	$LF
	"we abuse collision detection to float partway through some solid platforms,
	$LF
	"so as not to slow down while floating upward through a gap.
	$LF
]div
[div class=p 
	"Getting over the wall by the rocket is a major sequence break.
	$LF
	"Normally you would have take the rocket door,
	$LF
	"then go through three space stages and three base stages
	$LF
	"to get to the cave level.
	$LF
	"We will go to the cave first, then do the base and space stages backwards,
	$LF
	"so that we only have to visit a small part of them.
	$LF
]div
[div class=p 
	"Inside the cave, there's a door that's too high to reach.
	$LF
	"We take a death and hover up to it.
	$LF
	"Going through the door cancels hover, however,
	$LF
	"and we need to hover again on the other side.
	$LF
	"We try to take damage on the way to set up another quick death,
	$LF
	"but the tricky part is that there's an unavoidable Shield in front of the door.
	$LF
	"We must collect the Shield before getting hit, or else it would cancel out any damage we had taken already.
	$LF
]div
[div class=p 
	"The death in the pit below the Gold is the trickiest manipulation in the run.
	$LF
	"We need to take five points of damage,
	$LF
	"but only four enemies can spawn at a time.
	$LF
	"The first enemy is manipulated to have the shortest possible
	$LF
	"respawn timer, 21 ticks.
	$LF
	"We take damage from the first enemy—simultaneously despawning it and starting its respawn timer—then
	$LF
	"take damage from the other three while waiting for the first to respawn.
	$LF
	"After dying, we hover up to the Gold and escape the pit.
	$LF
	"In the adjacent stage, we collect the Teleport Wand,
	$LF
	"do a quick left teleport, then jump in a hole for a death warp.
	$LF
	"We do as many left teleports as possible on the way out of the cave.
	$LF
]div
[div class=p 
	"The base level is somewhat maze-like,
	$LF
	"its stages being divided into separate regions connected by doors.
	$LF
	"The Teleport Wand lets us skip most of it.
	$LF
	"Going through two doors takes us to the space level, where the Gems await.
	$LF
]div
[div class=p 
	"The interesting point about collecting the final treasure is ending input early.
	$LF
	"We must jump up to the platform with the Gems. (This level has low gravity,
	$LF
	"so the jump is possible even without Boots.)
	$LF
	"Instead of pressing the jump key at the point we need to jump,
	$LF
	"we start a left teleport from 7 units away,
	$LF
	"then buffer a jump input while the teleport is in progress.
	$LF
	"The game automatically makes Comic jump when the teleport finishes.
	$LF
]div
[h3 id=RouteOptimization 
	" Route optimization
	$LF
]h3
[div class=p 
	"We have an unusually high degree of confidence in the route,
	$LF
	"because it is the result of computer optimization.
	$LF
	"See 
	(__wikiLink|displaytext=Post #495817|href=/Forum/Posts/495817)
	" for a sketch of the optimization algorithm.
	$LF
	"In brief, it finds a shortest path between the game's initial state
	$LF
	"and a winning state,
	$LF
	"relying on a human TASer to measure the time required for a small subset of state transitions.
	$LF
	"A state comprises Comic's location, inventory,
	$LF
	"and other information such as the current respawn checkpoint.
	$LF
	"There are connections between states for, for example,
	$LF
	"walking from one location to another,
	$LF
	"going through a door,
	$LF
	"or dying and respawning at checkpoint.
	$LF
	"What transitions are possible from a given state is governed by an underlying "logic graph"
	$LF
	"that defines what locations can reach what other locations,
	$LF
	"using what items.
	$LF
]div
[div class=p 
	"The optimizer program starts with over-optimistic lower-bound estimates of the time
	$LF
	"required for each state transition, finds a shortest path,
	$LF
	"then asks the human TASer to measure how long each transition in the route really takes.
	$LF
	"Depending on the numbers entered by the TASer,
	$LF
	"the optimizer may suggest another potential route whose estimated cost makes it more appealing.
	$LF
	"The process continues until one complete route is measured and no better alternatives are found.
	$LF
	"If things go well,
	$LF
	"the algorithm finds an optimum route without
	$LF
	"requiring explicit knowledge of the time needed
	$LF
	"to transition between every pair of connected states.
	$LF
	"In this instance, there are 23,278 reachable states,
	$LF
	"and 341,742 transitions between them,
	$LF
	"but only 289 of the transitions had to be measured manually.
	$LF
	"The final route contains 51 state transitions.
	$LF
]div
[div class=p 
	"The optimization algorithm relies on a number of assumptions.
	$LF
	"If any assumption is invalidated, it may mean that the computed route is not really optimal.
	$LF
	"The assumptions are:
	$LF
]div
[ul 
	[li 
		" The estimated lower-bound times for each state transition are really lower bounds; it is not possible to do them any faster.
		$LF
	]li
	[li 
		" The human TASer finds the true minimum time for each state transition.
		$LF
	]li
	[li 
		" The logic graph is correct and the algorithm is implemented correctly.
		$LF
	]li
	[li 
		" There are no other glitches that could make state transitions faster.
		$LF
	]li
]ul
[div class=p 
	"In addition, the algorithm makes a few simplifying approximations that don't perfectly reflect reality, such as that the timings of state transitions are independent. This is not quite true, as there are a few pairs of transitions whose timings are linked: you can shift time from one to the other, but you cannot make them both faster. If any approximations like this are too far from the truth, it could mean the computed route is not optimal.
	$LF
]div
[div class=p 
	"For some neat related work in route optimization,
	$LF
	"see 
	[a href=https://www.youtube.com/watch?v=1ZsAjvO9E1g rel=noopener external nofollow 
		"JaV's video
	]a
	$LF
	"on combinatorial optimization of a TrackMania track.
	$LF
	"It required a human to manually time 225 track segments in advance.
	$LF
	"Another interesting project is
	$LF
	[a href=https://www.youtube.com/watch?v=kpn30v5Y_YQ rel=noopener external nofollow 
		"collaboratively optimizing paths through recipe graphs
	]a
	$LF
	"in Paper Mario: The Thousand-Year Door.
	$LF
]div
[h3 id=SourceCodeAndData 
	" Source code and data
	$LF
]h3
[div class=p 
	"The route optimization program, Lua scripts, notes, and other files
	$LF
	"are in a Git repository:
	$LF
]div
[pre 
	"git clone https://www.bamsoftware.com/git/comic.git
	$LF
	"cd comic/tas/
	$LF
]pre
[div class=p 
	"Some large or static files will not be cloned by default.
	$LF
	"To download them, you need 
	[a href=https://git-annex.branchable.com/ rel=noopener external nofollow 
		"git-annex
	]a
	":
	$LF
]div
[pre 
	"cd comic/tas/
	$LF
	"git annex get
	$LF
]pre
[div class=p 
	"The repository contains other Comic-related goodies,
	$LF
	"such as ripped graphics and sounds,
	$LF
	"commented disassemblies,
	$LF
	"and the source code of a randomizer.
	$LF
]div
[div class=p 
	"The creation of this TAS is documented in a
	$LF
	[a href=https://archive.org/details/@david_fifield?and%5b%5d=subject%3A%22The+Adventures+of+Captain+Comic%22+subject%3A%22live+coding%22+subject%3A%22TAS%22&sort=date rel=noopener external nofollow 
		"series of live coding videos
	]a
	".
	$LF
	"There are 21 videos, totaling about 83 hours.
	$LF
]div
[h3 id=Thanks 
	" Thanks
	$LF
]h3
[ul 
	[li 
		" Michael Denio.
		$LF
	]li
	[li 
		" 
		[a class=intlink href=/Users/Profile/Radiant 
			"Radiant
		]a
		" for encouragement on the forum.
		$LF
	]li
	[li 
		" 
		[a href=http://www.shikadi.net/moddingwiki/User:Malvineous rel=noopener external nofollow 
			"Malvineous
		]a
		", 
		[a href=http://www.shikadi.net/moddingwiki/User:Ceidwad rel=noopener external nofollow 
			"Ceidwad
		]a
		", and other editors of the 
		[a href=http://www.shikadi.net/moddingwiki/Captain_Comic rel=noopener external nofollow 
			"Captain Comic
		]a
		" pages at ModdingWiki.
		$LF
	]li
	[li 
		" 
		[a href=https://github.com/ianopolous/JPC rel=noopener external nofollow 
			"JPC
		]a
		" and 
		(__wikiLink|displaytext=JPC-RR|href=/EmulatorResources/JPC)
		".
		$LF
	]li
	[li 
		" Creators and players of randomizers.
		$LF
	]li
]ul
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/slamo 
		"slamo
	]a
	": As somebody who played this game as a kid and could never beat it, it's pretty satisfying to see the game picked apart like this. I've been following the progress of this run and I'm impressed by the use of your optimization algorithm; for such a non-linear game, you've made it really convincing that this is the fastest possible route. There are also a lot of useful glitches that I wasn't aware of.
	$LF
]div
[div class=p 
	"It should be noted that this version uses a much different engine from the 
	(__wikiLink|displaytext=NES version|href=/3080M)
	" that we have a movie of.
	$LF
]div
[div class=p 
	"Feedback was good overall. The first half of the run was a little boring, but the hover glitches were amusing and the latter half was pretty hectic. Accepting to Moons.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Zinfidel 
		"Zinfidel
	]a
	": Processing...
]div
