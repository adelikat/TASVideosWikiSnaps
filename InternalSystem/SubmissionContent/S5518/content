6
[div class=p 
	"Psycho Fox is a simple platformer for the Sega Master System. This run is a real time improvement over the currently published run thanks to some devious abuse of the SMS architecture.
	$LF
]div
[h3 id=GameObjectives 
	" Game objectives
	$LF
]h3
[ul 
	[li 
		" Emulator used: BizHawk 1.12.2
		$LF
	]li
	[li 
		" Beats the game as fast as possible
		$LF
	]li
	[li 
		" Abuses programming errors
		$LF
	]li
]ul
[h3 id=Comments 
	" Comments
	$LF
]h3
[div class=p 
	"This one might be a bit controvertial but I figured it's an interesting enough circumstance that is was worth trying to put on the workbench. This trick was originally pointed out by MESHUGGAH 
	(__wikiLink|displaytext=here|href=/Forum/Topics/19132)
	" as a possible emulator bug. But as it turns out, this is a valid trick that just so happens to be possible due to a simple programming oversight.
	$LF
]div
[div class=p 
	"The improvement in this run is entirely due to reducing loading times by abusing non-maskable interrupts (NMIs) that are generated in the SMS when the 'pause' button is hit. It might seem counter-intuitive that pressing the pause button would make a game go faster, but it does turn out to be the case if pressed at the right time. 
	$LF
]div
[div class=p 
	"Here is what the game is doing during typical loading screen frame:
	$LF
]div
[pre 
	"Halt, wait for interrupt (~50000 cycles)
	$LF
	"Vblank, Execute necessary code for the frame (~7000 cycles)
	$LF
	"Repeat
	$LF
]pre
[div class=p 
	"What happens when you press pause, is that an NMI occurs in those ~50000 cycles where nothing is happening. The NMI itslef doesn't do anything important except for Return to where the code would be executing after a normal interrupt, so basically it's doing two frames in one. EX:
	$LF
]div
[pre 
	"Halt, wait for interrupt (zero cycles in this case since pause is pressed immediately)
	$LF
	"NMI
	$LF
	"Execute frame code
	$LF
	"Halt again
	$LF
	"VBlank, frame code again
	$LF
]pre
[div class=p 
	"The basic idea is that the return from interrupt returns to the same place regardless of which interrupt is triggered.
	$LF
	"There is plenty of time in a frame to add another interrupt without effecting anything else. 
	$LF
]div
[div class=p 
	"And that's all there is to it! 
	$LF
]div
[div class=p 
	"So is it legit? Personally I think so, it's valid input that is doable real time (since on average you'd hit an NMI during HALT about 75% of the time.) And, why would you not want loading screens to go faster? 
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": At the first glance it looked like a rejection to me, because not a single frame of gameplay was improved through optimization. But I double-checked, and there's no rule demanding that for every obsoletion, only for switching game regions. So yeah, as long as something can be sped up with player input alone, it is considered an optimization technique. Accepting as an improvement to 
	(__wikiLink|href=/1996M|implicitdisplaytext=1996M)
	".
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/fsvgm777 
		"fsvgm777
	]a
	": Processing.
]div
