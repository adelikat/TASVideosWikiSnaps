15
[div class=p 
	"Ice Climber is a classic NES platforming game where you play as Popo and Nana and aid them in their quest to recover veggies from 32 different mountain peeks. The current run is an improvement over the previous movie of about 45 seconds using new tricks and significant luck manipulation.   
	$LF
]div
[pre 
	$LF
]pre
[h3 id=GameObjectives 
	" Game objectives
	$LF
]h3
[ul 
	[li 
		" Emulator used: FCEUX 2.2.2
		$LF
	]li
	[li 
		" 2 Players
		$LF
	]li
	[li 
		" Beats the game as fast as possible while completing each bonus stage
		$LF
	]li
	[li 
		" Manipulates Luck
		$LF
	]li
]ul
[h3 id=Comments 
	" Comments
	$LF
]h3
[div class=p 
	"This improvement to Walker Boh's movie is roughly evenly split between better bonus stages, better platforming and trick use, and luck manipulation to get the best possible mountains. It contains several hundred thousand automated rerecords besides the manual ones. 
	$LF
]div
[h3 id=TricksAndGlitches 
	" Tricks and glitches
	$LF
]h3
[div class=p 
	"Each level uses more or less the same tricks. I'll list them here and compare to Walker Boh.
	$LF
]div
[h4 id=InstantLongJump 
	" Instant long jump
	$LF
]h4
[div class=p 
	"If you are standing still for at least 2 frames, and then you jump and hit a direction the next frame, you will instantly jump at running speed. This alone adds up to significant time saved over the course of the run.
	$LF
]div
[h4 id=JumpingThroughCeilings 
	" Jumping through ceilings
	$LF
]h4
[div class=p 
	"This trick was in Walker Boh's run already, but is used more extensively here. If you land on ice or a cloud and slide on a high platform, which would otherwise make the screen scroll upwards, the screen won't scroll until you stop sliding. If you jump during this time you can pass through the ceiling above you. If the other player makes the screen scroll while you are above the ceiling and haven't bonked your head, you will land above it after the screen scrolls.
	$LF
]div
[h4 id=CollisionDetectionAbuse 
	" Collision Detection abuse
	$LF
]h4
[div class=p 
	"The game has a bit of trouble when both players are colliding in mid air. Interesting things happen, like boosting, quick landing, multiple block breaking, and hovering. These tricks are used often.
	$LF
]div
[h4 id=LuckManipulation 
	" Luck Manipulation
	$LF
]h4
[div class=p 
	"As you might notice, each floor of the mountain contains 2 layers of blocks. The upper layer is fixed for each level, the lower layer uses the RNG to generate semi-random blocks. The RNG changes many times per frame, so its not feasible to manipulate it constructively, but it is susceptible to random guess and check. So I simply looked at each level and decided where I wanted the holes in the lower level to be, and set conditions in my random guessing code to check the ram addresses where the floors are contained. Unfortunately, not all arrangements are allowed, so I couldn't always get what I considered an optimal layout.  
	$LF
]div
[div class=p 
	"Floors aren't the only things that can be manipulated. The condor at the top of the mountain, the other enemies, and to a limited extent even the clouds can be manipulated to a position of maximum convenience.
	$LF
]div
[h3 id=OtherComments 
	" Other comments
	$LF
]h3
[div class=p 
	"This was a long and honestly tedious run. It contains about 8 minutes just of stage end jingles and score screens. Making mountains could take up to 30 minutes for each before I even got to TAS them. Luckily many towards the end required very little manipulation as they contain fewer blocks. In the end I'm happy with the result though, at least it's closer to optimal then it was.
	$LF
]div
[div class=p 
	"I found a better way to do the level 3 / 11 bonuses but only once I reached level 19 (it has the same bonus.) I didn't have the will to go back and re-sync everything, so I'll have to leave this run with about a 4 second known improvement. I'm sure there are other improvements out there, especially if someone else with a fresh perspective looks at it. 
	$LF
]div
[div class=p 
	"But, more importantly, this run has no chance of syncing on console. The RNG changes rapidly and near perfect accuracy would be required of a given emulator. Needless to say, one would need to completely redo the manipulation of every mountain. I would personally be willing to take a second look at this run, if an emulator could be shown to generate a run that would sync on console. I consider this game an excellent test case.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/ars4326 
		"ars4326
	]a
	": Judging!
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/ars4326 
		"ars4326
	]a
	": Hi again, Alyosha.  Very good work on the improvements made in all of the 32 stages (some were quite noticeable, watching side-by-side).  It is remarkable to note the tech work that went into this, as well.  The entertainment value, overall, was also considerably higher with the tighter 2p input and hijinks (voter and forum feedback reflected this, too).  You've been on a role, this year!
	$LF
]div
[div class=p 
	"As for the branch name, I'm going to go ahead and leave it blank (any%) due to the precedent set in Walker Boh's 
	(__wikiLink|displaytext=original submission|href=/Forum/Topics/871)
	" (where it was decided that collecting the bird "completes" the stage).
	$LF
]div
[div class=p 
	"Accepting as an improvement to the 
	(__wikiLink|displaytext=published run|href=/451M)
	", and upgrading to Moons!
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Spikestuff 
		"Spikestuff
	]a
	": Publishing. :P
]div
