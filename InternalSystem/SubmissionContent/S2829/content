26
[div class=p 
	[b 
		"Game objectives
	]b
	$LF
]div
[ul 
	[li 
		"Emulator used: PCEjin svn 128
		$LF
	]li
	[li 
		"Aims for Fastest Time
		$LF
	]li
	[li 
		"Takes Damage to Save Time
		$LF
	]li
	[li 
		"Colors Numerous Dinosaurs
		$LF
	]li
	[li 
		"Genre: Platform
		$LF
	]li
]ul
[div class=p 
	[b 
		"Overview:
	]b
	$LF
]div
[div class=p 
	"Bonk's Adventure is a TurboGrafx 16 game based upon the true story of a caveboy who bears a striking resemblance to Charlie Brown battling anthropomorphic dinosaurs and other prehistoric themed enemies. Bonk's mission is to rescue Princess Za (a small pink Pleisiosaur-type reptile) who has been kidnapped by the evil King Drool (a large, green, Tyrannosaurus-type dinosaur).  This TAS manages to color several of these anthropomorphic dinosaurs.
	$LF
]div
[div class=p 
	"Bonk attacks enemies by "bonking" them with his large, semi-invincible forehead.  A bonk in midair causes double the amount of damage of a regular bonk.  Bonk starts the game with three hearts worth of health, which can be restored in increments by collecting fruits and vegetables.
	$LF
]div
[div class=p 
	"Bonk can also collect pieces of meat as power-ups.  A large piece of meat makes Bonk temporarily invincible, makes him walk faster, and makes him jump higher.  The animation associated with eating meat takes about two seconds, so it's only used 
	[del 
		"once
	]del
	" twice in this TAS.
	$LF
]div
[div class=p 
	"During a stage, Bonk is given the opportunity to collect smiley faces.  Bonk's smileys are totaled at the end of each stage after defeating the boss of that stage. The player is given additional points, replenished health, and a moderately amusing congratulation based on how many smileys were collected.  Unfortunately, each smiley face costs about 8-12 frames at the end of each stage, so all but one of them are avoided.  (The one in stage 1-2 can't be avoided without losing more than 8 frames.)
	$LF
]div
[div class=p 
	"Bonk can spin in midair in order to slow his descent to the ground.  The sound is fairly annoying.  Sorry.
	$LF
]div
[div class=p 
	[b 
		"TAS Strategies:
	]b
	$LF
]div
[div class=p 
	"When Bonk bonks the side of a Flora Springer or Floret Springer on the correct frame, it repels him quickly in the opposite direction.  If you jump up in the air during the "repel" animation, you can maintain this speed until Bonk hits the ground.  While in midair, you can bonk an enemy in order to get a small height boost, or you can take damage from an enemy to get a much larger height boost.  Between enemy placement, the game's very odd collision detection, and subpixel positioning, it was often quite challenging to maintain this speed.
	$LF
]div
[div class=p 
	"When landing from a jump, you may lose a little forward momentum if you don't immediately jump again.  That's why you'll see some occasional bunny hopping.
	$LF
]div
[div class=p 
	"After Bonk defeats a boss, he and the boss are automatically moved to predetermined positions.  By manipulating their positions during the battle, it's possible to save frames.
	$LF
]div
[div class=p 
	"The emulator did not report any lag, so I ignored it in my TAS.  However, I have a hunch that there is actually some lag here and there. 
	$LF
]div
[pre 
	$LF
]pre
[div class=p 
	[b 
		"Stage-by-stage Breakdown:
	]b
	$LF
]div
[div class=p 
	[b 
		"1-1:
	]b
	$LF
	"There is a secret flower that is revealed by bonking the far left hand side of the screen at the beginning on the stage.  This causes a funny looking flower to fly towards Bonk, which he catches and repels off of.  It's possible to fly over the entire stage by using damage boosting, but it uses up too much energy.  Get used to the sound of Bonk flipping in midair.  It only gets more annoying over time. 
	$LF
]div
[div class=p 
	[b 
		"1-2:
	]b
	$LF
	"It's quicker to take damage at the beginning of the stage instead of climbing up the wall as the game designers intended.  This is the first and last time you'll see Bonk eat meat.  It allows him to jump high enough to fly over the majority of the stage.  It's also the only time he'll collect a smiley face, as it wastes too many frames to avoid it. 
	$LF
]div
[div class=p 
	[b 
		"1-3:
	]b
	$LF
	"The first half of this stage is fairly straightforward.  The second part involves swimming, but it's actually quite fun to watch.  During my old WIPs, I discovered that you could swim through the "Uvulalas" <sic> without taking damage using some precise positioning.  This is used to save time and health.  Sonikkustar's WIP helped me tremendously with the swimming part of this stage. 
	$LF
]div
[div class=p 
	[b 
		"Level 1 Boss, Huey:
	]b
	$LF
	"This poor guy is pretty defenseless in a TAS.  The tricky thing was to manipulate his position at the end. 
	$LF
]div
[pre 
	$LF
]pre
[div class=p 
	[b 
		"2-1:
	]b
	$LF
	"Lots of spinning and damage boosting. 
	$LF
]div
[div class=p 
	[b 
		"2-2:
	]b
	$LF
	"This stage may not look like much, but it's actually very difficult to manipulate the positioning in order to fly across the entire stage. 
	$LF
]div
[div class=p 
	[b 
		"2-3:
	]b
	$LF
	"This is a stage in which the emulator doesn't report any lag, but it looks like there is.  The jump at the end of the stage is actually quite difficult to perform.  There's no margin for error. 
	$LF
]div
[div class=p 
	[b 
		"2-4:
	]b
	$LF
	"Lots of spinning.  Did I mention that the sound is annoying? 
	$LF
]div
[div class=p 
	[b 
		"2-5:
	]b
	$LF
	"Bonk gets a speed and pixel boost from each vine.  It's very difficult to catch the second vine after repelling off of the first one. 
	$LF
]div
[div class=p 
	[b 
		"2-6:
	]b
	$LF
	"This stage was a pain to TAS, but I enjoy watching the result because it's unlike any other stage in the game.  Going up the right side and crossing over was about 300 frames faster than going up the left side. 
	$LF
]div
[div class=p 
	[b 
		"2-7:
	]b
	$LF
	"The clouds provide a significant height and speed boost when hit.  The revised version of the submission has Bonk eating some meat halfway through the stage.  This costs some frames for now, but it saves over 200 frames at the boss.
	$LF
]div
[div class=p 
	[b 
		"Level 2 Boss, Gladdis:
	]b
	$LF
	[del 
		"It may look sloppy to have Bonk walk halfway into the room before turning around, but it's necessary in order to trigger the boss.
	]del
	"  Bonk still has some meat power left by the time that he arrives at the boss, so he's able to defeat it in half the time that it usually takes.  Bonk doesn't have very many interesting moves to keep things moving while we're waiting for the boss to attack, but I do my best. 
	$LF
]div
[div class=p 
	"I had to re-do this boss after discovering that Bonk deals more damage when hitting from above than hitting from below.  I was able to copy and paste the changes, but it led to major desyncs in level 5. 
	$LF
]div
[pre 
	$LF
]pre
[div class=p 
	[b 
		"3-1:
	]b
	$LF
	"When I originally did this stage, Bonk didn't have enough energy to afford even a single a damage boost, so it was nearly impossible to make it through while maintaining high speed.  It still looks pretty impressive now, in spite of the fact that he has a little energy in reserve after re-doing the level 2 boss. 
	$LF
]div
[div class=p 
	[b 
		"3-2:
	]b
	$LF
	"If you fall down here, you're taken to level 3-3.  If you make it across, you're warped to level 3-5.  The game designers clearly intended for you to flip/fly over the bridge.  However, I decided to show that you could jump across it with perfectly timed jumps.  I may lose a couple frames by doing it this way, but I think that it greatly adds to the entertainment. 
	$LF
]div
[div class=p 
	[b 
		"3-5:
	]b
	$LF
	"At frame 34163, you'll notice that Bonk lands on the flower instead of jumping over it.  For some reason, Bonk hits an invisible wall and loses all momentum when he jumps over the flower, so it's actually quicker to land on it. 
	$LF
]div
[div class=p 
	"Because of the game's ice physics, it's impossible to avoid crashing into the wall around frame 34705.  Bonk loses traction incredibly easily on ice, making this stage extremely challenging to play in real time. 
	$LF
]div
[div class=p 
	[b 
		"Level 3 Boss, Kongo Zilla:
	]b
	$LF
	"The ice makes the boss nasty to deal with in real time, but fairly simple to TAS.  I was able to manipulate the boss's position at the end perfectly, although I couldn't do much to improve Bonk's position.
	$LF
]div
[pre 
	$LF
]pre
[div class=p 
	[b 
		"4-1:
	]b
	$LF
	"Lots of spinning and damage boosting.  Yes, this is the only stage in level 4. 
	$LF
]div
[div class=p 
	[b 
		"Level 4 Boss, Punchy Pedro:
	]b
	$LF
	"Since he moves so much with each hit, it was difficult to manipulate his position at the end.  This was the best that I could do. 
	$LF
]div
[div class=p 
	[b 
		"5-1:
	]b
	$LF
	"This is one of my favorite stages to watch.  I use a few damage boosts to ascend as quickly as possible. 
	$LF
]div
[div class=p 
	[b 
		"5-2:
	]b
	$LF
	"Lots of spinning, with great care taken to avoid landing and running into flowers.  Notice how he just glides through the "Henry Hatchet" at the beginning.  We don't need no stinkin' collision detection!
	$LF
]div
[pre 
	" 
	$LF
]pre
[div class=p 
	"The positioning around frame 50200 was especially difficult. 
	$LF
]div
[div class=p 
	[b 
		"5-3, part 1:
	]b
	$LF
	"This is my least favorite part of the run by far.  The swimming is slow and uninteresting.  I do my best to have Bonk swim as close to enemies as possible without hitting them.  This is especially true with "Crocket Dile," who will swallow you whole if you swim too close.  They will also freak out if you bonk them.  As a result, I'm forced to swim all the way to the bottom right corner of the stage before ascending.  It looks sloppy, but it was the fastest method that I could find.  I would love to have somebody improve this stage. 
	$LF
]div
[div class=p 
	[b 
		"5-3, part 2:
	]b
	$LF
	"Even more spinning and bonking.  I tried as hard as I could, but I couldn't manipulate things to get Bonk to get the heart around frame 58720.  It turns out that it wasn't needed, but it would have looked cooler had he gotten it. 
	$LF
]div
[div class=p 
	[b 
		"5-3, part 3:
	]b
	$LF
	"Re-doing the level 2 boss caused a desync here, of all places.  A "Skins Kellyton" decided to spit out three bubbles instead of two.  I had to re-do the stage but ended up saving some frames in the process.
	$LF
]div
[div class=p 
	[b 
		"5-3, part 4:
	]b
	$LF
	"Does this stage ever end?  Once again, Bonk spins his way across the stage. 
	$LF
]div
[div class=p 
	[b 
		"5-4:
	]b
	$LF
	"I use some enemy boosts to speed up Bonk's ascent. 
	$LF
]div
[div class=p 
	[b 
		"5-5, part 1:
	]b
	$LF
	"Fast forward through this stage, as it's just sightseeing. 
	$LF
]div
[div class=p 
	[b 
		"5-5, part 2:
	]b
	$LF
	"The ascent is pretty much straightforward.  After grabbing all these vegetables, health management is no longer a concern. 
	$LF
]div
[div class=p 
	[b 
		"5-5, part 3:
	]b
	$LF
	"Pixel-perfect bouncing. 
	$LF
]div
[div class=p 
	[b 
		"5-5, part 4:
	]b
	$LF
	"Bonk is forced to fight each boss a second time.  Re-doing Gladdis the first time caused desyncs with the Gladdis, Kongo Zilla, and Punchy Pedro the second time around, so I had to re-do those battles.  This was especially frustrating with the second Gladdis battle, as the change in randomness occasionally changed the spawn location of the "real" Gladdis while keeping everything else the same.
	$LF
]div
[div class=p 
	[b 
		"5-5, part 5:
	]b
	$LF
	"Another boss: 
	[b 
		"T. Ractorhead
	]b
	".  This boss is extremely challenging in real time, but easy to TAS.  Once again, re-doing the level 2 boss caused a desync here.  My guess is that he launches different attacked based upon how much energy you have left.
	$LF
]div
[div class=p 
	"As a side note: "Psudo Za" <sic> is much hotter than the real Princess Za. 
	$LF
]div
[div class=p 
	[b 
		"5-6, Evil King Drool!
	]b
	$LF
	"King Drool has two different forms.  In his first form, you can hit him three times before he disappears.  It's important to always hit him from above, or else he will disappear and re-spawn at least one extra time.  In his second form, he attempts to fly away off screen quickly after you hit him a single time.  (He is both evil AND a coward!)  However, if you time it right, you can hit him multiple times before he leaves to screen.  In real time, I've only ever been able to hit him twice before he flies away.  In this TAS, I'm able to hit him 
	[b 
		"15 times
	]b
	" without letting him fly away.  Bonk is high off screen while delivering the final blows. 
	$LF
]div
[pre 
	$LF
]pre
[div class=p 
	[b 
		"Personal notes:
	]b
	$LF
	"I used to love this game as a teenager, and it seemed fairly straightforward, so I decided that it would be a good choice for my first TAS.  I started the TAS before there was an approved TG16 emulator.  The original Mednafen emulator supported movie recording and could rewind up to 10 seconds while recording, so I used this in combination with VMWare snapshots to create my first WIP of this TAS.  It may very well have been the first TG16 TAS.  <pats self on back>  By the time I'd gotten halfway through stage 2, a rerecording version of Mednafen was released.  I restarted the TAS on this emulator, but a few life events and a hard drive crash thwarted my progress for at least a year.  A couple months ago, I started for a third time, which proved to be the proverbial charm. 
	$LF
]div
[div class=p 
	"As it turns out, this game is much, much harder to TAS than it is to play.  Subpixel position is a major challenge.  Although it says that there are 7890 rerecords on this video, that doesn't include the rerecords on the first two versions of my TAS.  It would be difficult to estimate the true number, since the old version of Mednafen didn't keep track of them. 
	$LF
]div
[div class=p 
	"I'm pleased that I was finally able to finish this run, and especially pleased that I managed to color more dinosaurs than any other run on this site. 
	$LF
]div
[div class=p 
	"I owe a big thank you to 
	[b 
		"Sonikkustar
	]b
	" for his WIPs.  They helped me greatly improve my level of precision and showed me some very useful strategies.
	$LF
]div
[div class=p 
	"Enjoy!
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/sgrunt 
		"sgrunt
	]a
	": Fixed platform, seeing as the site didn't detect it correctly.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/GabCM 
		"GabCM
	]a
	": Added FlowPlayer module. Flygon, when you're done with the HD encode, you can replace this module.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/sgrunt 
		"sgrunt
	]a
	": Replaced the submission file with 
	(__wikiLink|displaytext=one that is 234 frames faster|href=/Forum/Posts/246203)
	".
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/GabCM 
		"GabCM
	]a
	": Removed the Flowplayer module, since I will redo the encode.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/GabCM 
		"GabCM
	]a
	": Added Flowplayer module again, with an updated encode.
	$LF
	[a class=intlink href=/Users/Profile/GabCM 
		"GabCM
	]a
	": Replaced Flowplayer module with a YouTube module, for better quality.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/klmz 
		"klmz
	]a
	": Reset the status due to emulation problems.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/adelikat 
		"adelikat
	]a
	":  Setting this to accepted, unless of course klmz cares to elaborate on the "emulation problems"
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/GabCM 
		"GabCM
	]a
	": Off to publish this!
]div
