8
[p 
	"This run is 2515 frames, 42.92 seconds, faster than the 
	[a class=intlink href=/1827M 
		"published run
	]a
	". The improvements consist of getting more items with the glasses trick and fooling the game to think the talisman is placed in the slot. See the "Improvements" section below for details.
	$LF
]p
[h3 id=Subtitlesinthe.fm2
 
	"Subtitles in the .fm2
	$LF
]h3
[p 
	"This run is very confusing. Because of this, I have added comments to the .fm2-file. Their purpose is to explain the strange things going on in this TAS. I hope they're helpful and don't ruin anything.
	$LF
]p
[p 
	"I will often mention "EI" in the comments. EI stands for "Extended inventory" and is the part of the inventory I can only reach with the glasses trick. What items the EI contains depends on the current game state, i.e. what items have been picked up and such.
	$LF
]p
[h3 id=Improvements
 
	"Improvements
	$LF
]h3
[p 
	"The previous run used the glasses trick to get the staff. This was done by picking up certain rocks in the cave in order to change a certain RAM address so that when the game interprets this RAM address as an item, it becomes the staff. This trick is also done in this TAS. In a similar way, you can get all sorts of items. This run takes it a few steps further and also does the following:
	$LF
]p
[p 
	[b 
		"Get the orb by:
	]b
	$LF
]p
[ul 
	[li 
		"DO NOT take the rightmost torch in mirror room
		$LF
	]li
	[li 
		"take leftmost torch in mirror room
		$LF
	]li
	[li 
		"DO NOT take broom
		$LF
	]li
	[li 
		"DO NOT have scroll 2 (wizard room) on screen
		$LF
	]li
	[li 
		"placed blue gem in stone
		$LF
	]li
	[li 
		"DO NOT take torch in rope room
		$LF
	]li
	[li 
		"take scroll 1 in rope room
		$LF
	]li
]ul
[p 
	[b 
		"Get the bag3 by:
	]b
	$LF
]p
[ul 
	[li 
		"DO NOT take bottle 1 in rope room
		$LF
	]li
	[li 
		"take bottle 2 in rope room
		$LF
	]li
	[li 
		"take right torch in wraith room
		$LF
	]li
	[li 
		"take left torch in wraith room
		$LF
	]li
	[li 
		"take cloak
		$LF
	]li
	[li 
		"DO NOT have left torch on wall in arrow room in up position
		$LF
	]li
]ul
[p 
	[b 
		"Get the ring by:
	]b
	$LF
]p
[ul 
	[li 
		"take bellows
		$LF
	]li
	[li 
		"take poker
		$LF
	]li
	[li 
		"DO NOT take skull in library
		$LF
	]li
	[li 
		"DO NOT Learn motari from book
		$LF
	]li
	[li 
		"DO NOT take map
		$LF
	]li
	[li 
		"DO NOT take torch in red carpet hall
		$LF
	]li
	[li 
		"keep bucket down (i.e. do not wind it up)
		$LF
	]li
]ul
[pre 
	$LF
]pre
[p 
	"Why are these things done then? Here's why:
	$LF
]p
[ul 
	[li 
		"By getting the orb with the glasses trick, I can skip a big section of the final cave, and won't need the Motari spell  (saves about 1000 frames).
		$LF
	]li
	[li 
		"By getting the bag3 with the glasses trick, I can skip the balcony section, saving 3 screen transition (saves about 800 frames).
		$LF
	]li
	[li 
		"By getting the ring with the glasses trick, I can skip the gauntlet and flute, thus skipping the garden room altogether. This saves about 700 frames.
		$LF
	]li
]ul
[p 
	"This is why some seemingly unnecessary actions are done.
	$LF
]p
[p 
	"Another application of the glasses trick is to do the inverse of the above - instead of affecting what items I can get by changing the game state, I can affect the game state by placing items on certain RAM addresses in the EI. In this run I place the Crest item on RAM address 04ED. The crest has an odd item ID, so the 1 byte of 04ED will be set to 1. This also happens to be the byte determining if the talisman has been placed in the slot. In a similar way, this is how those torches have disappeared in the rooms around the skeleton throne room - by picking up glasses on certain RAM addresses, the game state has changed and some torches have gone.
	$LF
]p
[h3 id=SomenotesonthemakingofthisTAS
 
	"Some notes on the making of this TAS
	$LF
]h3
[p 
	"This was a very interesting (but sometimes frustrating) TAS to make. I mapped out how all actions in the game affect the game state RAM, what bytes they affect and how. I also mapped out all items in the game, in particular their item ID. I then wrote a matlab script that loop through all permutations of optional actions to see what interesting items I can end up with. This was how I found these 3 new items to get with the glasses trick.
	$LF
]p
[h3 id=Anticipatedquestions:
 
	"Anticipated questions:
	$LF
]h3
[p 
	[b 
		"Q: Why didn't you get the blade and/or horn with the glasses trick?
	]b
	$LF
	"A: I could get these items with the glasses trick, but the problem is that they have a guardian. For example: If I make the blade appear in the EI and try to take it, the werewolf will attack and kill me, even if I'm nowhere near the werewolf room. The same goes for the horn - if I try to take it the hell hound will kill me. The only way to solve this is to kill their guardians the normal way, but then I might as well just pick up the items the normal way.
	$LF
]p
[p 
	[b 
		"Q: I noticed that you got some strange items, such as "Iron bars" in the EI. What does this do?
	]b
	$LF
	"A: All items in this game has an item ID, a value between 0 and 255. This is how the game knows what items you have in your inventory. Since there aren't 256 items in the game (there are about 130), a lot of the possible item IDs don't have a corresponding item. When I reach the extended inventory, a lot of the RAM addresses will have these kind of values, since the game didn't exactly plan for them to end up in the inventory list. Most of these values don't have a name (their name is blank), but some of them have names after sprites in the game. Some items actually ARE sprites in the game - you can for example get "ferryman" as an item! You can even give him a gold coin, but there is no raft to board.
	$LF
]p
[p 
	"Most of the item IDs that don't have a corresponding item will crash when you interact with them, such as the "Iron bars". Some of them will teleport to like the sphinx does when you answer his question wrong. You can also get the spells in the game as items.
	$LF
]p
[p 
	[b 
		"Q: Why did the items disappear from the list when you used the Big coin in the well?
	]b
	$LF
	"A: I actually don't know. My theory is that the "inventory update" subroutine messes up because you're on a page you're not supposed to be on, and couldn't load the item names properly. In any case, all items are still there, so this doesn't affect the TAS, it's just a strange occurence.
	$LF
]p
[p 
	[b 
		"Q: Any ideas for future improvements?
	]b
	$LF
	"A: I think a potential source future improvement lies in completely understanding how and why the game reacts the way it does to "forbidden" item IDs. Most of the time the game crashes, but sometimes strange things happen - the screen changes color, the picture changes to the final room picture (but you don't actually get teleported there), the intro text looping infinitely... yeah, bascially, the game turns very chaotic. If one could understand how there things happen, it might open a door for even more glitches.
	$LF
]p
[h3 id=Thanksto
 
	"Thanks to
	$LF
]h3
[ul 
	[li 
		"ZenicReverie for his help with the previous run and for his ideas and feedback on this one.
		$LF
	]li
	[li 
		"Everyone else in the Shadowgate thread for support
		$LF
	]li
]ul
[hr 
]hr
[p 
	[a class=intlink href=/Users/Profile/Mukki 
		"Mukki
	]a
	": Judging...
	$LF
]p
[p 
	[a class=intlink href=/Users/Profile/Mukki 
		"Mukki
	]a
	": I think that this is definitely the most entertaining of the storybook TASes now. The new application of this glitch was fascinating. Accepting as an improvement to 
	[a class=intlink href=/1827M 
		"the currently published run
	]a
	".
	$LF
]p
[p 
	[a class=intlink href=/Users/Profile/Mister Epic 
		"Mister Epic
	]a
	": I'm gonna work on this.
]p
