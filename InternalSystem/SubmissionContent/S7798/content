6
[div class=p 
	"Crash 1 Submission Text
	$LF
]div
[h2 id=EncodeWithAudioCommentary 
	"Encode with Audio Commentary
	$LF
]h2
[div class=p 
	(youtube|h=480|v=Fm9T73f6P-Q|w=640)
	$LF
]div
[h2 id=EncodeWithoutAudioCommentary 
	"Encode without Audio Commentary
	$LF
]h2
[div class=p 
	(youtube|h=480|v=Hw-fQAW10Ho|w=640)
	$LF
]div
[h2 id=RunDescription 
	"Run Description
	$LF
]h2
[div class=p 
	"This is the full completion category of Crash 1, where you must get 100% and end on getting the best ending at the end of the great hall. 100% is achieved by getting all of the gems, and you get each gem by getting all of the boxes on a level.
	$LF
]div
[div class=p 
	"The only limitations are that using passwords and using zip-zagging is banned. Passwords would allow me to jump straight to the end of the game and ruin the point of a speedrun. The second restriction is no zip-zagging (zip-zagging video: 
	[a href=https://youtu.be/GIbr3T889TQ rel=noopener external nofollow 
		"https://youtu.be/GIbr3T889TQ
	]a
	" ). The reason for this is to make the movement closer to what a human would perform. Zip-zagging is impressive for the first few levels, but after a few levels they begin to all look the same. I asked many people in the community and there was a very strong preference to banning zip-zagging. Note: This is not to be confused with zig-zagging which is a fundamentally different technique and is still allowed, it gives a much smaller speed boost and is used RTA.
	$LF
]div
[h2 id=LevelRevisitSkips 
	"Level Revisit Skips
	$LF
]h2
[div class=p 
	"100% requires some revisits due to the coloured gems. Coloured gems can open up secret paths that have more boxes on them. Usually you have to come back to most levels, but often there are glitches to skip needing the coloured gems. The IL comments will go into more detail on these skips
	$LF
]div
[h3 id=RollingStonesSkip 
	"Rolling Stones skip
	$LF
]h3
[div class=p 
	"This is the elephant in the room with this TAS. The TAS contains a revisit to Rolling Stones, because the blue gem is needed to get all of the boxes. But about a week after this TAS was finished, Lukademus found a way to skip this revisit: 
	[a href=https://youtu.be/wbtxDccuYGc rel=noopener external nofollow 
		"https://youtu.be/wbtxDccuYGc
	]a
	"  This skip has now been adapted into RTA speedruns and could hopefully be the key to achieving sub-hour times.
	$LF
]div
[div class=p 
	"This revisit skip could have saved a little over a minute if it was included. While this is an amazing discovery, this was found at a very unfortunate time as it couldn’t be included in the TAS. If I included it, I would have to redo everything after rolling stones, which pretty much means redoing the entire TAS. Given that it took hundreds of hours to make this TAS, this wasn’t really an option for me. 
	$LF
]div
[div class=p 
	"This is the nature of TASing though, in that discoveries are often found during or after a TAS is complete. This kind of thing also happened with the Crash 3 TAS (gate clip), Banjo-Kazooie 100% (FF skip) and Spyro (proxies) just to name a few examples. I might come back and do a version 2 of the TAS including the trick one day, but that might have to wait as it is only one of many projects I want to work on.
	$LF
]div
[h2 id=Timing 
	"Timing
	$LF
]h2
[div class=p 
	"Along with standard TAS timing (power on til last input), this game can be timed using the RTA timing (press start on title to lose control). Furthermore, I’ve also given a time adjusted for RTA timing – adjusted to console loading times, as Bizhawk loses about 3min 16sec to loads across the entire run (see below)
	$LF
]div
[table 
	[tbody 
		[tr 
			[th 
				"Timing method
			]th
			[th 
				"Final time (min:sec)
			]th
		]tr
		[tr 
			[td 
				"TAS Timing (emulator loads)
			]td
			[td 
				" 56:30 
			]td
		]tr
		[tr 
			[td 
				"RTA Timing (emulator loads)
			]td
			[td 
				" 55:56 
			]td
		]tr
		[tr 
			[td 
				"RTA Timing (adjusted for PS2 FDS Loads)
			]td
			[td 
				" 52:15
			]td
		]tr
	]tbody
]table
[div class=p 
	"The bottom entry in the table above is the time most comparable to the times on speedrun.com (of course keeping in mind that TASes shouldn’t be directly compared to RTA).
	$LF
]div
[h3 id=LoadingDifferences 
	"Loading Differences
	$LF
]h3
[div class=p 
	"RTA speed runners use PS2 consoles with a setting called Fast Disc Speed (FDS) enabled. This saves significant time over a PS1 console and the Bizhawk emulator. The time lost on loading between fading out one level to fading into the next level is about 5 seconds. It’s worth noting that the emulator used for the any% TAS by pirohiko had faster loads than Bizhawk (comparable to PS2 FDS loads), so while it looks like I lose time sometimes, that is due to loads.
	$LF
]div
[div class=p 
	"The loads can still be a bit slower even after the level fades in, so I often have my timing reference start from the first frame Crash gains control to compare actual level times.
	$LF
]div
[h3 id=EndScreenOptimisation 
	"End screen optimisation
	$LF
]h3
[div class=p 
	"When finishing a level you get two possible outcomes. One where you get the gem (if you get all boxes) and one where you don’t. Getting the gem takes the same amount of time to complete no matter what, but missing the gem has some RNG involved. After the box hits Crash’s head in the no gem level ending, Crash tilts his head left and right until he looks forward and you can click through to the next screen. The time taken to look forward varies based on RNG. This can save/lose 0-2 seconds based on your luck.
	$LF
]div
[div class=p 
	"As far as I know this was not known when the any% TAS was made, as I was often able to save 0-2 seconds over any% on all of these screens (which were quickly lost due to load times).
	$LF
]div
[div class=p 
	"The time can be manipulated by changing where you land on the end of level platform and other factors (jump height, spins, bringing up the HUD with triangle). But this will only change the time save/loss by 2-4 frames if successful. The only way to get time saves on the order of seconds is to delay landing on the end of level platform. So sometimes I sacrifice 2, 4, 6… frames to save 30, 60, 90… frames on the end of level screen.
	$LF
]div
[h2 id=TimingComparison 
	"Timing comparison
	$LF
]h2
[div class=p 
	"The table below shows time saved/lost on each section compared the current RTA world record, 1:02:28 by Tebt_W 
	[a href=https://www.twitch.tv/videos/1025547128 rel=noopener external nofollow 
		"https://www.twitch.tv/videos/1025547128
	]a
	" 
	$LF
]div
[div class=p 
	"I really wanted to include a comparison to more of Pirohiko’s TAS in this table, but unfortunately many sections are not comparable between any% and 100%. I did however make sure that any directly comparable sections were faster or matched in this TAS than in any% (minus any global cycle waiting for example Native Fortress first visit). The main significant timesave over any% was the pinstripe fight and RNG manipulation to save time on level end screens.
	$LF
]div
[div class=p 
	"All times for the RTA comparison are in seconds. TAS comparison is done in frames and seconds, assuming a frame rate of 59.9400601 frames per second (roughly 60fps). Any time saved is (-) and any time lost is (+)
	$LF
]div
[table 
	[tbody 
		[tr 
			[th 
				"Section
			]th
			[th 
				"Time saved/lost over RTA
			]th
			[th 
				"Time saved/lost over any% TAS (if applicable)
			]th
		]tr
		[tr 
			[td 
				"Level 1: N Sanity Beach
			]td
			[td 
				"-5.972
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"5.772
			]td
		]tr
		[tr 
			[td 
				"Level 2: Jungle Rollers
			]td
			[td 
				"-9.175
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"5.739
			]td
		]tr
		[tr 
			[td 
				"Level 3: The Great Gate
			]td
			[td 
				"-19.953
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"5.188
			]td
		]tr
		[tr 
			[td 
				"Level 4: Boulders
			]td
			[td 
				"-9.476
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"5.755
			]td
		]tr
		[tr 
			[td 
				"Level 5: Upstream
			]td
			[td 
				"-20.537
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"6.539
			]td
		]tr
		[tr 
			[td 
				"Papu Papu
			]td
			[td 
				"-0.633
			]td
			[td 
				"-2
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"4.804
			]td
		]tr
		[tr 
			[td 
				"Level 6: Rolling Stones 1st visit
			]td
			[td 
				"-11.895
			]td
			[td 
				"-16f (-0.03s)
			]td
		]tr
		[tr 
			[td 
				"Level 6: End screen manip
			]td
			[td 
				"-0.950
			]td
			[td 
				"-62f (-1.03s)
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"6.321
			]td
		]tr
		[tr 
			[td 
				"Level 7: Hog Wild
			]td
			[td 
				"-0.166
			]td
			[td 
				"-8f (-0.13s)
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"6.206
			]td
		]tr
		[tr 
			[td 
				"Level 8: Native Fortress 1st visit
			]td
			[td 
				"-34.184
			]td
			[td 
				"65f (1.08s)
			]td
		]tr
		[tr 
			[td 
				"Level 8: End Screen Manip
			]td
			[td 
				"-1.568
			]td
			[td 
				"-28f (-0.46s)
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"6.509
			]td
		]tr
		[tr 
			[td 
				"Level 9: Up the Creek
			]td
			[td 
				"-28.495
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"6.689
			]td
		]tr
		[tr 
			[td 
				"Ripper Roo
			]td
			[td 
				"-0.834
			]td
			[td 
				"-8f (-0.13s)
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"5.889
			]td
		]tr
		[tr 
			[td 
				"Level 10: The Lost City
			]td
			[td 
				"-37.303
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"6.406
			]td
		]tr
		[tr 
			[td 
				"Level 11: Temple Ruins
			]td
			[td 
				"-22.055
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"6.072
			]td
		]tr
		[tr 
			[td 
				"Level 12: Road to Nowhere
			]td
			[td 
				"-15.999
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"6.673
			]td
		]tr
		[tr 
			[td 
				"Level 13: Boulder Dash 1st visit
			]td
			[td 
				"-12.212
			]td
			[td 
				"-20f (-0.33s)
			]td
		]tr
		[tr 
			[td 
				"Level 13: End Screen Manip
			]td
			[td 
				"-0.500
			]td
			[td 
				"-72f (-1.20s)
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"6.122
			]td
		]tr
		[tr 
			[td 
				"Level 14: Slippery Climb
			]td
			[td 
				"-31.364
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"6.823
			]td
		]tr
		[tr 
			[td 
				"Koala Kong
			]td
			[td 
				"-6.156
			]td
			[td 
				"38f (0.62s)
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"5.105
			]td
		]tr
		[tr 
			[td 
				"Level 15: Heavy Machinery
			]td
			[td 
				"-26.276
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"5.755
			]td
		]tr
		[tr 
			[td 
				"Level 16: Cortex Power
			]td
			[td 
				"-26.726
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"5.372
			]td
		]tr
		[tr 
			[td 
				"Level 17: Generator Room
			]td
			[td 
				"-24.357
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"6.272
			]td
		]tr
		[tr 
			[td 
				"Level 18: Toxic Waste
			]td
			[td 
				"-11.728
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"6.305
			]td
		]tr
		[tr 
			[td 
				"Pinstripe
			]td
			[td 
				"-0.017
			]td
			[td 
				"-144f (-2.40s)
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"4.954
			]td
		]tr
		[tr 
			[td 
				"Level 19: The High Road
			]td
			[td 
				"-7.257
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"5.622
			]td
		]tr
		[tr 
			[td 
				"Level 20: Sunset Vista
			]td
			[td 
				"-68.284 (inc bonus) + 4.921 (bonus loads)
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"5.388
			]td
		]tr
		[tr 
			[td 
				"Level 21: Lights Out 1st visit
			]td
			[td 
				"-9.826
			]td
			[td 
				"11f (0.18s)
			]td
		]tr
		[tr 
			[td 
				"Level 21: End Screen Manip
			]td
			[td 
				"-0.083
			]td
			[td 
				"-86f (-1.43s)
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"2.919
			]td
		]tr
		[tr 
			[td 
				"Level 22: Jaws of Darkness
			]td
			[td 
				"-31.398 (inc bonus) + 5.188 (bonus loads)
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"5.939
			]td
		]tr
		[tr 
			[td 
				"Level 23: Castle Machinery
			]td
			[td 
				"-30.830
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"6.890
			]td
		]tr
		[tr 
			[td 
				"N. Brio
			]td
			[td 
				"-1.451
			]td
			[td 
				"-1f (0.016s)
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"4.721
			]td
		]tr
		[tr 
			[td 
				"Level 24: The Lab
			]td
			[td 
				"-13.263
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"5.355
			]td
		]tr
		[tr 
			[td 
				"Revisit: Lights Out
			]td
			[td 
				"-9.059
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"5.722
			]td
		]tr
		[tr 
			[td 
				"Level S2: Fumbling in the Dark
			]td
			[td 
				"-15.732
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"??? Different level order to RTA
			]td
		]tr
		[tr 
			[td 
				"Revisit: Rolling Stones
			]td
			[td 
				"-11.711
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"5.805
			]td
		]tr
		[tr 
			[td 
				"Revisit: Native Fortress
			]td
			[td 
				"-35.635
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"??? Different level order to RTA
			]td
		]tr
		[tr 
			[td 
				"Level S1: Whole Hog
			]td
			[td 
				"-0.166
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"??? Different level order to RTA
			]td
		]tr
		[tr 
			[td 
				"Revisit: Boulder Dash
			]td
			[td 
				"-15.498
			]td
		]tr
		[tr 
			[td 
				"Loads
			]td
			[td 
				"5.855
			]td
		]tr
		[tr 
			[td 
				"Level 25: The Great Hall
			]td
			[td 
				"-4.254
			]td
		]tr
	]tbody
]table
[h2 id=RegionDifferences 
	"Region Differences
	$LF
]h2
[div class=p 
	"There are many differences between the Japanese and English versions of this game, which affect the overall speed
	$LF
	"-	Bosses on Japanese have more health
	$LF
	"-	In Japanese you can die in a level after a checkpoint and still get the gem, but in English the end level screen won’t appear if you have died.
	$LF
	"-	The end of level screens are different. In Japanese one box will drop on your head, but in English the number of boxes you missed drop on your head. This makes Japanese faster for these screens, except that in English you can purposely die to skip these screens completely.
	$LF
	"-	Gem order is different. Japanese gem order is better for both categories. Since you get the green gem in Hog Wild, that makes it easy to skip castle machinery in any% and in 100% you get the red gem before Road to Nowhere, meaning Japanese does not need to revisit Road to Nowhere (one of the main reasons J is faster for this category)
	$LF
	"-	The High Road is shorter in Japanese. It just stops halfway through. This saves a bunch of time over English. Interestingly, if you keep going past the end of the level, the camera keeps scrolling to what would have been the end of the English version, even in the Japanese version. The same thing happens in Sunset Vista, where the camera scrolls to the end of what was the beta version of the level (which used to be longer).
	$LF
]div
[h2 id=GeneralMovement 
	"General Movement
	$LF
]h2
[h3 id=ZigZagging 
	"Zig-zagging
	$LF
]h3
[div class=p 
	"Moving in a diagonal (e.g. up + right) applies both the forward and right movement, creating a right angled triangle. Given each side of this triangle has 1x regular movement speed, the resulting speed is root(2) times movement speed, or about 1.41x regular speed.
	$LF
]div
[div class=p 
	"Like the other games in the trilogy, movement can be sped up by zigzagging. This means holding the direction you want (e.g. up/forward) then alternating the perpendicular directions each frame (e.g. left/right). 
	$LF
]div
[div class=p 
	"This essentially applies the 1.41x movement boost for going diagonal but retaining that movement completely forwards. The reason it goes forwards is that Crash can't turn very quickly in the air, so by alternating quickly you can keep him facing forward. Zigzagging does not work on the ground, where you can change Crash's facing angle pretty much instantly.
	$LF
]div
[h3 id=FormsOfMovement 
	"Forms of movement
	$LF
]h3
[div class=p 
	"Movement is summarised in the below table. Note that spinning normally speeds Crash up but spins are limited. Any jumping in this table will be zigzagged but any walking is without zigzag as that is what is optimal.
	$LF
]div
[table 
	[tbody 
		[tr 
			[th 
				"Type of movement
			]th
			[th 
				"Speed without spinning
			]th
			[th 
				"Speed with Spinning
				$LF
			]th
		]tr
		[tr 
			[td 
				"Walking normally
			]td
			[td 
				" 18.432
			]td
			[td 
				" 22.528
			]td
		]tr
		[tr 
			[td 
				"Jump + zigzag
			]td
			[td 
				"24.576 
			]td
			[td 
				"28.672 
			]td
		]tr
		[tr 
			[td 
				"Walking with invincibility
			]td
			[td 
				" 24.576
			]td
			[td 
				" 22.528 
			]td
		]tr
		[tr 
			[td 
				"Jump + zigzag with invincibility
			]td
			[td 
				"24.576 
			]td
			[td 
				"28.672 
			]td
		]tr
	]tbody
]table
[div class=p 
	"Jumping + zigzagging is usually the speed mentioned above when moving forward but can vary a bit depending on Crash's exact facing angle.
	$LF
]div
[h3 id=ZOptimisation 
	"Z-Optimisation
	$LF
]h3
[div class=p 
	"Most Crash 1 levels are lined up on the Z-axis, meaning the #1 priority is progressing your Z-coordinate and getting to the end. Hence, side to side movement doesn't matter too much unless the level has a bend. While the maximum speed is ~24 units per frame, that is purely in the Z-coordinate. Actually during this, your x speed alternates between 0 and ~4 (or -4). So you get some horizontal movement for free without losing any forward movement. When bends in a level are coming up, this movement is planned in advance to hug the wall as close as possible.
	$LF
]div
[div class=p 
	"Crash has a few predefined angles such as the one above. The next one over alternates X between 4 and 8 but loses some Z speed. These angles can be hit by doing a double left or double right press during zigzagging. Some angles will have a slower overall speed, but others can have higher than going straight forward. Also spins lock into particular speeds, so at some angles spins can barely speed up crash at all. The straight forward angle is pretty good for spins and most others are worse. For that reason you'll see me save my spins for when crash is moving straight forward along the z-axis. The only other anle that's better is full diagonal. But it is rare that full diagonal is needed. The last level - the great hall is an example of where I aim to use spins on the diagonals rather than the straight sections.
	$LF
]div
[div class=p 
	"You may notice Crash weaving left and right through each path, but this actually doesn't lose any time as the z speed is still full through the whole thing.
	$LF
]div
[div class=p 
	"I basically want to spend as little time as possible moving at a reduced z speed, so all my left right movement is achieved through the regular 0, 4 x-speed alternation. But I also can partially clip into the scenery which can eject crash out left/right and save me taking from z speed to move crash left or right in the x. 
	$LF
]div
[div class=p 
	"The other strategy for x/z tradeoff is to do with box boosting (see below). A box boost doesn't give you a specific amount of boost, but instead it pushes you out to a specific z coordinate. So if I'm hitting that z coordinate from the boost either way, I can sacrifice some Z to get any X that I need on the way to the box and I'll get that Z back anyway by getting a "bigger" boost (since I'm further behind). E.g. a box may boost me 22 units forward in Z, so prior to the box I sacrifice 4 Z units to move a bit more in X but then the box will boost me 26 units instead, getting those 4 units back.
	$LF
]div
[h3 id=MethodsToBoostPastMaximumSpeed 
	"Methods to boost past maximum speed
	$LF
]h3
[h4 id=Spinning 
	" Spinning
	$LF
]h4
[div class=p 
	"As mentioned above, spins speed you up but they are limited. You start each level with 5 spins and each time you use one it has to recharge, taking one second to recharge each spin.
	$LF
]div
[div class=p 
	"Naturally, the strategy is to use the first spin asap, since that starts it recharging sooner. But it will only have the full impact if you're at full speed, so it's worth waiting to spin until you hit full speed.
	$LF
]div
[div class=p 
	"Depending on the exact timing, a spin can boost Crash forward roughly 20 or 24 units. If you got 20, then delaying the spin by one more frame (30fps) will cause the spin to boost you forward 24 instead, which is optimal.
	$LF
]div
[div class=p 
	"Although the spin boosts you up to ~28 units per frame over the usual ~24, it does take about 2 frames to charge up to full speed and this is typically rounded down. For that reason, its actually optimal to chain spins where possible. A spin normally boosts crash by ~24 units but if more spins are chained after that first spin, each spin can boost Crash by ~29 units instead. For that reason, you'll notice me often using all 5 spins at the start of a level all together rather than just using them one by one.
	$LF
]div
[div class=p 
	"Of course spins have other applications like breaking boxes, killing enemies, lining up box boosts, doing sub jumps, making tight jumps (even though they make you jump lower). So I have to plan my spins in advance.
	$LF
]div
[div class=p 
	"A small note about spins. The original spin breaks boxes, but you can actually break more by continuing to hold the spin button. This doesn't make the spin last any longer but does make the box breaking effect last longer. This is particularly useful for breaking big stacks of boxes and can easily be applied to RTA speedruns.
	$LF
]div
[h4 id=BoxBoostEnemyBoost 
	" Box boost / Enemy boost
	$LF
]h4
[div class=p 
	"Although these don't save much time, they are absolutely everywhere. Essentially, jumping on a box will eject Crash slightly towards outside of the box. If you land early on the box, you eject backwards and lose 1-2 frames (30fps). But if you land past the halfway point, it will eject you forward. When done optimally, it can boost crash about 20-30 extra units forward for the frame you bounce, which essentially means you save a frame. Sometimes boxes are out of the way to jump on compared to breaking them from a slight distance with a spin, so the tradeoff has to be carefully considered.
	$LF
]div
[div class=p 
	"Actually lining up a box boost will depend on Crash's precise position. If not lined up, then you may not be able to get a boost at all. Usually a spin can change Crash's precise position enough that you can achieve a boost. If jumping on a box doesn't work, then you can usually boost by landing on the ground a tad past the box and spinning. This expands Crash's hitbox into the box and boosts him forward.
	$LF
]div
[div class=p 
	"Sometimes you don't get a bounce off a box unless you enter another jump input and essentially jump to break it. This jump may break the box, looking like a normal jump or not break the box, looking like Crash just jumps on it without breaking it.
	$LF
]div
[h4 id=SpikeyCrusherBoost 
	" Spikey Crusher Boost
	$LF
]h4
[div class=p 
	"These boosts are similar to box boosts but just with a bigger effect. Usually saving 3-5 frames rather than 0-1. The spikey crushers in the wall levels usually hurt crash, but spinning cancels this damage and boosts Crash instead. I try to leave the spin as late as possible without getting hurt, because that gives a bit of the spin to be useful after, compared to any spin before which is lost due to the spikes boosting you to a particular position rather than a particular amount.
	$LF
]div
[h4 id=LizardBoostsTribesmanBoost 
	" Lizard Boosts / Tribesman boost
	$LF
]h4
[div class=p 
	"The above boosting examples eject Crash to move him forward, but these boosts are a rare way to actually break the speedcap and retain it for longer than just a frame. This is done by hitting a lizard/tribesman with a spin then you get ejected out. You can retain your speed by jumping and spinning, so generally you want to save all your spins for these moments where possible.
	$LF
]div
[h4 id=ConveyorBeltsSlipperySlopes 
	" Conveyor belts / slippery slopes
	$LF
]h4
[div class=p 
	"The green slopes, icy slopes, moving platforms and conveyor belts push you forward. It’s best to walk along these so that you actually get the speedboost. They should boost you a lot, but in reality they don’t help that much since you cant zigzag on the ground. 
	$LF
]div
[h4 id=ZipZagging 
	" Zip zagging
	$LF
]h4
[div class=p 
	"As I said before, zip-zagging is a banned technique in this TAS, primarily for entertainment purposes. Zip-zagging (not to be confused with zigzagging) is done by jumping and alternating the diagonals on the d-pad. This builds up unbounded negative speed, then you can hold away from the direction you want to zip off quickly and beat the level quickly. This has some limitations, as when you get too far away from the camera the collision unloads and you can die. In Crash 2 and 3 the camera has a locked movement speed cap, but in Crash 1 it can move very fast (with a lot of lag).
	$LF
]div
[div class=p 
	"When the glitch is done, it looks a lot like superswimming from the Windwaker or BLJs from Super Mario 64. While I do enjoy zip-zagging TASes and think they have their place, the general feedback from the community and viewers is that it gets very “samey” after a couple of levels.
	$LF
]div
[div class=p 
	"If you’re interested in seeing a zip-zagging TAS, I did do a low optimised TAS of any% for Crash 1 using zip-zagging here: 
	[a href=https://youtu.be/gFTbmRxEGuA rel=noopener external nofollow 
		"https://youtu.be/gFTbmRxEGuA
	]a
	" 
	$LF
]div
[h3 id=JumpMechanics 
	"Jump mechanics
	$LF
]h3
[div class=p 
	"Unsurprisingly, holding X helps you jump higher. But even if you briefly let go, this still takes effect. So jump height can be very delicately controlled by letting go and re-pressing X on particular frames. This is particularly good if you want to do a sustained jump under a low roof (e.g. jumping on boxes in the checkpoint areas of boulder chase levels). Just holding X would make Crash bonk the roof and fall back down but tapping X would make him not hold his jump very long. But tapping X, letting go, then holding it as soon as holding it wont make you bonk, allows you to stay airborne for much longer.
	$LF
]div
[div class=p 
	"Spins also affect jump height. Its a delicate tradeoff to cross gaps, since spins give more speed (hence more distance) but they make you lose height. Generally multiple spins can help you cross large gaps, no spins is the next best method, but doing a single spin is almost always worse than no spins.
	$LF
]div
[h3 id=SubJumps 
	"Sub jumps
	$LF
]h3
[div class=p 
	"Spinning off an edge retains your grounded state briefly. When the spin ends you have a few frames where you can jump out of it which looks like a jump in the air. These are a bit slow, since you can’t zigzag while doing the initial spin, so they’re only used when necessary.
	$LF
]div
[h3 id=DoubleJumps 
	"Double jumps
	$LF
]h3
[div class=p 
	"An extension of the sub jump. If you jump and semi clip into an object (leaf, platform, etc) then you get a grounded state again. Generally combining this with a spin allows you to retain your upwards speed (jump #1) then chain it with another jump (jump #2) looking like Crash gets a double jump. In practice, this is done by landing just off the edge of an object, jumping and spinning to extend Crash’s hitbox into the object and get a double jump. This can be done without a spin if the platform is moving up at the right speed. We see this a lot in Castle Machinery. It’s pretty funny without a spin because Crash is just walking through the air then can jump out of it.
	$LF
]div
[h2 id=Cycles 
	"Cycles
	$LF
]h2
[div class=p 
	"This game is notorious for global cycles and they put a pretty hard cap on any potential timesaves. Examples are: rolling stones, spike crushers, flames, wall crushers, doors opening and closing, moving platforms, moving leafs, enemy movements, etc.
	$LF
]div
[div class=p 
	"The biggest one I deal with is Castle Machinery, which cycles every 13.3 seconds. I make it on the last possible frame to make that cycle and if I missed it I would lose 13.3 seconds. So even if I could have saved time earlier in the TAS, this TAS would not be any quicker unless I could save more than 13.3 seconds.
	$LF
]div
[div class=p 
	"Although the cycles put a pretty hard limit on speed, they’re not as strict as something like a frame rule. I can usually kill the time waiting for cycles either saving my spins up for after the cycle or getting masks. This means that most levels required two passthroughs of TASing: one as fast as possible to see what cycles I hit and then another to see how many masks I could squeeze in / spins I could reduce and still hit the same cycle.
	$LF
]div
[div class=p 
	"I can also skip cycles in a variety of ways, such as damage boosting through them, or 3D jumping around them (jumping towards the camera to get around objects on the linear left/right path). I have a very cheeky cycle skip in Native Fortress by jumping up on top of a spikey crusher and going out of bounds for a bit. I also have some cycle skips using double jumps on leafs in the river levels, wall climbing in river levels and double jumping to skip platform cycles in the dark levels. I will discuss these more in IL comments.
	$LF
]div
[div class=p 
	"Although it’s possible to skip some cycles, these often require slow movement, so where possible I want to make cycles.
	$LF
]div
[h2 id=IndividualLevelComments 
	"Individual Level Comments
	$LF
]h2
[h3 id=Island1 
	"Island 1
	$LF
]h3
[h4 id=Level1NSanityBeach 
	" Level 1: N. Sanity Beach
	$LF
]h4
[div class=p 
	"Level 1 starts by skipping the beach intro cutscene and gets straight into action. I boost off the box while spinning through the others. When coming through the downhill section, I have to be careful not to jump too high, otherwise I can bonk the roof.
	$LF
]div
[div class=p 
	"The lead up to the climb is full of crab boosts and box boosts. But I sacrifice the last crab to spin into some of the boxes on the climb. This spot is tempting for a mask since it would lose little time, but I don’t need that yet.
	$LF
]div
[div class=p 
	"Throughout the climb, I use box bouncing to skip jumps. The climb is limited by how quickly Crash can do his next jump, so there is a hard cap here. However, by carefully adjusting earlier jump heights, a few extra frames can be squeezed out. 
	$LF
]div
[div class=p 
	"After the climb, we get the choice of a left or right branch. Interestingly, there is a timesave over the any% TAS here since going right is faster than going left, especially when assisted by a scenery jump instead of going through the boxes normally. In 100% however, going right first is the more obvious fast choice. I do have to dip back into the left path and backtrack for two boxes after.
	$LF
]div
[h4 id=Level2JungleRollers 
	" Level 2: Jungle Rollers
	$LF
]h4
[div class=p 
	"This level is a first for some key concepts such as cycles and Z-optimization (see above). Towards the start of the level I use a skunk to break the top box out of a stack of two. This opens me up for a boost off the single bottom box.
	$LF
]div
[div class=p 
	"Near the middle of the level is our first Gem skip. I get this by bouncing up on some invisible side walls and climbing up to the bounce box. Usually this would be done using invincibility in RTA speedruns, but it turns out to be possible without invincibility. Given invincibility takes a short time to activate, it wasn’t worth the small time it saved in this skip. I did TAS the level both with and without invincibility and without came out in front.
	$LF
]div
[div class=p 
	"Shortly after the gem skip, I take some damage to get through the rollers, as I couldn’t get through the cycle otherwise. This turns out to be the best place to use the mask, especially as I have to use it before Papu Papu, otherwise I’ll lose it there anyway.
	$LF
]div
[h4 id=Level3TheGreatGate 
	" Level 3: The Great Gate
	$LF
]h4
[div class=p 
	"The first spinny platform section is straightforward since there is only one. The issue is getting enough height to reach the silver box in one jump rather than two. By timing a spin and carefully holding out prior jumps, I made it onto the box, saving significant time.
	$LF
]div
[div class=p 
	"Near the usual endpoint is the next gem skip, which is quite simple. By precisely positioning a jump on the end of level platform, you can jump off again without triggering the end of the level. This allows Crash to bypass the gem requirement to access this area.
	$LF
]div
[div class=p 
	"This level also introduces the long climbing sections with multiple spinning platforms. You have to spin the platforms to activate them, then jump on them once they’re active. The bottleneck here is often how quickly you can spin them from underneath, since they take a while to activate and you don’t want to wait around. When climbing and turning around, you can get a very horizontally fast jump by jumping the frame you land from a short jump. This jump has a lot of speed, which helps with climbing, but is very low. So it is only useful on the last spinner usually. Instead I hold out the previous jump for longer and get a higher but slower jump onto each spinner. This higher jump can hit the next spinner earlier, which eliminates the actual bottleneck.
	$LF
]div
[h4 id=Boulders 
	" Boulders
	$LF
]h4
[div class=p 
	"This is always a fun level to TAS due to Crash outrunning the boulder. I had a bit of trouble matching the any% TAS in this level, and I think it was due to lag. I did eventually optimize this with the help of forward planning and Z-optimisation.
	$LF
]div
[div class=p 
	"Getting box boosts in the tunnels was difficult due to Crash frequently bonking on the roof. I managed some of these by landing past the box and spinning to get a boost rather than relying on bouncing on it to get the boost. Some scenery jumps allow for tighter Z-axis optimization and routing and I can also get some boosts off the falling platforms since they’re objects. I was able to get a couple of boosts off the falling fences but it was difficult and rare to do so.
	$LF
]div
[h4 id=Upstream 
	" Upstream
	$LF
]h4
[div class=p 
	"Heavy use of double jumps was used to skip the leaf cycles in this level. When that fails I can do scenery climbs but these are quite slow. Double jumping is slow because you can’t zigzag the first jump because you’re technically grounded, so I avoid it when I can.
	$LF
]div
[div class=p 
	"This level contains a gem skip in two parts. The first is a box just underneath the log. It would be very fast to hit this through the log with invincibility, but getting invincibility costs time. I opt for a non-invincibility sub-jump under the log and barely have to slow down as I hit the box from the side and jump straight out.
	$LF
]div
[div class=p 
	"The second part of the gem skip involves a scenery jump + double jump after the end of level portal. Unfortunately the leaf was quite far away, but if it were closer I may have been able to make the gap without the scenery jump.
	$LF
]div
[h4 id=PapuPapu 
	" Papu Papu
	$LF
]h4
[div class=p 
	"Not much to say apart from hitting him optimally. I had a bit of fun playaround jumping onto the flame at the end, which normally causes damage, but I avoid it with a spin. It’s worth noting that this fight is slower on J due to the extra health of Papu Papu. Also worth noting that boss levels and hog levels take away masks, so I can do my mask routing in isolated chunks of every 4-5 levels (split upon bosses and hogs).
	$LF
]div
[h4 id=RollingStones 
	" Rolling Stones
	$LF
]h4
[div class=p 
	"The first level with a revisit due to the blue gem. As I mentioned before, there was a revisit skip found after this TAS was finished. I estimate it would save somewhere between 60-90 seconds.
	$LF
]div
[div class=p 
	"Cycles are tight in rolling stones and I manage my masks to adjust my timing for the cycles. I have a few close calls on cycles, but I can avoid taking damage by landing next to a stone and doing a jump. The first few frames of the jump have Crash semi-invincible so I can squeeze through normally impossibly small gaps by timing a jump well.
	$LF
]div
[h4 id=HogWild 
	" Hog Wild
	$LF
]h4
[div class=p 
	"Basically an autoscroller. Upon redoing this level, I occasionally saves or lost 5-10 frames but I don’t fully understand why. I presume this is lag related. I do zigzag (pigzag) on the hog sometimes but it doesn’t speed the level up at all. This level takes away my masks.
	$LF
]div
[h4 id=NativeFortress 
	" Native Fortress
	$LF
]h4
[div class=p 
	"Another revisit level due to the red gem path going up to the clouds being inaccessible. I come into this level at a terrible spot in the global cycle. If I go full speed through it, I hit a crusher, which causes me to wait for over a second. As a compromise I use this time to grab a mask at the start of the level, since I lost my masks from Hog Wild. Slowing to grab this mask makes me line up exactly on the cycle as early as possible.
	$LF
]div
[div class=p 
	"I use the mask later on when I can’t make a crusher cycle (before the large stack of 6 vertical boxes). I can damage boost over the crusher which also skips passing the box stack. On its own this doesn’t save time, but since the crusher was blocking me, it saves me waiting for it.
	$LF
]div
[div class=p 
	"In the next section going left, there is an optional path behind the wall which skips most of the danger in front of the wall. Although runners use this path, I avoid it since the front path is full of spike boosts and green slime that can speed me up.
	$LF
]div
[div class=p 
	"Speaking of green slime, I often walk down it to speed up Crash a bit. Although it’s a significant speed boost, most of that is cancelled out by the fact that you can’t zigzag due to being grounded. I often try to time a spin towards the end of the green slime and jump out of it. It’s best to do just the one spin on the green slime because there’s a bit of a slowdown at the end of the spin. I essentially have to brute force the spin and jump timing and try every possibility since it’s inconsistent to predict what method will give the optimal results. When you land on uphill green slime you get a bit of a slowdown so when I have spins left I try to spin upon landing on these. In order of time saved, it’s best to use your spins on crushers (best), followed by downhill green slime (medium) followed by uphill green slime (bad), followed by normal spin jump zigzag (worst).
	$LF
]div
[div class=p 
	"Flame cycles are a huge pain here, but I got pretty lucky on this trip. I wasn’t so lucky on the revisit. You can phase through a flame by spinning but you have to be grounded, limiting this only to situations where you have ground before a flame (which basically only happens on that bit with the spike crusher next to a flame).
	$LF
]div
[h3 id=IslandTwo 
	"Island Two
	$LF
]h3
[h4 id=UpTheCreek 
	" Up the Creek
	$LF
]h4
[div class=p 
	"This level involves many leaf cycles that you have to wait for. Some are small enough to get over with a double jump, but others are too wide. The first is crossed by using the mask to damage boost off a fish and the other two are done using a wall climb method similar to upstream skip.
	$LF
]div
[div class=p 
	"This level also involves a backtrack to break the TNT and bouncy box after activating them. The fastest way I found was to detonate the TNT as normal. It’s possible to break the TNT with a spin but then you lose the bouncy box, making for a much slower climb. When blowing up the TNT I had to make sure not to run off too quickly. Otherwise it doesn’t blow up the other box because it’s too far off screen. I found this out the hard way after TASing the whole level and realizing I was that box short.
	$LF
]div
[div class=p 
	"I make a tight leaf cycle at the end of the level, saving a bunch of time.
	$LF
]div
[h4 id=RipperRoo 
	" Ripper Roo
	$LF
]h4
[div class=p 
	"Not much here apart from spinning TNTs as soon as possible. I die at the end like the any% TAS but this is exactly the same speed as watching the ending normally. I suspected that dying may reset the global timer but it does not, making dying and non-dying identical strategically.
	$LF
]div
[div class=p 
	"This TAS also had 257,921 rerecords which basically means that’s how many times I went back and redid something to try and make it better. 
	$LF
	"So thank you for watching this commentary. I hope you found it entertaining and informative. If you liked this content, then you may enjoy some other videos on my channel. I have other commentated TASes like Crash 3 and a plethora of other games. I also have RTA speedruns, TAS tutorials, TAS podcasts, glitch discovery videos and explanations, along pretty much anything I find interesting. Of course, if you enjoyed this video a subscription to this channel is always appreciated and if you had any questions, feel free to leave them in the comments.
	$LF
]div
[div class=p 
	"I would also encourage you to check out the rest of the Crash community. This TAS wouldn’t have been possible without the collective knowledge and support from them. I’ve been very lucky that there is still a large group that’s still so interested in this game.
	$LF
]div
[h4 id=LostCity 
	" The lost city
	$LF
]h4
[div class=p 
	"This level introduces lizard boosts, which are used all over the place. I have to carefully manage my spins to align with cycles, hit away the bats and boost off lizards. After hitting a lizard, every spin delays how quickly you lose speed, so Ideally I hit the lizards with heaps of spins to spare.
	$LF
]div
[div class=p 
	"On the first lizard I’m waiting for a cycle, so I make sure not to use up my spins, otherwise I could get there too early and have to wait, but have no spins left. I do get there a bit early for the next cycle near the checkpoint box, but I 3D jump around the crusher. This is a lot slower, but it is faster than waiting for the crusher to come back in.
	$LF
]div
[div class=p 
	"Before the climb, I get a double lizard boost and get stuck out of bounds. This essentially lets me climb quickly up by jumping and spinning quickly. This saves going all the way to the right and climbing up that way – much faster.
	$LF
]div
[div class=p 
	"The climb is very cycle based, so I preserve spins as much as possible. Only the rotating platforms limit my cycles, as the out and in platforms can be jumped on even if they’re in the wall. To achieve this, Crash just needs to hold forward facing into the wall. You can then get in a very quick jump before slipping off. This is a tad slower than having the platform out as you have to keep re-angling crash forwards then sideways, losing horizontal speed in the process, but it’s obviously a lot faster than waiting for each platform to come out. I use this in combination with double jumps to get through the climb quickly without waiting for many cycles.
	$LF
]div
[div class=p 
	"Unfortunately I couldn’t boost off all the lizards in the left section. This is because some are required for jumping on in order to reach high up boxes.
	$LF
]div
[h4 id=TempleRuins 
	" Temple Ruins
	$LF
]h4
[div class=p 
	"This level is one of the worst for global cycles, primarily due to the crushers which take ages to open back up. I slow down to get an aku aku at the start, since I’m waiting on crushers anyway.
	$LF
	"This level is one of the first with very big box stacks. For the first few I use the snakes to break the majority and then clean up the rest with spins, but holding the spin button down to break more boxes. Hitting enemies into boxes usually only had a couple of possible outcomes (not a smooth range based on your actual position), so it’s easy to pick the best outcome without trying too much.
	$LF
]div
[div class=p 
	"The little spears that come out won’t hurt you if you’re spinning, so they aren’t an issue here. Similarly most of the flame platforms have a bit to stand on where you won’t take damage, especially the ones where you’re walking straight into or out of the screen. However flames moving left or right require some more delicate jumping further down on the pillar holding them up, and this normally costs a bit of time since you lose speed.
	$LF
]div
[div class=p 
	"After I do the cheeky jump on the flame pillar, I move down and the camera doesn’t properly follow me. This is a common trend for levels where you can lock the camera into a path that it shouldn’t go on. I do get it unlocked by moving far enough right just in time to load into the platform (slightly clipped into it). You would think I could just leave the camera behind and do everything without seeing, but unfortunately all of the collision including the ground fails to load in if it’s too far away from the camera. This is a fundamental limit to how fast you can go in this game, especially in a TAS with zip-zagging (see above).
	$LF
]div
[h4 id=RoadToNowhere 
	" Road to Nowhere
	$LF
]h4
[div class=p 
	"Due to the gem order on the English versions of the game, this level would require a revisit. But on J it doesn’t, which is another reason that J is faster.
	$LF
]div
[div class=p 
	"On the gem path, I do a lot of TNT spins, but avoid damage as I escape the blast radius in time.
	$LF
]div
[div class=p 
	"There are icy bits on the bridge which function a bit like the green slime in island 1. I try to use spins and jumps off them to save a bit of time.
	$LF
]div
[h4 id=BoulderDash 
	" Boulder Dash
	$LF
]h4
[div class=p 
	"Similar optimisation strategies to boulders. This level is pretty laggy and requires a revisit.
	$LF
]div
[h4 id=SlipperyClimb 
	" Slippery Climb
	$LF
]h4
[div class=p 
	"Stairs that go up and down are slippery when they’re down. You can usually get a single jump off them, but not a second.
	$LF
]div
[div class=p 
	"The spikes damage you unless you’re spinning. I do take damage on one at the start of the level though, as I need the height from the damage boost. Taking damage doesn’t matter as I’ll lose my masks in Koala Kong
	$LF
]div
[div class=p 
	"The climb is pretty cycle based, so there’s not much I can do. After the climb in the right section there are a few cool strats like a jump off the spikes to hit the bird and a double jump off a moving platform to skip a cycle.
	$LF
]div
[h4 id=KoalaKong 
	" Koala Kong
	$LF
]h4
[div class=p 
	"Koala Kong throws some boulders, then steps out from the right and throws a special boulder which stops for you to spin back. How much he walks out by is RNG, so I manipulated it to make the wait times as short as possible. It can be manipulated by adding spins, jumps, etc throughout the fight, so this was pretty easy to optimise. Unfortunately with the optimal RNG I had to wait for a cart to pass before I could hit him with the boulder. The carts can’t be manipulated.
	$LF
]div
[h3 id=Island3 
	"Island 3
	$LF
]h3
[h4 id=HeavyMachinery 
	" Heavy Machinery
	$LF
]h4
[div class=p 
	"I go into the secret path backwards to grab some quick boxes. This level has a lot of camera shenanigans, but I can’t outrun the camera or the rest of the collision wont load. I can generally avoid steam by staying forwards. Conveyor belts speed me up so I walk on them, but not by as much as you’d think since I cant zig zag on them.
	$LF
]div
[div class=p 
	"The bit at about 26:04 was one of the hardest parts of the TAS (breaking all the boxes). Since the boxes bounce up when you break them if you get too eager with your first spin, some will go up into the roof and you have to wait til they come down to break them. I eventually got all the boxes with a lot of trying. The thing to minimize is jump height, since I need to squeeze under the roof before moving more to the right.
	$LF
]div
[div class=p 
	"Just like in pirohiko’s any% TAS, I do a steam damage boost / wall jump to skip riding a platform up. I was able to get a slightly cleaner wall jump with less slowing down.
	$LF
]div
[div class=p 
	"With the bouncers at the end, spinning next to it activates the upboost, so that saves waiting for Crash to come down onto it. I do a 3D jump after breaking the single box to save a lot of backtracking on the springs.
	$LF
]div
[h4 id=CortexPower 
	" Cortex Power
	$LF
]h4
[div class=p 
	"Very non-linear. The electricity causes a bit of issues but I avoid it with cycles most of the time. There’s a section with an aku aku bot, then right to the shooter, then backtrack back left. I was hoping to break the aku aku box, then have the aku aku there when I came back, but unfortunately it despawned. If I waited for it to hit the ground and become collectible, that would have lost more time than having a mask would have saved.
	$LF
]div
[div class=p 
	"I move forward through the level until I find the single box then hit it and backtrack. Sniping it with the enemy saves a bunch of time, because I can turn around much sooner.
	$LF
]div
[div class=p 
	"The gem skip took a long time to optimise and my final method looks pretty close to RTA. I did have an initial method where I stayed in bounds but did a wall jump across the green slime and some sub jump stuff. While this was simpler and more visually pleasing, it was slower than climbing the wall like I did. Spin and jump timing was optimised to climb as quick as possible then I fall down onto the gem path. To get out of the gem path I just use a wall jump, the same method as RTA.
	$LF
]div
[div class=p 
	"I get pretty tight on spins towards the end, so it could have been a bit faster if I had more spins to work with. But the spins were better used earlier.
	$LF
]div
[h4 id=GeneratorRoom 
	" Generator Room
	$LF
]h4
[div class=p 
	"At about 28:56 I break the aku aku box and get invincibility. Movement looks weird because I go right, left, right, but this is optimal. The bottleneck is breaking the aku aku box since I have to wait for the mask to hit the ground. In that time where I wait, I zip back left to break the left box.
	$LF
]div
[div class=p 
	"I was sad that I couldn’t break the first stack after invincibility with an enemy snipe. Unfortunately the rotating enemies weren’t in the right spot to get this. I did get the snipe by hitting those enemies back towards the bosses, but it left Crash under the platform with no quick way to get back up. So I had to go and break the boxes manually unfortunately.
	$LF
]div
[div class=p 
	"Invincibility is useful in this level because of all the scenery jumping. Normally it would hurt crash, so invincibility speeds up a lot. It’s also useful for breaking boxes a bit more remotely than a spin, allowing for corners to be taken a bit tighter.
	$LF
]div
[div class=p 
	"The end of the level is usually an autoscroller, but I just make it across with my invincibility + masks. I’m glad my invincibility lasted long enough, so that I could match the any% strat for this section.
	$LF
]div
[h4 id=ToxicWaste 
	" Toxic Waste
	$LF
]h4
[div class=p 
	"Donkey Kong
	$LF
]div
[h4 id=Pinstripe 
	" Pinstripe
	$LF
]h4
[div class=p 
	"One of the big timesaves over the any% TAS. It was discovered by runners that delaying one of the hits on pinstripe actually makes his whole cycle faster, saving a couple of seconds.
	$LF
]div
[h4 id=HighRoad 
	" The High Road
	$LF
]h4
[div class=p 
	"Cut in half on the Japanese version, making it much faster. Only big thing to mention is the stack of boxes (8 metal with one breakable in the middle). Rather than breaking this from the front it was much better to jump over it and spin it from the back so I don’t bonk.
	$LF
]div
[div class=p 
	"If I cut out the backtrack at the start, this level was 2f (0.03s) faster than the any% TAS, even with all of the box breaks needed.
	$LF
]div
[h4 id=SunsetVista 
	" Sunset Vista
	$LF
]h4
[div class=p 
	"Bad cycles right from the start. I have to lose my mask to the flame. A bit later on I still get rough cycles with the pusher pushing me all the way out. For the second lizard boost, I’m waiting on a crusher cycle anyway so I preserve all of my spins for after the cycle. To make the gap jump after the lizard boost, I have to use all my spins. This means I don’t have any left for the two box stack and I have to break them with jumps. Looks slow but I had no other choice.
	$LF
]div
[div class=p 
	"Cycles work out pretty well up to the climb, with some cheeky sub jumping past crushers. I’m waiting on a lot of cycles in the climb but can skip some with double jumps.
	$LF
]div
[div class=p 
	"Before the second climb I slow down to get a mask. This doesn’t lose any time as I’m waiting on cycles on the climb anyway. I can do some cheecky flame boosts + double jumps to skip a bunch of cycles here.
	$LF
]div
[div class=p 
	"Before the red lizard boost, I go out of my way to get another mask. This doesn’t lose any time as I’m waiting on the crusher cycle. 
	$LF
]div
[div class=p 
	"In the cortex bonus rounds, you don’t need to break all the boxes. I hang out towards the camera and avoid everything unless I need to box boost. At the end when you grab the key, invisible walls come up and trap you in, forcing you to go onto the end of bonus portal and see a slow fadeout. But you can turn around and get out before these invisible walls come up. This lets you keep the key from the bonus round without waiting for the slow fade out of hitting the portal.
	$LF
]div
[h4 id=LightsOut 
	" Lights out
	$LF
]h4
[div class=p 
	"This will require a revisit. I do most of the level in the dark, as getting a mask would make a textbox losing time. I also think its more entertaining to see the level in the dark. Towards the end of the level I get a mask because its under a low doorway and avoiding the box would lose time. 
	$LF
]div
[div class=p 
	"This level has lots of cycles with platforms moving back and forwards. You want them to be moving forwards because you can land and walk on them for a little speed boost. If theyre moving backwards then jumping off them kills your speed for a couple of frames. In the worst case scenario they aren’t lined up to make a cycle but this can be skipped with sub jumps off the side or double jumps off the platforms.
	$LF
]div
[h4 id=JawsOfDarkness 
	" Jaws of Darkness
	$LF
]h4
[div class=p 
	"The start of the level is waiting on the crushing doors so I have heaps of time to grab masks for later. We see a lot of moving platforms, which will only activate when you step on them. Sometimes jumping up to one from underneath can make it start moving quicker as you technically collide with it quicker.
	$LF
]div
[div class=p 
	"I wasn’t sure about invincibility in the blue gem section, but went for it anyway. It helps with spin management and box breaking. This decision didn’t matter too much as I’m waiting on the door cycle and rising platform cycle anyway.
	$LF
]div
[div class=p 
	"You have to be careful with the 2nd cortex token ad if you hit the snake into it, it blows up the TNT and you don’t get the token. Again I escape with the key from the bonus round.
	$LF
]div
[h4 id=CastleMachinery 
	" Castle Machinery
	$LF
]h4
[div class=p 
	"This level can be skipped using the green gem in any% but that’s not the case here. Main thing here is to manage the steam by staying forward into the camera and using conveyor belts to get some boosts. There’s a lot of sections with rising platforms. I double jump to make it to the next one sooner and come up from underneath to activate them asap. Depending on the speed of the rising platforms you may or may not be able to double jump without using a spin.
	$LF
]div
[div class=p 
	"With the floating box trail (bottom of the level). I tried to break this optimally, but while preserving my spins for boosts off the conveyor belt. There is a massive lag spike when breaking these boxes, so no that is not a glitch in the video.
	$LF
]div
[div class=p 
	"There’s a big cycle in this level (platforms at the rightmost point of the level). It takes a full 13.3 seconds to go through the cycle and in my first iteration of this level I just missed it barely. I tightly optimised everything back to the box break and conveyor boosts to save the couple of frames I needed for the cycle. Actually landing it relies on a bunch of tight double jumps. I also needed to spin under the platform since that did something weird with my hitbox and allowed me to snap up to the platform. Which is odd since normally spins make you go lower. If I was even one frame later, I would have missed this cycle, losing 13.3 seconds. If that actually happened, I would reroute some of my level revisits and try different level orders until it lined up, but that would have been a huge headache.
	$LF
]div
[div class=p 
	"This is the weird point of Crash 1 speedrunning, where the game is very cycle based. Technically if I saved time earlier in the run, it wouldn’t have saved me any time over this section unless I could have saved more than 13.3 seconds to make the next cycle (barring level order changes).
	$LF
]div
[div class=p 
	"At the end of the level you’re intended to ride the platforms past the glowing pipes, but I just damage boost and zigzag across.
	$LF
]div
[h4 id=NBrio 
	" N. Brio
	$LF
]h4
[div class=p 
	"He throws blobs on the floor that you need to jump on. With some weird x-holding spin bouncing shenanigans you can get two blobs from one jump. This was one of the harder things to replicate from the any% TAS. If you get too close to N. Brio he puts his hands up and that loses time. That also means you need him to throw the blobs really far away. Throwing the blobs far doesn’t take any longer so it is a good strategy to hang close to the camera in this level.
	$LF
]div
[div class=p 
	"The bit where he charges at you can be tight in the first part. You need to jump off a block to hit him. It doesn’t seem to be height based, it seems to literally just check if you jumped off the block. If you’re right the left block comes down and if you’re left the right block comes down, so you have to go a bit out of your way either way. After the first hit on him, he has long i-frames that last well into your next jump off the block. You’ll see me basically hit his toes on the last two bounces and that is because I did the earliest jump where I could hit him before I land. That’s just the first frame he’s vulnerable.
	$LF
]div
[div class=p 
	"Somehow I saved 1 frame over any% TAS (presumably lag since this game normally runs physics only every 2 frames).
	$LF
]div
[h4 id=Lab 
	" The Lab
	$LF
]h4
[div class=p 
	"Priority is hitting the ! boxes quickly, since you’re often waiting on their doors to open. There’s one part later in the level where I snipe a scientist through the door to hit some TNT on the other side. This saves a bunch of time since it opens a door early and since I don’t have to delicately avoid the blast radius of the TNT.
	$LF
]div
[h3 id=Revisits 
	"Revisits
	$LF
]h3
[div class=p 
	"Now that we have the coloured gems I revisit all the levels that require a coloured gem to open the secret path. This section would be a lot longer if it wasn’t for all the revisit skip glitches.
	$LF
]div
[h4 id=LightsOut2 
	" Lights out 2
	$LF
]h4
[div class=p 
	"Riding the yellow gem up requires me to stay on it, otherwise it goes back down. That limits my playaround ability. The map screen after this level looks suboptimal since the level spits me out to the right on the map. But I need the coloured gem from this level for the Island 1 and 2 revisits. If I didn’t then I would leave this level until later, since it would spit me to the right towards the end of the game.
	$LF
]div
[h4 id=FumblingInTheDarkSecretLevel 
	" Fumbling in the dark (secret level)
	$LF
]h4
[div class=p 
	"This is the first secret level we visit, which requires a key from the cortex bonus stage in Jaws of Darkness. It’s pretty much the same as lights out aside from the backtrack at the start with the fancy subjumps.
	$LF
]div
[h4 id=LevelOrderConsiderations 
	" Level order considerations
	$LF
]h4
[div class=p 
	"I now go back and do the island 1 and 2 revisits. Remember that the levels spit me forwards on the map when I complete them, so I want to go right back to the start and work my way forward with the revisits where possible. RTA runs do Whole Hog -> Rolling Stones -> Native Fortress -> Boulder Dash but I do Rolling Stones -> Native Fortress -> Whole Hog -> Boulder Dash. The key is in mask routing. I have one mask right now, and I’d like to use it in rolling stones and native fortress for damage boosts. If I did whole hog then I’d lose my mask. Doing it my way means I have no masks for boulder dash. I don’t really need them in a TAS but RTA uses them to spin through a TNT, take the damage and avoid dying. This is pretty fair to have a backup mask, since you wouldn’t want to die in the last level of a 100% speedrun. But since I can avoid the blast radius of TNT I don’t bother taking a mask into Boulder Dash.
	$LF
]div
[div class=p 
	"You might wonder why we don’t just do Whole Hog at the end, but that means we have to do Boulder Dash before Whole Hog and Boulder Dash spits you forwards on the map back towards island 3, so you really want to do it at the end.
	$LF
]div
[div class=p 
	"My route also lined up well with global cycles, but if it hadn’t then I might have needed to slot in Whole Hog and sacrifice having the mask.
	$LF
]div
[h4 id=RollingStonesRevisit 
	" Rolling Stones Revisit
	$LF
]h4
[div class=p 
	"Unfortunately we have a revisit here since the skip was found a week after the TAS was finished. Not much new tech apart from actually getting into the secret area. Basically once you step onto the blue gem it gets rid of the death plane and opens up the secret area. So I hit it from the edge and fall straight down.
	$LF
]div
[h4 id=NativeFortressRevisit 
	" Native Fortress Revisit
	$LF
]h4
[div class=p 
	"Flames were brutal in this level and cost me all my masks (doesn’t matter as I’ll lose them in Whole Hog anyway). I had to slow down on the last flame to bounce over it.
	$LF
]div
[div class=p 
	"I trialled a few strategies for hitting the last box on the way down from the red gem path. Originally I did a sub jump under it, jumped up and bonked my head on it, then used that bonk downwards to fling me down to the main path. It looked call but was about 4f slower than the strat I used, falling down just past the box and spinning to break it.
	$LF
]div
[h4 id=WholeHog 
	" Whole Hog
	$LF
]h4
[div class=p 
	"Autoscroller.
	$LF
]div
[h4 id=BoulderDashRevisit 
	" Boulder Dash Revisit
	$LF
]h4
[div class=p 
	"You have to be careful when taking the gem to the secret area. If the boulder is too close it will hit and kill you on the way in. Luckily that isn’t an issue in the TAS.
	$LF
]div
[div class=p 
	"If you fall down from the gem too early, the deathplane is still active and you die. Spinning off the gem also seems to extend this effect. I was hoping to sub jump off the gem and hit the airborne boxes without using the bouncy ones to get up to them, but this wasn’t an option due to the deathplane.
	$LF
]div
[div class=p 
	"If you leave the gem with a subjump and early you can sometimes outrun the camera (basically locking it into its up/down movement path and never following you forward through the tunnel. While this is a bit faster and looks cool, it doesn’t work as the end of the level collision doesn’t load due to being too far away from the camera.
	$LF
]div
[h4 id=GreatHall 
	" The Great Hall
	$LF
]h4
[div class=p 
	"Beating Cortex actually isn’t required in this run. It doesn’t add to your % counter and the great hall has the secret 100% ending anyway. Normally the Great Hall is just an empty level, but each clear gem adds to a path that can take you to the end of the level. This gets you the secret ending where you see a “Where are they now” off all the boss characters.
	$LF
]div
[div class=p 
	"It’s possible to access this secret ending without the gems using zip-zagging but the 100% category requires you to hit 100% and access this secret ending.
	$LF
]div
[div class=p 
	"I do a lot of corner cuts here, and the first one is particularly wide. I use my spins on the straight diagonal sections since they’re slightly more useful there than on the straight sections.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/ThunderAxe31 
		"ThunderAxe31
	]a
	": I watched the audio commented encode and it was very interesting. I can see a lot of work has been put into it. The 
	(__wikiLink|displaytext=review|href=/Forum/Posts/518067)
	" posted by AleMastroianni also pointed out how much advanced the optimization effort has been for this TAS.
	$LF
]div
[div class=p 
	"The goal chosen is very clear: complete 100% of the game. This is easily defined in-game with the relative percentage counter. When maxed out it gives access to the alternate game ending accessible from the penultimate level "The Great Hall", which saves a lot of time by skipping the final boss.
	$LF
]div
[div class=p 
	"With that said, accepting for Standard as a new branch, the full-completion one.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/Spikestuff 
		"Spikestuff
	]a
	": Bandicoot Power~!
]div
