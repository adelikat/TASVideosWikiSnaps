21
[div class=card mb-2 
	[div class=card-header 
		[strong 
			"Table of contents
		]strong
	]div
	[div class=card-body 
		[ul 
			[li 
				[a href=#Introduction 
					" Introduction
					$LF
				]a
				[ul 
					[li 
						[a href=#CategoryRules 
							" Category Rules
							$LF
						]a
					]li
					[li 
						[a href=#Story 
							" Story
							$LF
						]a
					]li
					[li 
						[a href=#ImprovementSummary 
							" Improvement Summary
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#SoftwareHardware 
					" Software + Hardware
					$LF
				]a
				[ul 
					[li 
						[a href=#RomInformation 
							" Rom Information
							$LF
						]a
					]li
					[li 
						[a href=#Emulator 
							" Emulator
							$LF
						]a
					]li
					[li 
						[a href=#RoutingBot 
							" Routing Bot
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#Timing 
					" Timing
					$LF
				]a
				[ul 
					[li 
						[a href=#Criteria 
							" Criteria
							$LF
						]a
					]li
					[li 
						[a href=#ComparisonMovie 
							" Comparison Movie
							$LF
						]a
					]li
					[li 
						[a href=#TimeTable 
							" Time Table
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#LevelBreakdown 
					" Level Breakdown
					$LF
				]a
				[ul 
					[li 
						[a href=#Stage0000 
							" Stage 00-00
							$LF
						]a
					]li
					[li 
						[a href=#Stage0100 
							" Stage 01-00
							$LF
						]a
					]li
					[li 
						[a href=#Stage0200 
							" Stage 02-00
							$LF
						]a
					]li
					[li 
						[a href=#Stage0300 
							" Stage 03-00
							$LF
						]a
					]li
					[li 
						[a href=#Stage0400 
							" Stage 04-00
							$LF
						]a
					]li
					[li 
						[a href=#Stage0401 
							" Stage 04-01
							$LF
						]a
					]li
					[li 
						[a href=#Stage0500 
							" Stage 05-00
							$LF
						]a
					]li
					[li 
						[a href=#Stage0501 
							" Stage 05-01
							$LF
						]a
					]li
					[li 
						[a href=#Stage0600 
							" Stage 06-00
							$LF
						]a
					]li
					[li 
						[a href=#Stage0601 
							" Stage 06-01
							$LF
						]a
					]li
					[li 
						[a href=#Stage0700 
							" Stage 07-00
							$LF
						]a
					]li
					[li 
						[a href=#Stage0701 
							" Stage 07-01
							$LF
						]a
					]li
					[li 
						[a href=#Stage0800 
							" Stage 08-00
							$LF
						]a
					]li
					[li 
						[a href=#Stage0801 
							" Stage 08-01
							$LF
						]a
					]li
					[li 
						[a href=#Stage0900 
							" Stage 09-00
							$LF
						]a
					]li
					[li 
						[a href=#Stage1000 
							" Stage 10-00
							$LF
						]a
					]li
					[li 
						[a href=#Stage1100 
							" Stage 11-00
							$LF
						]a
					]li
					[li 
						[a href=#Stage1200 
							" Stage 12-00
							$LF
						]a
					]li
					[li 
						[a href=#Stage1300 
							" Stage 13-00
							$LF
						]a
					]li
					[li 
						[a href=#Stage1301 
							" Stage 13-01
							$LF
						]a
					]li
					[li 
						[a href=#Stage1400 
							" Stage 14-00
							$LF
						]a
					]li
					[li 
						[a href=#Stage1401 
							" Stage 14-01
							$LF
						]a
					]li
					[li 
						[a href=#Stage1500 
							" Stage 15-00
							$LF
						]a
					]li
					[li 
						[a href=#Stage1501 
							" Stage 15-01
							$LF
						]a
					]li
					[li 
						[a href=#Stage1600 
							" Stage 16-00
							$LF
						]a
					]li
					[li 
						[a href=#Stage1700 
							" Stage 17-00
							$LF
						]a
					]li
					[li 
						[a href=#Stage1701 
							" Stage 17-01
							$LF
						]a
					]li
					[li 
						[a href=#Stage1801 
							" Stage 18-01
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#FutureWork 
					" Future Work
					$LF
				]a
				[ul 
					[li 
						[a href=#GlitchWorldsExploration 
							" Glitch Worlds Exploration
							$LF
						]a
					]li
					[li 
						[a href=#BetterBossExecution 
							" Better Boss execution
							$LF
						]a
					]li
					[li 
						[a href=#DeeperBotExploration 
							" Deeper bot exploration
							$LF
						]a
					]li
					[li 
						[a href=#RtaFeasibleTechniques 
							" RTA feasible techniques
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#AcknowledgementsAndAttributions 
					" Acknowledgements and Attributions
					$LF
				]a
			]li
			[li 
				[a href=#EncoderInformation 
					" Encoder Information
					$LF
				]a
				[ul 
					[li 
						[a href=#SuggestedThumbnails 
							" Suggested Thumbnails
							$LF
						]a
					]li
					[li 
						[a href=#ConsoleVerification 
							" Console Verification
							$LF
						]a
					]li
					[li 
						[a href=#PostFinishInputs 
							" Post-Finish Inputs
							$LF
						]a
					]li
					[li 
						[a href=#ReRecordCount 
							" Re-record Count
							$LF
						]a
					]li
				]ul
			]li
		]ul
	]div
]div
[h3 id=Introduction 
	" Introduction
	$LF
]h3
[div class=p 
	"After two short years, we once again find a way to defeat Dracula and its minions in a record time. This TAS builds upon all the techniques and tricks that the community has discovered throughout decades, and adds a few new ones. The main innovations for this movie were (1) the use of a brute-forcing bot to refine execution, (2) clever new ways to use the well-known 
	[a href=https://docs.google.com/document/u/0/d/1vlOruABkiWSLGQA5we1cPI0VDxqRrCMcJGgQWCriD2I/edit rel=noopener external nofollow 
		"scroll glitch
	]a
	", and (3) a better execution of boss stages.
	$LF
]div
[h4 id=CategoryRules 
	" Category Rules
	$LF
]h4
[ul 
	[li 
		" any%, so all is allowed
		$LF
	]li
	[li 
		" Takes damage to save time
		$LF
	]li
	[li 
		" Heavy glitch abuse
		$LF
	]li
	[li 
		" Heavy luck manipulation (uses pausing to influence enemy actions)
		$LF
	]li
]ul
[h4 id=Story 
	" Story
	$LF
]h4
[div class=p 
	"The story of this TAS is divided in two phases, first:
	$LF
]div
[figure 
	[figcaption class=author 
		"Quoting [eien86]
	]figcaption
	[div class=p 
		"The project started in February when I started working on adapting my existing bot to support NES games, having had some successes running it for 
		[a href=https://tasvideos.org/7134S rel=noopener external nofollow 
			"Prince of Persia (DOS)
		]a
		" After connecting the bot to the QuickNES emulator, I decided to try it on Castlevania. After two weeks of unsuccessfully trying to crack the first level on my own, I found that the idea was still too green for such a complex game, and decided to put it on hold.
		$LF
	]div
	[div class=p 
		"To improve my knowledge of NES botting, I took on 
		[a href=https://tasvideos.org/7422S rel=noopener external nofollow 
			"Prince of Persia (NES)
		]a
		", a game I was more familiar with. After finishing that movie in April  and having learned enough (painful) lessons, I felt ready to tackle Castlevania again. This time I decided to get myself embedded in the community and look for guidance. The enormous amount of help I received from the players and former TASers helped me unlock the many hidden complications of the game and start making some serious progress.
		$LF
	]div
	[div class=p 
		"Despite never having solved it manually, I ended up learning the deep mechanics of the game, and was even able to make my own humble routing contribution: early orb grab, which saves a few dozen frames after defeating some bosses. After Challenger found a better execution for the scroll glitch in level 2, the project went from just saving a few frames, to shaving entire seconds.
		$LF
	]div
	[div class=p 
		"TASing is a rollercoaster of emotions and botting doesn't make any difference to it. Spending many hours and days running the bot to solve a 200 frame segment just for it to fail, crash, or simply give you a non-optimal solution is very discouraging. However, as in TASing in general, perseverance is the key to success. That is what I love about this hobby.
		$LF
	]div
	[div class=p 
		"Making the initial version of this movie took around two months of intensive work. The end result, 128 frames saved, was very satisfying. Little did I know that, over the next 3 months, Challenger would totally destroy it with further improvements.
		$LF
	]div
]figure
[div class=p 
	"and then:
	$LF
]div
[figure 
	[figcaption class=author 
		"Quoting [Challenger]
	]figcaption
	[div class=p 
		"After finishing both any% and pacifist runs, I wasn't sure if this game could be still improvable despite being aware the scroll glitch wasn't studied completely, and I implemented scroll glitch through trial-and-error - The Nametable Viewer tool from the BizHawk emulator would easily solve every scroll glitch but I never experimented that tool at the time - I made a mistake. 
		$LF
	]div
	[div class=p 
		"This glitch definitely has potential and would be definitely useful for real-time runs too, but due to how the setup works, it was only viable for TAS. Some months later (April 2021), natgoesfast discovered a new scroll glitch setup by complete accident while playing in real-time, and almost 2 weeks later SBDWolf managed to replicate in a TAS the new scroll glitch setup. He contacted me about this discovery, leading me to test it too.
		$LF
		"We figured out this scroll glitch setup is actually easier to perform, by requiring only turning around at the right time instead of moving every other frame! I realized at the point both any% and pacifist runs now can be improved again.
		$LF
	]div
	[div class=p 
		"I could have worked on this game again soon after this new discovery but I was busy with other projects. Meanwhile the Castlevania community studied and researched the scroll glitch even more during some time, opening the doors for new real-time runs.
		$LF
	]div
	[div class=p 
		"A year later, eien86 (known for his works/contributions with Prince of Persia 1 and 2) starts a new Castlevania TAS, motivating me to contribute with this project. Initially I only suggested some new ideas such as a better execution for the scroll glitch in level 2 (as he said above). The first version of this project was made through his bot, finishing this run in a month. 128 frames faster than the previous run.
		$LF
	]div
	[div class=p 
		"Some days later I started a new version of this project after learning well about using that Nametable Viewer tool I've said earlier. My initial plan was only adding new ideas for the entertainment factor, but during the progress I found new improvements for this game too (actually I didn't even expect to improve this project even further, considering how very solid this game is). After 2 months of work, 272 frames were gained, resulting in a whopping 400 frames faster (around 6.7 seconds) than the previous run. 
		$LF
	]div
	[div class=p 
		"EDIT 18/09: After submitting this run, 8 more frames were gained thanks to some new discoveries I didn't realize despite revising this run a lot.
		$LF
	]div
	[div class=p 
		"While the previous run was made using BizHawk 2.4 version, this time I used 2.2 version (the same one I've used for the 2018 run) because initially after finishing this project, I planned to resync this run to NESHawk core without having much slowdown, but the idea wouldn't help very well: it would desync on more recent versions of this emulator since NESHawk core is more accurate this time.
		$LF
		"Actually I wanted to use the current version of this emulator since the start of this project, but my laptop isn't able to update one of the required programs in order to run the most recent versions of this emulator. Fortunately eien86 got a very good idea for me, helping me to access the emulator through a windows machine in the cloud, allowing me to use the current BizHawk version! Luckily I managed to resync to NESHawk without having much effort, and not losing a single frame from the start until the last input.
		$LF
	]div
]figure
[h4 id=ImprovementSummary 
	" Improvement Summary
	$LF
]h4
[ul 
	[li 
		" Optimized and extended use of the Scroll Glitch: We discovered that it was possible to reduce the frames required to execute the glitch to 4 (two L presses, if walking rightwards; two R presses, if walking leftwards). This optimization alone saved several dozen frames throughout the run. 
		$LF
	]li
	[li 
		"New Cave Stage (10-00) Route: we've found a way to completely avoid moving platforms in the cave stage. Described in detail below, this required a much more extensive use of the scroll glitch.
		$LF
	]li
	[li 
		"Early Orb Grab Landing: This is a new use for the scroll glitch initially theorized by eien86 and then refined by Challenger, where spawning platforms at the boss screen allows us to land faster after grabbing an orb. A faster landing enables a faster level transition, which saves a few frames.
		$LF
	]li
	[li 
		" Faster boss kills: Detailed below, we've found ways to beat the Mummies, Death, and the Cookie monster faster.
		$LF
	]li
	[li 
		" Bot: We used a bot to go optimize the established routes and try to polish the execution in many parts where frames could be saved. This included shaving off lag frames.
		$LF
	]li
]ul
[h3 id=SoftwareHardware 
	" Software + Hardware
	$LF
]h3
[h4 id=RomInformation 
	" Rom Information
	$LF
]h4
[ul 
	[li 
		" Name: Castlevania (U) (PRG0) 
		"[!]
		$LF
	]li
	[li 
		" SHA1: A31B8BD5B370A9103343C866F3C2B2998E889341
		$LF
	]li
	[li 
		" MD5:00D93C9F6B8AEFB8B6C02B20147DF4EC
		$LF
	]li
]ul
[h4 id=Emulator 
	" Emulator
	$LF
]h4
[ul 
	[li 
		" EmuHawk 2.8.0 (Core: NesHawk)
		$LF
	]li
]ul
[div class=p 
	"Manually resynchronized by Challenger from a EmuHawk 2.8.0 + QuickNES movie.
	$LF
]div
[h4 id=RoutingBot 
	" Routing Bot
	$LF
]h4
[ul 
	[li 
		" Bot: 
		[a href=https://github.com/SergioMartin86/jaffar rel=noopener external nofollow 
			"Jaffar
		]a
		$LF
	]li
	[li 
		" Routing Core: QuickNES
		$LF
	]li
	[li 
		" Platforms: 
		$LF
		[ul 
			[li 
				" AMD Ryzen Threadripper 3990X Processor (64 cores, 128 threads) + 256Gb RAM (Average Exploration Performance: 1.2M States/s)
				$LF
			]li
			[li 
				" 2 x AMD EPYC 7742 Processor (128 cores, 256 threads) + 512Gb RAM (Average Exploration Performance: 2.0M States/s)
				$LF
			]li
		]ul
	]li
]ul
[h3 id=Timing 
	" Timing
	$LF
]h3
[h4 id=Criteria 
	" Criteria
	$LF
]h4
[div class=p 
	"We use the following addresses for timing:
	$LF
]div
[pre 
	[code 
		$UNPRINTABLE TEXT!!!
	]code
]pre
[div class=p 
	"And the following criteria:
	$LF
]div
[ul 
	[li 
		" Start. Starting game sequence, including boot, pressing Start, and the walking scene.
		$LF
	]li
	[li 
		" Cutscenes. After a cutscene, the stage starts when the player gains control of Simon (Game mode: 05, Game Sub Mode: 06)
		$LF
	]li
	[li 
		" Entrance. This is the animation of Simon entering the Castle or the last level's big demon head. (Game Mode: 10)
		$LF
	]li
	[li 
		" Doors. Walking through doors are driven by a 16-frame-rule and must be taken into consideration separately. By doing this, we can see what gains were made with respect to the old movie, which were later lost due to a full frame rule not being saved. (Game Mode: 08)
		$LF
	]li
	[li 
		" Stairs. Since these transitions are not frame-rules, we count a transition when the Current Sub Stage number increases by one
		$LF
	]li
	[li 
		" Level End. The level officially ends on landing after grabbing the orb  after killing the boss. (Game mode: 12, Game Sub Mode: 1)
		$LF
	]li
	[li 
		" Movie End. This category's end time is taken at the frame of the last input. 
		$LF
	]li
	[li 
		" Game End. The actual moment when the game ends by grabbing the orb and landing after killing the cookie monster. (Game mode: 12, Game Sub Mode: 1)
		$LF
	]li
]ul
[h4 id=ComparisonMovie 
	" Comparison Movie
	$LF
]h4
[div class=p 
	"Here is a per-level comparison between this movie and the currently published TAS:
	$LF
]div
[div class=p 
	(Youtube|v=07O0yiQtwp8)
	$LF
]div
[h4 id=TimeTable 
	" Time Table
	$LF
]h4
[div class=p 
	"Here is a time table comparing frame timing between this movie and the currently published TAS:
	$LF
]div
[pre 
	[code 
		$UNPRINTABLE TEXT!!!
	]code
]pre
[h3 id=LevelBreakdown 
	" Level Breakdown
	$LF
]h3
[h4 id=Stage0000 
	" Stage 00-00
	$LF
]h4
[div class=p 
	"No significant changes have been introduced in this stage.
	$LF
]div
[h4 id=Stage0100 
	" Stage 01-00
	$LF
]h4
[div class=p 
	"No significant changes have been introduced in this stage.
	$LF
]div
[h4 id=Stage0200 
	" Stage 02-00
	$LF
]h4
[div class=p 
	"No significant changes have been introduced in this stage.
	$LF
]div
[div class=p 
	"Challenger: While this stage can't be improved due to frame rule, I took advantage of that for another item drop when killing that bat - he drops holy water but it's not possible to grab it because lower height... well, there's a reason why we skipped this subweapon, and I'll explain it.
	$LF
]div
[h4 id=Stage0300 
	" Stage 03-00
	$LF
]h4
[div class=p 
	"Here we use the scroll glitch to keep the middle platform at the boss battle, to enable early orb grab. The glitch requires 4 frames, but the trick saves 5, so we get 1 net frame save.
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/chjMgLM/image14.png 
	]img
	$LF
]div
[div class=p 
	"We also removed the use of the stopwatch from the previous TAS, for the purpose of ending the game timer at a lower number, which gave less bonus score, but resulted in 3 fewer frames of post-boss transition.
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/MGhMHjV/image15.png 
	]img
	$LF
]div
[div class=p 
	"Challenger: Yep stopwatch usage adds more time left at the end, and we keep the axe subweapon this time because...
	$LF
]div
[h4 id=Stage0400 
	" Stage 04-00
	$LF
]h4
[div class=p 
	"No significant changes have been introduced in this stage.
	$LF
]div
[div class=p 
	"Challenger: The axe can beat this first room with the same amount of time as when this room was played using holy water.
	$LF
]div
[div class=p 
	"With axe subweapon this time, we must kill the knight enemy - he normally dies with 2 axe hits but if you hit another enemy on the next frame alongside the first enemy (there a bat in this room too) with a single axe, it will result on a double hit, killing both of them.
	$LF
]div
[div class=p 
	"Fun fact: An item drop in this room could be possible but unfortunately it would require wasting some frames - that's why holy water was skipped this time, but that item drop on stage 02 was necessary because we need the boomerang at the next item drop from the following room.
	$LF
]div
[h4 id=Stage0401 
	" Stage 04-01
	$LF
]h4
[div class=p 
	"No significant changes have been introduced in this stage.
	$LF
]div
[div class=p 
	"Challenger: Axe sucks in this room, because it won't kill the first knight enemy this time. With this enemy alive, this room can lag at the middle of this room (because another knight enemy spawns, as well as having some candles present) but with some trial-and-error the lag problem can be avoided.
	$LF
]div
[h4 id=Stage0500 
	" Stage 05-00
	$LF
]h4
[div class=p 
	"No significant changes have been introduced in this stage.
	$LF
]div
[h4 id=Stage0501 
	" Stage 05-01
	$LF
]h4
[div class=p 
	"This is certainly the level where the fun began. The bot found a way to execute medusa skip by 16 frames, exactly enough to catch the previous frame rule at the door transition. The keys to the improvements were a smoother execution of the scroll glitch and getting the medusa skip closer to the exit door, as shown below:
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/m0q1xnm/image9.png 
	]img
	$LF
]div
[h4 id=Stage0600 
	" Stage 06-00
	$LF
]h4
[div class=p 
	"The second improvement is the idea by Challenger, to remove an extra block from Stage 06-00 to facilitate a faster jump towards the top. Note that every single application of the scroll glitch takes the bot 4 frames. However, the savings from removing this block was enough to save a whole 9 frames.
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/MfDDYC6/image20.png 
	]img
	$LF
]div
[h4 id=Stage0601 
	" Stage 06-01
	$LF
]h4
[div class=p 
	"The improvements in this stage came from a better execution of the scroll glitch in the Medusa boss room. It's here that eien86 initially came up with the idea of the early orb grab: by scroll glitching an additional block, we could trigger the transition earlier. In the picture below we compare the TASes at the exact frame where the orb is grabbed:
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/TWzVb7p/image24.png 
	]img
	$LF
]div
[h4 id=Stage0700 
	" Stage 07-00
	$LF
]h4
[div class=p 
	"The saved frames in this stage came exclusively from a better execution of the scroll glitch.
	$LF
]div
[h4 id=Stage0701 
	" Stage 07-01
	$LF
]h4
[div class=p 
	"Here we decided to remove the last block before the door to accelerate the descent before activating it. This had no impact on the frame counter since the door enforces a frame rule. However, we kept it because it looks cool.
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/WvdR3hk/image5.png 
	]img
	$LF
]div
[h4 id=Stage0800 
	" Stage 08-00
	$LF
]h4
[div class=p 
	"No significant changes have been introduced in this stage.
	$LF
]div
[h4 id=Stage0801 
	" Stage 08-01
	$LF
]h4
[div class=p 
	"No significant changes have been introduced in this stage.
	$LF
]div
[h4 id=Stage0900 
	" Stage 09-00
	$LF
]h4
[div class=p 
	"We added a new instance of the scroll glitch to create a fake platform in the boss' room for one of the biggest early orb catch in the game, saving 7 frames:
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/SQVSfBY/image2.png 
	]img
	$LF
]div
[div class=p 
	"Challenger: I didn't consider testing this instance of the scroll glitch despite testing this glitch on the 2020 pacifist TAS (which has a very different strategy), so the OHKO strategy for this battle is new indeed.
	$LF
]div
[h4 id=Stage1000 
	" Stage 10-00
	$LF
]h4
[div class=p 
	"Perhaps the most broken of all stages, the list of differences here is large.
	$LF
]div
[ul 
	[li 
		" First, Challenger discovered that there exists a void block that can be glitched in where Simon can stand and save a few frames from the moving platform.
		$LF
	]li
]ul
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/ChZV4Vb/image22.png 
	]img
	$LF
]div
[div class=p 
	"Challenger: I waste a boomerang at the start of this stage and didn't pick the big heart despite destroying the candle in order to avoid an almost unavoidable lag frame soon after Simon get out the moving platforms (fortunately it's possible to gain another big heart by killing a fishman on certain frames - item drop). This lag is very weird, because avoiding it requires some trial-and-error and right timing.
	$LF
]div
[ul 
	[li 
		" Second, eien86 discovered that, by removing the top stalactite on top, it is possible to exit the cave skip with a jump, which saves Simon from 'clunking', an unavoidable pause he takes when falling from a height. 
		$LF
	]li
]ul
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/R9CB1cS/image4.png 
	]img
	$LF
]div
[ul 
	[li 
		" Third, Challenger found a way to create an artificial 'stair', initially theorized by scrimpeh, that allows us to skip the moving platforms altogether. These blocks are brought into this part of the stage from its very beginning. 
		$LF
	]li
]ul
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/zSZCGxy/image12.png 
	]img
	$LF
]div
[div class=p 
	"Challenger: Skipping those moving platforms was only implemented near the end of this project, although I considered implementing it since I started working on the second version of this TAS.
	$LF
]div
[div class=p 
	"My original idea was build an artificial 'brigde': using the same platform from the previous TAS + adding an extra platform that would allow him skip waiting for the moving platforms. Unfortunately some frames were lost at the end because the setup for the required extra platform was awkward.
	$LF
]div
[div class=p 
	"This strat was revived later in the progress after discovering that void block timesaver, since you must wait for the moving platforms anyway. 2 frames were gained at the end.
	$LF
]div
[div class=p 
	"Soon after achieving this holy grail, I optimized this strat even further, changing from a literal 'brigde' to an artificial 'stair' allowing me for a good opportunity to use stopwatch some frames earlier in order to gain some frames at bat skip without waiting at all.
	$LF
]div
[div class=p 
	"I built another extra platform for the artifficial 'stair' because Simon must land on the middle raised platform sooner because otherwise he would miss the opportunity for another discovered scroll glitch:
	$LF
]div
[ul 
	[li 
		" Fourth, Challenger found an additional stair is possible to reach the end earlier.
		$LF
	]li
]ul
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/dbxKY88/image6.png 
	]img
	$LF
]div
[div class=p 
	"Challenger: Actually the artificial 'stair' idea was originally theorized here, and the shortcut was discovered soon after I started the work on the second version of this TAS.
	$LF
]div
[h4 id=Stage1100 
	" Stage 11-00
	$LF
]h4
[div class=p 
	"No significant changes have been introduced in this stage.
	$LF
]div
[h4 id=Stage1200 
	" Stage 12-00
	$LF
]h4
[div class=p 
	"Through botting and manual optimization we achieved a better scroll glitch execution. We also added an early orb platform, for faster level transition:
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/Xpd05s2/image17.png 
	]img
	$LF
]div
[h4 id=Stage1300 
	" Stage 13-00
	$LF
]h4
[div class=p 
	"The saved frames in this stage came exclusively from a better execution of the scroll glitch.
	$LF
]div
[h4 id=Stage1301 
	" Stage 13-01
	$LF
]h4
[div class=p 
	"The saved frames in this stage came exclusively from a better execution of the scroll glitch.
	$LF
]div
[div class=p 
	"Challenger: I didn't know this room has a hidden multiplier item, which was a great opportunity to increase the entertainment factor, as well as gaining III item at the start of the next stage before getting the axe subweapon.
	$LF
]div
[h4 id=Stage1400 
	" Stage 14-00
	$LF
]h4
[div class=p 
	"A change in route is made here, where we grab the axe subweapon (instead of preserving the holy water). This makes the rest of the level a bit harder to solve, but will allow for a faster Death boss kill.
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/nf7zbnq/image23.png 
	]img
	$LF
]div
[h4 id=Stage1401 
	" Stage 14-01
	$LF
]h4
[div class=p 
	"The saved frames in this stage came from a better execution and a slightly changed route where the scroll glitch is used to enable the upper path, as opposed to going downwards.
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/mvT8MVJ/image3.png 
	]img
	$LF
]div
[div class=p 
	"Challenger: I tested the upper path during my work on both previous any% and pacifist runs, but at the time it looked slower because I thought the required scroll glitch for door glitch would require adding an extra platform, forcing me to lose more time than using the old path and waiting for the axe knight moves away.
	$LF
]div
[h4 id=Stage1500 
	" Stage 15-00
	$LF
]h4
[div class=p 
	"No significant changes have been introduced in this stage.
	$LF
]div
[h4 id=Stage1501 
	" Stage 15-01
	$LF
]h4
[div class=p 
	"Here we changed the route from using the super-crit on Death to killing it using the axe. Not only is this approach faster on itself, but also has a faster setup since scroll glitching the door out is not required. This strategy was initially suggested by McHazard (
	[a href=https://tasvideos.org/UserFiles/Info/38216693731293348 rel=noopener external nofollow 
		"movie
	]a
	") and optimized here by Challenger.
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/nDRFxQz/image18.png 
	]img
	$LF
]div
[div class=p 
	"Challenger: Stage 15 was originally improved thanks to a better execution of the scroll glitch, and later in the progress:
	$LF
]div
[div class=p 
	"Here comes the decisive moment I should have tried before: if you stun for a while the first axe knight with two axes, Simon can bypass the first axe knight by only a few frames thanks to the same attack pattern manipulation seen on pacifist runs. And the second axe knight is avoided completely by using the same strategy from the 2020 pacifist run, thanks to a frame perfect whip trick.
	$LF
]div
[div class=p 
	"I was aware of the Death axe strat even before doing my first TAS of this game back from 2017, but bringing axe wouldn't work because axe knights sucks and the crucial whip trick was only discovered three years later. Once reaching the boss, initially I attempted to replicate the same movements from McHazard's movie file but the middle scythe didn't cooperate well. I asked eien86 for help, but we failed to fix that scythe.
	$LF
]div
[div class=p 
	"I wasn't much satisfied with the result (despite being 8 frames faster than the previous version of this new TAS), so I decided to adjust the strategy by using that axe extra hit idea from stage 04-00 using two of three scythes and one of the candles of this room. 
	$LF
]div
[div class=p 
	"The boss normally moves to the left after the battle starts, but you can prevent it by hitting him on certain frames so optimizing every attack is important (though pausing the game helps too) in order to deliver the critical hit at the time when he starts to move. The final result is frame perfect strategy (and really satisfying).
	$LF
]div
[div class=p 
	"This new axe strat is cool but unfortunately lots of points were lost during this and the previous stage.
	$LF
]div
[h4 id=Stage1600 
	" Stage 16-00
	$LF
]h4
[div class=p 
	"In this stage, Challenger found that the bats can be manipulated to grab an additional heart and increase the 'kill counter', by killing Bat shots. This approach is crucial for having enough hearts to execute the rest of the route.
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/v3PfXBT/image10.png 
	]img
	$LF
]div
[div class=p 
	"We also grab the stopwatch subweapon for a faster skip in the next stage.
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/7RzZz2V/image1.png 
	]img
	$LF
]div
[div class=p 
	"Challenger: Initially after discovering the 'faster skip for the next stage', 3 frames were sacrified in order to get 2 hearts and the stopwatch by whipping those candles (seen in the screenshot above) before finding about the bat manipulations - it was only discovered after I beat Dracula.
	$LF
]div
[div class=p 
	"EDIT 18/09: I got another extra heart to save time during the dracula battle.
	$LF
]div
[h4 id=Stage1700 
	" Stage 17-00
	$LF
]h4
[div class=p 
	"Here, Challenger discovered that the skeleton bone skip can be made faster by the use of the stopwatch power. This 'wastes' 5 hearts, but this is compensated by the heart gained in the previous stage and the fewer hearts needed in the last boss fight.
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/W2bqDY3/image16.png 
	]img
	$LF
]div
[div class=p 
	"Challenger: Too bad I didn't thought of that before, because adding this strat during the previous TAS would be actually possible since there are enough hearts to recover before fighting Dracula.  
	$LF
]div
[h4 id=Stage1701 
	" Stage 17-01
	$LF
]h4
[div class=p 
	"Arguably the most complex of all stages by reasons the casual watcher cannot see. Here, lag frame optimization, kill-count tallying (we need to kill a number of objects and enemies to obtain a triple shot later), heart count optimization, enemy pattern manipulation, health optimization, skeleton skips, and the scroll glitch all intervene. After an initial optimization with the bot, Challenger optimized this stage even further by achieving all the aforementioned goals in a flawless execution. 
	$LF
]div
[h4 id=Stage1801 
	" Stage 18-01
	$LF
]h4
[div class=p 
	"The most spectacular save of all, Challenger optimized this fight by inserting two instances of the scroll glitch to entrap the cookie monster and killing it with a much sooner last movie input.
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/khdhYtq/image21.png 
	]img
	$LF
]div
[div class=p 
	"Challenger:
	$LF
]div
[div class=p 
	"EDIT 18/09 - Phase 1 improvements:
	$LF
]div
[div class=p 
	"- By throwing the first boomerang with precise positioning and at the right timing before the battle starts, the boomerang will hit him twice as soon as he turns out solid.
	$LF
]div
[div class=p 
	"- Pausing the game during dracula phase 1 affect both his positioning and pattern, but after finishing this TAS I found out it's actually possible to manipulate a faster pattern for cycle 2 without messing up his positioning by pausing as soon as he respawns - in "ghost" state.
	$LF
]div
[div class=p 
	"- Using one of the candles will add an extra hit like seen on the previous boss.
	$LF
]div
[div class=p 
	"- And some adjustments during the second cycle before going to the next phase...
	$LF
]div
[div class=p 
	"For the first time in 18 years, we have a brand new strategy for phase 2 thanks to scroll glitch, and surprise: it doesn't require holy water this time!
	$LF
]div
[div class=p 
	"Before phase 2 starts, I throw 2 boomerangs and at the last second I throw a third boomerang for an extra hit as soon as cookie monster appears.
	$LF
]div
[div class=p 
	"Boomerangs doesn't 'permanently' stun this monster like the holy water so his jump pattern is unavoidable this time, but allows him for a critical hit then I take advantage of the invicibility to throw 3 boomerangs for extra hits before going to the orb location and finish input with the lastest boomerang throw, killing cookie monster just in time. Not only the input ends even earlier but also achieves a faster game completion.
	$LF
]div
[div class=p 
	"Initially I used only one instance of the scroll glitch but it would require more time for staying away from the cookie monster before the invicibility expires, meaning I would throw 2 boomerangs instead of three, and requiring two jumps before going to orb location. Adding an extra tile would allow him to land near the end of the raised platform. 14 frames were gained between the lastest boomerang shots until the end input.
	$LF
]div
[div class=p 
	"This scroll glitch was originally discovered during my work on 2020 but I'm not sure why I didn't test it before, although the reachable raised platform was really useful on pacifist run for both Dracula phases.
	$LF
]div
[div class=p 
	"Fun fact: The jump pattern from cookie monster can be triggered even earlier if you press "B" on certain frames for some reason, and that was useful during the new strategy, combined with timing, positioning and optimizing every attack and boomerang shots before doing that critical hit.
	$LF
]div
[h3 id=FutureWork 
	" Future Work
	$LF
]h3
[div class=p 
	"Although this movie has been extensively refined, we are certain that further improvements are possible. Here are some ideas worth pursuing:
	$LF
]div
[h4 id=GlitchWorldsExploration 
	" Glitch Worlds Exploration
	$LF
]h4
[div class=p 
	"In this game, starting to climb a stair is a scripted event. At certain points of the map, if you press Up, you will start climbing up (similarly for climbing down). This is true, even if such stair is no longer graphically present in the screen, due to e.g., scroll glitching, or bad warps (see figure below).
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/C9y8Bbk/image8.png 
	]img
	$LF
]div
[div class=p 
	"However, the finalization of the stair climbing animation is not scripted. Instead, it is regulated by the NES PPU and its collision detection. It is only when Simon hits a solid block that he is allowed to exit the stair. If you by any reason remove such an ending block, Simon will keep on climbing until the next solid block. If no such solid block exists, then he will climb until reaching the limits of the screen. 
	$LF
	"Instead of triggering death, reaching the end of the screen will bring you to the next or previous substage, even if such substage doesn't exist. If you are in substage 0, climbing down will take you to substage 255 (-1, when signed). When these substages are not defined, the game will read from garbage when resolving the level:
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/k2pMYp4/image11.png 
	]img
	$LF
]div
[div class=p 
	"We have detected many instances of these glitchy substages which are actually accessible with the help of scroll glitch. These glitchy worlds remain largely unexplored. Their potential is that, interacting with them might (a) modify other parts in memory that allows for a game breaking skip or, (b) trigger stage-changing doors earlier than the route allows.
	$LF
]div
[div class=p 
	"For anyone (us included) interested in pursuing this possibility, we recommend downloading the 
	[a href=https://www.romhacking.net/hacks/5180/1 rel=noopener external nofollow 
		"rom hack
	]a
	" by bogaa, which allows you to visualize door and stair triggers.
	$LF
]div
[h4 id=BetterBossExecution 
	" Better Boss execution
	$LF
]h4
[div class=p 
	"Boss fights are by no means proven to be optimal. There surely remains frames to be saved in the more complex battles.
	$LF
]div
[h4 id=DeeperBotExploration 
	" Deeper bot exploration
	$LF
]h4
[div class=p 
	"Even though the bot helped a lot in figuring out better executions, this game is still quite complex. Especially when utilizing weapons (and several of them at a time), the exploration space becomes huge. This complicates especially boss fights, where the bot could not find any improvements at all. Either better ways to prune states, or simply waiting for server-grade CPUs to become x10 more powerful in the future could be very useful to improve those fights.
	$LF
]div
[h4 id=RtaFeasibleTechniques 
	" RTA feasible techniques
	$LF
]h4
[div class=p 
	"A common question in the speedrunning community is whether botting can help in developing more RTA friendly strategies. I have been pondering this question ever since I've been working with the Prince of Persia community. There are no simple answers for this, as it is hard to parametrize 'human feasibility'. However, I believe we are making some progress in this front and hope to get some framework for bot-driven RTA strategizing some year soon.
	$LF
]div
[h3 id=AcknowledgementsAndAttributions 
	" Acknowledgements and Attributions
	$LF
]h3
[ul 
	[li 
		" Challenger: Authored the second version of this movie, totalling ~272 frames saved, and 8 more frames after submitting this run.
		$LF
	]li
	[li 
		" eien86: Authored the first version of this movie, totalling ~128 frames saved.
		$LF
	]li
	[li 
		" SBDWolf: He was the catalyst for my (eien86) interest in the game. After watching Summoning Salt's video on this game's WR, I took interest in watching runners in Twitch and, if I recall correctly, he was the WR holder at the time. He was kind enough to record his solution of level 1 on the emulator for me. This recording was instrumental for calibrating the bot. He also provided support, hints and ideas during the entire process. I am very grateful for his help.
		$LF
	]li
	[li 
		" scrimpeh: Suggested the 'artificial stairway' on the cave level which Challenger later showed it was faster that current strat, and was overall very helpful in the creation of this movie.
		$LF
	]li
	[li 
		" Trisklion: He was really helpful in providing technical knowledge in all of the (obscure) aspects of the game, and especially the scroll glitch. His help and support was instrumental in bringing this movie to fruition.
		$LF
	]li
	[li 
		" Crem / mooskgah: He came up with the idea of a speedrunning bot, an idea that I (eien86) would have never considered on my own (I consider myself first and foremost a glitch hunter). I was so inspired by his ideas that I decided to take them to the max. Here's the result.
		$LF
	]li
	[li 
		" The Castlevania I Speedrunning community: Many others contributed with ideas, comments and support. In particular, Shockra_Tease, Komrade, Kid Charlemagne, Dating, 2snek, Joshua (RG2084), Xytoriak, Scum, and McHazard.
		$LF
	]li
]ul
[h3 id=EncoderInformation 
	" Encoder Information
	$LF
]h3
[h4 id=SuggestedThumbnails 
	" Suggested Thumbnails
	$LF
]h4
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/v3PYdkz/thumb1.png 
	]img
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/64f32Lg/thumb2.png 
	]img
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://i.ibb.co/8xgZPmz/thumb3.png 
	]img
	$LF
]div
[h4 id=ConsoleVerification 
	" Console Verification
	$LF
]h4
[div class=p 
	"Unfortunately, this game will prove hard to verify on a console. The reason is that one of its RNG generators depends exclusively on the relation between its 6502 CPU and its PPU. The CPU would loop indefinitely changing its RNG value until an interruption is made by the PPU, at which the last RNG value is produced. As far as we know, this timing cannot be pre-determined even between reboots of the same console.
	$LF
	"For anyone willing to take a deeper look, the part of the code where this number is decided is shown here (excerpt taken from this public 
	[a href=https://github.com/josephstevenspgh/Castlevania-Labelled-Disassembly rel=noopener external nofollow 
		"CV1 labelled disassembly
	]a
	"):
	$LF
]div
[pre 
	[code 
		$UNPRINTABLE TEXT!!!
	]code
]pre
[div class=p 
	"It might be possible to nevertheless obtain a verification by attempting to run this solution many times. Only a few enemies' behavior are affected by this RNG (most notably, the spawn side of ghosts in stages 1 and 3), so it might be possible to achieve a verification within a realistic amount of attempts. If you have the time, go for it!
	$LF
	"Another possibility is to try and run a hacked version of this game, where this generator is not pegged to the CPU/PPU clocking, but that wouldn't be ideal either.
	$LF
]div
[div class=p 
	"Challenger: Now the TAS got console verified, thanks to Alyosha:
	$LF
	(youtube|v=pbcjnbTd5cU)
	$LF
]div
[h4 id=PostFinishInputs 
	" Post-Finish Inputs
	$LF
]h4
[div class=p 
	"By adding an 'A' press at frame 37012, it is possible to end the proper game (Game mode 12, submode 1) one frame faster. However, this results in a movie that is 225 frames larger. The authors believe that encoding such a movie would take away from the beauty of the submitted solution. However, we leave this decision to the encoder's discretion.
	$LF
]div
[h4 id=ReRecordCount 
	" Re-record Count
	$LF
]h4
[div class=p 
	"The submitted movie is a manual resync of a QuickNES-based movie that contained a re-record count of 208678. The re-records performed by the bot are not counted here (impossible to quantify, but would be in the order of 10^11)
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Delaying, waiting for Challenger's improvements.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Updated with an 
	(__wikiLink|displaytext=8 frame improvement|href=/Forum/Posts/516577)
	".
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	": Great improvements! Restoring rerecord count and accepting over 
	(__wikiLink|href=/4342M|implicitdisplaytext=4342M)
	".
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/EZGames69 
		"EZGames69
	]a
	": Processing...
]div
