9
[p 
	"After his failed takeover of Mario's castle in the previous game, Wario decides to go after a statue stolen by Captain Syrup. Armed with a new glitch, he finishes 
	(__wikiLink|4510S|over two minutes faster than his previous attempt)
	".
	$LF
]p
[p 
	"This is not that run.
	$LF
]p
[ul 
	[li 
		" Abuses a heavy glitch
		$LF
	]li
	[li 
		" Uses memory corruption
		$LF
	]li
	[li 
		" Skips the final boss
		$LF
	]li
	[li 
		" Executes memory as code
		$LF
	]li
	[li 
		" Finishes 
		[del 
			"with zero coins
		]del
		" without a coin counter
		$LF
	]li
]ul
[h4 
	" How to skip a game
	$LF
]h4
[p 
	"This glitch happens because Wario tries to leave the path.
	$LF
]p
[p 
	"The course skip glitch works like this: when checking movement on the map screen, the game first reads the directional input to see which direction has been pressed. It does this in the order LUDR. It then checks this against the open paths to see if Wario can move in that direction.
	$LF
]p
[p 
	"Once that's done, it checks which direction has been pressed again... but this time, it checks in the order RLUD. Then it starts moving Wario along the path in the direction that's been pressed.
	$LF
]p
[p 
	"What all this means is that Wario can continue down any closed path to the right if both right and the direction of an open path are pressed on the same frame. This works fine if there's actually a path to the right like there is with course 1. If there is none, the game ends up jumping somewhere it shouldn't, determined by the last course entered. If that's course 1 or 3, it ends up in RAM.
	$LF
]p
[p 
	"Once execution is in RAM, the problem is actually doing anything useful with it. This is what there is to work with. For consistency with the trace log below, all addresses are given using System Bus.
	$LF
]p
[p 
	"Execution starts at A7D8, near the end of map data. Most of what's here can't be changed much and has to be worked around, but the number of frames since the last time Wario moved (A7E8) and the last input combination (A7E2 and A7F1) are useful.
	$LF
]p
[p 
	"A800-A8FF is mostly empty. At the start of this block are things like total number of coins, lives, hearts, treasures collected, last course entered, etc. These would be very useful if it didn't take so long to set anything up. Getting enough of anything to do anything would require taking a detour to get a bunch of coins, playing through one of the time-consuming bonus games at the end of the level, waiting on the coin screen, and even finishing extra courses. It's faster to just avoid this comletely.
	$LF
]p
[p 
	"A900-A9FF normally contains information used during gameplay such as Wario's position, camera position, etc. Almost all of this region is zeroed when returning to the map screen. The only manipulable thing left is a frame counter at A905.
	$LF
]p
[p 
	"AA00-AAFF has the most potential. Temporary sprites such as the jet hat flame have data stored here as long as they're active. When they're no longer needed, everything is cleared except for their position on screen. This gives a much larger range of instructions for less time cost, but there can only be a few of these at once.
	$LF
]p
[p 
	"AB00 is the end of the line. It's the start of some graphics related data relating to the last course entered, and cannot be manipulated. There must be a return instruction somewhere before this point or else the game will crash.
	$LF
]p
[p 
	"Adding on how memory execution is mostly limited to single-byte instructions when so many of the useful ones require two or three, and there's very little than can be done this quickly. At least, not directly.
	$LF
]p
[h3 
	" Stage-by-stage comments
	$LF
]h3
[h4 
	" Course 1
	$LF
]h4
[ul 
	[li 
		" The obvious thing to do would be to finish this course as quickly as possible and then use the opened path to do the glitch on course 2. The problem with that is there is no jet hat in course 1, so the coordinates of the flame can't be used for code. And even if there was, or something like the breakable blocks were used instead, everything there is zeroed after the level ends. The only way to keep it is to leave through the door at the entrance, which course 1 doesn't have. So instead the level is skipped as usual.
		$LF
	]li
]ul
[h4 
	" Course 2
	$LF
]h4
[ul 
	[li 
		" This course ends with one less heart than the other run by grabbing a second coin from a block. This is necessary to change the heart count during the glitch from 6 to 5. 05 is a safe instruction to execute, but 06 is fatal.
		$LF
	]li
	[li 
		" Aside from that, there are no changes to the level, and it finishes at the same time as the other run.
		$LF
	]li
]ul
[h4 
	" Course 3
	$LF
]h4
[ul 
	[li 
		" There are two frame rules on the map screen: 16 frames for the fade in, 4 for the fade out. Losing 4 frames before entering manipulates the frame counter after leaving, and costs no time.
		$LF
	]li
	[li 
		" Up to three jet hat flames can be active at once (AA00-AA2F), and the most recent one has a copy later down (AAE0-AAEF). While it's possible to fit every needed instruction into the coordinates of these flames, it would require the X coordinate to be the return instruction, which would mean using the jet hat off the left side of the screen. Possible, but the screen wrap glitch is very slow.
		$LF
	]li
	[li 
		" Putting the return instruction on the Y coordinate also requires going offscreen, this time up top. The camera doesn't follow Wario offscreen, so it's just a matter of getting enough height. A midair enemy bounce is enough to reach the required position.
		$LF
	]li
	[li 
		" Destroying the closest block creates another temporary sprite. It doesn't last long enough to be used for anything, but it shifts the copy of the return instruction down (to AAF0-AAFF) where it can't be overwritten. Then Wario returns to the entrance while placing the other jet flames.
		$LF
	]li
]ul
[h4 
	" The glitch
	$LF
]h4
[ul 
	[li 
		" The executed code doesn't start the ending immediately. Too much has to be done to get that to work. Instead the plan is to change address A8C7 to anything nonzero. This will activate an otherwise inaccessible debug mode which allows a jump to the ending from inside any level.
		$LF
	]li
	[li 
		" There's no way to enter a level normally after getting out of RAM, as Wario is still trying to walk down that "path" and will jump right back into RAM. Instead, changing A8C4 to 01 will force the game mode to the "Course No. xx" screen.
		$LF
	]li
	[li 
		" Debug mode includes a level select feature which could be used to reach a faster loading course, but there's no time to use it before hitting the frame rule.
		$LF
	]li
	[li 
		" The rest is simple: start course 3 again, pause, and unpause while pressing Down+B.
		$LF
	]li
	[li 
		" The unusual ending has nothing to do with the zero coin finish. During the coin countdown, whenever two money bags are on screen at the same time, the first one to reach Wario will disappear instead of being caught. But it doesn't have to be a money bag. This will happen with any temporary sprite, including the jet hat flame that started when Down+B was pressed. So Wario leaves carrying zero money bags.
		$LF
	]li
]ul
[h4 
	" Trace log of the glitch
	$LF
]h4
[div class= 
	[ul class=nav nav-tabs role=tablist 
		[li class=nav-item 
			[a class=active nav-link data-toggle=tab href=#y-364 
				"Minimize
			]a
		]li
		[li class=nav-item 
			[a class=nav-link data-toggle=tab href=#y-365 
				"Trace Log
			]a
		]li
	]ul
	[div class=tab-content 
		[div class=tab-pane active id=y-364 
		]div
		[div class=tab-pane fade id=y-365 
			[pre 
				$UNPRINTABLE TEXT!!!
			]pre
		]div
	]div
]div
[hr 
]hr
[p 
	(__wikiLink|user:Mothrayas)
	": Replaced submission file with a 
	[a href=/forum/viewtopic.php?p=395555#395555 
		"16-frame improvement
	]a
	" and removed extra input.
	$LF
]p
[p 
	(__wikiLink|user:feos)
	": ME REBRANCH! And JUDGE!!!
	$LF
]p
[p 
	(__wikiLink|user:feos)
	": Accepting to Moons as a new branch.
	$LF
]p
[p 
	(__wikiLink|user:Spikestuff)
	": "Wa"
]p
