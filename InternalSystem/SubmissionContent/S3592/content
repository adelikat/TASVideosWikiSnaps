6
[p 
	(youtube|v=5THTOYdbtDY|w=320|h=240)
	$LF
]p
[h2 id=EmulatorInformation
 
	"Emulator Information
	$LF
]h2
[p 
	"This run was made on a specific version of Mupen64 which allows resets to be recorded in an m64. Download the .zip here and extract the .exe and place it in your Mupen folder, then run it. It's crucial that you run the movie on this version of Mupen.
	$LF
]p
[p 
	"http://www.mediafire.com/?7x7zijues53e834
	$LF
]p
[p 
	"Plugin settings:
	$LF
]p
[p 
	"Video: Jabo's Direct3D8 1.6.1 IMPORTANT!!! You MUST have "Copy framebuffer to RDRAM" enabled. This is what removes the imfamous pause lag in Ocarina of Time. To do this, go to Options -> Settings -> Config (under video plugin while Jabo 1.6 is selected) -> Advanced (if there is no Advanced tab, then under Settings, uncheck "Hide Advanced Settings" and hit Apply first). Note: Although I used Jabo 1.6.1 while making the run, Jabo 1.6 works as well (and looks identical to 1.6.1 as far as I can tell).
	$LF
]p
[p 
	"Input: TAS Input Plugin 0.6
	$LF
]p
[p 
	"Sound: Jabo's DirectSound 1.6
	$LF
]p
[p 
	"RSP: RSP emulation Plugin. IMPORTANT!!! This plugin must be the one listed. There is another RSP plugin, and having it selected instead WILL desynch the movie. If you do not have RSP emulation plugin, download it here (extract it from the .zip) and put it in your plugins folder: http://www.mediafire.com/?84ar1ea544stgco
	$LF
]p
[h2 id=Introduction
 
	"Introduction
	$LF
]h2
[p 
	"I made this run in roughly a week. A massive new break in the game was found just before I started, which made me want to TAS it. The break involved a "wrong warp" (explained below) which takes Link directly from the Deku Tree to Ganon's Castle. Specifically, it takes him to the tower escape section, meaning that Light Arrows (as well as the entire adult section of the game) can be completely skipped. The final time of the run is 22:59 by TASVideos timing standards, but 19:52 by console timing standards. It's important to note this because otherwise, the console runs will appear faster than the TAS at first glance.
	$LF
]p
[h2 id=WhydidyouplayontheJapaneseROMwhenthepreviousrunwasplayedontheEnglishROM?
 
	"Why did you play on the Japanese ROM when the previous run was played on the English ROM?
	$LF
]h2
[p 
	"Quoted from the submission notes of my MST TAS: "The Zelda community has long since accepted that the Japanese ROM is better for speedrunning. We feel that the point of a speedrun is to see the game done as quickly as possible, and while I understand preferring the English version to play, using it for a speedrun when there's an alternative which is this much faster is just asinine. Everyone knows the Zelda story by now, and chances are, if you're watching this TAS, you already know Ocarina of Time decently well, too, and don't need to read what's being said in the game. In short, the Japanese version removes a lot of unavoidable waiting time during cutscenes and text, and lets the run get back to the action much sooner."
	$LF
]p
[p 
	"It's also worth noting that it is no longer against TASVideos site rules at all to use the Japanese version of a game for no reason other than text.
	$LF
]p
[h2 id=GeneralTricksandGlitches
 
	"General Tricks and Glitches
	$LF
]h2
[p 
	"Sidehopping: This is by far the overall most useful form of "normal" movement that you can do in the game. As a child, it's the fastest form of movement period, and as an adult, it's the fastest movement over shorter distances (backwalking is faster over longer ones).
	$LF
]p
[p 
	"Backwalking: This has its uses as a child (like when carrying a bomb), but it usually is slower than sidehopping. As an adult, it's the fastest form of movement, but its slow acceleration makes it slower to sidehopping in a lot of cases. Over long distances, backwalking will almost always be faster as an adult.
	$LF
]p
[p 
	"Rolling: Generally useless next to sidehopping, but still helpful in some places, for example, if a sidehop chain doesn't quite reach the door you're going to, it might save a few frames to do a roll instead of the last sidehop.
	$LF
]p
[p 
	"Infinite Sword Glitch (ISG): This occurs when a crouchstab is interrupted by something (excluding a damage source). This can be reading Navi text, reading a sign, or grabbing an object. It causes your sword to be in a perpetual state of attacking, so anything you touch while it's active will be hurt by your sword. It is what allows hovering to be done.
	$LF
]p
[p 
	"Infinite Superslide (ISS): Also sometimes incorrectly referred to as "extended superslide", this is a reduced-speed kind of slide in which you can actually change angles. It's done by tilting the analogue stick very slightly to the left or right, then holding Z after Link begins to move. It can be done with any kind of speed, so speed that you get from damage sources can lead to what is called a "damage ISS". The way it's used in this run is in the form of an "aquaslide", that is, an ISS started from entering water at a high speed.
	$LF
]p
[p 
	"Gainer: This is essentially a forward backflip. It's done by having Link face a wall while being completely against it, holding Z, doing a backflip, and immediately releasing and re-pressing Z. It causes his momentum to be shifted in the direction of the wall, and thus he does a forward backflip.
	$LF
]p
[p 
	"Twisty Sidehops/Backflips: This is done by holding ISS position and Z, and then tilting the control stick in one direction and performing a sidehop/backflip, all the while still holding Z. This causes Link to perform a sidehop/backflip at a certain angle, but because Z is still being held, the camera doesn't change and he rotates back to the direction he was facing previously while he's in the air. This allows some angle changes to be avoided.
	$LF
]p
[p 
	"Z-slide: This is the act of maintaining whatever speed Link has with constant Z presses. No matter what speed you have, pressing Z will maintain it for an additional 3 frames (1 visual frame), so holding Z for 3 frames, releasing for 3 frames, holding again for 3, etc. allows you to keep whatever speed you have for as long as you want. The obvious use of this is to effectively "superslide" from damage sources without the need of a grabbable object. This is started the same way a superflip is started, but instead of backflipping, you simply allow Link to be propelled backwards on the ground for 3 frames, and then begin the Z presses.
	$LF
]p
[p 
	"Superswim: This is essentially an Z-slide while Link is in the water. The only difference is that the movements here do not have to be frame perfect in order to maintain speed. This will also be cancelled if Link performs his resurfacing animation, meaning that in order to do a truly infinite superswim, he must be hit by a damage source with his shield out after he's already resurfaced.
	$LF
]p
[p 
	"Power Crouch Stabbing: In Ocarina of Time, the crouchstab move (B while holding R to crouch) retains the same source of damage as the last attack you did. This means that if the last attack you did was a jumpslash, then all of your crouchstabs will have the same power as a jumpslash. This is incredibly useful when fighting almost any enemy in the game, particularly bosses.
	$LF
]p
[p 
	"Ocarina Items: This is a glitch which lets Link play almost any item as if it were an ocarina. It's done by emptying the contents of a bottle (which contains bugs or a fish), recatching them, and while Link is holding the full bottle in his hand, performing a jump/sidehop/backflip, and while in the air, pressing the button for the bottle followed by the button for the item that you want him to play. In this run, the sword is used for this, although many items work.
	$LF
]p
[p 
	"Wrong Warping: This is a glitch which allows Link to warp to a different location than expected by exiting a room in some way while a timer is ticking down for the warp in that room. It's done by performing the ocarina items glitch at the very edge of a blue warp at the end of a dungeon. Doing this allows the player to actually control Link during the cutscene where, normally, he would be floating up towards the ceiling. When the duration of that cutscene is up, the screen will simply fade to white (even though Link is on the ground) and the normal cutscene will begin. However, if the room is left in some way at a very precise moment, the game will warp you to a certain location, which is determined by the last cutscene viewed prior to doing the trick. Fortunately, the cutscene required to warp to Ganon's Castle is the Deku Tree opening cutscene, which is directly on our path in this run.
	$LF
]p
[h2 id=Area-by-AreaInformation
 
	"Area-by-Area Information
	$LF
]h2
[h3 id=KokiriForest
 
	"Kokiri Forest
	$LF
]h3
[p 
	"- A gainer and twisty backflips are used to navigate the start of the forest very quickly.
	$LF
]p
[p 
	"- 3 rupees are manipulated from a plant which is directly on our path. This will help us afford a shield later on.
	$LF
]p
[h3 id=LostWoods
 
	"Lost Woods
	$LF
]h3
[p 
	"- The aquascape is performed here to leave the forest early and get to Zora's River. It's done by jumpslashing very precisely into the corner of the stone structure in the water.
	$LF
]p
[h3 id=Zora'sRiver
 
	"Zora's River
	$LF
]h3
[p 
	"- Twisty sidehops followed by aquaslides allow this area to be completed very quickly. Several rupees are collected on the way down the river because it doesn't cost any time to grab them. A superswim and Z-slide are done at the end to quickly reach the exit.
	$LF
]p
[h3 id=HyruleField
 
	"Hyrule Field
	$LF
]h3
[p 
	"- A twisty sidehop at the riverbank allows an aquaslide to be started almost immediately. This means we can ISS all the way to Kakariko Village, skipping the owl.
	$LF
]p
[h3 id=KakarikoVillage
 
	"Kakariko Village
	$LF
]h3
[p 
	"- The goal here is just to collect all the cuccos so we can get a bottle. The first cucco is manipulated to be directly in Link's sidehopping path. After this, the other cuccos are carefully collected and manipulated in a way which minimises the time taken to get all of them in the coop. Throwing them and slashing them with the sword causes them to run in the opposite direction from where Link is in relation to the cucco.
	$LF
]p
[p 
	"- After the bottle is obtained, a nearby rock is lifted so that we can collect bugs from under it. As an adult, this rock can drop a blue rupee, but this is not the case as a child, so it couldn't be worked into the route.
	$LF
]p
[p 
	"- The first and last reset is done here to quickly warp us back to Kokiri Forest.
	$LF
]p
[h3 id=KokiriForest
 
	"Kokiri Forest
	$LF
]h3
[p 
	"- The rest of the money we need to afford a shield is collected on the way to the shop.
	$LF
]p
[p 
	"- Despite the fact that we got a shield, Mido is still skipped because it's faster to skip him than to talk to him (the shield is still required later). This is done by superswimming out of bounds at the nearby acute angle, using the speed generated from a jumpslash. The jumpslash to resurface behind Mido is incredibly precise.
	$LF
]p
[p 
	"- A deku stick is obtained from the deku baba. These have the same strength as the Master Sword, which will come in handy in every enemy battle til the end of the run. Damage is taken from the deku baba as well, because we need to die shortly after this point and it costs no time whatsoever to take damage from him.
	$LF
]p
[p 
	"- A jumpslash is done immediately before the cutscene with the Deku Tree starts. For some reason, this causes Link to speed up and run further into the area than he normally would, at the start of the cutscene.
	$LF
]p
[h3 id=InsidetheDekuTree
 
	"Inside the Deku Tree
	$LF
]h3
[p 
	"- Deku Nuts are collected right away because we need these to stun Gohma later on.
	$LF
]p
[p 
	"- The text where Navi tells us how to climb vines is skipped, first by pulling out the sword right before she talks, and secondly by jumping on the chest to avoid it.
	$LF
]p
[p 
	"- The skulltula on the wall smacks Link to the upper area, which is much faster than climbing up there manually. It also damages him which helps because we have to die soon.
	$LF
]p
[p 
	"- The web is broken, and a carefully-timed jumpslash is performed while falling to activate the "anti-gravity" glitch on the ceiling. This is simply where Link becomes "stuck" to the ceiling for a short while, and allows much greater distances to be covered. We make it onto the ledge using this.
	$LF
]p
[p 
	"- Because of the way the camera is facing, the next web (which normally would have to be burned) hasn't fully loaded, meaning that a sidehop and jumpslash is all that it takes to pass through it.
	$LF
]p
[p 
	"- Damage is taken again here so that Link has half of a heart remaining. This will allow us to die from one hit from Gohma.
	$LF
]p
[p 
	"- The scrubs are manipulated so that the nuts can be reflected back as quickly as possible. The final scrub is targeted afterwards in a way which puts the camera behind him (instead of behind Link), which means that it only takes him 3 hops to get off of the screen, as opposed to 4-5 (as would be the case if the camera was behind Link).
	$LF
]p
[p 
	"- A jumpslash is done right before the battle with Gohma starts. This means that we now have the power of a deku stick in our power crouchstab, which means that Gohma doesn't stand a chance.
	$LF
]p
[p 
	"- The final hit on Gohma is done in such a way that the battle ends while Link takes damage from her. This means that after the death cutscene finishes, Link dies and respawns at the start of the dungeon.
	$LF
]p
[h3 id=WrongWarptoGanon'sCastle
 
	"Wrong Warp to Ganon's Castle
	$LF
]h3
[p 
	"- The reason a deathwarp is done instead of a savewarp is so that the last cutscene viewed in the run doesn't change. If a savewarp was done, the last cutscene viewed would be the title screen (which counts as a cutscene), so in order to avoid that and keep it as the Deku Tree opening scene, a deathwarp is done. It has to be the Deku Tree opening scene in order for the wrong warp to take us to Ganon's Castle and not another location.
	$LF
]p
[p 
	"- The web which didn't load the last time we were in the basement (which Link jumpslashed through) is now loaded. The reason it didn't load before was because we came from the very top of the dungeon, so it didn't have a chance to load in time. Unfortunately, since the web in the main room is now broken, the web below will load before we can glitch through it. This means a clip through the vine in the basement is required to quickly get back to the boss room. It's done by grabbing the vine at a specific place at the same time the gold skulltula hits Link. From here, we can swim in the out-of-bounds water and navigate to the hole, where a jumpslash aquaslide is performed.
	$LF
]p
[p 
	"- Ocarina items is used to gain control of Link while the blue warp cutscene is playing, and the room is left at a very precise moment during the blue warp's timer which results in a wrong warp to Ganon's Castle. The camera angle chosen while moving to the door is so that the timer will tick down during Link's entire journey towards the door - if the camera is pointed to the left or right (as it normally would be while sidehopping), then the timer will halt once Link reaches the narrow corridor by the door, unless it's readjusted to point either directly away from the warp, or directly towards it.
	$LF
]p
[p 
	"- The wrong warp puts us in one of the rooms from the tower escape sequence. Sadly, leaving this room puts us at the start of the sequence and not at the part after this room.
	$LF
]p
[h3 id=CastleEscape
 
	"Castle Escape
	$LF
]h3
[p 
	"- The main goal during this is to keep Zelda moving. There are various points where she stops, and as long as she starts moving as soon as possible again after each one, then the area is optimal. Another large concern during this sequence is lag, so the camera is specifically manipulated to minimise this.
	$LF
]p
[p 
	"- The motorboat (formerly known as "the kiss" - it had to be renamed because Link isn't tall enough to reach Zelda's face when he's a kid) is performed at every set of bars, except for the first one (where it isn't possible because he is forced out to the side whenever it's attempted). This causes him to be pushed back slightly as Zelda passes through him, and thus puts him closer to the loading zone for each section.
	$LF
]p
[p 
	"- The stalfos are quickly killed with power crouchstabs from a deku stick jumpslash.
	$LF
]p
[p 
	"- The final motorboat puts Link directly in the loading zone for the end of the tower escape sequence.
	$LF
]p
[h3 id=Ganon
 
	"Ganon
	$LF
]h3
[p 
	"- A deku stick jumpslash is stored at the start of the cutscene so that Ganon can be quickly brought down with ISG. ISG is done because doing power crouchstabs with the deku stick cause it to break, but for some reason, attacking with ISG doesn't. Backflips are done to reach his tail each time sooner than normal, and the final backflip is angled so that Link appears to Ganon's side during the cutscene.
	$LF
]p
[p 
	"- After picking up the Master Sword, there's no need for deku stick ISG anymore. Although Link is a child, and he still appears to hold the Kokiri Sword, he actually has the Master Sword, and it has the full range of the Master Sword as well, meaning that it can reach things from further away than the Kokiri Sword can. Jumpslashes are done on Ganon's tail while it's in the air to bring him down very quickly.
	$LF
]p
[p 
	"- The final hit is delivered and at this exact moment, Link's journey is complete and he becomes a man (as can be heard in his voice).
	$LF
]p
[p 
	"- The final hit on Ganon occurs at frame 71173 (19 minutes 46.22 seconds). This is important to note because real time runs are timed this way, so it's good to have this number in mind when comparing runs.
	$LF
]p
[p 
	"- The final input required for the ending to play occurs at frame 82216 (22 minutes 50.27 seconds).
	$LF
]p
[h2 id=Withthanksto...
 
	"With thanks to...
	$LF
]h2
[p 
	"- Aktan: He provided me with yet another flawless encode, for which I'm always grateful.
	$LF
]p
[p 
	"- Bloobiebla: Author of the previous any% TAS and good friend of mine. He helped motivate me to make this run and checked my WIPs towards the end of it.
	$LF
]p
[p 
	"- bluemarth: He was the one who originally encouraged me to make this run (by giving me some motivational quotes, such as "Even if the morrow is barren of promises, nothing shall forestall... your making of this TAS" and was also the one who explained wrong warping to me, and continually motivated me to make progress while I was making the run.
	$LF
]p
[p 
	"- GhostNinja: For advising me to "just molest him" when nothing else worked against Ganon.
	$LF
]p
[p 
	"- MrGrunz: Before the wrong warp glitch was found, he and I were coauthoring the any% TAS (which, at the time, was the "Ganonless" run, where the game ended at Dodongo's Cavern). Although we didn't get very far, he still taught me various things about the game that I didn't previously know (mostly about camera manipulation during sidehops).
	$LF
]p
[p 
	"- r0bd0g & sockfolder: For discovering the wrong warp which made this run possible. sockfolder also helped me understand how to perform the wrong warp, and gave me an MHS address which saved me a lot of trouble.
	$LF
]p
[p 
	"- TylerArtrip: For showing me the fastest way to perform the trick where Link runs into the Deku Tree cutscene at a high speed. He pointed out that Link runs much further if his sword is sheathed before pressing B to jumpslash, and this ended up saving half a second.
	$LF
]p
[p 
	"- Everyone from #zelda who watched my unlisted YouTube WIPs and provided constructive feedback.
	$LF
]p
[hr 
]hr
[p 
	[a class=intlink href=/Users/Profile/adelikat 
		"adelikat
	]a
	":  Accepting for publication as an improvement to the 
	[a class=intlink href=/1616M 
		"Published movie
	]a
	$LF
]p
[p 
	[a class=intlink href=/Users/Profile/Aktan 
		"Aktan
	]a
	":  Finally doing this one...
]p
