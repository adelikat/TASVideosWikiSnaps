9
[h3 id=EmulatorSyncSettings 
	"Emulator/Sync Settings:
	$LF
]h3
[ul 
	[li 
		"Emulator Used: Mupen 64 version 1.0.11 (
		[a href=https://github.com/mkdasher/mupen64-rr-lua-/releases/tag/1.1.1 rel=noopener external nofollow 
			"Syncs on version 1.1.1
		]a
		")
		$LF
	]li
]ul
[h3 id=GameObjectives 
	"Game Objectives:
	$LF
]h3
[ul 
	[li 
		"Completes a game of 10-hole golf
		$LF
	]li
	[li 
		"Uses Mario as the ball
		$LF
	]li
	[li 
		"Gets thrown by a Chuckya
		$LF
	]li
	[li 
		"Takes damage to save time
		$LF
		[ul 
			[li 
				"...Only once.
				$LF
				[ul 
					[li 
						"(it's actually necessary to even reach the hole but you don't need to worry about that)
						$LF
					]li
				]ul
			]li
		]ul
	]li
	[li 
		"Genre: Platform
		$LF
	]li
	[li 
		"Genre: Sport (technically)
		$LF
	]li
	[li 
		"Genre: ROM Hack
		$LF
	]li
]ul
[div class=p 
	[a href=https://romhacking.com/hack/golf-with-your-mario rel=noopener external nofollow 
		"Golf With Your Mario
	]a
	" is a ROM Hack of Super Mario 64, originally created for SimpleFlips' 2024 Slide Hack Competition. In it, you play a standard game of golf, but instead of using a golf ball like some kind of normal person, you use Mario!
	$LF
]div
[div class=p 
	"This is an improvement upon the 
	(__wikiLink|displaytext=first submission|href=/9096S)
	" for this hack by a number of seconds and, more crucially, one fewer stroke.
	$LF
]div
[h3 id=BehindTheScenes 
	"Behind The Scenes
	$LF
]h3
[div class=p 
	"The game removes your direct ability to control Mario and replaces it with golf controls, where you're allowed to modify two variables for a given shot: The shot's power (Which internally ranges from a minimum of 20 to a maximum of 160), and the shot's angle (Which is defined as a short, from 0 to 65535; pressing Left or Right on the D-Pad increments the value by +/- 100 or so per frame, pressing Down on the D-Pad snaps the angle to the nearest cardinal/diagonal, and pressing Left or Right on the C-Stick changes it by +/-8192). When Mario hits a wall on the ground, he bounces off of it at a reflection angle equal to his incedent angle. When Mario reaches a wall while moving in the air, he automatically wall kicks, but otherwise acts as if the control stick were in a neutral position of 0,0 while in the air.
	$LF
]div
[div class=p 
	"Additionally, on the first frame of a new hole, Mario's starting angle becomes the angle of the camera, before rotating back to the actually intended starting angle (At a rate of 1000 angle units or so a frame). Through exploiting this behavior by manipulating the camera in the downtime after a hole is completed, I can launch on the next hole as soon as the desired launch power is achieved.
	$LF
]div
[h4 id=Hole1 
	"Hole 1
	$LF
]h4
[div class=p 
	"The tutorial hole, where text overlays tell you the controls. Due to the lack of any notable geometry (Being a straight line with a small divet in the center and where the hole is), the fastest solution ends up being trivial.
	$LF
]div
[h4 id=Hole2 
	"Hole 2
	$LF
]h4
[div class=p 
	"A slightly more complex hole with actual corners and stuff. I bounce off the two triangles in a way that I reach the hole with as much speed as possible without actually overshooting it.
	$LF
]div
[h4 id=Hole3 
	"Hole 3
	$LF
]h4
[div class=p 
	"Here we deal with a giant rotating log with holes in it, a section below it with Goombas and stuff, and an upper section with the proper hole. I'm able to hit Mario right through one of the log's holes, slide up the hill, bounce off the terrain, and reach the hole in one shot, which is faster than waiting for the log to rotate to the right spot and going across straight.
	$LF
]div
[h4 id=Hole4 
	"Hole 4
	$LF
]h4
[div class=p 
	"Another straight B-line to the hole that would be simpler if there weren't multiple Pokeys moving around (In which hitting one of them effectively ends your stroke, and you have to go again). I barely dodge them and land into the hole.
	$LF
]div
[h4 id=Hole5 
	"Hole 5
	$LF
]h4
[div class=p 
	"I'm able to save a stroke here by hitting Mario precisely enough for him to "accidentally" do a Glitchy Wall Kick (Since this is still SM64 mechanics and all) to get just enough height to go into the hole.
	$LF
]div
[h4 id=Hole6 
	"Hole 6
	$LF
]h4
[div class=p 
	"The first submission's strategy here was fundamentally perfect in terms of starting angle and power; I save time strictly through camera-angle manipulation here (Plus a frame from sliding off an edge a frame faster).
	$LF
]div
[h4 id=Hole7 
	"Hole 7
	$LF
]h4
[div class=p 
	"The fire spitters aren't on a global cycle (I.E they only spawn in and start rotating when Mario/The camera gets close enough), which means it's usually impossible to launch Mario straight into the hole. With camera-angle manipulation, however, it is possible, but Mario has so much speed that he bounces OUT of the hole if he lands right in it. I'm still able to save time by having Mario land in after the first bounce.
	$LF
]div
[h4 id=Hole8 
	"Hole 8
	$LF
]h4
[div class=p 
	"I found that letting the Chuckya intentionally grab you and throw you into the hole (With some luck) is faster than trying to move around and get a one-stroke without it. However, Spikestuff found a solution that was roughly 1.5 seconds faster than the attempt in this movie, but requires two strokes to do so. Until other solutions are found (Or, bruteforced I guess), I believe this is enough to warrant a category split; "Lowest Score" which focuses on the in-game golf aspect, and "Lowest Time" which focuses on the out-of-game time aspect.
	$LF
]div
[h4 id=Hole9 
	"Hole 9
	$LF
]h4
[div class=p 
	"A final straight line, with a cameo by a spinning Dorrie.
	$LF
]div
[h4 id=Hole10 
	"Hole 10
	$LF
]h4
[div class=p 
	"Movie ends on the instant I fire the shot, as it's an autoscroller to the end of the last hole. You're unable to modify the power and angle of this specific shot anyway, aside from the C-Stick glitch I mentioned earlier.
	$LF
]div
[h3 id=Improvements 
	"Improvements
	$LF
]h3
[div class=p 
	"The camera-angle improvements makes this even better than I originally intended; all that's left is throwing this in a bruteforcer to see if more frames can be squeezed out.
	$LF
]div
[hr 
]hr
[div class=p 
	[a class=intlink href=/Users/Profile/CoolHandMike 
		"CoolHandMike
	]a
	": Claiming for judging.
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/CoolHandMike 
		"CoolHandMike
	]a
	": Replacing original file with improvement 
	[a href=https://tasvideos.org/UserFiles/Info/638549667907101808 rel=noopener external nofollow 
		"https://tasvideos.org/UserFiles/Info/638549667907101808
	]a
	$LF
]div
[div class=p 
	"Original movie stats/settings from Mupen:  
	$LF
]div
[ul 
	[li 
		"Length 57.6 seconds
		$LF
	]li
	[li 
		"Frames 3458  (1697 input)
		$LF
	]li
	[li 
		"Rerecords 2995
		$LF
	]li
	[li 
		"Video: LINK's GLideN64 v4.1
		$LF
	]li
	[li 
		"Sound: Jabo's DirectSound 1.6
		$LF
	]li
	[li 
		"Input: TAS Input
		$LF
	]li
	[li 
		"RSP: RSP emulation Plugin
		$LF
	]li
]ul
[div class=p 
	"Replacement movie stats/settings from Mupen:
	$LF
]div
[ul 
	[li 
		"Length: 56.1 seconds
		$LF
	]li
	[li 
		"Frames: 3368  (1652 input)
		$LF
	]li
	[li 
		"Rerecords: 5053
		$LF
	]li
	[li 
		"Jabo's Direct3D6 1.5.2
		$LF
	]li
	[li 
		"Jabo's DirectSound 1.6
		$LF
	]li
	[li 
		"Input: TAS Input
		$LF
	]li
	[li 
		"RSP: RSP emulation Plugin
		$LF
	]li
]ul
[div class=p 
	[a class=intlink href=/Users/Profile/CoolHandMike 
		"CoolHandMike
	]a
	":  This is short but very well made tas showing all the previously known and new tricks to achieve the lowest amount of strokes.  Seeing the odd Mario 64 glitched jump on the edge of the platform, and new camera technique was interesting.  Enjoyed watching the process of improvement on discord especially with the new stroke save on Hole 5.  
	$LF
]div
[div class=p 
	"Accepting this tas to Standard with goal of "maximum score".  The submitter has also shown that there is a "fastest completion" with more strokes, so this submission will be in a Standard branch of "maximum score".  The original Golf With Your Mario tas 
	(__wikiLink|href=/5998M|implicitdisplaytext=5998M)
	" was shown to be "fastest completion" with no known strategy at the time that would differentiate it from a "maximum score" goal. So for the original tas "fastest completion" was chosen.  This new submission forgoes using new techniques with more strokes for "fastest completion" in favor of the goal of "maximum score", so it would not obsolete the previous "fastest completion" tas unless there was a goal change to the previous one making it "maximum score".  A tas with a goal of "maximum score" will not obsolete a tas of "fastest completion" unless the two goals are shown to be equivalent and then the goal of "maximum score" would most likely be unnecessary and instead "fastest completion" goal would be used.  In addition, if this new tas was accepted as "fastest completion" then it would already not beat known improvements shared by the author in the discussion thread making it immediately suboptimal. Hope this clears up some confusion. 
	$LF
]div
[div class=p 
	"The convention at the moment for golf games with the lowest strokes is "maximum score".  A previously published example of this was 
	(__wikiLink|href=/5874M|implicitdisplaytext=5874M)
	".
	$LF
]div
[div class=p 
	"I would like to note that this tas also syncs on mupen64-rr-lua version 1.1.7 as well as the submitted version of mupen64-rr-lua 1.1.1. There is a "repack" download link on 
	[a href=https://github.com/mkdasher/mupen64-rr-lua-/releases rel=noopener external nofollow 
		"https://github.com/mkdasher/mupen64-rr-lua-/releases
	]a
	" that was useful for running this project.
	$LF
]div
[div class=p 
	"Congrats!
	$LF
]div
[div class=p 
	[a class=intlink href=/Users/Profile/fsvgm777 
		"fsvgm777
	]a
	": Processing.
]div
