36
[div class=toc 
	[ul 
		[ul 
			[li 
				[a href=#Introduction 
					" Introduction
					$LF
				]a
			]li
			[li 
				[a href=#Creatingtheimage(s) 
					" Creating the image(s)
					$LF
				]a
			]li
			[li 
				[a href=#Creatingavideofromyourimage 
					" Creating a video from your image
					$LF
				]a
			]li
		]ul
	]ul
]div
[h3 id=Introduction 
	" Introduction
	$LF
]h3
[p 
	"Per the 
	(__wikiLink|/EncoderGuidelines|Encoder Guidelines)
	", all video clips must be prefaced with an approximately two second encoder logo, prominently displaying 
	[em 
		"http://TASvideos.org/
	]em
	", a notice that the movie is tool-assisted, and some distinctive means to identify the encoder.  Some examples of current logos can be seen at 
	(__wikiLink|/SiteHistory/EncoderLogos|SiteHistory/EncoderLogos)
	".
	$LF
]p
[p 
	"An example of a still image that has the features of a standard non-animated logo can be seen here:
	$LF
]p
[p 
	[img class=embed src=/http://i.imgur.com/XQlGaDH.png 
	]img
	" 
	[img class=embed src=/http://imgur.com/U6EROeA.png 
	]img
	$LF
]p
[p 
	"The 
	[em 
		"yellow
	]em
	" highlights a decent amount of room given for pointing out that it is a Tool Assisted Speedrun, the 
	[em 
		"green
	]em
	" highlights the reasonably large link to TASVideos, the 
	[em 
		"purple
	]em
	" highlights that the above link can be used to find out more information on the speedrun, the 
	[em 
		"blue
	]em
	" credits the video encoder for encoding the video, and the 
	[em 
		"red
	]em
	" serves as an eye catcher to bring peoples attention to the logo in the first place. The highlights can be used as a general guide, but can be mirrored if it is convenient (In the case of the lower half of the logo) and some overlap is allowed regarding the image as long as it isn't distracting (As demonstrated). The image inside the logo shouldn't steal all the attention away from the text, however.
	$LF
]p
[h3 id=Creatingtheimage(s) 
	" Creating the image(s)
	$LF
]h3
[p 
	"Generally, your logo needs to be be the same resolution as the encode you are creating. (AVISynth is capable of scaling larger images down to the target size on the fly, but this isn't a guarantee that it will match the target aspect ratio of the encode.) A brief list of these follows; if your target platform is not listed here, you can either contact an 
	[a class=intlink href=/Encoders 
		"encoder
	]a
	" or 
	[a class=intlink href=/Users 
		"publisher
	]a
	" for advice or move on to 
	[a class=intlink href=/EncodingGuide/VideoDumping 
		"Video Dumping
	]a
	" and extract the target resolution from your encode.
	$LF
]p
[table 
	[tbody 
		[tr 
			[th 
				"Platform
			]th
			[th 
				"Resolution
			]th
		]tr
		[tr 
			[td 
				"NES (NTSC), SNES (NTSC), Genesis/MegaDrive low-resolution (NTSC), Super Game Boy
			]td
			[td 
				"256x224
			]td
		]tr
		[tr 
			[td 
				"NES (PAL), SNES (PAL), Genesis/MegaDrive low-resolution (PAL)
			]td
			[td 
				"256x240
			]td
		]tr
		[tr 
			[td 
				"Nintendo 64, PSX
				"[
				[a id=1 
				]a
				[a href=#r1 
					"1
				]a
				"]
			]td
			[td 
				"320x240
			]td
		]tr
		[tr 
			[td 
				"Sega Master System, SG-1000
			]td
			[td 
				"256x192
			]td
		]tr
		[tr 
			[td 
				"Genesis/MegaDrive, 32X, Sega CD (NTSC)
			]td
			[td 
				"320x224
			]td
		]tr
		[tr 
			[td 
				"Genesis/MegaDrive, 32X, Sega CD (PAL)
			]td
			[td 
				"320x240
			]td
		]tr
		[tr 
			[td 
				"Saturn
				"[
				[a id=1 
				]a
				[a href=#r1 
					"1
				]a
				"]
			]td
			[td 
				"320x240
			]td
		]tr
		[tr 
			[td 
				"Game Boy, Game Boy Color, Game Gear
			]td
			[td 
				"160x144
			]td
		]tr
		[tr 
			[td 
				"Game Boy Advance
			]td
			[td 
				"240x160
			]td
		]tr
		[tr 
			[td 
				"Nintendo DS
			]td
			[td 
				"256x384 or 256x192
			]td
		]tr
		[tr 
			[td 
				"Virtual Boy
			]td
			[td 
				"384x224
			]td
		]tr
		[tr 
			[td 
				"TurboGrafx 16
				"[
				[a id=1 
				]a
				[a href=#r1 
					"1
				]a
				"]
			]td
			[td 
				"256x232
			]td
		]tr
		[tr 
			[td 
				"Arcade
				"[
				[a id=1 
				]a
				[a href=#r1 
					"1
				]a
				"]
			]td
			[td 
				"(variable)
			]td
		]tr
		[tr 
			[td 
				"DOS
				"[
				[a id=1 
				]a
				[a href=#r1 
					"1
				]a
				"]
			]td
			[td 
				"640x400
			]td
		]tr
		[tr 
			[td 
				"MSX
			]td
			[td 
				"320x240
			]td
		]tr
		[tr 
			[td 
				"GC/Wii (narrowscreen)
			]td
			[td 
				"640x480
			]td
		]tr
		[tr 
			[td 
				"GC/Wii (widescreen)
			]td
			[td 
				"768x432
			]td
		]tr
		[tr 
			[td 
				"Atari 2600
				"[
				[a id=2 
				]a
				[a href=#r2 
					"2
				]a
				"]
			]td
			[td 
				"160x192 or 320x192
			]td
		]tr
		[tr 
			[td 
				"Atari 7800
			]td
			[td 
				"320x192
			]td
		]tr
		[tr 
			[td 
				"Colecovision
			]td
			[td 
				"256x192
			]td
		]tr
	]tbody
]table
[p 
	"The simplest logos are still images; this guide assumes you are going to create a still image for use as your logo.  If you are feeling ambitious you can created animated logos (the normal target for these is 120 frames, which corresponds to approximately two seconds on virtually all of the above systems).
	$LF
]p
[p 
	[em 
		"TODO
	]em
	": decide on whether to have a sub-page instructing people on how to use Gimp to put together a logo, or guides for other software packages?
	$LF
]p
[p 
	"Once you're finished crafting your image, save it as a PNG and have 
	[a class=intlink href=/Users 
		"the senior publisher or a site admin
	]a
	" look at it for approval.
	$LF
]p
[h3 id=Creatingavideofromyourimage 
	" Creating a video from your image
	$LF
]h3
[p 
	"Once you have an approved logo image, you'll need to create two seconds of video based on that logo.  If you are planning on using AVISynth as part of the encoding process, you can skip this step as AVISynth is able to embed the logo into the video as part of the 
	[a class=intlink href=/EncodingGuide/PreEncoding 
		"pre-encoding
	]a
	" and 
	[a class=intlink href=/EncodingGuide/Encoding 
		"encoding
	]a
	" steps; therefore no intermediate video file is required.
	$LF
]p
[p 
	"Otherwise, you will need a 
	[tt 
		".wav
	]tt
	" sound file matching the intended length of your logo (usually two seconds, but this can vary depending on the system frame rate) and having the same sampling rate and number of channels as your target system.  This information is platform-specific and is included as part of the emulator configuration information on the 
	[a class=intlink href=/EncodingGuide/VideoDumping 
		"next page
	]a
	".
	$LF
]p
?IF 0
	[p 
		"You can also find a 
		[tt 
			".zip
		]tt
		" containing 
		[tt 
			".wav
		]tt
		" files suitable for most platforms here: http://www.fileden.com/files/2009/10/7/2595840//WAV.zip
	]p
?ENDIF 0
$LF
[p 
	"The next step depends on what software you wish to use to create the intermediate logo file:
	$LF
]p
[div class= 
	[ul class=nav nav-tabs role=tablist 
		[li class=nav-item 
			[a class=active nav-link data-toggle=tab href=#tabs-4252-0 
				"mencoder
			]a
		]li
		[li class=nav-item 
			[a class=nav-link data-toggle=tab href=#tabs-4252-1 
				"VirtualDub
			]a
		]li
	]ul
	[div class=tab-content 
		[div class=tab-pane active id=tabs-4252-0 
			[p 
				"Assuming your PNG is named logo.png and your audio clip is named audio.wav, use the following command line:
				$LF
			]p
			[blockquote 
				" mencoder mf://logo.png -audiofile audio.wav -fps 0.5 -ofps 60 -vf harddup -ovc lavc -lavcopts vcodec=ffv1:format=bgr32 -oac pcm -o logo.avi}}
				$LF
			]blockquote
			[p 
				"Some notes on the options:
				$LF
			]p
			[ul 
				[li 
					" 
					[b 
						"mf://logo.png
					]b
					": instructs mencoder to read its input from the given input file(s).  If you are using multiple frames, specify their names comma-separated, i.e. mf://logo1.png,logo2.png,...
					$LF
				]li
				[li 
					" 
					[b 
						"-fps 0.5
					]b
					": Tells mencoder what the input frame rate is.  At 0.5 frames per second, one frame is two seconds, so for one image this yields an input lasting two seconds.
					$LF
				]li
				[li 
					" 
					[b 
						"-ofps 60
					]b
					": Specifies the target frame rate.  This should be the same as the target console's frame rate, which is usually (but not always) 60fps; if in doubt, check a video dump from your emulator or consult the 
					[a class=intlink href=/EncodingGuide/VideoDumping 
						"Video Dumping
					]a
					" page.
					$LF
				]li
				[li 
					" 
					[b 
						"-vf harddup
					]b
					": Forces duplicate frames to be written to the file in their entirety; this is important for the above frame rate conversion to ensure that enough frames are written to satisfy the two second target.
					$LF
				]li
				[li 
					" 
					[b 
						"-ovc lavc -lavcopts vcodec=ffv1:format=bgr32
					]b
					": Specifies that the output should be in the FFV1 lossless codec in the BGR32 colour space.  Any other RGB lossless codec would work as well.
					$LF
				]li
				[li 
					" 
					[b 
						"-oac pcm
					]b
					": Specifies that the audio output will be in WAV format.
					$LF
				]li
				[li 
					" 
					[b 
						"-o logo.avi
					]b
					": Specifies the target file name.
					$LF
				]li
			]ul
			[p 
				"If you are using mencoder from Windows, you can place the above command in a .bat file using your preferred text editor or run it from a command prompt.
				$LF
			]p
			[p 
				"Once you have run the command, you should have a usable logo.avi and can proceed to the next step in the process.
				$LF
			]p
		]div
		[div class=tab-pane fade id=tabs-4252-1 
			[ol 
				[li 
					" Start VirtualDub.
					$LF
				]li
				[li 
					" Select 
					[em 
						"File -> Open video file
					]em
					", and select 
					[tt 
						"logo.png
					]tt
					".
					$LF
				]li
				[li 
					" Press 
					[em 
						"Ctrl-A
					]em
					" to select the one frame, 
					[em 
						"Ctrl+C
					]em
					" to copy that frame, and finally 
					[em 
						"Ctrl+V
					]em
					" multiple times to create duplicate copies of that frame until there are 120 frames in total. If you go over 120 frames, press 
					[em 
						"Ctrl+Z
					]em
					" To undo them until you have 120 frames
					$LF
				]li
				[li 
					" If applicable (i.e. if you are not going to be using AVISynth), select 
					[em 
						"Audio -> Audio from other file
					]em
					" and select the 
					[tt 
						".wav
					]tt
					" from above.
					$LF
				]li
				[li 
					" Select 
					[em 
						"Video -> Frame rate
					]em
					", then 
					[em 
						"Change frame rate
					]em
					".  Set the frame rate to the target console's frame rate, which is usually (but not always) 60fps; if in doubt, check a video dump from your emulator or consult the 
					[a class=intlink href=/EncodingGuide/VideoDumping 
						"Video Dumping
					]a
					" page.
					$LF
				]li
				[li 
					" Select 
					[em 
						"Video -> Compression
					]em
					".  Either:
					$LF
					[ul 
						[li 
							" select FFDshow video codec, click configure, set 
							[em 
								"FFV1
							]em
							" as the video encoder and 'RGB32' as the colourspace; or
							$LF
						]li
						[li 
							" Use any other lossless RGB codec, such as CamStudio.
							$LF
						]li
					]ul
					" Under 
					[em 
						"Audio
					]em
					", select 
					[em 
						"direct stream copy
					]em
					".
					$LF
				]li
				[li 
					" Under 
					[em 
						"Video
					]em
					", select 
					[em 
						"full processing
					]em
					".
					$LF
				]li
				[li 
					" Select 
					[em 
						"File -> Save as AVI
					]em
					" and save your logo as logo.avi.
					$LF
				]li
			]ol
			[p 
				"After all that, you should have a usable logo.avi and can proceed to the next step in the process.
				$LF
			]p
			[p 
				[em 
					"TODO:
				]em
				" Rewrite to make a bit more sense, specifically regarding audio.
				[br 
				]br
				$LF
			]p
		]div
	]div
]div
[hr 
]hr
[p 
	"Next page: 
	[a class=intlink href=/EncodingGuide/VideoDumping 
		"Video Dumping
	]a
	[br 
	]br
	$LF
	"Previous page: 
	[a class=intlink href=/EncodingGuide/Requirements 
		"Requirements
	]a
	$LF
]p
[p 
	"[
	[a id=1 
	]a
	[a href=#r1 
		"1
	]a
	"]
	": These platforms have variable resolutions; what is listed here is the most common resolution.  It is good practice in these cases to proceed to video dumping first and check the resolution afterwards.
	$LF
]p
[p 
	"[
	[a id=2 
	]a
	[a href=#r2 
		"2
	]a
	"]
	": The vertical resolution is variable.
]p
