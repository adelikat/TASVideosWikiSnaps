105
[div class=p 
	[b 
		[a class=intlink href=/Users/Profile/feos 
			"feos
		]a
		": This page has been obsoleted, see 
		(__wikiLink|href=/EncodingGuide/PublicationManual|implicitdisplaytext=Encoding Guide / Publication Manual)
		" for the most recent version of our Guide.
	]b
	$LF
]div
[div class=card mb-2 
	[div class=card-header 
		[strong 
			"Table of contents
		]strong
	]div
	[div class=card-body 
		[ul 
			[li 
				[a href=#History 
					" History
					$LF
				]a
			]li
			[li 
				[a href=#TasEncodingPackage 
					" TAS Encoding Package
					$LF
				]a
			]li
			[li 
				[a href=#Script 
					" Script
					$LF
				]a
			]li
			[li 
				[a href=#Settings 
					" Settings
					$LF
				]a
			]li
			[li 
				[a href=#Commands 
					" Commands
					$LF
				]a
			]li
		]ul
	]div
]div
[h4 id=History 
	" History
	$LF
]h4
[div class=p 
	"The following is an AVS script that can produce HD, downloadable, and 512kb (archive.org streamable) encodes all in one.  It is to be maintained, documented, and supported by the community. If you have a worthwhile contribution to it, please post in 
	(__wikiLink|displaytext=this thread|href=/Forum/Topics/10870)
	" explaining what it does and why you think it should be included. Upon review and a general acceptance of the improvement, it will be included here by a site editor.
	$LF
]div
[div class=p 
	"This script has been rewritten and perhaps popularized by 
	[a class=intlink href=/Users/Profile/Brandon 
		"Brandon
	]a
	". 
	[a class=intlink href=/Users/Profile/Flygon 
		"Flygon
	]a
	" was the original creator, who then gave it to Brandon because he liked his rewrite. Brandon, merely being a fan of good syntax, did not feel capable of maintaining a script he barely understood, so he first implicitly, then explicitly gave it to the community. Flygon has credited 
	[a class=intlink href=/Users/Profile/MisterEpic 
		"MisterEpic
	]a
	" and 
	[a class=intlink href=/Users/Profile/Grunt 
		"Grunt
	]a
	" for their "great contributions", 
	[a class=intlink href=/Users/Profile/Aktan 
		"Aktan
	]a
	" his audio / video desync fixing algorithm, JEEB and J_Darnley for assisting with the automatic detection of the branch name, and "you for using this script!"
	$LF
]div
[div class=p 
	"Thanks to 
	[a class=intlink href=/Users/Profile/Guga 
		"Guga
	]a
	", the script also supports the most recent HD encoding tricks, developed by 
	[a class=intlink href=/Users/Profile/nanogyth 
		"nanogyth
	]a
	" and 
	[a class=intlink href=/Users/Profile/natt 
		"natt
	]a
	". After 
	[a class=intlink href=/Users/Profile/feos 
		"feos
	]a
	" saw how all the batch commands can be placed in a single script, and how the folders can be used for all inputs/outputs, he produced a global package (thanks to 
	[a class=intlink href=/Users/Profile/Velitha 
		"Velitha
	]a
	"'s ideas and 
	[a class=intlink href=/Users/Profile/nanogyth 
		"nanogyth
	]a
	"'s sar automation), that makes the total process the less laborious possible (at the moment).
	$LF
]div
[h4 id=TasEncodingPackage 
	" TAS Encoding Package
	$LF
]h4
[div class=p 
	"If you want everyting automated, all encodes by 1 click, 
	[a href=https://github.com/vadosnaprimer/TASEncodingPackage/archive/master.zip rel=noopener external nofollow 
		"download this archive
	]a
	". It contains all executionals, scripts and DLLs you are going to need anyway. Unzip, put the 
	(__wikiLink|displaytext=AVI dump|href=/EncodingGuide/VideoDumping)
	" named "movie.avi" in a root folder. Replace the 
	(__wikiLink|displaytext=logo|href=/EncodingGuide/Logo)
	". Preview your encode in 
	[a href=http://virtualdub.sourceforge.net/ rel=noopener external nofollow 
		"VirtualDub
	]a
	" and adjust the subtitles and trim timing as always. Run 
	[code 
		"global.bat
	]code
	".
	$LF
]div
[div class=p 
	"What does it do then:
	$LF
]div
[ul 
	[li 
		" Requires minimal user input: whether it is a TV based console
		[a id=r1 
		]a
		[sup 
			"[
			[a href=#1 
				"1
			]a
			"]
		]sup
		" and what encode to do.
		$LF
		[ul 
			[li 
				" Sets 
				(__wikiLink|displaytext=SAR|href=/EncodingGuide/Legacy/Encoding#VideoEncoding)
				" to 1:1 for handhelds, arcade machines and computers.
				$LF
			]li
			[li 
				" Calculates SAR for TV consoles to match 4:3 aspect ratio.
				$LF
			]li
			[li 
				" Runs the selected encoding (all, if chosen).
				$LF
			]li
		]ul
	]li
	[li 
		" Makes downloadable (
		[em 
			"8-bit
		]em
		" & 
		[em 
			"10-bit
		]em
		") and streamable (
		[em 
			"512kb
		]em
		" & 
		[em 
			"YouTube HD
		]em
		") encodes in one flow.
		$LF
		[ul 
			[li 
				" Extracts audio automatically, accounting the logo silence.
				$LF
			]li
			[li 
				" Encodes audio, fixing desync when necessary.
				$LF
			]li
			[li 
				" Encodes video, DeDupping when necessary.
				$LF
			]li
			[li 
				" Uses 
				[a class=intlink href=/Users/Profile/natt 
					"FreeSub
				]a
				" with BDF fonts for subtitles.
				$LF
			]li
			[li 
				" Muxes the final videos.
				$LF
			]li
		]ul
	]li
	[li 
		" Uses 4 additional folders to keep the most tidiness.
		$LF
		[ul 
			[li 
				" 
				[code 
					"output
				]code
				" - here your resulting videos appear.
				$LF
			]li
			[li 
				" 
				[code 
					"programs
				]code
				" - all necessary executionals and plugins lie here.
				$LF
			]li
			[li 
				" 
				[code 
					"fonts
				]code
				" - contains some BDF fonts and a viewer program.
				$LF
			]li
			[li 
				" 
				[code 
					"temp
				]code
				" - this one would contain temporary audio and video tracks, timecode files. You don't need to remove any of these files every time, as they are being rewritten on each run.
				$LF
			]li
		]ul
	]li
]ul
[div class=p 
	"If you get any errors with this package, please report them at #tasvideos IRC channel, or on the 
	(__wikiLink|displaytext=Encoder forums|href=/Forum/Subforum/52)
	".
	$LF
]div
[div class=p 
	"If you want an old and monstrous encode method, use the below manual.
	$LF
]div
[h4 id=Script 
	" Script
	$LF
]h4
[div class=p 
	[b 
		"Please make sure you know what you are doing encoding-wise before using this script.
	]b
	" Many of the concepts in use and the command lines given below are derived from the main 
	(__wikiLink|href=/EncodingGuide/Legacy|implicitdisplaytext=Encoding Guide / Legacy)
	", so if you are unsure what anything is doing please look through the guide first. If you are still uncertain as to how something works, consult 
	(__wikiLink|displaytext=this thread|href=/Forum/Topics/10870)
	" or post in the Encoder's Corner for more general questions.
	$LF
]div
[pre 
	[code class=language-avs 
		$UNPRINTABLE TEXT!!!
	]code
]pre
[h4 id=Settings 
	" Settings
	$LF
]h4
[div class=p 
	"Brandon used the following algorithm with this script (Referenced as encode.avs), to produce encodes:
	$LF
]div
[div class=p 
	"For all types of encodes, first dump the movie, load the parts, change the subtitle text and positions, trim the file as necessary, change any necessary additional settings (Ex. handheld), and preview in VirtualDub with hd = false. Once the preview is acceptable, click File > Save WAV as, and name it "audio.wav". What is done from here on depends on the type of encode:
	$LF
]div
[div class=p 
	"For primary downloadable:
	$LF
]div
[ol 
	[li 
		" Once the audio file is extracted, double click ogg.bat
		$LF
	]li
	[li 
		" Set hd = false, pass = 1, and double click first.bat
		$LF
	]li
	[li 
		" Once first.bat finishes running, set pass = 2 and double click second.bat (Make sure i444 is set to false)
		$LF
	]li
	[li 
		" Once all of the above are done processing, double click mux.bat. This will produce the final product, an encode.mkv file.
		$LF
	]li
]ol
[div class=p 
	"For 10-bit 444:
	$LF
]div
[ol 
	[li 
		" Once the audio file is extracted, double click ogg.bat
		$LF
	]li
	[li 
		" Set hd = false, pass = 1, and double click first.bat
		$LF
	]li
	[li 
		" Once first.bat finishes running, set pass = 2, set i444 = true, and double click second_10bit444.bat
		$LF
	]li
	[li 
		" Once all of the above are done processing, double click mux_10bit444.bat. This will produce the final product, an encode_10bit444.mkv file.
		$LF
	]li
]ol
[div class=p 
	"For 512kb:
	$LF
]div
[ol 
	[li 
		" Once the audio file is extracted, double click mp4.bat
		$LF
	]li
	[li 
		" Set hd = false, pass = 0 and double click 512kb.bat
		$LF
	]li
	[li 
		" Once all of the above are done processing, double click mux_512kb.bat. This will produce the final product, an encode_512kb.mp4 file.
		$LF
	]li
]ol
[div class=p 
	"For HD:
	$LF
]div
[ol 
	[li 
		" Once the audio file is extracted, double click ogg_youtube.bat
		$LF
	]li
	[li 
		" Set hd = true, pass = 0 and double click youtube.bat
		$LF
	]li
	[li 
		" Once the above are done processing, double click mux_youtube.bat. This will produce the final product, hd.mkv.
		$LF
	]li
]ol
[h4 id=Commands 
	" Commands
	$LF
]h4
[div class=p 
	"ogg.bat
	$LF
]div
[pre 
	"venc -q2 audio.wav audio.ogg
	$LF
]pre
[div class=p 
	"first.bat
	$LF
]div
[pre 
	"x264 --sar 7:6 --keyint infinite --crf 0 --range pc --input-range pc -o NUL encode.avs --preset ultrafast
	$LF
]pre
[div class=p 
	"second.bat
	[a id=r2 
	]a
	[sup 
		"[
		[a href=#2 
			"2
		]a
		"]
	]sup
	$LF
]div
[pre 
	"x264 --threads auto --sar 7:6 --crf 20 --keyint 600 --ref 16 --no-fast-pskip --bframes 16 --b-adapt 2 --direct auto --me tesa --merange 24 --subme 11 --trellis 2 --partitions all --rc-lookahead 250 --no-dct-decimate --range pc --input-range pc --colormatrix smpte170m --tcfile-in times.txt -o video.mkv encode.avs
	$LF
]pre
[div class=p 
	"mux.bat
	$LF
]div
[pre 
	"mkvmerge -o encode.mkv --timecodes -1:times.txt video.mkv audio.ogg
	$LF
]pre
[div class=p 
	"second_10bit444.bat
	$LF
]div
[pre 
	"x264-10 --threads auto --sar 7:6 --crf 20 --keyint 600 --ref 16 --no-fast-pskip --bframes 16 --b-adapt 2 --direct auto --me tesa --merange 24 --subme 11 --trellis 2 --partitions all --rc-lookahead 250 --no-dct-decimate --input-range pc --range pc --tcfile-in times.txt -o video_10bit444.mkv --colormatrix smpte170m --output-csp i444 encode.avs
	$LF
]pre
[div class=p 
	"mux_10bit444.bat
	$LF
]div
[pre 
	"mkvmerge -o encode_10bit444.mkv --timecodes -1:times.txt video_10bit444.mkv audio.ogg
	$LF
]pre
[div class=p 
	"mp4.bat
	$LF
]div
[pre 
	"sox audio.wav -t wav - trim 4672s | neroAacEnc -q 0.25 -if - -of audio.mp4
	$LF
]pre
[div class=p 
	"512kb.bat
	$LF
]div
[pre 
	"x264 --threads auto --crf 20 --keyint 600 --ref 16 --no-fast-pskip --bframes 16 --b-adapt 2 --direct auto --me umh --merange 24 --subme 10 --trellis 2 --partitions all --rc-lookahead 250 --no-dct-decimate --range tv --input-range tv --colormatrix smpte170m -o video_512kb.mp4 encode.avs
	$LF
]pre
[div class=p 
	"mux_512kb.bat
	$LF
]div
[pre 
	"MP4Box -add video_512kb.mp4 -add audio.mp4 -new encode_512kb.mp4
	$LF
]pre
[div class=p 
	"ogg_youtube.bat
	$LF
]div
[pre 
	"venc -q10 audio.wav audio_youtube.ogg
	$LF
]pre
[div class=p 
	"youtube.bat
	$LF
]div
[pre 
	"x264.exe --qp 0 --keyint 600 --output video_youtube.mkv encode.avs
	$LF
]pre
[div class=p 
	"mux_youtube.bat
	$LF
]div
[pre 
	"mkvmerge.exe -o encode_youtube.mkv --compression -1:none video_youtube.mkv audio_youtube.ogg
	$LF
]pre
[div class=p 
	"These files require several dependencies. All of them are included in 
	[a href=http://www.mediafire.com/?dx8o44eubh8se85 rel=noopener external nofollow 
		"Brandon's setup
	]a
	". Also get 
	[a href=http://code.google.com/p/feos-tas/downloads/detail?name=AVISynth%20plugins%20for%20ng_deblink.7z rel=noopener external nofollow 
		"ng_deblink dependencies
	]a
	".
	$LF
]div
[hr 
]hr
[div class=p 
	"[
	[a id=1 
	]a
	[a href=#r1 
		"1
	]a
	"]
	": We can't autodetect if it's a TV console or not, because both TV consoles and Arcade machines may have random resolution. The former must be scaled to 4:3, the latter shall keep untouched as well as handhelds and computers.
	$LF
]div
[div class=p 
	"[
	[a id=2 
	]a
	[a href=#r2 
		"2
	]a
	"]
	": See MeGUI wiki for the list of 
	[a href=http://mewiki.project357.com/wiki/X264_Settings rel=noopener external nofollow 
		"x264 parameters
	]a
	".
]div
