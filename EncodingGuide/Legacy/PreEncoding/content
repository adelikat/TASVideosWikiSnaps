56
[div class=p 
	"Prior to encoding, you will need to add both the logo and subtitles conforming to the 
	(__wikiLink|href=/EncoderGuidelines|implicitdisplaytext=Encoder Guidelines)
	" to the video.  Depending on the software you are using, you can use either of the following processes to do that.
	$LF
]div
[div class=p 
	"You will first need to prepare a set of subtitles.  Per the 
	(__wikiLink|href=/EncoderGuidelines|implicitdisplaytext=Encoder Guidelines)
	" this should comprise two subtitles each with length of about 5 seconds for a total of 10 seconds and should normally be timed to roughly coincide with the beginning of game play.
	$LF
]div
[div class=p 
	"First, you will need to select a segment of the video to display the subtitles over, and make a note of the starting time or frames; you will also need to decide where to display the subtitles on the screen to avoid obscuring the action.
	$LF
]div
[div class=p 
	"Once you have this information, proceed according to the software you are using.
	$LF
]div
[div class= 
	[div class= 
		[ul class=nav nav-tabs role=tablist 
			[li class=nav-item 
				[a class=active nav-link data-bs-toggle=tab href=#tabs-834-0 
					"mencoder
				]a
			]li
			[li class=nav-item 
				[a class=nav-link data-bs-toggle=tab href=#tabs-834-1 
					"AVISynth
				]a
			]li
		]ul
	]div
	[div class=tab-content 
		[div class=tab-pane fade active show id=tabs-834-0 
			[div class=p 
				[b 
					"Subtitles
				]b
				[br 
				]br
				$LF
				"Prepare either a .srt file or a .sub file.
				$LF
			]div
			[div class=p 
				"The format of a .srt file is
				$LF
			]div
			[pre 
				"1
				$LF
				"hh:mm:ss.sss --> hh:mm:ss.sss
				$LF
				"<game name> in <time>
				$LF
				"by <author>  Rerecord count: <rerecords>
				$LF
				$LF
				"2
				$LF
				"hh:mm:ss.sss --> hh:mm:ss.sss
				$LF
				"This is a tool-assisted recording.
				$LF
				"For details, visit https://TASvideos.org/
				$LF
			]pre
			[div class=p 
				"The format of a .sub file is
				$LF
			]div
			[pre 
				"{start frame}{end frame}<game name> in <time>|by <author>  Rerecord count: <rerecords>
				$LF
				"{start frame}{end frame}This is a tool-assisted recording.|For details, visit https://TASvideos.org/
				$LF
			]pre
			[div class=p 
				"It is slightly easier to use .srt files over .sub files where you know timestamps as opposed to frame numbers, and vice-versa.
				$LF
			]div
			[div class=p 
				[b 
					"Logo-combining
				]b
				[br 
				]br
				$LF
				"The next step is to combine your logo with the video stream you have just created, which will serve as the input for encoding. It is recommended that you use a means of duplicate frame removal in combination with this step, so as to save disk space at no visual quality loss - for example, you may wish to try 
				[a class=intlink href=/Users/Profile/sgrunt 
					"sgrunt
				]a
				"'s 
				(__wikiLink|displaytext=command-line dedup filter|href=/EncodingGuide/Legacy/DedupC)
				" (instructions for its use in conjunction with this step are provided there).
				$LF
			]div
			[div class=p 
				"Assuming your logo is 
				[code 
					"logo.avi
				]code
				", your raw video dump is 
				[code 
					"raw.avi
				]code
				[a id=r1 
				]a
				[sup 
					"[
					[a href=#1 
						"1
					]a
					"]
				]sup
				", and your subtitle file is 
				[code 
					"subtitle.srt
				]code
				", use the following command line to combine your logo, subtitles, and raw video:
				$LF
			]div
			[pre 
				"mencoder logo.avi raw.avi -sub subtitle.srt -subpos 98 -subalign 2 -oac copy -ovc x264 -x264encopts crf=0:fullrange=on -sws 9 -o in.avi
				$LF
			]pre
			[ul 
				[li 
					" 
					[b 
						[code 
							"-sub subtitle.srt
						]code
					]b
					": this is the subtitle file.
					$LF
				]li
				[li 
					" 
					[b 
						[code 
							"-subpos 98
						]code
					]b
					": Specifies the vertical position of the subtitle in percentage of the height.  If you want subtitles at the top, specify 
					[code 
						"-subpos 2
					]code
					" instead.
					$LF
				]li
				[li 
					" 
					[b 
						[code 
							"-subalign 2
						]code
					]b
					": Indicates that the bottom of the subtitles is aligned with the above position; this is used with subtitles at the bottom of the screen.  For top-aligned subtitles, use 
					[code 
						"-subalign 0
					]code
					" instead.
					$LF
				]li
				[li 
					" 
					[b 
						[code 
							"-oac copy
						]code
					]b
					": Specifies the audio codec to use; in this case it just copies the input audio tracks directly.  This doesn't always work - try 
					[code 
						"-oac pcm
					]code
					" if it doesn't work.
					$LF
				]li
				[li 
					" 
					[b 
						[code 
							"-ovc x264 -x264encopts crf=0:fullrange=on
						]code
					]b
					": This transcodes the video to lossless x264, placing it into the YV12 colour space...
					$LF
				]li
				[li 
					" 
					[b 
						[code 
							"-sws 9
						]code
					]b
					": ...using a Lanczos scaling algorithm - in this case, it is used for chroma resampling from RGB32 to YV12.  x264 expects YV12 input, and this ensures that a known (and preferred) chroma resampling algorithm is used for transcoding to that colour space.
					$LF
				]li
				[li 
					" 
					[b 
						[code 
							"-o in.avi
						]code
					]b
					": This is the output file name.
					$LF
				]li
			]ul
			[div class=p 
				"Once this is done, you will need to extract the audio track for audio encoding using 
				[code 
					"mplayer
				]code
				":
				$LF
			]div
			[pre 
				"mplayer -ao pcm:fast:file=audio.wav -vc dummy -vo dummy in.avi
				$LF
			]pre
			[ul 
				[li 
					" 
					[b 
						[code 
							"-ao pcm:fast:file.audio.wav
						]code
					]b
					": Dumps the audio track as a WAV to audio.wav.
					$LF
				]li
				[li 
					" 
					[b 
						[code 
							"-vc dummy -vo dummy
						]code
					]b
					": Disables video output and display (this speeds up the video extraction process).
					$LF
				]li
			]ul
		]div
		[div class=tab-pane fade id=tabs-834-1 
			[div class=p 
				"You will not need to logo-combine with AVISynth per se in that there is no intermediate file - instead, you will be using two scripts.
				$LF
			]div
			[div class=p 
				"These scripts employ the 
				[a href=http://akuvian.org/src/avisynth/dedup/ rel=noopener external nofollow 
					"DeDup plugin
				]a
				" for duplicate frame removal; you generally need to place the plugin (and the support DLLs from the bottom of that page) in one of: the same directory as the scripts, your /Windows/System32 directory, or your AVISynth plugins directory (which of these is necessary seems to vary from system to system).
				$LF
			]div
			[div class=p 
				"Here are the contents of the first script, which you can save as, for example, 
				[code 
					"script1.avs
				]code
				":
				$LF
			]div
			[pre 
				[code class=language-avs 
					$UNPRINTABLE TEXT!!!
				]code
			]pre
			[div class=p 
				"Here are the contents of the second script (
				[code 
					"script2.avs
				]code
				"):
				$LF
			]div
			[pre 
				[code class=language-avs 
					$UNPRINTABLE TEXT!!!
				]code
			]pre
			[div class=p 
				"Note that the scripts are virtually identical except for the last lines; you may consider combining them into one script controlled by a variable (done with some of the other encoding scripts currently in use).
				$LF
			]div
			[div class=p 
				"You will want to specify the appropriate input movie file in place of 
				[code 
					"movie.avi
				]code
				" and your own logo in place of 
				[code 
					"logo.png
				]code
				" (this script assumes you are using a still frame logo).
				$LF
			]div
			[div class=p 
				"If your movie file is in multiple parts, adjust your script to load all of them (e.g. 
				[code 
					"a2 = AVISource("movie_part2.avi")
				]code
				") and include them on the 
				[code 
					"last =
				]code
				" line (
				[code 
					"last = d + a + a2 + [...]
				]code
				")
				"[
				[a id=2 
				]a
				[a href=#r2 
					"2
				]a
				"]
				".
				$LF
			]div
			[div class=p 
				"Remember to update the subtitles to reflect the current run; this includes choosing appropriate frames at which to display them.
				$LF
			]div
			[div class=p 
				"Prior to the actual encoding step, you will need to generate two information files containing duplicate frame information (
				[code 
					"dup.txt
				]code
				") and time codes (
				[code 
					"times.txt
				]code
				") from the first and second scripts respectively; these are needed for the final encoding pass. It is fastest to use VirtualDub for this purpose:
				$LF
			]div
			[ol 
				[li 
					" Load 
					[code 
						"script1.avs
					]code
					" into VirtualDub;
					$LF
				]li
				[li 
					" Immediately select 
					[em 
						"File -> Run video analysis pass
					]em
					" (this generates 
					[code 
						"dup.txt
					]code
					");
					$LF
				]li
				[li 
					" Load 
					[code 
						"script2.avs
					]code
					" into VirtualDub (
					[code 
						"times.txt
					]code
					" is generated simply by loading the script).
					$LF
				]li
			]ol
			[div class=p 
				"Another approach for this is to use 
				[code 
					"x264
				]code
				":
				$LF
			]div
			[pre 
				"x264 --crf 0 --keyint infinite --fullrange on -o NUL script1.avs
				$LF
				"x264 --crf 0 --keyint infinite --fullrange on --frames 1 -o NUL script2.avs
				$LF
			]pre
			[div class=p 
				[code 
					"--crf 0
				]code
				" signifies lossless encoding; it is used here to get a gauge of how suited your video is for lossless compression. This method is useful for checking if lossless encoding might be suitable for the final encode; if the bit rate that it output from this is less than around 400 kbit/s (platform-dependent) you might try specifying 
				[code 
					"--crf 0
				]code
				" instead of 
				[code 
					"--crf 20
				]code
				" during the actual encoding step.
				$LF
			]div
			[div class=p 
				"You will also need to extract the audio; you can use VirtualDub for this purpose - while you have the (second) script loaded, go to the 
				[em 
					"File
				]em
				" menu and select 
				[em 
					"Save WAV...
				]em
				".
				$LF
			]div
		]div
	]div
]div
[div class=p 
	"If you are encoding to AAC audio (to any container), you will need to remove a small amount of silence from the beginning of your extracted audio track to account for a delay introduced as part of the encoding process.  This delay depends on the audio sampling rate and the value you specify for 
	[code 
		"-q
	]code
	":
	$LF
]div
[table 
	[tbody 
		[tr 
			[th 
				"Audio
			]th
			[th 
				"Delay at 
				[code 
					"-q 0.25
				]code
				" (ms)
			]th
			[th 
				"Delay at 
				[code 
					"-q 0.50
				]code
				" (ms)
			]th
		]tr
		[tr 
			[td 
				"44.1KHz
			]td
			[td 
				"-105
			]td
			[td 
				"-59
			]td
		]tr
		[tr 
			[td 
				"48KHz
			]td
			[td 
				"-97
			]td
			[td 
				"-54
			]td
		]tr
		[tr 
			[td 
				"f kHz
			]td
			[td 
				"-4672/f
			]td
			[td 
				"-2624/f
			]td
		]tr
	]tbody
]table
[div class=p 
	"You can extract the value of this delay after encoding the file using MP4Box (see next page); if a value for your sampling rate isn't listed, try encoding a small test clip first and use that to extract the audio delay.
	$LF
]div
[div class=p 
	"For Windows users, you can remove the delay in 
	[em 
		"VirtualDub
	]em
	" by selecting the Interleave option from the Audio menu and delaying the audio track by a negative amount of milliseconds.
	$LF
]div
[div class=p 
	"A more precise method is to use SoX. The delay can be removed using (replace 4672s with 2624s if using 
	[code 
		"-q 0.50
	]code
	". Note that this value is positive):
	$LF
]div
[pre 
	"sox audio.wav audio-fixed.wav trim 4672s
	$LF
]pre
[div class=p 
	"This reads from 
	[b 
		[code 
			"audio.wav
		]code
	]b
	" and writes to 
	[b 
		[code 
			"audio-fixed.wav
		]code
	]b
	" stripping off the first 4672 samples.
	$LF
]div
[hr 
]hr
[div class=p 
	"Next page: 
	(__wikiLink|displaytext=Encoding|href=/EncodingGuide/Legacy/Encoding)
	[br 
	]br
	$LF
	"Previous page: 
	(__wikiLink|displaytext=VideoDumping|href=/EncodingGuide/VideoDumping)
	$LF
]div
[div class=p 
	"[
	[a id=1 
	]a
	[a href=#r1 
		"1
	]a
	"]
	": If you have multiple video files, specify all of them on the following command line.
	$LF
]div
[div class=p 
	"[
	[a id=2 
	]a
	[a href=#r2 
		"2
	]a
	"]
	": The use of ++ (or AlignedSplice) is always incorrect when dealing with lossless emulator dumps.  It mangles the sound track; if your dump has a/v desync with + (or UnalignedSplice), then it must be fixed in some other way (if it can be fixed at all).
]div
