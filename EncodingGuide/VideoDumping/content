190
[div class=toc 
	[ul 
		[li 
			[a href=#Introduction 
				" Introduction
				$LF
			]a
		]li
		[li 
			[a href=#Commonsettings 
				" Common settings
				$LF
			]a
		]li
		[li 
			[a href=#BizHawk 
				" BizHawk
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#Targetsettings 
						" Target settings
						$LF
					]a
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#Systemspecificsettings 
								" System specific settings
								$LF
							]a
						]li
						[li 
							[a href=#Windows 
								" Windows
								$LF
							]a
						]li
						[li 
							[a href=#Linux 
								" Linux
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
		[li 
			[a href=#Dega 
				" Dega
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#Targetsettings 
						" Target settings
						$LF
					]a
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#Windows 
								" Windows
								$LF
							]a
						]li
						[li 
							[a href=#Linux 
								" Linux
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
		[li 
			[a href=#DeSmuME 
				" DeSmuME
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#Targetsettings 
						" Target settings
						$LF
					]a
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#Windows 
								" Windows
								$LF
							]a
						]li
						[li 
							[a href=#Linux 
								" Linux
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
		[li 
			[a href=#Dolphin 
				" Dolphin
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#TargetSettings 
						" Target Settings
						$LF
					]a
				]li
				[li 
					[a href=#Prerequisites 
						" Prerequisites
						$LF
					]a
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
			]ul
		]li
		[li 
			[a href=#DOOM 
				" DOOM
				$LF
			]a
		]li
		[li 
			[a href=#Famtasia 
				" Famtasia
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#TargetSettings 
						" Target Settings
						$LF
					]a
				]li
				[li 
					[a href=#FixingtheaudiodelayusingVDub 
						" Fixing the audio delay using VDub
						$LF
					]a
				]li
				[li 
					[a href=#FixingthedisplayusingVDub(NTSC) 
						" Fixing the display using VDub (NTSC)
						$LF
					]a
				]li
				[li 
					[a href=#FixingthedisplayusingVDub(PAL) 
						" Fixing the display using VDub (PAL)
						$LF
					]a
				]li
			]ul
		]li
		[li 
			[a href=#FCEU/FCEUX 
				" FCEU/FCEUX
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#Targetsettings 
						" Target settings
						$LF
					]a
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#Windows 
								" Windows
								$LF
							]a
						]li
						[li 
							[a href=#Linux 
								" Linux
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
		[li 
			[a href=#FinalBurnAlpha 
				" Final Burn Alpha
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[ul 
						[li 
							[a href=#Targetsettings 
								" Target settings
								$LF
							]a
						]li
					]ul
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#Windows 
								" Windows
								$LF
							]a
						]li
						[li 
							[a href=#Linux 
								" Linux
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
		[li 
			[a href=#Gens 
				" Gens
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#Targetsettings 
						" Target settings
						$LF
					]a
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#Windows 
								" Windows
								$LF
							]a
						]li
						[li 
							[a href=#Linux 
								" Linux
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
		[li 
			[a href=#Hourglass 
				" Hourglass
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[ul 
						[li 
							[a href=#Targetsettings 
								" Target settings
								$LF
							]a
						]li
					]ul
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#Windows 
								" Windows
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
		[li 
			[a href=#JPC-RR 
				" JPC-RR
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#Targetsettings 
						" Target settings
						$LF
					]a
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
			]ul
		]li
		[li 
			[a href=#LibTAS 
				" libTAS
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#Targetsettings 
						" Target settings
						$LF
					]a
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
			]ul
		]li
		[li 
			[a href=#Lsnes 
				" lsnes
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#Targetsettings 
						" Target settings
						$LF
					]a
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
			]ul
		]li
		[li 
			[a href=#MAME-RR 
				" MAME-RR
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#Targetsettings 
						" Target settings
						$LF
					]a
				]li
			]ul
		]li
		[li 
			[a href=#Mednafen 
				" Mednafen
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#Targetsettings 
						" Target settings
						$LF
					]a
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#Windowsorlinux 
								"  Windows or linux
								$LF
							]a
						]li
						[li 
							[a href=#Linuxonly 
								" Linux only
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
		[li 
			[a href=#Mupen64 
				" Mupen64
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#Targetsettings 
						" Target settings
						$LF
					]a
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#Windows 
								" Windows
								$LF
							]a
						]li
						[li 
							[a href=#Linux 
								" Linux
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
		[li 
			[a href=#OpenMSX 
				" openMSX
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#Targetsettings 
						" Target settings
						$LF
					]a
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#Windows 
								" Windows
								$LF
							]a
						]li
						[li 
							[a href=#Linux/Mac 
								" Linux / Mac
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
		[li 
			[a href=#PCEjin 
				" PCEjin
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[ul 
						[li 
							[a href=#Targetsettings 
								" Target settings
								$LF
							]a
						]li
					]ul
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#Windows 
								" Windows
								$LF
							]a
						]li
						[li 
							[a href=#Linux 
								" Linux
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
		[li 
			[a href=#PCSX 
				" PCSX
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#Targetsettings 
						" Target settings
						$LF
					]a
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#Windows 
								" Windows
								$LF
							]a
						]li
						[li 
							[a href=#Linux 
								" Linux
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
		[li 
			[a href=#PSXjin 
				" PSXjin
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#Targetsettings 
						" Target settings
						$LF
					]a
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#Windows 
								" Windows
								$LF
							]a
						]li
						[li 
							[a href=#Linux 
								" Linux
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
		[li 
			[a href=#Snes9x 
				" Snes9x
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#Targetsettings 
						" Target settings
						$LF
					]a
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#Windows 
								" Windows
								$LF
							]a
						]li
						[li 
							[a href=#Linux 
								" Linux
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
		[li 
			[a href=#VBjin 
				" VBjin
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[ul 
						[li 
							[a href=#Targetsettings 
								" Target settings
								$LF
							]a
						]li
					]ul
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#Windows 
								" Windows
								$LF
							]a
						]li
						[li 
							[a href=#Linux 
								" Linux
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
		[li 
			[a href=#VisualBoyAdvance 
				" VisualBoyAdvance
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#Targetsettings 
						" Target settings
						$LF
					]a
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#Windows 
								" Windows
								$LF
							]a
						]li
						[li 
							[a href=#Linux 
								" Linux
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
		[li 
			[a href=#Yabause 
				" Yabause
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#Targetsettings 
						" Target settings
						$LF
					]a
				]li
				[li 
					[a href=#Guide 
						" Guide
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#Windows 
								" Windows
								$LF
							]a
						]li
						[li 
							[a href=#Linux 
								" Linux
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
	]ul
]div
[h2 id=Introduction 
	" Introduction
	$LF
]h2
[p 
	"This page assumes you are already knowledgeable about playback of movies in the emulator.  If not, consult 
	(__wikiLink|/EmulatorResources|Emulator Resources)
	" for advice on how to set that up first.
	$LF
]p
[p 
	"According to the 
	(__wikiLink|/EncoderGuidelines|Encoder Guidelines)
	", your emulator should be configured to record video at its native resolution and at full frame rate.  The settings you need to do this are listed in the following sections.
	$LF
]p
[h2 id=Commonsettings 
	" Common settings
	$LF
]h2
[p 
	"Dumps should be made with a lossless codec using the RGB colorspace. Under Windows, most of the emulators in use on the site use VFW for their video dumping process. Popular VFW choices include 
	[a class=extlink href=http://sourceforge.net/projects/camstudio/files/legacy/CamStudioCodec_1.5_Setup.exe/download rel=nofollow 
		"CamStudio codec
	]a
	", and 
	[a class=extlink href=http://lags.leetcode.net/codec.html rel=nofollow 
		"Lagarith
	]a
	". These lossless RGB dumps can also be used for taking 
	(__wikiLink|/Screenshots|screenshots)
	".
	$LF
]p
[h2 id=BizHawk 
	" BizHawk
	$LF
]h2
[h3 id=Targetsettings 
	" Target settings
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"variable
			]td
			[td 
				"44.1KHz stereo
			]td
		]tr
	]tbody
]table
[h3 id=Guide 
	" Guide
	$LF
]h3
[h4 id=Systemspecificsettings 
	" System specific settings
	$LF
]h4
[ul 
	[li 
		" Commodore 64
		$LF
		[ul 
			[li 
				" Change border type to Normal and reboot the core. Use the same method as 
				[a class=intlink href=/Forum/P/440840#440840 
					"SMS
				]a
				" on dealing with the uneven resolution.
				$LF
			]li
		]ul
		" GameBoy
		$LF
		[ul 
			[li 
				" Enable 
				[em 
					"Alternate Sync
				]em
				": File -> AVI/WAV -> Config and Record AVI/WAV.
				$LF
			]li
			[li 
				" Use the greyscale palette.
				$LF
			]li
		]ul
		" N64
		$LF
		[ul 
			[li 
				" Enable 
				[em 
					"Alternate Sync
				]em
				": File -> AVI/WAV -> Config and Record AVI/WAV.
				$LF
			]li
			[li 
				" Since 
				[a class=intlink href=/Forum/T/20237 
					"Jabo video plugin has been deprecated
				]a
				", no bug fixes or enhancements should be used for it. On the other hand, movies using GLideN64 should have all the enhancements that are possible to pull off. For movies using other plugins, reasonable effort should be invested to try to resync them on GLideN64 and apply possible enhancements.
				$LF
			]li
			[li 
				" In some cases, it's recommended to update the GLideN64 plugin before dumping to get the latest bug fixes and improved accuracy.
				$LF
				[ul 
					[li 
						" Recommended GLideN64 settings (note that "enhanced" is typically used for SD and HD publications, "accuracy" is listed as settings for anyone wishing to do additional native-resolution encodes with settings that better reflect the N64's native output). Only non-default or notable options are listed here.
						$LF
						[ul 
							[li 
								" HW lighting: enabled for enhanced, disabled for accuracy (if you experience severely brightened colors, disable this).
								$LF
							]li
							[li 
								" Multisampling: disabled (conflicts with other settings).
								$LF
							]li
							[li 
								" FXAA: enabled for enhanced at resolutions 4K and above, otherwise disabled (can cause visual problems at lower resolutions)
								$LF
							]li
							[li 
								" Max anisotropy: enabled for enhanced, disabled for accuracy.
								$LF
							]li
							[li 
								" Bilinear filtering: N64 3-point.
								$LF
							]li
							[li 
								" Use defaults for current game: unchecked.
								$LF
							]li
							[li 
								" Copy Depth to RDRAM: use software renderer.
								$LF
							]li
							[li 
								" Copy Color to RDRAM: copy in sync mode.
								$LF
							]li
							[li 
								" N64 depth compare: enabled
								$LF
							]li
						]ul
						" Note: Because FXAA is not advised to be used at medium or low resolutions, anti-aliasing is not available on SD dumps. It's recommended you dump at a multiple of the game's internal resolution ("Show Internal Resolution" is a checkbox that can be enabled to discover this) and use 
						[a class=extlink href=https://github.com/Aktanusa/AreaResize/releases rel=nofollow 
							"Aktan's modified AreaResize
						]a
						" AVISynth plugin to resize the dumped footage down to SD, while still preserving the clarity of the game's 2D elements.
						$LF
					]li
				]ul
			]li
		]ul
	]li
]ul
[ul 
	[li 
		" NES
		$LF
		[ul 
			[li 
				" Disable 
				[em 
					"Allow more than 8 sprites
				]em
				$LF
			]li
			[li 
				" Disable 
				[em 
					"Clip left and right
				]em
				".
				$LF
			]li
			[li 
				" Set drawing area to (0-239) for PAL, and to (8-231) for NTSC.
				$LF
			]li
		]ul
		" PCE
		$LF
		[ul 
			[li 
				" Enable 
				[em 
					"Sprite Limit
				]em
				".
				$LF
			]li
		]ul
		" PSX
		$LF
		[ul 
			[li 
				" For PAL games, enable 
				[em 
					[a class=intlink href=/Forum/P/460440#460440 
						"Alternate Sync
					]a
				]em
				": File -> AVI/WAV -> Config and Record AVI/WAV. But disable it for NTSC games!
				$LF
			]li
			[li 
				" Resolution Mode: Hardcore Debug Mode
				$LF
			]li
			[li 
				" Horizontal Overscan Clipping: None
				$LF
			]li
			[li 
				" Deinterlacing: Weave
				$LF
			]li
		]ul
		" Saturn (Saturn -> Preferences)
		$LF
		[ul 
			[li 
				" Resolution Mode: Hardcore Debug
				$LF
			]li
			[li 
				" Horizontal Blend: False
				$LF
			]li
			[li 
				" Horizontal Overscan: True
				$LF
			]li
			[li 
				" ScanlineStartNtsc: 0
				$LF
			]li
			[li 
				" ScanlineEndNtsc: 239
				$LF
			]li
			[li 
				" ScanlineStartPal: 0
				$LF
			]li
			[li 
				" ScanlineEndPal: 255
				$LF
			]li
		]ul
		" SMS
		$LF
		[ul 
			[li 
				" Enable 
				[em 
					"Overscan
				]em
				". See 
				[a class=intlink href=/Forum/P/440840#440840 
					"this post
				]a
				" for how to handle the resulting uneven resolution.
				$LF
			]li
			[li 
				" Enable 
				[em 
					"Sprite Limit
				]em
				$LF
			]li
			[li 
				" Enable 
				[em 
					"FM Chip
				]em
				" if it's a Japanese game (unless this causes a desync)
				$LF
			]li
			[li 
				" Disable 
				[em 
					"Overclock
				]em
				$LF
			]li
			[li 
				" Disable 
				[em 
					"Stereo Separation
				]em
				".
				$LF
			]li
		]ul
		" Virtual Boy
		$LF
		[ul 
			[li 
				" VirtualBoy -> Preferences -> ThreeDeeMode: SideBySide.
				$LF
			]li
		]ul
	]li
]ul
[h4 id=Windows 
	" Windows
	$LF
]h4
[ol 
	[li 
		"Select 
		[em 
			"Speed/Skip
		]em
		" to 
		[em 
			"0 (never skip)
		]em
		$LF
	]li
	[li 
		"Open the ROM.
		$LF
	]li
	[li 
		"Pause emulation. (Pause key)
		$LF
	]li
	[li 
		"Load the movie.
		$LF
	]li
	[li 
		"Select 
		[em 
			"File -> AVI/WAV -> Record AVI/WAV
		]em
		". Note that Bizhawk 2.3 has a bug in unattended dumping (the video is always upscaled by 2), so use 
		[em 
			"Config and Record AVI/WAV
		]em
		" instead.
		$LF
	]li
	[li 
		"Choose a file name (such as 
		[em 
			"raw.avi
		]em
		"), and choose a lossless RGB codec of your choice (see 
		[em 
			"Common settings
		]em
		" for suggestions).  Click OK.
		$LF
	]li
	[li 
		"Unpause emulation. At this point, audio and video are now being captured.
		$LF
	]li
	[li 
		"When you reach the desired end point, select 
		[em 
			"File -> AVI/WAV -> Stop AVI
		]em
		".
		$LF
	]li
	[li 
		"For some systems, there will be multiple output files, one per resolution; these must be combined as in PSXjin.
		$LF
	]li
]ol
[h4 id=Linux 
	" Linux
	$LF
]h4
[p 
	"BizHawk doesn't run on Linux, for now.
	$LF
]p
[h2 id=Dega 
	" Dega
	$LF
]h2
[h3 id=Targetsettings 
	" Target settings
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"256x192 (SMS)
			]td
			[td 
				"44.1KHz mono
			]td
		]tr
		[tr 
			[td 
				"160x144 (GG)
			]td
			[td 
				"44.1KHz stereo
			]td
		]tr
	]tbody
]table
[h3 id=Guide 
	" Guide
	$LF
]h3
[h4 id=Windows 
	" Windows
	$LF
]h4
[p 
	"Dega's built-in VFW support is broken (causes audio desyncs), so external capture software is required; for this purpose, 
	[a class=extlink href=http://www.farb-rausch.de/~fg/kkapture/ rel=nofollow 
		".kkapture
	]a
	" is used for its ability to preserve all of the frames in the input at the expected frame rate.
	$LF
]p
[ol 
	[li 
		" Open .kkapture.
		$LF
	]li
	[li 
		" Under 
		[em 
			"Demo
		]em
		", select the 
		[tt 
			"dega
		]tt
		" executable.
		$LF
	]li
	[li 
		" Under 
		[em 
			"target
		]em
		", select the desired target AVI file (such as 
		[tt 
			"raw.avi
		]tt
		").
		$LF
	]li
	[li 
		" Set the FPS to 60 for NTSC games or 50 for PAL games.
		$LF
	]li
	[li 
		" Select 
		[em 
			"kkapture!
		]em
		".  This will start Dega.
		$LF
	]li
	[li 
		" Make sure 
		[em 
			"Sound -> Enhanced PSG
		]em
		" is unchecked.
		$LF
	]li
	[li 
		" If applicable, check 
		[em 
			"Sound -> FM chip
		]em
		"; use of this is normally specified in the submission text.
		$LF
	]li
	[li 
		" Load the ROM and start movie playback.
		$LF
	]li
	[li 
		" At the appropriate end point, close Dega.
		$LF
	]li
]ol
?IF 0
	[p 
		"When processing the audio for Master System games, be sure to only use one audio channel in order to conserve space (The Master System doesn't actually output in Stereo, the emulator just duplicates the Mono track into a recorded Stereo track), selecting only one audio channel can be done in VirtualDub.
		$LF
		[em 
			"TODO
		]em
		": Explain how to do this in VirtualDub.
		$LF
	]p
	[p 
		"Just in case anyone comes across this:  Every modern audio codec will successfully optimize out stereo tracks that are actually bit identical.  So this isn't really needed.
		$LF
	]p
?ENDIF 0
[h4 id=Linux 
	" Linux
	$LF
]h4
[ol 
	[li 
		" Play back the movie, noting the desired end frame of the video recording.
		$LF
	]li
	[li 
		" Calculate the number of frames past the end of the movie the target end frame is (the length of the movie in frames is specified at the end of the submission text).
		$LF
	]li
	[li 
		" Assuming the movie file is 
		[tt 
			"movie.mmv
		]tt
		" and the ROM filename is 
		[tt 
			"rom.sms
		]tt
		", invoke degavi with the following command line:
		$LF
	]li
]ol
[blockquote 
	" dega -f <number from 2> -m movie.mmv -o raw.avi rom.sms -- -oac pcm -ovc lavc -lavcopts vcodec=ffv1:format=bgr32
	$LF
]blockquote
[p 
	[tt 
		"degavi
	]tt
	" will terminate automatically when dumping is done, yielding 
	[tt 
		"raw.avi
	]tt
	".
	$LF
]p
[h2 id=DeSmuME 
	" DeSmuME
	$LF
]h2
[h3 id=Targetsettings 
	" Target settings
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"256x384
			]td
			[td 
				"44.1KHz stereo
			]td
		]tr
	]tbody
]table
[h3 id=Guide 
	" Guide
	$LF
]h3
[h4 id=Windows 
	" Windows
	$LF
]h4
[ol 
	[li 
		"Select 
		[em 
			"Config -> 3D Settings
		]em
		" and select 
		[em 
			"SoftRasterizer
		]em
		" as the Renderer.
		$LF
	]li
	[li 
		"Select 
		[em 
			"Config -> Frame Skip -> 0
		]em
		".
		$LF
	]li
	[li 
		"Optionally, uncheck 
		[em 
			"Config -> Frame Skip -> Limit framerate
		]em
		".
		$LF
	]li
	[li 
		"Open the ROM.
		$LF
	]li
	[li 
		"Pause emulation. (Pause key)
		$LF
	]li
	[li 
		"Load the movie.
		$LF
	]li
	[li 
		"Select 
		[em 
			"File -> Record AVI
		]em
		".
		$LF
	]li
	[li 
		"Choose a file name (such as 
		[em 
			"raw.avi
		]em
		"), and choose a lossless RGB codec of your choice (see 
		[em 
			"Common settings
		]em
		" for suggestions).  Click OK.
		$LF
	]li
	[li 
		"Unpause emulation. At this point, audio and video are now being captured.
		$LF
	]li
	[li 
		"When you reach the desired end point, select 
		[em 
			"File -> Stop AVI
		]em
		".
		$LF
	]li
]ol
[h4 id=Linux 
	" Linux
	$LF
]h4
[p 
	"Linux builds of DeSmume do not, at present, have video capture ability.  You will need to use 
	[a class=extlink href=http://winehq.org rel=nofollow 
		"Wine
	]a
	".
	$LF
]p
[h2 id=Dolphin 
	" Dolphin
	$LF
]h2
[h3 id=TargetSettings 
	" Target Settings
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"variable, 4:3 or 16:9
			]td
			[td 
				"32KHz or 48KHz stereo
			]td
		]tr
	]tbody
]table
[h3 id=Prerequisites 
	" Prerequisites
	$LF
]h3
[p 
	"Make sure you get the correct Dolphin version, which should be stated in the submission notes, as different releases are neither sync-stable nor sync-compatible with each other. In versions before 4.0-3595, it is obligatory to fix Dolphin's broken video and audio dumping feature prior to obtaining a capture. Either rely on patched binaries or, as a Windows user, try patching yourself:
	[br 
	]br
	$LF
	"https://github.com/nattthebear/dolphin-avsync/branches
	[br 
	]br
	$LF
	"https://github.com/RisingFog/dolphin-avsync/releases
	[br 
	]br
	$LF
	"For Linux systems 
	[a class=intlink href=/Users/Profile/Ilari 
		"Ilari
	]a
	" has created a set of patches providing similar functionality; ask on IRC if you need them. In any case applying the patches will likely result in merge conflicts, that have to be resolved manually. 
	[b 
		"Ignoring this step will result in broken audio/video dumps on versions older than 4.0-3595!
	]b
	" Some movies may require functionality (like memory card or disk switching) for playback that is not part of any official release. In these cases it is advisable to check the submission notes and discussion thread for provided patches or binaries.
	$LF
]p
[p 
	"Hint: Before starting the capturing process try to fully sync the run (Follow steps 1, 2 or 3, 7 (without 
	[em 
		"Dump Audio
	]em
	") and 8). This is to make sure possible frustration caused by unnoticed late desyncs is kept to a minimum. 
	[b 
		"Important
	]b
	": Sometimes a movie will desync on a second playback due to files being present that were created on first playback. Keep in mind that these have to be deleted before starting the capture! Check the submission details or discussion thread to be aware of such causes of desync. Should you get graphical glitches (missing/black or otherwise corrupted textures) try a different backend (e.g. OpenGL instead of DirectX) if possible.
	$LF
]p
[p 
	"Note: Windows Dolphin avsync versions older than 4.0-1711 crash after splitting the first 2GB segment. To overcome that, use one of these:
	$LF
]p
[ul 
	[li 
		" Ask the person who made a build for you to move the piece of code that closes the timecodes file (AVIDump.cpp) from 
		[tt 
			"AVIDump::CloseFile()
		]tt
		" to 
		[tt 
			"AVIDump::Stop()
		]tt
		".
		$LF
	]li
	[li 
		" Use x264vfw codec and configure it to output a lossless single-segment file (seeking won't break):
		$LF
		[ul 
			[li 
				" 
				[em 
					"Basic
				]em
				" -> last (nameless) drop-down menu -> 
				[em 
					"Keep/Accept only RGB
				]em
				".
				$LF
			]li
			[li 
				" Check 
				[em 
					"Zero latency
				]em
				".
				$LF
			]li
			[li 
				" 
				[em 
					"Rate control
				]em
				" -> 
				[em 
					"Single pass - lossless
				]em
				".
				$LF
			]li
			[li 
				" 
				[em 
					"Output
				]em
				" -> 
				[em 
					"Output mode
				]em
				" -> 
				[em 
					"File
				]em
				".
				$LF
			]li
			[li 
				" 
				[em 
					"Output file
				]em
				" -> specify the global path.
				$LF
			]li
		]ul
		" Use 
		[a class=intlink href=/Users/Profile/natt 
			"Pipedec
		]a
		".
		$LF
	]li
	[li 
		" Build Dolphin yourself, applying the fix from method 2. Use 
		[a class=intlink href=/Forum/P/398488#398488 
			"these steps
		]a
		" then.
		$LF
	]li
]ul
[h3 id=Guide 
	" Guide
	$LF
]h3
[p 
	"The following instructions assume you are using either 
	[a class=intlink href=/Users/Profile/natt 
		"natt
	]a
	"'s or 
	[a class=intlink href=/Users/Profile/Ilari 
		"Ilari
	]a
	"'s AVhack. Menu structure as well as names of menu items may change between releases.
	[br 
	]br
	$LF
	"Note: the settings are in the following format 
	[em 
		"Dolphin 4.0 UI / Dolphin 5.0 UI
	]em
	".
	[br 
	]br
	$LF
	"To avoid unnecessary hassle ensure you fulfill the assumptions made in step 9, first sentence.
	$LF
]p
[ol 
	[li 
		"Navigate to 
		[em 
			"Options->Configure
		]em
		". Uncheck 
		[em 
			"Enable Dual Core
		]em
		" and 
		[em 
			"Enable Idle Skipping
		]em
		". Set 
		[em 
			"Framelimit
		]em
		" to 
		[em 
			"off
		]em
		" / 
		[em 
			"Speed limit
		]em
		" to 
		[em 
			"Unlimited
		]em
		". Make sure the CPU emulator engine is set to 
		[em 
			"JIT Recompiler
		]em
		".
		$LF
	]li
	[li 
		"For some Gamecube games:  Navigate to 
		[em 
			"Options->Configure->Gamecube
		]em
		" and check 
		[em 
			"Skip BIOS
		]em
		". Some movies require a memory card inserted, while others expect none to be present. Set the 
		[em 
			"Slot
		]em
		" options accordingly.
		$LF
	]li
	[li 
		"For some Wii games: Navigate to 
		[em 
			"Options->Wiimote Settings
		]em
		". Click 
		[em 
			"Configure
		]em
		" for Wiimote 1 and 
		[em 
			"Clear
		]em
		". Also choose or unset the extension controller. These instructions are not required for all games.
		$LF
	]li
	[li 
		"Go to 
		[em 
			"Options->Graphics Settings -> Hacks
		]em
		", disable 
		[em 
			"External Frame Buffer
		]em
		" (related to movie sync), enable 
		[em 
			"EFB Copies
		]em
		" and set it to 
		[em 
			"RAM
		]em
		" (and enable 
		[em 
			"Cache
		]em
		" if you wish).
		$LF
	]li
	[li 
		"Dumping is to be done on highest graphical settings. Navigate to 
		[em 
			"Options->Graphics Settings
		]em
		" and check 
		[em 
			"Auto adjust Window Size
		]em
		". From that window navigate to 
		[em 
			"Enhancements
		]em
		" and set 
		[em 
			"Internal Resolution
		]em
		" to 
		[em 
			"2x Native
		]em
		", 
		[em 
			[a class=intlink href=/EncoderGuidelines#Antialiasing 
				"Anti-Aliasing
			]a
		]em
		" to 
		[em 
			"16xQ CSAA
		]em
		" or equivalent (8x SSAA) and 
		[em 
			"Anisotropic Filtering
		]em
		" to 
		[em 
			"16x
		]em
		" (anisotropic filtering leads to graphical glitches with some games. Leave it set to 
		[em 
			"1x
		]em
		" if this is the case.)
		$LF
		[ol 
			[li 
				"Linux specifics: For games displaying their content in 16:9 it may be necessary to force widescreen mode at this point: 
				[em 
					"Options->Graphics Settings
				]em
				", set 
				[em 
					"Aspect Ratio
				]em
				" to 
				[em 
					"Force 16:9
				]em
				". This however will not suffice because Dolphin will always resize the window to a 4:3 resolution and as the window dimensions determine the video resolution, you have to resize the window to the correct resolution (2x the native 16:9 resolution, i.e. 1536x864) yourself. Ensure the window content (that is without titlebar and other decoration by your window manager) has the correct dimensions with e.g. xwininfo.
				$LF
			]li
			[li 
				[em 
					"TODO: Windows specifics: Does the same apply to Windows?
				]em
				$LF
			]li
		]ol
		"Start the game without any dumping feature enabled. This way Dolphin will resize its window to the correct resolution. Now Dolphin has to be configured to write audio and video data to disk.
		$LF
	]li
	[li 
		"Navigate to 
		[em 
			"Options->Graphics Settings
		]em
		" and uncheck 
		[em 
			"Auto-adjust Window Size
		]em
		". From that window navigate to 
		[em 
			"Enhancements
		]em
		" and set
		[em 
			" Internal Resolution
		]em
		" to 
		[em 
			"4x Native
		]em
		". Check 
		[em 
			"Dump Frames
		]em
		" on the 
		[em 
			"Options->Graphics Settings->Advanced tab
		]em
		" / 
		[em 
			"Movie->Dump frames
		]em
		" menu.
		$LF
		[ol 
			[li 
				"Linux specifics: Check 
				[em 
					"Frame Dumps use FFV1
				]em
				" as well. The 
				[em 
					"Dump Frames
				]em
				" option will make Dolphin dump audio too.
				$LF
			]li
		]ol
		"Navigate to 
		[em 
			"Options->DSP Settings
		]em
		" and choose 
		[em 
			"DSP LLE recompiler
		]em
		" as DSP emulator engine. This type of sound emulation requires 
		[em 
			"dsp_coef.bin
		]em
		" and 
		[em 
			"dsp_rom.bin
		]em
		" to be present in the 
		[em 
			"User\GC\
		]em
		" on Windows or 
		[em 
			"$HOME/.dolphin-emu/GC
		]em
		" on Linux directory or you will receive an error message. On Windows check 
		[em 
			"Dump Audio
		]em
		" in the 
		[em 
			"Emulation / Movie
		]em
		" menu and set 
		[em 
			"Options->DSP / Audio settings->Audio Backend
		]em
		" to 
		[em 
			""No audio output"
		]em
		" (sound will be dumped nevertheless).
		$LF
	]li
	[li 
		"Assuming the game is in your library and you have started it at least once, choose 
		[em 
			"Play Recording
		]em
		" from the 
		[em 
			"Emulation / Movie
		]em
		" menu and select the movie file to be captured. On Windows and Dolphin 4.0 select a lossless RGB video codec of your choice and click 
		[em 
			"Ok
		]em
		". Audio and video are now being captured. Should the emulator crash at this point examine the 
		[em 
			"User\Dump\
		]em
		" directory of your Dolphin installation (
		[em 
			"$HOME/.dolphin-emu/GC
		]em
		" on Linux) and create the folders 
		[em 
			"Audio
		]em
		" and 
		[em 
			"Frames
		]em
		" if either of those are missing.
		$LF
		[ol 
			[li 
				"Linux specifics: 
				[b 
					"Important
				]b
				": During the entire video capture no window must overlap with the one showing the actual gameplay, so it is wise to check 
				[em 
					"Keep window on top
				]em
				" in 
				[em 
					"Options->Graphics Settings
				]em
				".
				$LF
			]li
		]ol
		"To stop the capturing process at the desired end point click 
		[em 
			"Emulation->Stop
		]em
		".
		$LF
	]li
]ol
[p 
	"Read on if you want to find out how to deal with the files that have been created for encoding: 
	[a class=intlink href=/Forum/P/349931#349931 
		"Dolphin encoding guide
	]a
	$LF
]p
[h2 id=DOOM 
	" DOOM
	$LF
]h2
[p 
	"The guide is here:
	[br 
	]br
	$LF
	"http://tasvideos.org/forum/viewtopic.php?t=18887
	$LF
]p
[h2 id=Famtasia 
	" Famtasia
	$LF
]h2
[pre 
	"* 
	[a class=intlink href=/Users/Profile/Dacicus 
		"Dacicus
	]a
	" doesn't understand why so many people are having trouble with Famtasia 
	$LF
	"<
	[a class=intlink href=/Users/Profile/sgrunt 
		"Grunt
	]a
	"> Famtasia *is* trouble. 
	$LF
]pre
[h3 id=TargetSettings 
	" Target Settings
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"256x224 (NTSC), 256x240 (PAL)
			]td
			[td 
				"44.1kHz mono
			]td
		]tr
	]tbody
]table
[p 
	[b 
		"WARNING
	]b
	": Famtasia dumps video RAW uncompressed, and in 2gb segments. Each segment has considerable audio lag.
	$LF
]p
[ol 
	[li 
		"Make sure you have the 
		[a class=extlink href=http://bisqwit.iki.fi/utils/famtasiapatch.php rel=nofollow 
			"patched
		]a
		"  version. The 60 FPS, Windows fix, 240 scanlines
		[a id=r10 
		]a
		[sup 
			"[
			[a href=#10 
				"10
			]a
			"]
		]sup
		", and AVI recording patches are required; the Audio logger must not be selected; and the others are optional.
		$LF
	]li
	[li 
		"Start Famtasia
		$LF
	]li
	[li 
		"Config -> Display -> Option: Resolution should be "Window Mode," Size x1, Drawing method should be "Window 8bpp,x1 size"
		$LF
	]li
	[li 
		"Config -> Display -> Option: Check "Disable system messages"
		$LF
	]li
	[li 
		"Config -> Speed: Refresh should be 1, Auto unchecked, ExecSpeed 100, and Windows Occupation all the way to the left
		$LF
	]li
	[li 
		"Config -> Sound: No Reverberation should be checked, Sampling Rate should be 44,100Hz 8Bits
		$LF
	]li
	[li 
		"Open Rom (It will instantly start recording upon loading the ROM, you may consider waiting a few seconds for the intro to change to make cropping it off easier)
		$LF
	]li
	[li 
		"Edit -> Movie -> Play -> Play Movie -> click "..." and select the movie you want to record
		$LF
	]li
]ol
[h3 id=FixingtheaudiodelayusingVDub 
	" Fixing the audio delay using VDub
	$LF
]h3
[ol 
	[li 
		"Open the first segment (usually recording00.avi)
		$LF
	]li
	[li 
		"Video -> Compression -> Select Lagarith/CamStudio/your favorite lossless RGB codec -> Click OK
		$LF
	]li
	[li 
		"Fix display using the instructions below for NTSC or PAL, as appropriate
		$LF
	]li
	[li 
		"Save as something else (e.g., recording00_fixed.avi). Somehow, this magically fixes the audio.
		$LF
	]li
	[li 
		"Repeat for each segment
		$LF
	]li
]ol
[h3 id=FixingthedisplayusingVDub(NTSC) 
	" Fixing the display using VDub (NTSC)
	$LF
]h3
[ol 
	[li 
		"Video -> Filters -> Click "Add..." Select "null transform" and click OK.
		$LF
	]li
	[li 
		"With "null transform" selected, click "Cropping."
		$LF
	]li
	[li 
		"Set Y1 offset to 7 and Y2 offset to 9. Click OK twice.
		$LF
	]li
]ol
[h3 id=FixingthedisplayusingVDub(PAL) 
	" Fixing the display using VDub (PAL)
	$LF
]h3
[ol 
	[li 
		"Download 
		[a class=extlink href=http://www.infognition.com/VirtualDubFilters/detailed.html#185 rel=nofollow 
			"Emiliano Ferrari's Shift filter
		]a
		" and extract the ef_shift.vdf file into VDub's plugins directory. (Note: 
		[a class=extlink href=http://www.infognition.com/VirtualDubFilters/detailed.html#83 rel=nofollow 
			"Simon Walters' ShiftWrap filter
		]a
		" can also do this, but the processing settings aren't saved correctly for batch processing.)
		$LF
	]li
	[li 
		"Video -> Filters -> Click "Add..."
		$LF
	]li
	[li 
		"Select "Shift" in the filters list and click OK. (If it doesn't appear in the list, select "Load..." and navigate to the location of the ef_shift.vdf file.)
		$LF
	]li
	[li 
		"In the Shift configuration dialog, check "Repeat the picture."
		$LF
	]li
	[li 
		"Enter 1 into the Y text box, or click the down arrow once. Click OK twice.
		$LF
	]li
]ol
[h2 id=FCEU/FCEUX 
	" FCEU/FCEUX
	$LF
]h2
[h3 id=Targetsettings 
	" Target settings
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"256x224 (NTSC), 256x240 (PAL)
			]td
			[td 
				"48KHz mono
			]td
		]tr
	]tbody
]table
[h3 id=Guide 
	" Guide
	$LF
]h3
[h4 id=Windows 
	" Windows
	$LF
]h4
[ol 
	[li 
		" Start FCEU or FCEUX.
		$LF
	]li
	[li 
		" Select 
		[em 
			"Config -> Video
		]em
		", and check 
		[em 
			"Disable hardware acceleration
		]em
		" (lower left corner).
		$LF
	]li
	[li 
		" Select 
		[em 
			"Config -> Sound
		]em
		". Set 
		[em 
			"Rate
		]em
		" to 48000 and 
		[em 
			"Quality
		]em
		" to high. Set all volume controls to their maximum.
		$LF
	]li
	[li 
		" Open the ROM for the movie.
		$LF
	]li
	[li 
		" Set the emulator speed to about 400% (= key); how fast you should go is limited only by the speed of your computer.
		$LF
	]li
	[li 
		" Pause emulation (Pause key).
		$LF
	]li
	[li 
		" Load the target movie file.
		$LF
	]li
	[li 
		" Select 
		[em 
			"File -> AVI/Wav -> Record AVI
		]em
		".  Choose a file name (such as 
		[em 
			"raw.avi
		]em
		"), and choose a lossless RGB codec of your choice (see 
		[em 
			"Common settings
		]em
		" for suggestions).  Click OK.
		$LF
	]li
	[li 
		" Unpause emulation; audio and video are now being captured.
		$LF
	]li
	[li 
		" Once you have reached your desired capture end point (usually at the end of credits), select 
		[em 
			"File -> AVI/Wav -> Stop AVI
		]em
		".
		$LF
	]li
]ol
[h4 id=Linux 
	" Linux
	$LF
]h4
[p 
	"Assuming the ROM is 
	[tt 
		"rom.nes
	]tt
	" and the fm2 is 
	[tt 
		"movie.fm2
	]tt
	", issue the following command:
	$LF
]p
[blockquote 
	" fceux --subtitles 0 --slstart 0 --slend 239 --xscale 1 --yscale 1
	$LF
	" --special 0 --pal 0 --sound 1 --soundq 1 --soundrate 48000 --volume 150
	$LF
	" --trianglevol 256 --square1vol 256 --square2vol 256 --noisevol 256
	$LF
	" --pcmvol 256 --mute 1 --nospritelim 1 --no-config 1 --videolog "mencoder -
	$LF
	" -o raw.avi -ovc lavc -lavcopts vcodec=ffv1:format=bgr32 -oac pcm -noskip
	$LF
	" -nocache -mc 0 NESVSETTINGS" --playmov movie.fm2 rom.nes
	$LF
]blockquote
[p 
	"The --videolog argument for capturing with a more modern tool like ffmpeg is:
	$LF
]p
[blockquote 
	"--videolog "ffmpeg -f s16le -ar 48000 -channels 1 -i /path/to/soundpipe/s.log -f rawvideo -r 60.0998 -s 256x224 -pix_fmt bgr24 -i - -c:a pcm_s16le -c:v libx264rgb -qp 0 -pix_fmt rgb24 output.mkv"
	$LF
]blockquote
[p 
	"Note: Figure out the /path/to/soundpipe/ by setting --videolog "NESVSETTINGS" once.
	$LF
]p
[p 
	"Once you have reached your desired capture end point (usually at the end of credits), close the emulator.
	$LF
]p
[p 
	"In r3325 we added --movielength int_number_of_frames (experimental) which should automatically terminate the capture along with the emulator. Please let someone know whether this works out for you.
	$LF
]p
[p 
	"In either case (linux or windows) you could try incorporating this one-liner lua script which should be self-explanatory: 
	$LF
]p
[blockquote 
	" while true do if movie.mode() == "playback" then emu.frameadvance() else os.exit() end end
	$LF
]blockquote
[p 
	[b 
		"WARNING
	]b
	": Dumping video for publications usually requires a human to make sure it's safe to stop dumping, as the game usually keeps providing valuable content after the movie has ended.
	$LF
]p
[ul 
	[li 
		" If capturing from 
		[b 
			"FCEU 0.98.12
		]b
		" or 
		[b 
			"FCEU 0.98.16
		]b
		" is needed for any reason, see 
		[a class=intlink href=/Forum/T/19567 
			"this thread
		]a
		".
		$LF
	]li
]ul
[h2 id=FinalBurnAlpha 
	" Final Burn Alpha
	$LF
]h2
[h4 id=Targetsettings 
	" Target settings
	$LF
]h4
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"(variable)
				[a id=r6 
				]a
				[sup 
					"[
					[a href=#6 
						"6
					]a
					"]
				]sup
			]td
			[td 
				"48KHz stereo
			]td
		]tr
	]tbody
]table
[h3 id=Guide 
	" Guide
	$LF
]h3
[p 
	[b 
		"WARNING
	]b
	": fba-rr-v003c does not automatically split the video file. It will dump video until the file reaches 4GB, after which the file will be invalid. To overcome this bug, track the size of the dumped video (update the folder containing it and hover the cursor), pause the emulator before 2GB is reached, stop dumping and then start again.
	$LF
]p
[h4 id=Windows 
	" Windows
	$LF
]h4
[ol 
	[li 
		"Select 
		[em 
			"Audio -> Plugin Options -> 48000Hz samplerate
		]em
		".
		$LF
	]li
	[li 
		"Load the ROM.
		$LF
	]li
	[li 
		"Pause emulation (Pause key).
		$LF
	]li
	[li 
		"Start movie playback.
		$LF
	]li
	[li 
		"Disable input display (, key) and frame display (. key).
		$LF
	]li
	[li 
		"Select 
		[em 
			"Game -> Movie -> Record AVI
		]em
		".  Choose a file name (such as 
		[em 
			"raw.avi
		]em
		"), and choose a lossless RGB codec of your choice (see 
		[em 
			"Common settings
		]em
		" for suggestions).  Click OK.
		$LF
	]li
	[li 
		"Unpause emulation.  You are now capturing audio/video.
		$LF
	]li
	[li 
		"When you reach the desired end point, select 
		[em 
			"Game -> Movie -> Stop AVI
		]em
		".
		$LF
	]li
]ol
[h4 id=Linux 
	" Linux
	$LF
]h4
[p 
	"TODO
	$LF
]p
[h2 id=Gens 
	" Gens
	$LF
]h2
[h3 id=Targetsettings 
	" Target settings
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"320x224 (NTSC), 320x240 (PAL), 256x224 (low resolution mode)
			]td
			[td 
				"44.1KHz stereo
			]td
		]tr
	]tbody
]table
[p 
	[b 
		"WARNING:
	]b
	" When Gens splits videos at 2GB, a video frame is lost at each split.  There is no correct way to fix this, other than to use a lossless codec which compresses well enough to avoid making the split in the first place.
	$LF
]p
[h3 id=Guide 
	" Guide
	$LF
]h3
[h4 id=Windows 
	" Windows
	$LF
]h4
[ol 
	[li 
		"Select 
		[em 
			"Graphics -> Frame Skip -> 0
		]em
		". This enables turbo speed while not skipping frames.
		$LF
	]li
	[li 
		"Make sure 
		[em 
			"Graphics -> VSync
		]em
		" is unchecked.
		$LF
	]li
	[li 
		"Make sure 
		[em 
			"Sound -> PSG High Quality
		]em
		" is unchecked.
		[a id=r9 
		]a
		[sup 
			"[
			[a href=#9 
				"9
			]a
			"]
		]sup
		" This option is not present in the latest svn.
		$LF
	]li
	[li 
		"If the game uses the low resolution mode only, and if you are going to crop the black borders while encoding, uncheck 
		[em 
			"Graphics -> Proper Aspect Ratio in low-resolution mode
		]em
		".
		$LF
	]li
	[li 
		"If the game is a Sega CD game, uncheck 
		[em 
			"Options -> General -> Show Sega-CD LED
		]em
		".
		$LF
	]li
	[li 
		"Check 
		[em 
			"Tools -> AVI -> Clean AVI screen
		]em
		".
		$LF
	]li
	[li 
		"Check 
		[em 
			"Tools -> AVI -> Fit AVI to game height
		]em
		".
		$LF
	]li
	[li 
		"Uncheck 
		[em 
			"Tools -> AVI -> Sync AVI with movie
		]em
		".
		$LF
	]li
	[li 
		"Uncheck 
		[em 
			"Options -> General... -> Message -> Enable
		]em
		".
		$LF
	]li
	[li 
		"Uncheck 
		[em 
			"Sound -> Soften Filter
		]em
		".
		$LF
	]li
	[li 
		"Open the ROM.
		$LF
	]li
	[li 
		"Pause emulation (Pause key).
		$LF
	]li
	[li 
		"Start movie playback.
		$LF
	]li
	[li 
		"Select 
		[em 
			"Tools -> AVI -> Start AVI dump
		]em
		".  Choose a file name (such as 
		[em 
			"raw.avi
		]em
		"), and choose a lossless RGB codec of your choice (see 
		[em 
			"Common settings
		]em
		" for suggestions).  Click OK.
		$LF
	]li
	[li 
		"Unpause emulation.  You are now capturing audio/video.
		$LF
	]li
	[li 
		"When you reach the desired end point, select 
		[em 
			"Tools -> AVI -> Stop AVI dump
		]em
		".
		$LF
	]li
]ol
[h4 id=Linux 
	" Linux
	$LF
]h4
[p 
	"TODO
	$LF
]p
[h2 id=Hourglass 
	" Hourglass
	$LF
]h2
[h4 id=Targetsettings 
	" Target settings
	$LF
]h4
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"(variable)
			]td
			[td 
				"(variable)
			]td
		]tr
	]tbody
]table
[h3 id=Guide 
	" Guide
	$LF
]h3
[h4 id=Windows 
	" Windows
	$LF
]h4
[ol 
	[li 
		" Figure out the options to get the run to sync (must be mentioned in the submission if they aren't default).
		$LF
	]li
	[li 
		" 
		[em 
			"Movie File
		]em
		" -> 
		[em 
			"Browse
		]em
		". Pick the TAS file.
		$LF
	]li
	[li 
		" 
		[em 
			"Game Executable
		]em
		" -> 
		[em 
			"Browse
		]em
		". Select the game executable.
		$LF
	]li
	[li 
		" 
		[em 
			"AVI
		]em
		" -> check 
		[em 
			"Capture Video and Audio
		]em
		".
		$LF
	]li
	[li 
		" Check 
		[em 
			"Fast-Forward
		]em
		".
		$LF
	]li
	[li 
		" 
		[em 
			"Run and Play Existing Movie
		]em
		".
		$LF
	]li
]ol
[p 
	"It will prompt you to locate the output video and to select the codec.
	$LF
	"When it's over, press Stop Playing.
	$LF
]p
[h2 id=JPC-RR 
	" JPC-RR
	$LF
]h2
[h3 id=Targetsettings 
	" Target settings
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"(variable) 
				[a id=r7 
				]a
				[sup 
					"[
					[a href=#7 
						"7
					]a
					"]
				]sup
			]td
			[td 
				"(variable) 
				[a id=r8 
				]a
				[sup 
					"[
					[a href=#8 
						"8
					]a
					"]
				]sup
			]td
		]tr
	]tbody
]table
[p 
	[b 
		"WARNING
	]b
	": JPC-RR encoding is quite different from other emulators; if you are new to encoding, you should try working with different platforms first.
	$LF
]p
[h3 id=Guide 
	" Guide
	$LF
]h3
[p 
	"Set up movie replay as usual, but use the build from this thread, as well as the guide provided there: http://tasvideos.org/forum/viewtopic.php?t=20128
	$LF
]p
[p 
	[del 
		[a class=intlink href=/EmulatorResources/JPC/MovieDumping 
			"JPC-RR dumping guide
		]a
	]del
	[br 
	]br
	$LF
	[del 
		[a class=intlink href=/EmulatorResources/JPC/MovieDumpingR10 
			"r10.x guide
		]a
	]del
	[br 
	]br
	$LF
	[del 
		[a class=intlink href=/EmulatorResources/JPC/MovieDumpingR11 
			"r11.x guide
		]a
	]del
	$LF
]p
[h2 id=LibTAS 
	" libTAS
	$LF
]h2
[h3 id=Targetsettings 
	" Target settings
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"(variable)
			]td
			[td 
				"(variable)
			]td
		]tr
	]tbody
]table
[h3 id=Guide 
	" Guide
	$LF
]h3
[ol 
	[li 
		" Install ffmpeg, or else dumping won't work (e.g. under Ubuntu: 
		[em 
			"sudo apt-get install ffmpeg
		]em
		").
		$LF
	]li
	[li 
		" In libTAS, set the path to the game to /path/to/game (or follow the instructions provided in the movie file's annotations)
		$LF
	]li
	[li 
		" Check 
		[em 
			"Movie recording
		]em
		", then click on 
		[em 
			"Browse...
		]em
		". Select the movie file.
		$LF
	]li
	[li 
		" Under 
		[em 
			"Tools
		]em
		" -> 
		[em 
			"Configure encode...
		]em
		", set the encode file path to /path/to/encode.avi (if you're using a VM, make sure to save to a shared folder both the host OS and the guest OS can access read+write). In the encode codec settings, select either H.264 RGB or FFV1 as video codec and PCM signed 16-bit little-endian. Copy the following in the ffmpeg options text box, then click 
		[em 
			"Ok
		]em
		":
		$LF
		[ol 
			[li 
				" For H.264 RGB: 
				[tt 
					"-c:v libx264rgb -qp 0 -preset ultrafast -g 1 -pix_fmt rgb24 -context 1 -c:a pcm_s16le
				]tt
				$LF
			]li
			[li 
				" For FFV1: 
				[tt 
					"-c:v ffv1 -pix_fmt bgr0 -level 1 -g 1 -coder 1 -context 1 -c:a pcm_s16le
				]tt
				$LF
			]li
		]ol
		" Start the encode by clicking on 
		[em 
			"Tools
		]em
		" -> 
		[em 
			"Start encode
		]em
		". This will start the encode when launching the game.
		$LF
	]li
	[li 
		" Click 
		[em 
			"Start
		]em
		", then press the Pause key to un-pause if you started the game paused. This will capture audio and video to AVI (even if audio is muted).
		$LF
	]li
	[li 
		" When you reach the desired end point, click on 
		[em 
			"Stop
		]em
		" or close the game window.
		$LF
	]li
]ol
[ul 
	[li 
		" IMPORTANT NOTE WHEN USING H.264 RGB: If you have x264vfw installed, absolutely make sure to open the AVI in AviSynth with the following line, or else it will use Microsoft's garbage H.264 codec instead: 
		[em 
			"AVISource("encode.avi", pixel_type="RGB24", fourCC="X264")
		]em
		$LF
	]li
]ul
[h2 id=Lsnes 
	" lsnes
	$LF
]h2
[h3 id=Targetsettings 
	" Target settings
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"256/512x224/240/448/480
			]td
			[td 
				"44.1 KHz stereo
			]td
		]tr
	]tbody
]table
[h3 id=Guide 
	" Guide
	$LF
]h3
[ol 
	[li 
		" Open the emulator, load the ROM.
		$LF
	]li
	[li 
		" Select load movie/savestate tab, select the movie, check start paused and hit ok.
		$LF
	]li
	[li 
		" Set avi-soundrate to 5 (settings, advanced tab, or 'set-setting avi-soundrate 5')
		$LF
	]li
	[li 
		" Select AVI capture (Camstudio / PCM) from capture menu.
		$LF
	]li
	[li 
		" Set speed to turbo (or other desired speed).
		$LF
	]li
	[li 
		" If you want to, you can mute audio by unchecking Config->Sounds enabled. This won't affect dumped audio.
		$LF
	]li
	[li 
		" Unpause the emulator
		$LF
	]li
	[li 
		" When reaching the end, select end avi dump.
		$LF
	]li
	[li 
		" Close the emulator.
		$LF
	]li
]ol
[ul 
	[li 
		" On Linux, TSCC can be used instead of Camstudio (it is usually bit faster and  compresses better).
		$LF
		[ul 
			[li 
				" The reason not to use that on Windows is the difficulty decoding it using VfW.
				$LF
			]li
		]ul
	]li
]ul
[h2 id=MAME-RR 
	" MAME-RR
	$LF
]h2
[h3 id=Targetsettings 
	" Target settings
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"Variable
			]td
			[td 
				"48KHz
			]td
		]tr
	]tbody
]table
[p 
	"All the settings should be default. Just use the following command line (assuming your ROM name is 
	[tt 
		"myrom.zip
	]tt
	", and your movie name is 
	[tt 
		"myrom.mar
	]tt
	"):
	[br 
	]br
	$LF
	[tt 
		"mame-rr myrom -aviwrite myrom.avi -playback myrom.mar
	]tt
	$LF
]p
[p 
	"Alternatively, save this script as 
	[tt 
		"dump_avi.bat
	]tt
	", put near mame-rr.exe, and run it
	$LF
]p
[p 
	[tt 
		"@echo off
	]tt
	[br 
	]br
	$LF
	[tt 
		"echo Type ROM name (without extension):
	]tt
	[br 
	]br
	$LF
	[tt 
		"set /p ROM=
	]tt
	[br 
	]br
	$LF
	[tt 
		"echo Type movie name (without extension):
	]tt
	[br 
	]br
	$LF
	[tt 
		"set /p MOVIE=
	]tt
	[br 
	]br
	$LF
	[tt 
		"echo Type AVI name (without extension):
	]tt
	[br 
	]br
	$LF
	[tt 
		"set /p AVI=
	]tt
	[br 
	]br
	$LF
	[tt 
		"mame-rr %ROM% -aviwrite %AVI%.avi -playback %MOVIE%.mar
	]tt
	[br 
	]br
	$LF
]p
[p 
	"Unpause the emulator (
	[tt 
		"P
	]tt
	" key by default), since it autopauses to prevent timestamp desync. When you're done, just close the emulator. That will properly stop AVI dumping.
	$LF
]p
[p 
	[b 
		"NOTE:
	]b
	" mame-rr v0.1-beta reports the intended aspect ratio for each game, make sure to use it when encoding.
	[br 
	]br
	$LF
	[b 
		"NOTE:
	]b
	" mame-rr v0.1-beta splits the dump at 2GB, but might desync if the run was made on -alpha, so check if it syncs and use -beta. Splitting is needed to avoid the annoyance with 
	[a class=intlink href=/Forum/P/448290#448290 
		"fixing the broken frames
	]a
	" at 2GB border.
	$LF
]p
[h2 id=Mednafen 
	" Mednafen
	$LF
]h2
[h3 id=Targetsettings 
	" Target settings
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"(variable)
				[a id=r4 
				]a
				[sup 
					"[
					[a href=#4 
						"4
					]a
					"]
				]sup
			]td
			[td 
				"44.1KHz stereo
			]td
		]tr
	]tbody
]table
[h3 id=Guide 
	" Guide
	$LF
]h3
[h4 id=Windowsorlinux 
	"  Windows or linux
	$LF
]h4
[p 
	"Use the following command-line to launch Mednafen and automatically start movie playback and .mmm recording:
	[br 
	]br
	$LF
]p
[blockquote 
	" mednafen.exe -mmm 1 -mmmfile "where\to\save\movie.mmm" -mmmframes 5000 -mov "path\to\movie.mcm" -play 1 "path\to\rom.pce"
	$LF
]blockquote
[p 
	[em 
		"Change 5000 by the number of frames you want to dump.
	]em
	[br 
	]br
	$LF
	"Now transfert the .mmm file on Linux to convert it to .mov (quicktime).
	[br 
	]br
	$LF
]p
[h4 id=Linuxonly 
	" Linux only
	$LF
]h4
[p 
	"You will need to compile the transcoder yourself on Linux 
	[br 
	]br
	$LF
	"Souce: https://storage.googleapis.com/google-code-archive-source/v2/code.google.com/mednafen-rr/source-archive.zip
	$LF
	"install the following dependencies:
	[br 
	]br
	$LF
]p
[blockquote 
	" sudo apt-get install subversion build-essential automake autoconf libtool patchutils binutils libc6-dev bison flex gawk gettext imagemagick zlib1g-dev libsndfile-dev libquicktime-dev
	$LF
]blockquote
[p 
	[br 
	]br
	"then go to 
	[em 
		"mednafen-rr/trunk/mednafen-mmmencode
	]em
	", execute 
	[em 
		"sudo chmod +x ./autogen.sh
	]em
	".
	[br 
	]br
	$LF
	"Edit 
	[em 
		"./po/Makefile.in.in
	]em
	" and change the 
	[b 
		"GETTEXT_MACRO_VERSION
	]b
	" version to 0.19
	[br 
	]br
	$LF
	"run 
	[em 
		"./autogen.sh
	]em
	" then 
	[em 
		"sudo ./configure
	]em
	" then 
	[em 
		"sudo make
	]em
	" then 
	[em 
		"sudo make install
	]em
	".
	[br 
	]br
	$LF
	"you will find the program in 
	[em 
		"/usr/local/bin/
	]em
	".
	[br 
	]br
	$LF
	[br 
	]br
	$LF
	"Once compiled, go in the folder containing the .mmm file and use the following commang to convert it:
	[br 
	]br
	$LF
]p
[blockquote 
	" mednafen-mmmencode mymovie.mmm
	$LF
]blockquote
[p 
	"You will have a "test.mov" file
	[br 
	]br
	$LF
	"If the command 
	[em 
		"mednafen-mmmencode
	]em
	" is not recognized, make sure the program exist in the 
	[em 
		"/usr/local/bin
	]em
	" folder. If it exist there, this mean 
	[em 
		"/usr/local/bin
	]em
	" is not in your $PATH variable, so use this command instead:
	$LF
]p
[blockquote 
	" /usr/local/bin/mednafen-mmmencode mymovie.mmm
	$LF
]blockquote
[p 
	"Open the QuickTime movie in VirtualDub with the FFInput Plugin to convert it to .avi
	$LF
	[em 
		"File > save as avi
	]em
	$LF
]p
[h2 id=Mupen64 
	" Mupen64
	$LF
]h2
[h3 id=Targetsettings 
	" Target settings
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"variable, normally 320x240 (or multiple thereof)
				[a id=r2 
				]a
				[sup 
					"[
					[a href=#2 
						"2
					]a
					"]
				]sup
			]td
			[td 
				"44.1KHz stereo
			]td
		]tr
	]tbody
]table
[p 
	[b 
		"WARNING
	]b
	": Mupen64 is notoriously unstable and difficult to work with.  If you are new to encoding, you should try working with different platforms first.
	$LF
]p
[p 
	"http://code.google.com/p/glidehqplusglitch64/downloads/detail?name=Glide64_Final.zip
	[br 
	]br
	$LF
	"http://rustedlogic.net/wikiold/index.php?title=Nintendo_64_Emulation_plugins
	$LF
]p
[h3 id=Guide 
	" Guide
	$LF
]h3
[h4 id=Windows 
	" Windows
	$LF
]h4
[p 
	"Mupen64's built-in dumping is very unreliable and should not be used at all.  
	[a class=intlink href=/Users/Profile/Aktan 
		"Aktan
	]a
	" has developed the following alternate dumping method using 
	[a class=extlink href=http://www.mediafire.com/?yvayu3xhxnqn5ow rel=nofollow 
		"a modified build of .kkapture
	]a
	".  It is recommended, where possible, to use the 
	[a class=extlink href=http://glide64.emuxhaven.net/files/Glide64_Final.zip rel=nofollow 
		"Glide64 'Final'
	]a
	" video plugin and 
	[a class=extlink href=http://www.emutalk.net/threads/27610-Audio-v0.56-WIP2-Download-Feedback rel=nofollow 
		"Azimer's audio plugin
	]a
	" (both plugins are mirrored 
	[a class=extlink href=http://tv-games.ru/emulator/open/n64_plugins.html rel=nofollow 
		"on that page
	]a
	"); some segments of the following set of instructions may assume the use of those plugins.
	$LF
]p
[ol 
	[li 
		" 
		[b 
			"Make a backup of your plugin directory
		]b
		" so that your old settings are preserved, as necessary.  Also backup glide3x.dll in your Mupen64 root directory.
		$LF
	]li
	[li 
		" Place the above plugins into your Mupen plugins directory, and glide3x.dll from the "wrapper" directory in the Glide64 package into the Mupen64 base directory.
		$LF
	]li
	[li 
		" Edit Plugins/Glide64.ini; change instances of "filtering = 1" to "filtering = 0", and "hotkeys = 1" to "hotkeys = 0".
		$LF
	]li
	[li 
		" Start Mupen.
		$LF
	]li
	[li 
		" Options -> Settings -> General -> uncheck "Limit FPS (auto)".
		$LF
	]li
	[li 
		" Options -> Settings -> Config Plugins -> select Glide64 Napalm WX as the video plugin and Azimer's audio plugin for audio.
		$LF
	]li
	[li 
		" Go into the Glide64 configuration dialogue, check "show advanced emulation options", and close and reopen the dialogue.
		$LF
	]li
	[li 
		" Set video options as seen 
		[a class=extlink href=http://imgur.com/IzHELMZ rel=nofollow 
			"here
		]a
		" and 
		[a class=extlink href=http://imgur.com/zLS2E8d rel=nofollow 
			"here
		]a
		".  (Note: "use frame buffer objects" may be necessary for some video cards).
		$LF
	]li
	[li 
		" Select a video resolution that is a multiple of 320x240 (or 342x256), but smaller than your screen size (
		[a class=intlink href=/EncoderGuidelines#Antialiasing 
			"antialiasing
		]a
		").
		$LF
	]li
	[li 
		" Load your game ROM, and observe the Glide64 text at the bottom of the screen.  You should see "Filtering: Automatic" specified.  If it's not, you will need to exit Mupen64 and edit Glide64.ini as described in step 3.
		$LF
	]li
	[li 
		" Utilities -> Movies -> Start Movie Playback.  Select the movie to play back, check "Open Read-Only", and enter 1 for "Pause at frame:".  Click OK.  The movie should now be paused on the first frame.
		$LF
	]li
	[li 
		" Make a save state.
		$LF
	]li
	[li 
		" Close Mupen.
		$LF
	]li
	[li 
		" Check that there are no .eep files for your game in the Save directory in the Mupen root directory (playback from .kkapture as follows doesn't clear these files out, and their presence can cause desyncs).
		$LF
	]li
	[li 
		" Start .kkapture; configure it as seen 
		[a class=extlink href=http://imgur.com/1hgq26p rel=nofollow 
			"here
		]a
		".  Note in particular the frame rate (120fps); this is to ensure that all frames in 60fps segments are captured.  There will be a lot of duplicate frames in the output; as such, use of a codec such as Lagarith that can store null frames is suggested.
		$LF
	]li
	[li 
		" Set "Demo" to your Mupen executable and set "Target" to a target filename, then click "kkapture!".  Mupen will start.
		$LF
	]li
	[li 
		" Load the game ROM; wait for the Glide64 text to disappear (and ideally for a recognisable action to appear on the screen, so that you know when playback of the movie starts).
		$LF
	]li
	[li 
		" Pause Mupen.
		$LF
	]li
	[li 
		" Utilities -> Movies -> Start Movie Playback; select the movie as earlier, 
		[b 
			"check "Open Read-Only"
		]b
		", and click OK (don't specify a pause frame).
		$LF
	]li
	[li 
		" Load your save state from earlier.
		$LF
	]li
	[li 
		" Unpause Mupen - you are now capturing. Do not attempt to move any part of the emulator window off-screen - it will ruin rendering on the off-screen area.
		$LF
	]li
	[li 
		" At the end of desired playback, highlight a non-Mupen window and press the right CTRL key.  (
		[b 
			"WARNING:
		]b
		" this means you can't use right CTRL during video capture!) Mupen will exit upon doing so.
		$LF
	]li
]ol
[p 
	"Some notes on this method:
	$LF
]p
[ol 
	[li 
		" The capture may have an extra 20 pixel border at the bottom, which should be cropped out.
		$LF
	]li
	[li 
		" The audio plugin may add a audio delay of around 192 ms (could be a function of the sound card).
		$LF
	]li
	[li 
		" Duplicate frame removal is strongly recommended for captures using this method, given the number of duplicate frames in the video dump.
		$LF
	]li
	[li 
		" The sound output may not be 44.1kHz.  If it is not, it will generally be a very odd sampling rate, and you may resample the sound track to be 44.1kHz.
		$LF
	]li
	[li 
		" On certain games, the capture FPS can be set to 60 FPS for a smoother capture.
		$LF
	]li
]ol
[h4 id=Linux 
	" Linux
	$LF
]h4
[p 
	"There is no known completely reliable way to get stock builds of Mupen to play back effectively on Linux with video dumping.  Some encoders have reported success with 
	[a class=extlink href=http://winehq.org rel=nofollow 
		"Wine
	]a
	"; for others it fails miserably.  At least two encoders have modified builds of Mupen in order to dump video reliably; ask on the forums for more information.
	$LF
]p
[h2 id=OpenMSX 
	" openMSX
	$LF
]h2
[h3 id=Targetsettings 
	" Target settings
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"640x480
			]td
			[td 
				"44.1 KHz mono/stereo
			]td
		]tr
	]tbody
]table
[p 
	"openMSX dumps video with the lossless ZMBV (Zipped Motion-Blocks Video) codec and audio in uncompressed WAV. The ZMBV encoder is built in (and will thus work on any platform). On Windows, openMSX comes with a separate codec dll to be able to play the resulting AVI on any installed media player. Make you sure you install that dll to be able to import the AVI file to AVISynth and preview it in VirtualDub.
	$LF
]p
[p 
	"The resolution used in this guide is 480p, but some games can safely be downscaled to 240p. 
	[a class=extlink href=https://www.msx.org/wiki/SCREEN rel=nofollow 
		"Here's a list of resolutions
	]a
	" MSX screen modes use. Run the replay as described below and type 
	[tt 
		"toggle_info_panel
	]tt
	" in openMSX internal console, that will tell you the mode used by the game (only the mode used for actual gameplay is relevant here).
	$LF
]p
[h3 id=Guide 
	" Guide
	$LF
]h3
[p 
	"IMPORTANT NOTES:
	[br 
	]br
	$LF
]p
[ul 
	[li 
		"The replay file doesn't necessarily have to be on 
		[em 
			"C:\Documents and Settings\<user>\My Documents\openMSX\replays
		]em
		" (for Windows XP) or on 
		[em 
			"C:\Users\<user>\Documents\openMSX\replays
		]em
		" (for Vista/Windows 7) or on 
		[em 
			"/home
		]em
		" (
		[em 
			"Users
		]em
		" if you're using a Mac)
		[em 
			"/<user>/.openMSX/replays
		]em
		" (for Linux / Mac) (where <user> is your user folder), but it's highly recommended that the replay is in that folder, as it'll be a bit easier to load the replay file.
		[br 
		]br
		$LF
	]li
	[li 
		"As openMSX will use the 
		[b 
			"exact same
		]b
		" machine as specified in the replay file, you also need the system ROMs for that machine, which is explained 
		[a class=extlink href=http://openmsx.org/manual/setup.html#romlocation rel=nofollow 
			"in the openMSX Setup Guide
		]a
		". Of course, we don't provide them here.
		$LF
	]li
	[li 
		"If you get unlucky enough to experience openmsx switch the framerate on the fly during video recording, it'd cause an av desync. To fight it, make use of 
		[a class=extlink href=https://gist.github.com/FiXato/475752 rel=nofollow 
			"this tcl script
		]a
		", it would split the file on each fps change.
		$LF
	]li
]ul
[h4 id=Windows 
	" Windows
	$LF
]h4
[p 
	"The easiest way is to use this script.
	$LF
]p
[p 
	[tt 
		"@echo off
	]tt
	[br 
	]br
	$LF
	[tt 
		"cd /d "%~dp0"
	]tt
	[br 
	]br
	$LF
	[tt 
		"echo record start -doublesize ./movie.avi > dump.tcl
	]tt
	[br 
	]br
	$LF
	[tt 
		"openmsx %1 -script dump.tcl
	]tt
	$LF
]p
[p 
	"Save this as a batch file (
	[tt 
		"something.bat
	]tt
	") near your 
	[tt 
		"openmsx.exe
	]tt
	", put the movie there too, and drag'n'drop the movie onto the script. 
	[tt 
		"movie.avi
	]tt
	" dump will appear in the same directory. When you're done, just close the emulator, it will properly stop the video recording.
	$LF
]p
[p 
	"The following is the old, manual way.
	$LF
]p
[ol 
	[li 
		"Method 1: load manually from the console
		$LF
		[ol 
			[li 
				"Open Catapult (openMSX GUI) or openMSX (non-GUI).
				$LF
			]li
			[li 
				"In case you started Catapult, start openMSX with the 'Start' button.
				$LF
			]li
			[li 
				"In the openMSX window where the emulation is running, hit Pause to pause emulation.
				$LF
			]li
			[li 
				"Hit F10 to bring up the openMSX console.
				$LF
			]li
			[li 
				"Type 
				[em 
					"reverse loadreplay -viewonly <replay>
				]em
				" (where <replay> is the replay file you want to dump as AVI), then hit Enter. You can use TAB-completion to find the replay file easier.
				$LF
			]li
		]ol
		" Method 2: auto load
		$LF
		[ol 
			[li 
				"Drop the replay on openMSX.exe (or start openMSX from the command line with the replay file as only argument)
				$LF
			]li
			[li 
				"In the openMSX window where the emulation is running, hit Pause to pause emulation.
				$LF
			]li
			[li 
				"Hit F10 to bring up the openMSX console.
				$LF
			]li
			[li 
				"Type 
				[em 
					"reverse goto 0
				]em
				" to jump back to the beginning of the replay
				$LF
			]li
		]ol
		"Type 
		[em 
			"record start -doublesize raw
		]em
		" (where 
		[em 
			"raw
		]em
		" is the file name of the AVI, then hit Enter. You are now capturing audio/video. 
		[br 
		]br
		" 
		[b 
			"Note
		]b
		": the reason why -doublesize is needed is because some MSX2 modes are 512x212 
		[br 
		]br
		" 
		[b 
			"Note
		]b
		": it will automatically detect if the currently emulated MSX can output stereo sound or mono sound and use that in the resulting AVI
		$LF
	]li
	[li 
		"Unpause emulation. (Pause key)
		$LF
	]li
	[li 
		"Hit F9 to speed up emulation (if you don't want to wait for the whole movie to play at normal time).
		$LF
	]li
	[li 
		"When you reach the desired end point, pause emulation, type 
		[em 
			"record stop
		]em
		", then hit Enter.
		$LF
	]li
]ol
[p 
	"The AVI dump is to be found on 
	[em 
		"C:\Documents and Settings\<user>\My Documents\openMSX\videos
	]em
	" (for Windows XP) or on 
	[em 
		"C:\Users\<user>\Documents\openMSX\videos
	]em
	" (for Vista/Windows 7) (where <user> is your user folder)
	$LF
]p
[h4 id=Linux/Mac 
	" Linux / Mac
	$LF
]h4
[ol 
	[li 
		"Basically the same as for Windows, except that the AVI file is to be found on 
		[em 
			"/home
		]em
		" (
		[em 
			"Users
		]em
		" if you're using a Mac)
		[em 
			"/<user>/.openMSX/videos
		]em
		" (where <user> is your user folder).
		$LF
	]li
	[li 
		"The hot keys to open the console, pause and speed up emulation are different on Mac, though, 
		[a class=extlink href=http://openmsx.org/manual/user.html#keymapping rel=nofollow 
			"see the openMSX User's manual
		]a
		".
		$LF
	]li
]ol
[p 
	"If you don't know if the emulated MSX can output mono or stereo sound, open the AVI dump in any media player, e.g. VLC or MPlayer.
	$LF
]p
[p 
	"This whole guide can also be found (in other words) 
	[a class=extlink href=http://openmsx.org/manual/faq.html#perfect_videos rel=nofollow 
		"in the openMSX FAQ part of the manual
	]a
	".
	$LF
]p
[p 
	"For more information about openMSX, please check 
	[a class=extlink href=http://openmsx.org/manual/ rel=nofollow 
		"the complete openMSX manual
	]a
	".
	$LF
]p
[h2 id=PCEjin 
	" PCEjin
	$LF
]h2
[h4 id=Targetsettings 
	" Target settings
	$LF
]h4
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"(variable)
				[a id=r5 
				]a
				[sup 
					"[
					[a href=#5 
						"5
					]a
					"]
				]sup
			]td
			[td 
				"44.1KHz stereo
			]td
		]tr
	]tbody
]table
[h3 id=Guide 
	" Guide
	$LF
]h3
[h4 id=Windows 
	" Windows
	$LF
]h4
[ol 
	[li 
		"Load the ROM.
		$LF
	]li
	[li 
		"Pause emulation. (Pause key)
		$LF
	]li
	[li 
		"Load the movie file.
		$LF
	]li
	[li 
		"Select 
		[em 
			"File -> Record AVI
		]em
		". Choose a file name (such as 
		[em 
			"raw.avi
		]em
		"), and choose a lossless RGB codec of your choice (see 
		[em 
			"Common settings
		]em
		" for suggestions). Click OK.
		$LF
	]li
	[li 
		"Unpause emulation. At this point, audio and video are now being captured.
		$LF
	]li
	[li 
		"When you reach the desired end point, select 
		[em 
			"File -> Stop AVI
		]em
		".
		$LF
	]li
]ol
[h4 id=Linux 
	" Linux
	$LF
]h4
[p 
	"PCEjin is Windows-only, but works well with 
	[a class=extlink href=http://winehq.org rel=nofollow 
		"Wine
	]a
	".  You may also be able to play back the movie with recent builds of Mednafen (see above).
	$LF
]p
[h2 id=PCSX 
	" PCSX
	$LF
]h2
[h3 id=Targetsettings 
	" Target settings
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"(variable)
				[a id=r3 
				]a
				[sup 
					"[
					[a href=#3 
						"3
					]a
					"]
				]sup
			]td
			[td 
				"44.1KHz stereo
			]td
		]tr
	]tbody
]table
[p 
	[b 
		"NOTE
	]b
	": Don't forget to pick the bios. SCPH-1001 for NTSC-U, SCPH-1000 for NTSC-J, SCPH-1002 for PAL. If you have problems, ask the judge or the author.
	[br 
	]br
	$LF
	[b 
		"NOTE
	]b
	": If it's a multi-disc movie, leave the ISO path field in the CD-ROM config blank. That will let you select both discs at proper time.
	$LF
	[b 
		"WARNING
	]b
	": PCSX is not particularly stable and requires an unusual video dumping setup.  It is not a good first choice of emulator for new encoders.
	[br 
	]br
	$LF
	[b 
		"WARNING
	]b
	": This guide will not produce publication quality captures. Use of 
	[a class=intlink href=/Users/Profile/Aktan 
		"Aktan
	]a
	"'s 
	[a class=extlink href=http://pastebin.com/g26ksKNa rel=nofollow 
		"special methods
	]a
	" is required. The automated version of the resync setup 
	[a class=intlink href=/EmulatorResources/PCSX/Resync 
		"can be found here
	]a
	".
	$LF
]p
[h3 id=Guide 
	" Guide
	$LF
]h3
[h4 id=Windows 
	" Windows
	$LF
]h4
[p 
	"PCSX's native AVI dumping is broken - it does not result in synchronised sound - so external capture software is required; for this purpose, 
	[a class=extlink href=http://www.mediafire.com/?oq4491c34o373nh rel=nofollow 
		"custom PCSX .kkapture
	]a
	" is used for its ability to preserve all of the frames in the input at the expected frame rate.
	$LF
]p
[p 
	"You may wish to use an alternate sound plugin for improved sound compatibility.  The 
	[a class=extlink href=http://www.pbernert.com/html/old_spu.htm rel=nofollow 
		"MIDAS plugin
	]a
	" has been reported to be sync-compatible with the TAS Sound plugin while offering slightly better sound emulation; alternatively, you can attempt to use the 
	[a class=extlink href=http://www.zophar.net/utilities/psspuplugins/eternal-spu.html rel=nofollow 
		"Eternal SPU
	]a
	" plugin which offers the best known sound emulation but which does not sync reliably (success has been reported in using it by stitching together video dumps of shorter segments).
	$LF
]p
[p 
	"You can use the TAS Graphics Plugin's 1:1 mode to determine the normal resolution of the game and force it; once this resolution is set, restore it to scaled mode prior to starting this process. But for 3D games, it's recommended to use an 
	[a class=intlink href=/EncoderGuidelines#Antialiasing 
		"antialiasing
	]a
	" GPU 
	[a class=extlink href=http://www.pbernert.com/html/gpu.htm#OGL2 rel=nofollow 
		"plugin by Pete
	]a
	", dump at high resolution and then downscale during encoding (unless you're doing an HD stream).
	$LF
]p
[ol 
	[li 
		" Configure PCSX's plugins for playback and close PCSX.
		$LF
	]li
	[li 
		" Open .kkapture.
		$LF
	]li
	[li 
		" Under 
		[em 
			"Demo
		]em
		", select the 
		[tt 
			"pcsx
		]tt
		" executable.
		$LF
	]li
	[li 
		" Under 
		[em 
			"Arguments
		]em
		", enter 
		[tt 
			"-play movie.pxm
		]tt
		" (where 
		[tt 
			"movie.pxm
		]tt
		" is the name of the movie file).
		$LF
	]li
	[li 
		" Under 
		[em 
			"Target
		]em
		", select the desired target AVI file (such as 
		[tt 
			"raw.avi
		]tt
		").
		$LF
	]li
	[li 
		" Set the FPS to 60 for NTSC games or 50 for PAL games.
		$LF
	]li
	[li 
		" Select 
		[em 
			"kkapture!
		]em
		".  This will start PCSX and start the dumping process.
		$LF
	]li
	[li 
		" Once the desired endpoint is reached, close PCSX.
		$LF
	]li
]ol
[h4 id=Linux 
	" Linux
	$LF
]h4
[p 
	"PCSX is Windows-only.  Further, .kkapture does not work with Wine.  There has been at least one report of using a version of 
	[a class=extlink href=http://nullkey.ath.cx/projects/glc/ rel=nofollow 
		"glc
	]a
	" modified to sync video and capture all frames for a successful PCSX encode in a Linux environment.
	$LF
]p
[h2 id=PSXjin 
	" PSXjin
	$LF
]h2
[h3 id=Targetsettings 
	" Target settings
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"(variable)
				[a id=r3 
				]a
				[sup 
					"[
					[a href=#3 
						"3
					]a
					"]
				]sup
			]td
			[td 
				"44.1KHz stereo
			]td
		]tr
	]tbody
]table
[h3 id=Guide 
	" Guide
	$LF
]h3
[p 
	[b 
		"NOTE
	]b
	": Dumps from PSXjin are slightly wrong. Use this 
	[a class=intlink href=/Forum/Viewtopic.php?t=12608 
		"(unofficial) version
	]a
	" instead.
	[br 
	]br
	$LF
	[b 
		"NOTE
	]b
	": Don't forget to pick the bios. SCPH-1001 for NTSC-U, SCPH-1000 for NTSC-J, SCPH-1002 for PAL. If you have problems, ask the judge or the author.
	$LF
	[b 
		"NOTE
	]b
	": PSXjin doesn't support 
	[a class=intlink href=/EncoderGuidelines#Antialiasing 
		"antialiasing
	]a
	" internally, but you can use 
	[a class=extlink href=http://feos-tas.googlecode.com/svn/trunk/Misc/psxjin-opengl.7z rel=nofollow 
		"this build
	]a
	", where it was added.
	$LF
]p
[h4 id=Windows 
	" Windows
	$LF
]h4
[ol 
	[li 
		" Go to 
		[em 
			"Configuration
		]em
		" -> 
		[em 
			"Graphics
		]em
		$LF
	]li
	[li 
		" In 
		[em 
			"Stretching
		]em
		", select 
		[em 
			"1:1 (faster with some cards)
		]em
		$LF
	]li
	[li 
		" Uncheck 
		[em 
			"FPS limit
		]em
		$LF
	]li
	[li 
		" Make sure 
		[em 
			"Use Frame skipping
		]em
		" is unchecked.
		$LF
	]li
	[li 
		" Click OK.
		$LF
	]li
	[li 
		" Go to 
		[em 
			"Configuration
		]em
		" -> 
		[em 
			"Sound
		]em
		$LF
	]li
	[li 
		" In 
		[em 
			"Mode
		]em
		", select 
		[em 
			"2: Synchronous (tas safe, buffering glitches)
		]em
		".
		$LF
	]li
	[li 
		" Click OK.
		$LF
	]li
	[li 
		" Load the ISO by going to 
		[em 
			"File
		]em
		" -> 
		[em 
			"Open CD
		]em
		".
		$LF
	]li
	[li 
		" Pause emulation. (Pause key)
		$LF
	]li
	[li 
		" Select 
		[em 
			"File
		]em
		" -> 
		[em 
			"Movie
		]em
		" -> 
		[em 
			"Start playback
		]em
		", or press 
		[em 
			"CTRL + R
		]em
		" to load a movie file.
		$LF
	]li
	[li 
		" Select 
		[em 
			"File
		]em
		" -> 
		[em 
			"Record AVI
		]em
		". Choose a file name (such as 
		[em 
			"raw.avi
		]em
		"), and a lossless RGB codec of your choice (see 
		[em 
			"Common settings
		]em
		" for suggestions). Click OK.
		$LF
	]li
	[li 
		" Unpause emulation. At this point, an audio file and multiple video files (one per resolution change) are now being captured
		$LF
	]li
	[li 
		" When you reach the desired end point, select 
		[em 
			"File
		]em
		" -> 
		[em 
			"Stop AVI
		]em
		$LF
	]li
	[li 
		" You'll need to resize each video part into the largest width and largest height captured.
		$LF
	]li
]ol
[h4 id=Linux 
	" Linux
	$LF
]h4
[p 
	"TODO
	$LF
]p
[h2 id=Snes9x 
	" Snes9x
	$LF
]h2
[h3 id=Targetsettings 
	" Target settings
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"256x224 (NTSC), 256x240 (PAL)
			]td
			[td 
				"48KHz stereo
				[a id=r1 
				]a
				[sup 
					"[
					[a href=#1 
						"1
					]a
					"]
				]sup
			]td
		]tr
	]tbody
]table
[h3 id=Guide 
	" Guide
	$LF
]h3
[h4 id=Windows 
	" Windows
	$LF
]h4
[p 
	[em 
		"Note
	]em
	": This applies to v1.43 v17 and most revisions of v1.51.  Earlier versions of v1.43 have a different menu layout.
	$LF
]p
[ol 
	[li 
		"Select 
		[em 
			"Config -> Speed -> Frame skip -> skip 0
		]em
		".
		$LF
	]li
	[li 
		"Select 
		[em 
			"Config -> Sound -> Playback rate -> 48KHz
		]em
		".
		[a id=r1 
		]a
		[sup 
			"[
			[a href=#1 
				"1
			]a
			"]
		]sup
		$LF
	]li
	[li 
		"Select 
		[em 
			"Config -> Video -> Display Configuration...
		]em
		" and make sure that "Bi-Linear Mode 7" is checked.
		$LF
	]li
	[li 
		"Load the ROM.
		$LF
	]li
	[li 
		"Set speed to about 400% (= key or 
		[em 
			"Config -> Speed -> Set Speed
		]em
		").
		$LF
	]li
	[li 
		"Pause emulation (Pause key).
		$LF
	]li
	[li 
		"Load the movie file, with Sync Sound checked (it increases sound resolution).
		$LF
	]li
	[li 
		"Select 
		[em 
			"File -> Audio/Video Recording -> Start AVI Recording
		]em
		".  Choose a file name (such as 
		[em 
			"raw.avi
		]em
		"), and choose a lossless RGB codec of your choice (see 
		[em 
			"Common settings
		]em
		" for suggestions).  Click OK.
		$LF
	]li
	[li 
		"Unpause emulation.  You are now capturing audio/video.
		$LF
	]li
	[li 
		"When you reach the desired end point, select 
		[em 
			"File -> Audio/Video Recording -> Stop AVI Recording
		]em
		".
		$LF
	]li
]ol
[h4 id=Linux 
	" Linux
	$LF
]h4
[p 
	"At present, there's no known method other than 
	[a class=extlink href=http://winehq.org rel=nofollow 
		"Wine
	]a
	" to get video output from v1.51 movies.  A 
	[a class=extlink href=http://bisqwit.iki.fi/src/snes9x-bisqwit-makingavi-patch.txt rel=nofollow 
		"patch
	]a
	" has been written for the v1.43 source code in order to get video output, but this may not be compatible with newer movies.
	$LF
]p
[h2 id=VBjin 
	" VBjin
	$LF
]h2
[h4 id=Targetsettings 
	" Target settings
	$LF
]h4
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"384x224
			]td
			[td 
				"44.1KHz stereo
			]td
		]tr
	]tbody
]table
[h3 id=Guide 
	" Guide
	$LF
]h3
[p 
	[b 
		"NOTE:
	]b
	" 
	[a class=intlink href=/Forum/P/435440#435440 
		"Special encoding steps
	]a
	" are required.
	$LF
]p
[h4 id=Windows 
	" Windows
	$LF
]h4
[ol 
	[li 
		"Load the ROM.
		$LF
	]li
	[li 
		"Pause emulation. (Pause key)
		$LF
	]li
	[li 
		"Load the movie file.
		$LF
	]li
	[li 
		"Select 
		[em 
			"File -> Record AVI
		]em
		". Choose a file name (such as 
		[em 
			"raw.avi
		]em
		"), and choose a lossless RGB codec of your choice (see 
		[em 
			"Common settings
		]em
		" for suggestions). Click OK.
		$LF
	]li
	[li 
		"Unpause emulation. At this point, audio and video are now being captured.
		$LF
	]li
	[li 
		"When you reach the desired end point, select 
		[em 
			"File -> Stop AVI
		]em
		".
		$LF
	]li
]ol
[h4 id=Linux 
	" Linux
	$LF
]h4
[p 
	"VBjin is Windows-only, but works well with 
	[a class=extlink href=http://winehq.org rel=nofollow 
		"Wine
	]a
	".
	$LF
]p
[h2 id=VisualBoyAdvance 
	" VisualBoyAdvance
	$LF
]h2
[h3 id=Targetsettings 
	" Target settings
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"160x144 (GB), 240x160 (GBA)
			]td
			[td 
				"44.1KHz stereo
			]td
		]tr
	]tbody
]table
[h3 id=Guide 
	" Guide
	$LF
]h3
[h4 id=Windows 
	" Windows
	$LF
]h4
[ol 
	[li 
		"Go to 
		[em 
			"Options -> Sound -> 44 KHz
		]em
		".
		$LF
	]li
	[li 
		"Open the ROM.
		$LF
	]li
	[li 
		"Speed up to 300% (= key)
		$LF
	]li
	[li 
		"Pause emulation. (Pause key)
		$LF
	]li
	[li 
		"Select 
		[em 
			"Tools -> Movie -> Play Movie
		]em
		" and select the movie file you want to dump to AVI.
		$LF
	]li
	[li 
		"Select 
		[em 
			"Tools -> Start AVI Recording
		]em
		".  Choose a file name (such as 
		[em 
			"raw.avi
		]em
		"), and choose a lossless RGB codec of your choice (see 
		[em 
			"Common settings
		]em
		" for suggestions).  Click OK.
		$LF
	]li
	[li 
		"Unpause emulation. At this point, audio and video are now being captured.
		$LF
	]li
	[li 
		"When you reach the desired end point, select 
		[em 
			"Tools -> Stop AVI Recording
		]em
		".
		$LF
	]li
]ol
[h4 id=Linux 
	" Linux
	$LF
]h4
[p 
	"TODO
	$LF
]p
[h2 id=Yabause 
	" Yabause
	$LF
]h2
[h3 id=Targetsettings 
	" Target settings
	$LF
]h3
[table 
	[tbody 
		[tr 
			[th 
				"Resolution
			]th
			[th 
				"Sound
			]th
		]tr
		[tr 
			[td 
				"320x240
			]td
			[td 
				"44.1KHz stereo
			]td
		]tr
	]tbody
]table
[h3 id=Guide 
	" Guide
	$LF
]h3
[h4 id=Windows 
	" Windows
	$LF
]h4
[p 
	"TODO
	$LF
]p
[h4 id=Linux 
	" Linux
	$LF
]h4
[p 
	"TODO
	$LF
]p
[hr 
]hr
[p 
	"Next page: 
	[a class=intlink href=/EncodingGuide/PreEncoding 
		"Pre-encoding
	]a
	[br 
	]br
	$LF
	"Previous page: 
	[a class=intlink href=/EncodingGuide/Logo 
		"Logo
	]a
	$LF
]p
[p 
	"[
	[a id=1 
	]a
	[a href=#r1 
		"1
	]a
	"]
	": The SNES has a 32KHz native sampling rate, but using this option in Snes9x tends to result in sound desynchronisation.
	[br 
	]br
	$LF
	"[
	[a id=2 
	]a
	[a href=#r2 
		"2
	]a
	"]
	": For the N64, you can rip at an integer multiple of this resolution and scale it down to the appropriate size during the 
	[a class=intlink href=/EncodingGuide/PreEncoding 
		"Pre-encoding
	]a
	" stage.
	[br 
	]br
	$LF
	"[
	[a id=3 
	]a
	[a href=#r3 
		"3
	]a
	"]
	": Games for the PSX use many resolutions; 320x240 is the most common.
	[br 
	]br
	$LF
	"[
	[a id=4 
	]a
	[a href=#r4 
		"4
	]a
	"]
	": Mednafen, being cross-platform, uses the resolution of whatever platform it is currently emulating.
	[br 
	]br
	$LF
	"[
	[a id=5 
	]a
	[a href=#r5 
		"5
	]a
	"]
	": Most games for the PCE that have been run are one of 256x224, 256x232, 320x232, or 320x240.
	[br 
	]br
	$LF
	"[
	[a id=6 
	]a
	[a href=#r6 
		"6
	]a
	"]
	": There is no standard resolution for this platform.
	[br 
	]br
	$LF
	"[
	[a id=7 
	]a
	[a href=#r7 
		"7
	]a
	"]
	": Depends on game. Usually 640x400, sometimes 640x480, rarely something else (measure size of frames shown during in-game sequences. Some games have different resolution in menu and in actual game).
	[br 
	]br
	$LF
	"[
	[a id=8 
	]a
	[a href=#r8 
		"8
	]a
	"]
	": Depends on game. If game only uses PCM output with constant sampling rate, that sampling rate should be used. Otherwise sampling rate should be set to  44.1kHz or 48kHz. 
	[br 
	]br
	$LF
	"[
	[a id=9 
	]a
	[a href=#r9 
		"9
	]a
	"]
	": PSG High Quality actually distorts PSG noises by performing filtering on the sound. As a result, sharp noises become very washed out and soft. For example, Sonic's jumping noise.
	[br 
	]br
	$LF
	"[
	[a id=10 
	]a
	[a href=#r10 
		"10
	]a
	"]
	": Famtasia incorrectly renders the NES's 240 scanlines. It shifts the topmost one to the bottom of the display. Furthermore, the 224 scanlines version (without the 240 scanlines patch) cuts off the bottom 16 scanlines instead of 8 from the top and 8 from the bottom. This results in 8 extra scanlines being displayed at the top and 8 fewer at the bottom. The best practice is to apply the 240 scanlines patch and remove the extra scanlines (NTSC) or move the bottom one to the proper location (PAL) after dumping.
]p
