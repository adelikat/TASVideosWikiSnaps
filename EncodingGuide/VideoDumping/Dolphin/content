20
[div class=card mb-2 
	[div class=card-header 
		[strong 
			"Table of contents
		]strong
	]div
	[div class=card-body 
		[ul 
			[li 
				[a href=#Dolphin50 
					" Dolphin 5.0
					$LF
				]a
				[ul 
					[li 
						[a href=#Prerequisites 
							" Prerequisites
							$LF
						]a
					]li
					[li 
						[a href=#Guide 
							" Guide
							$LF
						]a
					]li
					[li 
						[a href=#SpecificsForLaterDolphin50Versions 
							" Specifics for later Dolphin 5.0 versions
							$LF
						]a
					]li
					[li 
						[a href=#Antialiasing 
							" Antialiasing
							$LF
						]a
					]li
					[li 
						[a href=#AspectRatio 
							" Aspect ratio
							$LF
						]a
					]li
					[li 
						[a href=#Resolution 
							" Resolution
							$LF
						]a
					]li
					[li 
						[a href=#ResolutionChangingOnTheFly 
							" Resolution changing on the fly
							$LF
						]a
					]li
					[li 
						[a href=#AudioSync 
							" Audio sync
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#DolphinPre50 
					" Dolphin pre-5.0
					$LF
				]a
				[ul 
					[li 
						[a href=#Prerequisites_2 
							" Prerequisites
							$LF
						]a
					]li
					[li 
						[a href=#Guide_2 
							" Guide
							$LF
						]a
					]li
				]ul
			]li
		]ul
	]div
]div
[h2 id=Dolphin50 
	" Dolphin 5.0
	$LF
]h2
[div class=p 
	[b 
		"TODO
	]b
	": Cover 
	(__wikiLink|displaytext=interlaced video output|href=/Forum/Posts/531071)
	".
	$LF
]div
[h3 id=Prerequisites 
	" Prerequisites
	$LF
]h3
[ul 
	[li 
		" This guide assumes you have 
		[em 
			"English
		]em
		" as your 
		[em 
			"Language
		]em
		" in 
		[em 
			"Config -> Interface
		]em
		".
		$LF
	]li
	[li 
		" If you create an empty file called 
		[code 
			"portable.txt
		]code
		" in your Dolphin folder, different versions of Dolphin won't try to override and corrupt global settings, and each one of them will keep its settings in its own folder.
		$LF
	]li
	[li 
		" Download this build of Dolphin that fixes video dumping to work well with AVISynth and VirtualDub:
		$LF
		[ul 
			[li 
				" 
				[a href=https://github.com/vadosnaprimer/dolphin/releases/tag/5.0-ut rel=noopener external nofollow 
					"Build with UtVideo lossless codec
				]a
				" - more compatible and fast, but bigger files
				$LF
			]li
			[li 
				" 
				[a href=https://github.com/vadosnaprimer/dolphin/releases/tag/5.0-ffv1 rel=noopener external nofollow 
					"Build with FFV1 lossless codec
				]a
				" - smaller files, but slow and decoder breaks other codecs
				$LF
			]li
		]ul
	]li
	[li 
		" To decode Dolphin video dumps, you will need
		$LF
		[ul 
			[li 
				" If you used the UtVideo build: 
				[a href=https://github.com/umezawatakeshi/utvideo/releases rel=noopener external nofollow 
					"https://github.com/umezawatakeshi/utvideo/releases
				]a
				$LF
			]li
			[li 
				"If you used FFV1: 
				[a href=http://ffdshow-tryout.sourceforge.net/download.php rel=noopener external nofollow 
					"http://ffdshow-tryout.sourceforge.net/download.php
				]a
				" (make sure to enable the VfW interface in the installer) or 
				[a href=https://codecguide.com/download_k-lite_codec_pack_mega.htm rel=noopener external nofollow 
					"https://codecguide.com/download_k-lite_codec_pack_mega.htm
				]a
				" (make sure to enable 
				[em 
					"ffdshow
				]em
				" in 
				[em 
					"VFW video codecs
				]em
				" when selecting components to install).
				$LF
			]li
		]ul
	]li
	[li 
		" Familiarize yourself with this post about potential issues with Dolphin:
		$LF
		[ul 
			[li 
				" 
				(__wikiLink|href=/Forum/Posts/439486|implicitdisplaytext=Forum/Posts/439486)
				$LF
			]li
		]ul
	]li
	[li 
		" Some games may require different settings in order to run properly, or to avoid any visual bugs.  To check if your game needs special settings, you can go to the Dolphin Wiki, and find the page for your game to see what settings work best: 
		[a href=https://wiki.dolphin-emu.org/index.php?title=Main_Page rel=noopener external nofollow 
			"https://wiki.dolphin-emu.org/index.php?title=Main_Page
		]a
		$LF
	]li
]ul
[h3 id=Guide 
	" Guide
	$LF
]h3
[ol 
	[li 
		" In 
		[em 
			"Graphics -> General -> Aspect Ratio
		]em
		" 
		[b 
			"make sure you use 
			[em 
				"Auto
			]em
		]b
		". That way Dolphin will render the video with correct pixel aspect ratio, and 
		[b 
			"you will not need
		]b
		" to stretch the video afterwards to 4:3 or 16:9.
		$LF
	]li
	[li 
		" in 
		[em 
			"Graphics -> Hacks
		]em
		", set 
		[em 
			"Texture Cache Accuracy
		]em
		" to Safe.
		$LF
	]li
	[li 
		" In 
		[em 
			"Graphics -> Advanced
		]em
		" check 
		[em 
			"Frame Dumps use FFV1
		]em
		" to get lossless video output.
		$LF
	]li
	[li 
		" In 
		[em 
			"Movie
		]em
		" check 
		[em 
			"Dump Frames
		]em
		" and 
		[em 
			"Dump Audio
		]em
		".
		$LF
	]li
	[li 
		" Go to 
		[em 
			"Config -> General
		]em
		" and set 
		[em 
			"Speed Limit
		]em
		" to 
		[em 
			"Unlimited
		]em
		".
		$LF
	]li
	[li 
		" Go to 
		[em 
			"Config -> Paths
		]em
		" and 
		[em 
			"Add...
		]em
		" the folder you keep GameCube and Wii images in. Hit 
		[em 
			"OK
		]em
		", wait for the game list to get populated, and then select the game you want to run by highlighting it in the list. Otherwise, load the game directly via 
		[em 
			"File -> Open
		]em
		".
		$LF
	]li
	[li 
		" Replay the movie by going to 
		[em 
			"Movie -> Play Input Recording
		]em
		" and selecting your .dtm file.
		$LF
	]li
	[li 
		" When you're done dumping, hit the 
		[em 
			"Stop
		]em
		" button in the GUI. The resulting files will be in 
		[code 
			"Dolphin-x64-5.0-ffv1\User\Dump\Frames
		]code
		" and 
		[code 
			"Dolphin-x64-5.0-ffv1\User\Dump\Audio
		]code
		".
		$LF
	]li
]ol
[div class=p 
	"Audio dump usually consists of 2 files: 
	[code 
		"dspdump.wav
	]code
	" and 
	[code 
		"dtkdump.wav
	]code
	". In most games, 
	[code 
		"dtkdump.wav
	]code
	" is empty, but 
	[a href=https://www.gc-forever.com/wiki/index.php?title=Audio_Streaming#List_of_Audio_Streaming_Titles rel=noopener external nofollow 
		"there are games that use it
	]a
	", so you'll have to mix them together for those. This can be done in AviSynth with MixAudio: 
	[br 
	]br
	" 
	[code 
		"MixAudio(dspdump, dtkdump, 1.0, 1.0)
	]code
	$LF
]div
[div class=p 
	"Sometimes those audio dumps are also split into 2 more files. It's because Dolphin changes sameplarate on the fly. You'll need to set them to the same samplerate in order to splice them.
	$LF
]div
[div class=p 
	"If for some reason, you can't preview the AVI in VirtualDub, you can convert the resulting AVI with ffmpeg:
	$LF
]div
[ul 
	[li 
		" For UT Video: 
		[br 
		]br
		" 
		[code 
			"ffmpeg -i framedump.avi -c:v utvideo -pix_fmt gbrp -pred median framedumpconv.avi
		]code
		$LF
	]li
	[li 
		" For libx264rgb: 
		[br 
		]br
		" 
		[code 
			"ffmpeg -i framedump.avi -c:v libx264rgb -qp 0 -preset veryfast -pix_fmt rgb24 framedumpconv.avi
		]code
		$LF
	]li
]ul
[h3 id=SpecificsForLaterDolphin50Versions 
	" Specifics for later Dolphin 5.0 versions
	$LF
]h3
[pre 
	"(
	(__wikiLink|href=/TODO|implicitdisplaytext=TODO)
	": Figure out which versions exactly, but should be around 5.0-10000)
	$LF
]pre
[div class=p 
	"You can set the dumping codec to Ut Video by editing 
	[code 
		"User\Config\GFX.ini
	]code
	" with the following in the Settings section:
	[br 
	]br
	$LF
]div
[pre 
	"UseFFV1 = False
	$LF
	"DumpCodec = utvideo
	$LF
]pre
[div class=p 
	"Vertex Rounding should be enabled to prevent graphical issues when upscaling. This setting does not affect 1x dumps.
	$LF
]div
[div class=p 
	"For most Wii games and some GC games, a few blank frames need to be appended at the beginning to properly ensure audio/video sync, which can be done with the following:
	$LF
]div
[pre 
	[code class=language-AviSynth 
		$UNPRINTABLE TEXT!!!
	]code
]pre
[div class=p 
	"Double-check with a dump that was started mid-gameplay or during the intro cutscenes to ensure the audio and video are synced properly.
	$LF
]div
[div class=p 
	"The above is of course not needed for Dolphin 5.0 (pre-5.0-5700, at least).
	$LF
]div
[h3 id=Antialiasing 
	" Antialiasing
	$LF
]h3
[div class=p 
	"There a lot of ways to apply antialiasing, and options will differ in different Dolphin versions and revisions. Here's some basic principles.
	$LF
]div
[ol 
	[li 
		" In 
		[em 
			"Graphics -> Enhancements
		]em
		" select the highest 
		[em 
			"Anisotropic Filtering
		]em
		" option.
		$LF
	]li
	[li 
		" In 
		[em 
			"Graphics -> Enhancements
		]em
		" select the highest 
		[em 
			"Anti-Aliasing
		]em
		" option your GPU supports.
		$LF
		[ul 
			[li 
				" If supported and works well, this option may be replaced with 
				[em 
					"Post-Processing Effect -> FXAA
				]em
				", which works much faster and gives comparably good results at high resolutions.
				$LF
			]li
		]ul
	]li
	[li 
		" Make sure 
		[em 
			"Scaled EFB Copy
		]em
		" is enabled.
		$LF
	]li
	[li 
		" If you're doing a high definition encode for youtube, increase 
		[em 
			"Internal Resolution
		]em
		" to something close to 2160p.
		$LF
	]li
]ol
[div class=p 
	"Note that option names for 
	[em 
		"Internal Resolution
	]em
	" may not match the exact resolution your video will be in, so to check what internal resolution it actually is in, hit the 
	[em 
		"ScrShot
	]em
	" button in Dolphin GUI and see what resolution the image in 
	[code 
		"Dolphin-x64-5.0-ffv1\User\ScreenShots
	]code
	" will have. Note that you don't have to match 2160p exactly, because rendering at non-integer scale factors may cause bugs in how the games render video. You'll resize it to your target resolution during encoding in the AVISynth script.
	$LF
]div
[div class=p 
	"Another issue to be aware of is that Dolphin doesn't allow its window to go beyond your screen resolition.
	$LF
]div
[ul 
	[li 
		" Depending on your Operating System, patches applied to Dolphin to overcome this limitation may or may not work for you. Talk to the community to figure this out. This may still not work in revisions of Dolphin that use Qt.
		$LF
	]li
	[li 
		" If your monitor doesn't support 2160p or higher resolutions out of the box, you may try to create such a resolution manually and then set your monitor to it. Everything will look very blurry, but the video dump will be fine. On laptops, you will need to enable 
		[em 
			"Virtual Super Resolution
		]em
		" in AMD Radeon Software settings, or enable all 
		[em 
			"DSR factors
		]em
		" in nVidia 3D settings (Optimus needs to be disabled in BIOS).
		$LF
		[ul 
			[li 
				" If you can't create such a resolution, try something smaller and use that instead.
				$LF
			]li
			[li 
				" Sometimes 2160p is available but anything higher isn't. Configure Dolphin to use 2160p as a fullscreen resolution and switch to it for dumping, because the GUI window will still not fit, resulting in smaller resolution.
				$LF
			]li
		]ul
	]li
]ul
[div class=p 
	"Some games outright refuse to apply anti-aliasing, because it's how they are configured in Dolphin's game database to prevent desyncs and emulation problems. Dump such games at native resolution and upscale via point-resize or lanczos-resize.
	$LF
]div
[h3 id=AspectRatio 
	" Aspect ratio
	$LF
]h3
[div class=p 
	"Dolphin tries not to render black bars that are present in some games, because that allowes to fill more of the screen with actual data in fullscreen mode. So aspect ratio of the video (ratio between width and height of the frame) may not always match that of the emulated console (namely, 4:3 for GameCube and 16:9 for Wii). Dolphin uses heuristics to determine proper 
	[a href=https://en.wikipedia.org/wiki/Pixel_aspect_ratio rel=noopener external nofollow 
		"pixel dimensions
	]a
	" for any given video frame. So if the video is to be resized, 
	[em 
		"both width and height need to be resized by the same exact factor
	]em
	".
	$LF
]div
[div class=p 
	"Setting 
	[em 
		"Graphics -> General -> Aspect Ratio
	]em
	" to 
	[em 
		"Auto
	]em
	" forces correct aspect ratio most of the time, and you don't have to stretch the footage in either dimension to "fix" aspect ratio. However, with some games, Dolphin doesn't properly detect if the current mode is meant to be 4:3 or 16:9, so you may need to ensure the dump doesn't look unnaturally stretched or squished.
	$LF
]div
[ul 
	[li 
		" If the movie doesn't explicitly set anammorphic widescreen for a GameCube game, then forcing 4:3 is safe.
		$LF
	]li
	[li 
		" For Wii, there's a system option to use the 4:3 mode and some games use it, also some games have an in-game option for it. But most of the time it's safe to force 16:9.
		$LF
	]li
]ul
[h3 id=Resolution 
	" Resolution
	$LF
]h3
[div class=p 
	"Dolphin is capable of allowing users to dump at different resolutions, ranging from native resolution to high resolutions.  However, it's not a strict requirement to do dumps at these high resolutions for publications, due to how long it takes to dump as well as taking up a large amount of file storage (or even sometimes causing graphical glitches in some games).  At minimum, publishers should have a native resolution dump for a given game, with a high resolution dump being an optional 2nd dump.  Here is a general guide for what to do with each:
	$LF
]div
[div class=p 
	"Native Res:
	$LF
]div
[div class=p 
	"Internal Res should be set to Native, which is the lowest you can go for a game.  All enhancements should also be disabled such as Anti-Aliasing, Anisotropic Filtering, Per-Pixel Lighting, and Force Texture Filtering.  These enhancements are mostly relevant for upscaled dumping, but are not needed for a basic Native res dump.
	$LF
]div
[div class=p 
	"Upscaled Res:
	$LF
]div
[div class=p 
	"There is no required resolution for doing upscaled dumps.  You can choose to do up to 8K if you want, but doing 1080p or 4K is also acceptable.  For the smallest file size and fastest dumping speed, 1080p is a good option to use, although keep in mind you may still need a decently sized driver in order to store them.  As far as other settings go, you may turn on settings such as Anti-Aliasing, Anisotropic Filtering, Per-Pixel Lighting, and Force Texture Filtering.  However be sure to check on the Dolphin game wiki to make sure none of these settings cause problems for the title in question: 
	[a href=https://wiki.dolphin-emu.org/index.php?title=Main_Page rel=noopener external nofollow 
		"https://wiki.dolphin-emu.org/index.php?title=Main_Page
	]a
	$LF
]div
[h3 id=ResolutionChangingOnTheFly 
	" Resolution changing on the fly
	$LF
]h3
[div class=p 
	"Some games change resolution on the fly. Usually they have one resolution in gameplay segments and another in the rest of the footage. Aspect ratio (between width and height) may also be different in those segments.
	$LF
]div
[div class=p 
	"After the game has changed resolution, Dolphin 5.0 stretches the video to whatever the initial resolution was. That means that if aspect ratio of the raw video frame also changes, 
	[a href=https://en.wikipedia.org/wiki/Pixel_aspect_ratio rel=noopener external nofollow 
		"pixel dimensions
	]a
	" will be incorrect across segments.
	$LF
]div
[ul 
	[li 
		" One workaround is dumping in segments, but you'll need to manually start and stop dumping when resolution changes. 
		$LF
		[ul 
			[li 
				" Use Dolphin's screenshot freature to determine internal resolution of any given frame.
				$LF
			]li
			[li 
				" When splicing segments, keep resolution of gameplay segments and only resize the rest of the footage if needed.
				$LF
			]li
			[li 
				" Do not stretch width and height by different factors, 
				[em 
					"resize them equally
				]em
				" and add black borders on the side that's too small.
				$LF
			]li
		]ul
	]li
	[li 
		" Another workaround is forcing gameplay resolution on the Dolphin window and letting it handle the rest.
		$LF
		[ul 
			[li 
				" Enable 
				[em 
					"Graphics -> General -> Auto-Adjust Window Size
				]em
				".
				$LF
			]li
			[li 
				" Start the game and let it reach gameplay.
				$LF
			]li
			[li 
				" Stop emulation.
				$LF
			]li
			[li 
				" Disable 
				[em 
					"Graphics -> General -> Auto-Adjust Window Size
				]em
				".
				$LF
			]li
			[li 
				" Set 
				[em 
					"Graphics -> Enhancements -> Internal Resolution
				]em
				" to 
				[em 
					"Auto (Window Size)
				]em
				".
				$LF
			]li
			[li 
				" Make sure 
				[em 
					"Graphics -> General -> Aspect Ratio
				]em
				" is 
				[b 
					"not
				]b
				" 
				[em 
					"Stretch to Window
				]em
				".
				$LF
			]li
			[li 
				" Dump the video as usual.
				$LF
			]li
		]ul
	]li
	[li 
		" Third workaround is letting the entire thing run in initial resolution of frame 0 and then 
		[em 
			"stretching
		]em
		" the whole video to gameplay resolution. That way PAR in gameplay segments will be incorrect in the dump, but you will fix it while encoding.
		$LF
	]li
]ul
[div class=p 
	"Newer revisions of Dolphin allow to 
	[em 
		"Dump at Internal Resolution
	]em
	" in 
	[em 
		"Graphics -> Advanced
	]em
	", but if the game changes resolution on the fly, that will cause drifting audio-video desync when you splice them back together. 
	[em 
		"Auto-Adjust Window Size
	]em
	" in 
	[em 
		"Graphics -> General
	]em
	" causes the same problem even if 
	[em 
		"Dump at Internal Resolution
	]em
	" is disabled. So use the above workarounds to force gameplay resolution to the entire video (while dumping or in post-production).
	$LF
]div
[h3 id=AudioSync 
	" Audio sync
	$LF
]h3
[div class=p 
	"Since 5.0-5700, a hardware bug of the GameCube was emulated involving the sample rate. This resulted in the sample rate being changed to 32029/48043Hz. This however was inaccurate, as the GC actually outputs at a non-integer sample rate. Rounding to an integer backfired here, as these sample rates do not have an even CPU cycles per sample rate. So the code ends up actually outputting different sample rates, which were several hertz off (32024.2488139/48040.3301537Hz). Since 5.0-16788, this has been corrected, so the correct sample rates are output and this discrepancy no longer exists (32028.4697509/48042.7046263Hz). However, wav files can only store an integer sample rate in their header, so while the code outputs an accurate sample rate, it is rounded off in the wav header (or more so it's now less than a hertz off from reality).
	$LF
]div
[div class=p 
	"This program resolves the issue by simply taking wav files and resampling them back to 48000Hz. It will be able to correctly identify the true sample rate from any Dolphin wav file, including pre-5.0-5700 builds. Usage is simple, if you only have a single file you can just drag and drop the file in. If you have multiple files (i.e. split due to changing sample rates) you can give all of them at once, and it will concatenate them together. The order used is the order given, so you probably want to make a simple batch script to give all the files.
	$LF
]div
[div class=p 
	[code 
		"fix_gc_audio.exe "path1.wav" "path2.wav" "path3.wav"
	]code
	$LF
]div
[div class=p 
	"Of course, anything before 5.0-5700 along with Wii games on any Dolphin version do not have this issue, so this program isn't super useful. It can be used just for concatenating multiple audio files together, but that's already possible with AviSynth anyways.
	$LF
]div
[div class=p 
	[a href=https://github.com/CasualPokePlayer/fix-gc-audio/releases/tag/v1.0 rel=noopener external nofollow 
		"https://github.com/CasualPokePlayer/fix-gc-audio/releases/tag/v1.0
	]a
	$LF
]div
[h2 id=DolphinPre50 
	" Dolphin pre-5.0
	$LF
]h2
[h3 id=Prerequisites_2 
	" Prerequisites
	$LF
]h3
[div class=p 
	"Make sure you get the correct Dolphin version, which should be stated in the submission notes, as different releases are neither sync-stable nor sync-compatible with each other. In versions before 4.0-3595, it is obligatory to fix Dolphin's broken video and audio dumping feature prior to obtaining a capture. Either rely on patched binaries or, as a Windows user, try patching yourself:
	$LF
]div
[ul 
	[li 
		" 
		[a href=https://github.com/nattthebear/dolphin-avsync/branches/all rel=noopener external nofollow 
			"https://github.com/nattthebear/dolphin-avsync/branches/all
		]a
		$LF
	]li
	[li 
		" 
		[a href=https://github.com/RisingFog/dolphin-avsync/releases rel=noopener external nofollow 
			"https://github.com/RisingFog/dolphin-avsync/releases
		]a
		$LF
	]li
	[li 
		" 
		[a href=https://github.com/CasualPokePlayer/dolphin/releases rel=noopener external nofollow 
			"https://github.com/CasualPokePlayer/dolphin/releases
		]a
		$LF
	]li
]ul
[div class=p 
	"For Linux systems 
	[a class=intlink href=/Users/Profile/Ilari 
		"Ilari
	]a
	" has created a set of patches providing similar functionality; ask on IRC if you need them. In any case applying the patches will likely result in merge conflicts, that have to be resolved manually. 
	[b 
		"Ignoring this step will result in broken audio/video dumps on versions older than 4.0-3595!
	]b
	" Some movies may require functionality (like memory card or disk switching) for playback that is not part of any official release. In these cases it is advisable to check the submission notes and discussion thread for provided patches or binaries.
	$LF
]div
[div class=p 
	"Hint: Before starting the capturing process try to fully sync the run (Follow steps 1, 2 or 3, 7 (without 
	[em 
		"Dump Audio
	]em
	") and 8). This is to make sure possible frustration caused by unnoticed late desyncs is kept to a minimum. 
	[b 
		"Important
	]b
	": Sometimes a movie will desync on a second playback due to files being present that were created on first playback. Keep in mind that these have to be deleted before starting the capture! Check the submission details or discussion thread to be aware of such causes of desync. Should you get graphical glitches (missing/black or otherwise corrupted textures) try a different backend (e.g. OpenGL instead of DirectX) if possible.
	$LF
]div
[div class=p 
	"Note: Windows Dolphin avsync versions older than 4.0-1711 crash after splitting the first 2GB segment. To overcome that, use one of these:
	$LF
]div
[ul 
	[li 
		" Ask the person who made a build for you to move the piece of code that closes the timecodes file (AVIDump.cpp) from 
		[code 
			"AVIDump::CloseFile()
		]code
		" to 
		[code 
			"AVIDump::Stop()
		]code
		".
		$LF
	]li
	[li 
		" Use x264vfw codec and configure it to output a lossless single-segment file (seeking won't break):
		$LF
		[ul 
			[li 
				" 
				[em 
					"Basic
				]em
				" -> last (nameless) drop-down menu -> 
				[em 
					"Keep/Accept only RGB
				]em
				".
				$LF
			]li
			[li 
				" Check 
				[em 
					"Zero latency
				]em
				".
				$LF
			]li
			[li 
				" 
				[em 
					"Rate control
				]em
				" -> 
				[em 
					"Single pass - lossless
				]em
				".
				$LF
			]li
			[li 
				" 
				[em 
					"Output
				]em
				" -> 
				[em 
					"Output mode
				]em
				" -> 
				[em 
					"File
				]em
				".
				$LF
			]li
			[li 
				" 
				[em 
					"Output file
				]em
				" -> specify the global path. Use the AVI container.
				$LF
			]li
		]ul
	]li
	[li 
		" Use 
		[a class=intlink href=/Users/Profile/natt 
			"Pipedec
		]a
		".
		$LF
	]li
	[li 
		" Build Dolphin yourself, applying the fix from method 2. Use 
		(__wikiLink|displaytext=these steps|href=/Forum/Posts/398488)
		" then.
		$LF
	]li
]ul
[h3 id=Guide_2 
	" Guide
	$LF
]h3
[div class=p 
	"The following instructions assume you are using either 
	[a class=intlink href=/Users/Profile/natt 
		"natt
	]a
	"'s or 
	[a class=intlink href=/Users/Profile/Ilari 
		"Ilari
	]a
	"'s AVhack. Menu structure as well as names of menu items may change between releases.
	$LF
]div
[ul 
	[li 
		" Note: the settings are in the following format 
		[em 
			"Dolphin 4.0 UI / Dolphin 5.0 UI
		]em
		".
		$LF
	]li
]ul
[div class=p 
	"To avoid unnecessary hassle ensure you fulfill the assumptions made in step 9, first sentence.
	$LF
]div
[ol 
	[li 
		" Navigate to 
		[em 
			"Options->Configure
		]em
		". Uncheck 
		[em 
			"Enable Dual Core
		]em
		" and 
		[em 
			"Enable Idle Skipping
		]em
		". Set 
		[em 
			"Framelimit
		]em
		" to 
		[em 
			"off
		]em
		" / 
		[em 
			"Speed limit
		]em
		" to 
		[em 
			"Unlimited
		]em
		". Make sure the CPU emulator engine is set to 
		[em 
			"JIT Recompiler
		]em
		".
		$LF
	]li
	[li 
		" For some Gamecube games:  Navigate to 
		[em 
			"Options->Configure->Gamecube
		]em
		" and check 
		[em 
			"Skip BIOS
		]em
		". Some movies require a memory card inserted, while others expect none to be present. Set the 
		[em 
			"Slot
		]em
		" options accordingly.
		$LF
	]li
	[li 
		" For some Wii games: Navigate to 
		[em 
			"Options->Wiimote Settings
		]em
		". Click 
		[em 
			"Configure
		]em
		" for Wiimote 1 and 
		[em 
			"Clear
		]em
		". Also choose or unset the extension controller. These instructions are not required for all games.
		$LF
	]li
	[li 
		" Go to 
		[em 
			"Options->Graphics Settings -> Hacks
		]em
		", disable 
		[em 
			"External Frame Buffer
		]em
		" (related to movie sync), enable 
		[em 
			"EFB Copies
		]em
		", set it to 
		[em 
			"RAM
		]em
		" (and enable 
		[em 
			"Cache
		]em
		" if you wish) and set 
		[em 
			"Texture Cache Accuracy
		]em
		" to Safe.
		$LF
	]li
	[li 
		" Dumping is to be done on highest graphical settings. Navigate to 
		[em 
			"Options->Graphics Settings
		]em
		" and check 
		[em 
			"Auto adjust Window Size
		]em
		". From that window navigate to 
		[em 
			"Enhancements
		]em
		" and set 
		[em 
			"Internal Resolution
		]em
		" to 
		[em 
			"2x Native
		]em
		", 
		[em 
			(__wikiLink|displaytext=Anti-Aliasing|href=/EncoderGuidelines#Antialiasing)
		]em
		" to 
		[em 
			"16xQ CSAA
		]em
		" or equivalent (8x SSAA) and 
		[em 
			"Anisotropic Filtering
		]em
		" to 
		[em 
			"16x
		]em
		" (anisotropic filtering leads to graphical glitches with some games. Leave it set to 
		[em 
			"1x
		]em
		" if this is the case.)
		$LF
		[ul 
			[li 
				" Linux specifics: For games displaying their content in 16:9 it may be necessary to force widescreen mode at this point: 
				[em 
					"Options->Graphics Settings
				]em
				", set 
				[em 
					"Aspect Ratio
				]em
				" to 
				[em 
					"Force 16:9
				]em
				". This however will not suffice because Dolphin will always resize the window to a 4:3 resolution and as the window dimensions determine the video resolution, you have to resize the window to the correct resolution (2x the native 16:9 resolution, i.e. 1536x864) yourself. Ensure the window content (that is without titlebar and other decoration by your window manager) has the correct dimensions with e.g. xwininfo.
				$LF
			]li
			[li 
				" 
				[em 
					"TODO: Windows specifics: Does the same apply to Windows?
				]em
				$LF
			]li
		]ul
	]li
	[li 
		" Start the game without any dumping feature enabled. This way Dolphin will resize its window to the correct resolution. Now Dolphin has to be configured to write audio and video data to disk.
		$LF
	]li
	[li 
		" Navigate to 
		[em 
			"Options->Graphics Settings
		]em
		" and uncheck 
		[em 
			"Auto-adjust Window Size
		]em
		". From that window navigate to 
		[em 
			"Enhancements
		]em
		" and set
		[em 
			" Internal Resolution
		]em
		" to 
		[em 
			"4x Native
		]em
		". Check 
		[em 
			"Dump Frames
		]em
		" on the 
		[em 
			"Options->Graphics Settings->Advanced tab
		]em
		" / 
		[em 
			"Movie->Dump frames
		]em
		" menu.
		$LF
		[ul 
			[li 
				" Linux specifics: Check 
				[em 
					"Frame Dumps use FFV1
				]em
				" as well. The 
				[em 
					"Dump Frames
				]em
				" option will make Dolphin dump audio too.
				$LF
			]li
		]ul
	]li
	[li 
		" Navigate to 
		[em 
			"Options->DSP Settings
		]em
		" and choose 
		[em 
			"DSP LLE recompiler
		]em
		" as DSP emulator engine. This type of sound emulation requires 
		[em 
			"dsp_coef.bin
		]em
		" and 
		[em 
			"dsp_rom.bin
		]em
		" to be present in the 
		[em 
			"User\GC\
		]em
		" on Windows or 
		[em 
			"$HOME/.dolphin-emu/GC
		]em
		" on Linux directory or you will receive an error message. On Windows check 
		[em 
			"Dump Audio
		]em
		" in the 
		[em 
			"Emulation / Movie
		]em
		" menu and set 
		[em 
			"Options->DSP / Audio settings->Audio Backend
		]em
		" to 
		[em 
			""No audio output"
		]em
		" (sound will be dumped nevertheless).
		$LF
	]li
	[li 
		" Assuming the game is in your library and you have started it at least once, choose 
		[em 
			"Play Recording
		]em
		" from the 
		[em 
			"Emulation / Movie
		]em
		" menu and select the movie file to be captured. On Windows and Dolphin 4.0 select a lossless RGB video codec of your choice and click 
		[em 
			"Ok
		]em
		". Audio and video are now being captured. Should the emulator crash at this point examine the 
		[em 
			"User\Dump\
		]em
		" directory of your Dolphin installation (
		[em 
			"$HOME/.dolphin-emu/GC
		]em
		" on Linux) and create the folders 
		[em 
			"Audio
		]em
		" and 
		[em 
			"Frames
		]em
		" if either of those are missing.
		$LF
		[ul 
			[li 
				" Linux specifics: 
				[b 
					"Important
				]b
				": During the entire video capture no window must overlap with the one showing the actual gameplay, so it is wise to check 
				[em 
					"Keep window on top
				]em
				" in 
				[em 
					"Options->Graphics Settings
				]em
				".
				$LF
			]li
		]ul
	]li
	[li 
		" To stop the capturing process at the desired end point click 
		[em 
			"Emulation->Stop
		]em
		".
		$LF
	]li
]ol
[div class=p 
	"Read on if you want to find out how to deal with the files that have been created for encoding: 
	(__wikiLink|displaytext=Dolphin encoding guide|href=/Forum/Posts/349931)
]div
