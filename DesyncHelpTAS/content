24
[p 
	(listlanguages)
	$LF
]p
[hr 
]hr
[p 
	"It happens quite often, especially on newer emulators. You carefully construct your TAS and when you check your progress, the movie goes off at some point and does something wrong.
	$LF
]p
[p 
	"Most desyncs are a result of inconsistent savestates, when an emulator or savestate error causes you to start using a 
	[em 
		"wrong
	]em
	" savestate. Once that happens, your movie starts to go down the wrong track. If you notice this happening, recreate your savestates at the most recent point where the movie plays as intended.
	$LF
]p
[p 
	[b 
		"While you are making a movie, make it a habit to periodically play through your whole movie to verify that it syncs, and always make a backup of the working copy.
	]b
	$LF
]p
[p 
	[em 
		"If your run desyncs, no one can help you recover the lost work. It is up to you to be careful.
	]em
	$LF
]p
[div class=toc 
	[ul 
		[li 
			[ul 
				[li 
					[a href=#heading-4520 
						" Emulator problems
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#heading-4521 
								" PCSX, Mupen64, and FBA-rr
								$LF
							]a
						]li
						[li 
							[a href=#heading-4522 
								" Dolphin
								$LF
							]a
						]li
						[li 
							[a href=#heading-4523 
								" Snes9x
								$LF
							]a
						]li
						[li 
							[a href=#heading-4524 
								" Visual Boy Advance
								$LF
							]a
						]li
						[li 
							[a href=#heading-4525 
								" JPC-RR
								$LF
							]a
						]li
					]ul
				]li
				[li 
					[a href=#heading-4526 
						" Savestate problems
						$LF
					]a
				]li
				[li 
					[a href=#heading-4527 
						" Other problems
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#heading-4528 
								" You have external codes on (ex. Game Genie codes)
								$LF
							]a
						]li
						[li 
							[a href=#heading-4529 
								" You changed the settings by accident
								$LF
							]a
						]li
						[li 
							[a href=#heading-4530 
								" Replay is not quite deterministic
								$LF
							]a
						]li
						[li 
							[a href=#heading-4531 
								" Game suddenly resets
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
	]ul
]div
[p 
	"There are a number of causes of inconsistent savestates:
	$LF
]p
[h3 
	" Emulator problems
	$LF
	[a id=heading-4520 
	]a
]h3
[h4 
	" PCSX, Mupen64, and FBA-rr
	$LF
	[a id=heading-4521 
	]a
]h4
[ul 
	[li 
		" In general, these emulators have some desync issues. Be careful.
		$LF
	]li
]ul
[h4 
	" Dolphin
	$LF
	[a id=heading-4522 
	]a
]h4
[ul 
	[li 
		" Wiimote recording is prone to frequent desyncs, and will fail to playback if you do not restart Dolphin each time you wish to start recording or playback of a movie.
		$LF
	]li
]ul
[h4 
	" Snes9x
	$LF
	[a id=heading-4523 
	]a
]h4
[ul 
	[li 
		" Official version of Snes9x 1.43/1.51/1.52 has some desync issues. Use snes9x-rerecording instead. (The improved Snes9x can play and record movies in both Final and WIP timing.)
		$LF
	]li
	[li 
		" Snes9x 1.43/1.51 has trouble with sound. Games with timing to music or sound might desync. Some state saving/loading patterns during music changes might cause trouble as well. Using the improved version, disabling sound emulation entirely or using Fake Mute mode may prevent it from happening.
		$LF
		[ul 
			[li 
				" SNES9x 1.52 improved sound emulation logic overall, and the issue above has probably been fixed. If you don't need some advanced TAS features (such as Lua scripting), you should use SNES9x Rerecording 1.52.
				$LF
			]li
		]ul
	]li
]ul
[h4 
	" Visual Boy Advance
	$LF
	[a id=heading-4524 
	]a
]h4
[ul 
	[li 
		" VBA v20 has some emulation problems with SGB games. You may try recording with other versions instead. (The timing of GBx games is mostly different in v20.)
		$LF
	]li
	[li 
		" VBA versions prior to v21 have a bug that may automatically disable the GBA Lag Reduction setting. If this happens, you may try to hex-edit the GBA Lag Reduction flag stored inside your desynced movie according to the 
		[a class=extlink href=http://code.google.com/p/vba-rerecording/wiki/VBM rel=nofollow 
			"VBM format description
		]a
		".
		$LF
	]li
]ul
[h4 
	" JPC-RR
	$LF
	[a id=heading-4525 
	]a
]h4
[ul 
	[li 
		" Stopping emulation when executing very long instruction sequences without any (conditional) jump instructions (and also some other instructions) can lead to a desync. Fortunately, such sequences are extremely rare.
		$LF
	]li
	[li 
		" Savestating while the joystick is being polled will cause a desync in versions before r11.4. If you enable joystick (it isn't enabled by default), use r11.4 or newer.
		$LF
	]li
	[li 
		" Certain forms of self-modifying code may very rarely produce desyncs if pipeline flushing is not enabled.
		$LF
	]li
]ul
[h3 
	" Savestate problems
	$LF
	[a id=heading-4526 
	]a
]h3
[ul 
	[li 
		" You loaded savestates in the wrong order. For example, you should never load a savestate which is ahead of your current time. Implementation of "bullet-proof rerecording" prevents this. Due to current standards, this has become an obsoleted problem. This only happens in Famtasia and older versions of Gens and should not happen in most modern emulators.
		$LF
	]li
	[li 
		" Some savestates are flawed and will not exactly save what is supposed to be in the system at that moment. For example, savestates in older versions of Snes9x do not save the C4 memory used by games such as Mega Man X2, so critical or even functionally visible errors occur with savestating when C4 memory is used. There may be no choice but to use guesswork, and to keep checking the movie until you are out of the desync zone.
		$LF
	]li
	[li 
		" Loading a non-movie savestate while read-only is off may break your movie at the point where you loaded it. Never overwrite your movie savestates with non-movie ones.
		$LF
	]li
	[li 
		" Loading a movie savestate from a different movie before resuming recording, which may even happen with current "bulletproof rerecording" emulators as listed below:
		$LF
		[ul 
			[li 
				" "Bullet-proof rerecording" is imperfect. Some emulators may allow you to load savestates from the movie while the movie is being played in read-only mode, and you may resume recording from the already desynced movie by toggling off read-only mode or making a new savestate and then loading it. Avoid loading wrong savestates during replaying, or at least do not overwrite your correct movie savestates with desynced ones. Implementation of "bullet-proof replaying" prevents this problem.
				$LF
			]li
			[li 
				" At the present moment, no known emulator can prevent you from producing two distinct movies which share the same movie identifier, by using an external tool (e.g. a movie editor). The safest way to this issue is to discard any old movie savestates that were made in a different timeline than your current movie's.
				$LF
			]li
		]ul
	]li
]ul
[h3 
	" Other problems
	$LF
	[a id=heading-4527 
	]a
]h3
[h4 
	" You have external codes on (ex. Game Genie codes)
	$LF
	[a id=heading-4528 
	]a
]h4
[p 
	"Be very careful that you don't have external codes on. It is easy to miss. If your movie requires external codes to play back correctly, 
	(__wikiLink|Movie Rules|TASVideos cannot accept your movie)
	".
	$LF
]p
[h4 
	" You changed the settings by accident
	$LF
	[a id=heading-4529 
	]a
]h4
[p 
	"If this happens, try to rectify what you can. Do not continue with inconsistent settings.
	$LF
]p
[h4 
	" Replay is not quite deterministic
	$LF
	[a id=heading-4530 
	]a
]h4
[p 
	"If you discover that different ways of playing the movie yield different results, it could mean an emulation issue with that game, and it is recommended you stop TASing it until the problem is diagnosed and fixed.
	$LF
]p
[h4 
	" Game suddenly resets
	$LF
	[a id=heading-4531 
	]a
]h4
[p 
	"Some versions of some emulators may have a bug that inserts spurious resets in some conditions, resulting in a movie that suddenly resets the game. This can be fixed by editing the movie file to remove the spurious reset.
	$LF
]p
[hr 
]hr
[p 
	[em 
		(__wikiLink|TODO)
		": update info.
	]em
]p
