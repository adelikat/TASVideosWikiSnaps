52
[div class=card mb-2 
	[div class=card-header 
		[strong 
			"Table of contents
		]strong
	]div
	[div class=card-body 
		[ul 
			[li 
				[a href=#SettingUpTheEmulator 
					" Setting up the emulator
					$LF
				]a
			]li
			[li 
				[a href=#DiskImages 
					" Disk images
					$LF
				]a
			]li
			[li 
				[a href=#MakeTheBootFloppy 
					" Make the Boot Floppy
					$LF
				]a
			]li
			[li 
				[a href=#MakingAHdImageWithTheGame 
					" Making a HD image with the game
					$LF
				]a
			]li
			[li 
				[a href=#AssemblingTheVirtualSystem 
					" Assembling the virtual system
					$LF
				]a
			]li
			[li 
				[a href=#DoingTheBiosAndDosSections 
					" Doing the BIOS and DOS sections
					$LF
				]a
			]li
			[li 
				[a href=#ChecklistForStartingARun 
					" Checklist for starting a run
					$LF
				]a
			]li
			[li 
				[a href=#MovieDumping 
					" Movie dumping
					$LF
				]a
			]li
			[li 
				[a href=#MiscDocumentation 
					" Misc. Documentation:
					$LF
				]a
			]li
			[li 
				[a href=#Links 
					" Links
					$LF
				]a
			]li
		]ul
	]div
]div
[div class=p 
	"JPC-RR is a rerecording emulator for DOS, written in Java. The current version is r11.8 rc2.
	$LF
]div
[div class=p 
	"A 
	[a href=https://web.archive.org/web/20210129025104/http://www.elisanet.fi/ilari_l/jpcrr-r11.8-rc2-precompiled.zip rel=noopener external nofollow 
		"precompiled binary
	]a
	" is available. The source package (Java) for JPC-RR is at the 
	[a href=http://repo.or.cz/w/jpcrr.git rel=noopener external nofollow 
		"GIT repository
	]a
	".  JPC-RR requires Java and will function with 
	[a href=http://www.java.com/en/download/manual.jsp rel=noopener external nofollow 
		"Java 8 JRE
	]a
	".
	$LF
]div
[h4 id=SettingUpTheEmulator 
	" Setting up the emulator
	$LF
]h4
[div class=p 
	"If you have the precompiled version, run 
	[code 
		"start-jpcrr.bat
	]code
	". It is a batch file containing the following command:
	$LF
]div
[pre 
	"java -jar jpcrr-r11.7.jar -autoexec assemble.jpcrrinit
	$LF
]pre
[div class=p 
	[b 
		"Important
	]b
	": Whenever you start JPC-RR, many windows will pop-up. The main window is titled "JPC-RR", 
	[em 
		"however
	]em
	" it is not usable right away because there is another important window titled "PC Settings". This window is where you load the disk images. Right now, you have none, so click cancel.
	$LF
]div
[h4 id=DiskImages 
	" Disk images
	$LF
]h4
[div class=p 
	"You need four images:
	$LF
]div
[ul 
	[li 
		" You need the images for the main BIOS and the VGABIOS. They are bundled with the precompiled version.
		$LF
	]li
]ul
[ul 
	[li 
		" You need a boot disk for some operating system.
		$LF
		[ul 
			[li 
				"The FreeDos image can be found in the  
				[a href=http://jpc.sourceforge.net/jpcsource.zip rel=noopener external nofollow 
					"normal JPC distribution
				]a
				" with the path 
				[code 
					"resources/images/floppy.img
				]code
				"; to turn it into a usable image you will need to run the image through JPC-RR's "Import image" utility (described below in 
				[em 
					"How to build the game image
				]em
				"). You can also get 
				[a href=https://files.tasvideos.org/common/Wiki/jpc-rr/FREEDOS.7z rel=noopener external nofollow 
					"the pre-prepared image
				]a
				".
				$LF
			]li
			[li 
				"You are free to make your own boot disk image based on any of of your choice (such as MS-DOS), but it is your problem if no one can find a copy of it.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		" You need an image containing the actual game.
		$LF
	]li
]ul
[div class=p 
	"If you obtain pre-made image file, copy it to 
	[code 
		"disklibrary
	]code
	" directory (if emulator is running, you need to re-start it, as that directory is only scanned on emulator start).
	$LF
]div
[h4 id=MakeTheBootFloppy 
	" Make the Boot Floppy
	$LF
]h4
[div class=p 
	"Original forum post by Foone 
	(__wikiLink|displaytext=here|href=/Forum/Topics/9468)
	".
	$LF
]div
[div class=p 
	"(You only need to do this once, if you do not have a pre-prepared one.)
	$LF
]div
[div class=p 
	"Close the "PC Settings" window by clicking Cancel. Go to the Drives -> Import Image option on the JPC-RR window.
	$LF
	"(Note: If nothing happens when you do this, try hovering the mouse cursor over "Image image" so that it is highlighted, and pressing Enter on the keyboard. Seems to be a linux bug)
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=http://imgur.com/e8sRl.png 
	]img
	$LF
]div
[div class=p 
	"You should now see the Import Disk Image panel. For the image name, enter FREEDOS. Then click on the "Image File/directory" button to pop up the file dialog. Navigate to the JPC source directory you created earlier, and the file resources/images/floppy.img within it. Image type should change to "Floppy disk". Check the "Standard Geometry" box and click import. You should see a dialog saying "New image (ID blahblahblah) imported". Click dismiss.
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=http://imgur.com/G7Lqx.png 
	]img
	$LF
]div
[div class=p 
	"Now, let's confirm we can boot. Go to System->Assemble to get back to the PC Settings window. Confirm that BIOS Image is set to BIOS and VGA BIOS Image is set to VGABIOS, then set FDA Image to FREEDOS. (You should have FREEDOS as an option on the FDA Image dropdown, if you don't then the image wasn't imported properly.)
	$LF
]div
[div class=p 
	"Click assemble. Now JPC-RR should be set up to emulate a PC, we just have to start it. Hit to System->Start and see if we DOS begins booting.
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=http://imgur.com/BJaRo.png 
	]img
	$LF
]div
[div class=p 
	"Eventually you should get an A:\ prompt. You can use the virtual keyboard to enter commands (there'll be some lag because of DOSIdle), but you can't actually play a game yet because we don't have a hard drive image. Let's get to that! Stop the emulator (System->Stop) so we can set this up.
	$LF
]div
[h4 id=MakingAHdImageWithTheGame 
	" Making a HD image with the game
	$LF
]h4
[div class=p 
	"First, obtain the game.
	$LF
]div
[div class=p 
	"Make a directory where you put all the files needed for the game to run. Do not include such files that the game creates as you play it, such as highscore files. Also don't include things like manuals and demos for other games.
	$LF
]div
[div class=p 
	"If game is done using DJGPP (most games aren't), hdpmi32.exe is also needed.
	$LF
]div
[div class=p 
	"Unless you want to TAS the setup application, please use the files as after an install.
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://files.tasvideos.org/1853/site_images/JPC1.png 
	]img
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://files.tasvideos.org/1853/site_images/JPC2.png 
	]img
	$LF
]div
[div class=p 
	"If you are trying to play back someones movie, note which files that person used to create the game image. If you don't have the same files, the movie may or may not work.
	$LF
]div
[div class=p 
	"Now, go back to JPC-RR. If you haven't closed the "PC Settings" window, do it now. Open the image importer by selecting 
	[code 
		"Drives -> Import Image
	]code
	" from the main menubar (the 
	[code 
		"JPC-RR
	]code
	" window). 
	$LF
]div
[div class=p 
	"Give the image a good name, such as the name of the game in question. Select the folder where you put the game files in the second field. You have multiple types of images to import, but as this is a tutorial for a HD image, pick that type from the combobox.
	$LF
]div
[div class=p 
	"There are three fields bellow related to the size of the image. you can use them if the game doesn't fit in the default sized image. You can not do much with the first two, but the tracks count can be increased to 1023 (usually powers of two are used: 16, 32, 64, 128, 256, 512, 1023). Do not go overboard, creating the image file can then take quite long time (all the data needs to be checksummed).
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://files.tasvideos.org/1853/site_images/JPC3.png 
	]img
	$LF
]div
[div class=p 
	"After importing, the game image should be created in the 
	[em 
		"disklibrary
	]em
	" folder. 
	$LF
]div
[h4 id=AssemblingTheVirtualSystem 
	" Assembling the virtual system
	$LF
]h4
[div class=p 
	"If you are playing back someone's movie, you can skip this step.
	$LF
]div
[div class=p 
	"In JPC-RR, select 
	[code 
		"System -> Assemble
	]code
	" to call up the "PC Settings" window again. BIOS Image and VGA BIOS Image should be 
	[code 
		"BIOS
	]code
	" and 
	[code 
		"VGABIOS
	]code
	", respectively. Under "Fda image", select the image for the operating system. Under "Hdd image", select the hd image for the game you want.
	$LF
]div
[div class=p 
	"The reason for using "Hdd image" instead of "Hda image" is to avoid BIOS needing to timeout nonexistent IDE slave (this takes some time on bootup).
	$LF
]div
[div class=p 
	"Depending on the game, you may need additional modules:
	$LF
]div
[table 
	[tbody 
		[tr 
			[th 
				"Class name
			]th
			[th 
				"Emulated device
			]th
			[th 
				"Notes
			]th
		]tr
		[tr 
			[td 
				[code 
					"org.jpc.modules.FMCard
				]code
			]td
			[td 
				"Adlib Gold soundcard
			]td
			[td 
				"Incompatible with soundblaster emulation
			]td
		]tr
		[tr 
			[td 
				[code 
					"org.jpc.modules.SoundCard
				]code
			]td
			[td 
				"SoundBlaster soundcard
			]td
			[td 
				[code 
					"set BLASTER=A220 I5 D1 H5 T6
				]code
			]td
		]tr
		[tr 
			[td 
				[code 
					"org.jpc.modules.BasicFPU
				]code
			]td
			[td 
				"Fpu
			]td
			[td 
				"Turn on the 
				[code 
					"FPU_HACK
				]code
				" option after assembling if not loading this module
				[a id=r1 
				]a
				[sup 
					"[
					[a href=#1 
						"1
					]a
					"]
				]sup
			]td
		]tr
		[tr 
			[td 
				[code 
					"org.jpc.modules.Joystick
				]code
			]td
			[td 
				"2 button joystick
			]td
			[td 
				" 
			]td
		]tr
		[tr 
			[td 
				[code 
					"org.jpc.modules.GMIDIInterface
				]code
			]td
			[td 
				"General MIDI UART
			]td
			[td 
				"Requires JPC-RR r11.3 or later
			]td
		]tr
	]tbody
]table
[div class=p 
	"Use commas to separate multiple module names. You must use the full package and module name when loading modules.
	$LF
]div
[div class=p 
	"The boot device should be left as 
	[code 
		"fda
	]code
	" unless you are using a HD image or CD-ROM to boot from (use 
	[code 
		"hda
	]code
	" if booting from HD image or 
	[code 
		"cdrom
	]code
	" if booting from CD-ROM).
	$LF
]div
[div class=p 
	"Do not touch the other fields unless you know what they do, they are for advanced users.
	$LF
	[img class=embed mw-100 src=https://files.tasvideos.org/1853/site_images/JPC4.png 
	]img
	$LF
]div
[div class=p 
	"Once you click Assemble, the movie starts recording instantly. You can set the author name for the movie under 
	[code 
		"Snapshot > Change Run Authors
	]code
	". 
	$LF
]div
[div class=p 
	"See 
	(__wikiLink|displaytext=PC settings documentation|href=/EmulatorResources/JPC/PcSettings)
	" page for explanation of various options in assemble dialog.
	$LF
]div
[h4 id=DoingTheBiosAndDosSections 
	" Doing the BIOS and DOS sections
	$LF
]h4
[div class=p 
	"(this is about making a movie, not about playing it back). It also assumes the usual BIOS and DOS images.
	$LF
]div
[div class=p 
	"Note that keyboard is buffered in DOS, so input can usually be typed beforehand.
	$LF
]div
[ul 
	[li 
		" During starting the game usually a lot of different buttons are needed. Use the virtual keyboard for input.
		$LF
	]li
	[li 
		" When you see the "Press F12 for boot menu." text, send 
		[code 
			"ENTER
		]code
		" to the system. This is the fastest way, but still takes about half a second.
		$LF
	]li
	[li 
		" Then send 
		[code 
			"F5
		]code
		" (skip startup files) or 
		[code 
			"F8
		]code
		" (confirm startup lines).
		$LF
		[ul 
			[li 
				" Skip startup files if you can, but you might not have enough memory then.
				$LF
			]li
			[li 
				" If confirming startup files, run all five config.sys commands but not autoexec.bat (for some reason it seems to ask twice).
				$LF
			]li
			[li 
				" If the game needs mouse, run 
				[code 
					"ctmouse
				]code
				".
				$LF
			]li
		]ul
	]li
	[li 
		" The DOS command prompt will likely be 
		[code 
			"A:\>
		]code
		". Move to hard disk 
		[code 
			"c:
		]code
		". This changes the command prompt to 
		[code 
			"C:\>
		]code
		".
		$LF
	]li
	[li 
		" If game needs BLASTER variable, give it 
		[code 
			"SET BLASTER=A220 I7 D1 H5 T6
		]code
		".
		$LF
	]li
	[li 
		" If game uses DJGPP, it needs DPMI extender, and the only compatible one is HXDPMI: 
		[code 
			"hdpmi32
		]code
		".
		$LF
	]li
	[li 
		" If game needs setup program, run that. It is usually 
		[code 
			"setup
		]code
		".
		$LF
	]li
	[li 
		" Start the game itself. The startup command is game-dependent (it is one of the .com, .exe or .bat files without extension).
		$LF
		[ul 
			[li 
				" Depending on the game, some parameters may also be needed (consult the manual for the game).
				$LF
			]li
		]ul
	]li
	[li 
		" Check that the game detects the sound card (sometimes some fiddling with timing or enabling I/O delay is needed).
		$LF
	]li
	[li 
		" After the game starts, usually not many keys are needed. Use the hotkeys (see 'Extra' menu, 
		[code 
			"datafiles/Extramenu
		]code
		" and 
		(__wikiLink|href=/EmulatorResources/JPC/KeyNumbers|implicitdisplaytext=EmulatorResources/JPC/KeyNumbers)
		").
		$LF
	]li
	[li 
		" Currently the keys stick (hit the key again to unstick) TODO: Fix this.
		$LF
	]li
]ul
[h4 id=ChecklistForStartingARun 
	" Checklist for starting a run
	$LF
]h4
[div class=p 
	"Here is a checklist for starting a run, in order to avoid most elementary mistakes:
	$LF
]div
[ul 
	[li 
		" Clean the directory from files with non-8+3 names. The image importer just plain does not like those.
		$LF
	]li
	[li 
		" Be very careful when making the image. There is no GoodDOS. Extra files can cause desyncs, even if those files are not used. If the file set is "dirty", then you need to hack the movie to even play back on a "clean" image, and it may not sync. Use defaults or unconfigured setup if possible.
		$LF
	]li
	[li 
		" Unless there is good reason not to, use image type of Hard drive and put the image into fourth slot (hdd). This way, the image will pair hdc, which is the optical drive unless you put something there. And having drives paired speeds up booting.
		$LF
	]li
	[li 
		" Skip autoexec.bat. The usual boot disk has DOSIDLE in autoexec.bat, and that program interacts very poorly with the emulator. Also skip config.sys if you can (you might not have enough memory if you skip it). Additionally autoexec.bat contains a mouse driver, which usually just slows down booting.
		$LF
	]li
	[li 
		" You can type much faster than 1 character per frame on DOS prompt (it is more than 10 characters per frame). Also take advantage of the keyboard buffer (~15 characters).
		$LF
	]li
	[li 
		" Don't use General MIDI for music unless you have to.
		$LF
		[ul 
			[li 
				" It is difficult to encode.
				$LF
			]li
			[li 
				" The music will sound weird anyway because the instrument sets are different from one assumed by the game.
				$LF
			]li
			[li 
				" Don't even include the module if not needed.
				$LF
			]li
		]ul
	]li
	[li 
		" Check what settings the game needs to enable sounds. Some games need BLASTER variable. Some need to run setup program. Check that you succeeded by dumping beginning of the run.
		$LF
	]li
]ul
[h4 id=MovieDumping 
	" Movie dumping
	$LF
]h4
[div class=p 
	"When you only need to replay a movie on an image that is present in the directory JPCRR expects it to be in, you don't have to assemble anything. Just pick the movie to be replayed, and the emulator will automatically pick the matching image.
	$LF
]div
[div class=p 
	[a href=http://tasvideos.org/forum/topics/20128 rel=noopener external nofollow 
		"http://tasvideos.org/forum/topics/20128
	]a
	$LF
]div
[div class=p 
	[del 
		(__wikiLink|displaytext=JPC-RR dumping guide|href=/EmulatorResources/JPC/MovieDumping)
	]del
	[br 
	]br
	$LF
	[del 
		(__wikiLink|displaytext=Movie dumping guide for r10.x)|href=/EmulatorResources/JPC/MovieDumpingR10)
	]del
	[br 
	]br
	$LF
	[del 
		(__wikiLink|displaytext=Movie dumping guide for r11.x)|href=/EmulatorResources/JPC/MovieDumpingR11)
	]del
	$LF
]div
[div class=p 
	(__wikiLink|href=/TODO|implicitdisplaytext=TODO)
	$LF
]div
[div class=p 
	"TODO: finish this page, including information related to game compatibility, features, playing movies, dumping guide for r11, etc.
	$LF
]div
[div class=p 
	"This page documents the rerecording branch of JPC, a PC emulator.  Currently it is limited to emulating the DOS operating system, thus it is currently approved as a DOS rerecording emulator.
	$LF
]div
[h4 id=MiscDocumentation 
	" Misc. Documentation:
	$LF
]h4
[ul 
	[li 
		" 
		(__wikiLink|displaytext=Numeric keyboard codes|href=/EmulatorResources/JPC/KeyNumbers)
		$LF
	]li
]ul
[h4 id=Links 
	" Links
	$LF
]h4
[ul 
	[li 
		[a class=intlink href=/Forum/Topics/20567 
			"TASScript by c-square
		]a
		$LF
	]li
	[li 
		[a class=intlink href=/Forum/Topics/9434 
			"Development Discussion
		]a
		$LF
	]li
	[li 
		[a class=intlink href=/Forum/Topics/9343 
			"More Discussion
		]a
		$LF
	]li
]ul
[hr 
]hr
[div class=p 
	"[
	[a id=1 
	]a
	[a href=#r1 
		"1
	]a
	"]
	" JPC-RR r11.5 and newer don't have this option (it is not needed for those versions).
]div
