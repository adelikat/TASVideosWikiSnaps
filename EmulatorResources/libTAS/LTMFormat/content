7
[div class=p 
	"The tool records inputs into a movie file which has a 
	[code 
		".ltm
	]code
	" extension. It is actually a 
	[code 
		"tar.gz
	]code
	" archive which contains three text files.
	$LF
]div
[h4 id=Config 
	" Config
	$LF
]h4
[div class=p 
	"The first one is 
	[code 
		"config.ini
	]code
	", containing all meta-data of the movie file. It consists of a list of key/value pairs. Here is an example of such a file, with added comments:
	$LF
]div
[div class= 
	[div class= 
		[ul class=nav nav-tabs role=tablist 
			[li class=nav-item 
				[a class=active nav-link data-bs-toggle=tab href=#tabs-365-0 
					"1.3.6 and later
				]a
			]li
			[li class=nav-item 
				[a class=nav-link data-bs-toggle=tab href=#tabs-365-1 
					"1.3.5 and earlier
				]a
			]li
		]ul
	]div
	[div class=tab-content 
		[div class=tab-pane fade active show id=tabs-365-0 
			[pre 
				"[General]
				$LF
				"authors=me ; authors of the movie
				$LF
				"auto_restart=false ; does the game restarts automatically when closed
				$LF
				"frame_count=81 ; frame count of the movie file
				$LF
				"framerate_den=1 ; denominator of the number of frames per second
				$LF
				"framerate_num=60 ; numerator of the number of frames per second
				$LF
				"game_name=SuperMeatBoy ; name of the game executable
				$LF
				"initial_time_nsec=0 ; number of nanoseconds of the initial system time
				$LF
				"initial_time_sec=1 ; number of seconds of the initial system time
				$LF
				"keyboard_support=true ; are keyboard inputs sent to the game
				$LF
				"length_nsec=733333333 ; number of nanoseconds of movie length
				$LF
				"length_sec=52 ; number of seconds of movie length
				$LF
				"libtas_major_version=1
				$LF
				"libtas_minor_version=3
				$LF
				"libtas_patch_version=6
				$LF
				"md5=a6fa991f40ef518b302a4a492af7259c ; md5 hash of the game executable
				$LF
				"mouse_support=true ; are mouse inputs sent to the game
				$LF
				"nb_controllers=0 ; up to 4 controllers are supported
				$LF
				"rerecord_count=0
				$LF
				"savestate_frame_count=13 ; savestate frame for savestate movies
				$LF
				"variable_framerate=true ; is the user allowed to change framerate
				$LF
			]pre
			[pre 
				"; Time hack values
				$LF
			]pre
			[pre 
				"[mainthread_timetrack]
				$LF
				"clock=-1
				$LF
				"clock_gettime=-1
				$LF
				"gettimeofday=-1
				$LF
				"sdl_getperformancecounter=-1
				$LF
				"sdl_getticks=-1
				$LF
				"time=-1
				$LF
			]pre
			[pre 
				"[secondarythread_timetrack]
				$LF
				"clock=-1
				$LF
				"clock_gettime=-1
				$LF
				"gettimeofday=-1
				$LF
				"sdl_getperformancecounter=-1
				$LF
				"sdl_getticks=-1
				$LF
				"time=-1
				$LF
			]pre
		]div
		[div class=tab-pane fade id=tabs-365-1 
			[pre 
				"[General]
				$LF
				"authors=me ; authors of the movie
				$LF
				"frame_count=81 ; frame count of the movie file
				$LF
				"framerate_den=1 ; denominator of the number of frames per second
				$LF
				"framerate_num=60 ; numerator of the number of frames per second
				$LF
				"game_name=SuperMeatBoy ; name of the game executable
				$LF
				"initial_time_nsec=0 ; number of nanoseconds of the initial system time
				$LF
				"initial_time_sec=1 ; number of seconds of the initial system time
				$LF
				"keyboard_support=true ; are keyboard inputs sent to the game
				$LF
				"libtas_major_version=1
				$LF
				"libtas_minor_version=3
				$LF
				"libtas_patch_version=0
				$LF
				"mouse_support=true ; are mouse inputs sent to the game
				$LF
				"nb_controllers=0 ; up to 4 controllers are supported
				$LF
				"rerecord_count=0
				$LF
				"savestate_frame_count=13 ; savestate frame for savestate movies
				$LF
			]pre
			[pre 
				"; Time hack values
				$LF
			]pre
			[pre 
				"[mainthread_timetrack]
				$LF
				"clock=-1
				$LF
				"clock_gettime=-1
				$LF
				"gettimeofday=-1
				$LF
				"sdl_getperformancecounter=-1
				$LF
				"sdl_getticks=-1
				$LF
				"time=-1
				$LF
			]pre
			[pre 
				"[secondarythread_timetrack]
				$LF
				"clock=-1
				$LF
				"clock_gettime=-1
				$LF
				"gettimeofday=-1
				$LF
				"sdl_getperformancecounter=-1
				$LF
				"sdl_getticks=-1
				$LF
				"time=-1
				$LF
			]pre
		]div
	]div
]div
[h4 id=Inputs 
	" Inputs
	$LF
]h4
[div class=p 
	"The second file is the 
	[code 
		"inputs
	]code
	" text file. In this file, each line that starts with the character '
	[code 
		"|
	]code
	"' is an input frame.
	$LF
	"The content of one line depends on the three settings 
	[code 
		"keyboard_support
	]code
	", 
	[code 
		"mouse_support
	]code
	" and 
	[code 
		"nb_controllers
	]code
	" above.
	$LF
]div
[div class= 
	[div class= 
		[ul class=nav nav-tabs role=tablist 
			[li class=nav-item 
				[a class=active nav-link data-bs-toggle=tab href=#tabs-3162-0 
					"1.3.6 and later
				]a
			]li
			[li class=nav-item 
				[a class=nav-link data-bs-toggle=tab href=#tabs-3162-1 
					"1.3.5 and earlier
				]a
			]li
		]ul
	]div
	[div class=tab-content 
		[div class=tab-pane fade active show id=tabs-3162-0 
			[div class=p 
				"The line is a concatenation of sections for each device. Each section starts with '
				[code 
					"|
				]code
				"' followed by a identifier.
				$LF
			]div
			[div class=p 
				"Keyboard starts with '
				[code 
					"|K
				]code
				"', followed by a list of Xlib KeySym (u32) values of each pressed key. They are encoded into an hex string and separated by the '
				[code 
					":
				]code
				"' character. The list is unordered, the order of the events that will be sent to the game for a single frame is arbitrary. If this section is not present, the default value for the keyboard is no pressed keys. Example: 
				[code 
					"|Kffe1:20:ff53
				]code
				" 
				$LF
			]div
			[div class=p 
				"Mouse starts with '
				[code 
					"|M
				]code
				"', followed by mouse inputs in the format: 
				[code 
					"xpos:ypos:X:12345
				]code
				". 
				[code 
					"xpos
				]code
				" and 
				[code 
					"ypos
				]code
				" are x and y coordinates of the pointer (i32) in decimal strings (can be negative). The reference mode of these coordinates are described by 
				[code 
					"X
				]code
				", which is a single character, either 
				[code 
					"A
				]code
				" (absolute coordinates) or 
				[code 
					"R
				]code
				" (relative coordinates). This is followed by 5 characters which are either a digit if the corresponding mouse button is pressed, or the character '
				[code 
					".
				]code
				"'. When decoding the file, the code only checks if the character is a '
				[code 
					".
				]code
				"' or not. If this section is not present, default value is 0,0 absolute coords and no button pressed. Example: 
				[code 
					"|M202:264:A:1....
				]code
				$LF
			]div
			[div class=p 
				"Each controller starts with '
				[code 
					"|C
				]code
				"' then the controller number (between 1 and 4). The controller inputs are in the format: 
				[code 
					"axis_left_x:axis_left_y:axis_right_x:axis_right_y:trigger_left:trigger_right:ABXYbgs()
					"[]
					"udlr
				]code
				". The first 6 values are the axis values (i16) encoded in decimal strings. Then each character is either a button character or '
				[code 
					".
				]code
				"', indicating if the corresponding button was pressed or not. The order of the buttons are:
				$LF
			]div
			[ul 
				[li 
					" 
					[code 
						"A
					]code
					", 
					[code 
						"B
					]code
					", 
					[code 
						"X
					]code
					", 
					[code 
						"Y
					]code
					" buttons
					$LF
				]li
				[li 
					" back (
					[code 
						"b
					]code
					"), guide (
					[code 
						"g
					]code
					") and start (
					[code 
						"s
					]code
					") buttons
					$LF
				]li
				[li 
					" left stick (
					[code 
						"(
					]code
					") and right stick (
					[code 
						")
					]code
					")
					$LF
				]li
				[li 
					" left shoulder (
					[code 
						"[}}) and right shoulder ({{]
					]code
					")
					$LF
				]li
				[li 
					" dpad up (
					[code 
						"u
					]code
					"), down (
					[code 
						"d
					]code
					"), left (
					[code 
						"l
					]code
					") and right (
					[code 
						"r
					]code
					")
					$LF
				]li
			]ul
			[div class=p 
				"If this section is not present, default value is 0 for axes and no button pressed. Example: 
				[code 
					"|C1-3977:-89:0:0:0:0:A..............
				]code
				$LF
			]div
			[div class=p 
				"Flags starts with '
				[code 
					"|F
				]code
				"', followed by the format 
				[code 
					"R1234ILUO
				]code
				". Each character is either a flag character or '
				[code 
					".
				]code
				"':
				$LF
			]div
			[ul 
				[li 
					" 
					[code 
						"R
					]code
					": reset input
					$LF
				]li
				[li 
					" 
					[code 
						"1
					]code
					", 
					[code 
						"2
					]code
					", 
					[code 
						"3
					]code
					", 
					[code 
						"4
					]code
					": controller X was attached
					$LF
				]li
				[li 
					" 
					[code 
						"I
					]code
					", 
					[code 
						"L
					]code
					", 
					[code 
						"U
					]code
					", 
					[code 
						"O
					]code
					": controller X was detached
					$LF
				]li
			]ul
			[div class=p 
				"If this section is not present, default value is no flag. Example: 
				[code 
					"|FR........
				]code
				$LF
			]div
			[div class=p 
				"When variable_framerate is enabled, we need to specify the framerate of each frame. Starts with '
				[code 
					"|T
				]code
				"', followed by 
				[code 
					"num:den
				]code
				". 
				[code 
					"num
				]code
				" and 
				[code 
					"den
				]code
				" are the framerate numerator/denominator (u32). If this section is not present, default value is the metadata value. Example: 
				[code 
					"|T60:1
				]code
				$LF
			]div
		]div
		[div class=tab-pane fade id=tabs-3162-1 
			[div class=p 
				"If 
				[code 
					"keyboard_support=1
				]code
				", a list of Xlib KeySym (u32) values of each pressed key is appended to the line. They are encoded into an hex string and separated by the '
				[code 
					":
				]code
				"' character. The list ends with the '
				[code 
					"|
				]code
				"' character.
				$LF
			]div
			[div class=p 
				"If 
				[code 
					"mouse_support=1
				]code
				", mouse inputs in the format: 
				[code 
					"xpos:ypos:12345
				]code
				" are appended to the line. 
				[code 
					"xpos
				]code
				" and 
				[code 
					"ypos
				]code
				" are x and y coordinates of the pointer (i32) in decimal strings (can be negative). This is followed by 5 characters which are either a digit if the corresponding mouse button is pressed, or the character '
				[code 
					".
				]code
				"'. When decoding the file, the code only checks if the character is a '
				[code 
					".
				]code
				"' or not. The list ends with the '
				[code 
					"|
				]code
				"' character.
				$LF
			]div
			[div class=p 
				"For each controller from 1 to 
				[code 
					"nb_controllers
				]code
				", the corresponding controller inputs is appended to the line, in the format: 
				[code 
					"axis_left_x:axis_left_y:axis_right_x:axis_right_y:trigger_left:trigger_right:ABXYbgs()
					"[]
					"udlr
				]code
				". The first 6 values are the axis values (i16) encoded in decimal strings. Then each character is either a button character or '
				[code 
					".
				]code
				"', indicating if the corresponding button was pressed or not. The order of the buttons are:
				$LF
			]div
			[ul 
				[li 
					" 
					[code 
						"A
					]code
					", 
					[code 
						"B
					]code
					", 
					[code 
						"X
					]code
					", 
					[code 
						"Y
					]code
					" buttons
					$LF
				]li
				[li 
					" back (
					[code 
						"b
					]code
					"), guide (
					[code 
						"g
					]code
					") and start (
					[code 
						"s
					]code
					") buttons
					$LF
				]li
				[li 
					" left stick (
					[code 
						"(
					]code
					") and right stick (
					[code 
						")
					]code
					")
					$LF
				]li
				[li 
					" left shoulder (
					[code 
						"[}}) and right shoulder ({{]
					]code
					")
					$LF
				]li
				[li 
					" dpad up (
					[code 
						"u
					]code
					"), down (
					[code 
						"d
					]code
					"), left (
					[code 
						"l
					]code
					") and right (
					[code 
						"r
					]code
					")
					$LF
				]li
			]ul
			[div class=p 
				"Each controller inputs end with the '
				[code 
					"|
				]code
				"' character.
				$LF
			]div
		]div
	]div
]div
[h4 id=Annotations 
	" Annotations
	$LF
]h4
[div class=p 
	"The third file is the 
	[code 
		"annotations.txt
	]code
	" text file, containing movie annotations.
	$LF
]div
