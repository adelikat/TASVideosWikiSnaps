18
[div class=p 
	(ActiveTab|tab=b4)
	$LF
	(listparents)
	$LF
	(listlanguages)
	$LF
]div
[hr 
]hr
[div class=p 
	[img class=embedright src=/images/RamSearch.png 
	]img
	$LF
]div
[div class=p 
	"Ram Search is a windows dialog for rerecording emulators designed to find useful ram values. It was originally developed for Gens rerecording by Upthorn and Nitsuja.  Since then it has been ported to most rerecording emulators supported by the site.  Therefore, it is documented here.
	$LF
]div
[div class=p 
	[a class=intlink href=/AddressesUp 
		"Addresses Sets
	]a
	" contain many useful addresses, allow you to download them as .wch files for the supported emulators, let you contribute your own, and provide modules to embed existing address sets on Wiki pages.
	$LF
]div
[h4 id=EmulatorswithRamSearch: 
	" Emulators with Ram Search:
	$LF
]h4
[ul 
	[li 
		" 
		[a class=extlink href=http://www.fceux.com/ rel=nofollow 
			"FCEUX
		]a
		$LF
	]li
	[li 
		" 
		[a class=extlink href=http://code.google.com/p/gens-rerecording/ rel=nofollow 
			"Gens
		]a
		$LF
	]li
	[li 
		" 
		[a class=extlink href=http://code.google.com/p/snes9x-rr/ rel=nofollow 
			"SNES9X-rr
		]a
		$LF
	]li
	[li 
		" 
		[a class=extlink href=http://code.google.com/p/vba-rerecording/ rel=nofollow 
			"VBA-rr
		]a
		$LF
	]li
	[li 
		" 
		[a class=extlink href=http://desmume.org/ rel=nofollow 
			"DeSmuME
		]a
		$LF
	]li
	[li 
		" 
		[a class=extlink href=http://code.google.com/p/psxjin/ rel=nofollow 
			"PSXjin
		]a
		$LF
	]li
	[li 
		" 
		[a class=extlink href=http://code.google.com/p/pcsxrr/ rel=nofollow 
			"PCSX-rr
		]a
		$LF
	]li
	[li 
		" 
		[a class=extlink href=http://code.google.com/p/pcejin/ rel=nofollow 
			"PCEjin
		]a
		$LF
	]li
	[li 
		" 
		[a class=extlink href=http://code.google.com/p/fbarr/ rel=nofollow 
			"FBA-rr
		]a
		$LF
	]li
	[li 
		" 
		[a class=extlink href=http://code.google.com/p/vbjin/ rel=nofollow 
			"VBjin
		]a
		$LF
	]li
	[li 
		" 
		[a class=extlink href=http://code.google.com/p/yabause-rr/ rel=nofollow 
			"Yabause-rr
		]a
		$LF
	]li
]ul
[hr 
]hr
[h4 id=Documentation 
	" Documentation
	$LF
]h4
[div class=p 
	"Ram Search is a memory searching dialog to aid in finding useful RAM values.  Like any RAM searching dialog, it is designed to start with the entire RAM contents and then the user weeds out values that aren't what the user is looking for.  For more information regarding how to find RAM Values see 
	(__wikiLink|/MemorySearch|Memory Search)
	". For a video tutorial on RAM Search, see http://www.ustream.tv/recorded/8547343 .
	$LF
]div
[div class=p 
	"To make a search, the first step is to press the 
	[tt 
		"Reset
	]tt
	" button.  This will put all RAM Values into the available search.  The next step is to advance the game (either by frame advance, or by letting the game play unpaused).  Then a search must be done.  This requires setting the 
	[tt 
		"Comparison Operator
	]tt
	" and 
	[tt 
		"Compare To/By
	]tt
	" then clicking the 
	[tt 
		"Search
	]tt
	" button. 
	$LF
]div
[hr 
]hr
[h4 id=ComparisonOperators 
	" Comparison Operators
	$LF
]h4
[div class=p 
	"Whenever the 
	[tt 
		"Search
	]tt
	" button is clicked, RAM Search compares the current RAM values with a value based on the 
	[tt 
		"Compare To/By
	]tt
	" .  It compares the contents based on which comparison operator is selected.  Any RAM values that don't match the comparison criteria are discarded.  RAM Search offers a variety of searching filters.  
	$LF
]div
[ul 
	[li 
		" Less Than - Keeps values that are smaller than the Compare value 
		$LF
	]li
	[li 
		" Greater Than - Keeps values that are greater than the Compare value
		$LF
	]li
	[li 
		" Less than or equal - Keeps values smaller or equal
		$LF
	]li
	[li 
		" Greater than or equal - Keeps values larger or equal
		$LF
	]li
]ul
[div class=p 
	"(be careful of signed vs unsigned with these)
	$LF
]div
[ul 
	[li 
		" Equal to - Keeps only values that are the same (not a good one to use as your first search)
		$LF
	]li
	[li 
		" Not Equal to - Keeps values that are different
		$LF
	]li
	[li 
		" Different By 
		"[]
		": - Keeps values that are less then or greater than the compare value by the amount typed into the edit box.  (This can be useful, for instance, if you know the amount of damage a weapon does and you are looking for an enemy HP value).
		$LF
	]li
	[li 
		" Modulo 
		"[]
		" Is - The modulus operator.  Will divide the current and previous and keep any that have a remainder equal to the value typed in the edit box.  (Useful for finding timers).
		$LF
	]li
]ul
[h4 id=CompareTo/By 
	" Compare To/By
	$LF
]h4
[ul 
	[li 
		" Previous Value - compares to the value from the last time the 
		[tt 
			"Search
		]tt
		" button was pressed or from the point 
		[tt 
			"Reset
		]tt
		" was pressed if no search has yet been made.
		$LF
	]li
	[li 
		" Specific Value - "Known value".   Compares to the value typed into the edit box (useful when you know what value the address should be).
		$LF
	]li
	[li 
		" Specific Address - Compares to another RAM address based on the address typed in the edit box.
		$LF
	]li
	[li 
		" Number of Changes - A handy feature.  Compares the number of changes of each address with the value in the edit box.
		$LF
	]li
]ul
[hr 
]hr
[h4 id=DataSize/Type/Display 
	" Data Size/Type/Display
	$LF
]h4
[div class=p 
	[b 
		"Data size
	]b
	$LF
]div
[div class=p 
	"A very important value to set and depends on knowledge about the platform being used.  NES for instance will almost always be 1 byte (8-bit) values whereas SNES and GENS will often be 2 byte values.  DS and GBA are typically 4 byte.
	$LF
]div
[div class=p 
	[b 
		"Data Type/Display
	]b
	$LF
]div
[div class=p 
	"Signed/Unsigned can make a significant different on the search criteria so knowledge of this property is important.  Speed address, for instance, will usually be signed whereas x,y coordinates and subpixel values will be unsigned.
	$LF
]div
[div class=p 
	"Hexadecimal display can be useful, especially for values that tend to be base 16 anyway (NES subpixel values for instance are almost always 1 byte with 1/16th precision.  Hexadecimal display will show these values as 10, 20, 30, A0, etc).
	$LF
]div
[hr 
]hr
[h4 id=Advancedfeatures 
	" Advanced features
	$LF
]h4
[div class=p 
	[b 
		"Changes
	]b
	$LF
	"RAM search keeps track of values every frame.  Each time they change, the change counter increases.  It is reset after every search.  This knowledge can be used in conjunction with the 
	[tt 
		"Number of Changes
	]tt
	" comparison operator.  For instance, one could move the character right for 6 frames, and then do a Number of Changes = 6 search to find the characters x position.  Timers could be found by search for Changes = 1 every frame.
	$LF
]div
[div class=p 
	"Changes can be reset to 0 at any time with the 
	[tt 
		"Clear Change Counts
	]tt
	" button.
	$LF
]div
[div class=p 
	[b 
		"Preview
	]b
	$LF
]div
[div class=p 
	"Whenever a search criteria is set, RAM Search will display in red the values that will be removed if the 
	[tt 
		"Search
	]tt
	" button is clicked.  This allows you to preview the results of the search.
	$LF
]div
[div class=p 
	[b 
		"Autosearch
	]b
	$LF
]div
[div class=p 
	"This allows you to automate the search process.  When checked, RAM Search will click the 
	[tt 
		"Search
	]tt
	" button for you every frame.  This could be useful for finding x position for instance.  Set the search to 
	[tt 
		"Greater than
	]tt
	" 
	[tt 
		"Previous Value
	]tt
	", click Autosearch, the press the Frame Advance key repeatedly.
	$LF
]div
[div class=p 
	[b 
		"Undo
	]b
	$LF
]div
[div class=p 
	"This allows you to clear the last search.  Useful for mis-clicks or to revert to a previous state should the search criteria not give desirable results.
	$LF
]div
[div class=p 
	[b 
		"Eliminate
	]b
	$LF
]div
[div class=p 
	"Allows you to manually highlight one or more addresses in the address list and remove them without having to do a search.  This is especially useful when the list is narrowed down to just a few values that the user can visually monitor and eliminate.
	$LF
]div
[div class=p 
	[b 
		"Watch
	]b
	$LF
]div
[div class=p 
	"When clicked, an address will be added to the 
	[a class=intlink href=/EmulatorResources/RamWatch 
		"Ram Watch
	]a
	" dialog.
	$LF
]div
[div class=p 
	[b 
		"Add Cheat
	]b
	$LF
]div
[div class=p 
	"Take the highlighted address and freeze it to its current value.
]div
