47
[h2 id=PcsxRrResyncRequiredFiles 
	" PCSX-rr Resync Required Files:
	$LF
]h2
[ul 
	[li 
		" 
		[a href=https://sourceforge.net/p/feos-tas/code/766/tree/trunk/Misc/pcsx-13f.7z?format=raw rel=noopener external nofollow 
			"PCSX-rr v0.1.3f
		]a
		$LF
	]li
	[li 
		" 
		[a href=https://files.tasvideos.org/common/PcsxrrEncodeWofkflow/spuEternal141.zip rel=noopener external nofollow 
			"Eternal SPU Plugin
		]a
		" - Star of the show for plugins.
		$LF
	]li
	[li 
		" 
		[a href=https://files.tasvideos.org/emulatordownloads/pcsxrr/pcsx-rr-v013a.7z rel=noopener external nofollow 
			"PCSX-rr v0.1.3
		]a
		" - Plugins. You do not need the executable.
		$LF
	]li
	[li 
		" 
		[a href=https://files.tasvideos.org/common/PcsxrrEncodeWofkflow/PcsxrrEncodeWofkflow.7z rel=noopener external nofollow 
			"PcsxrrEncodeWofkflow
		]a
		" - Bundle of files that you can either put in the root where PCSX-rr is located, or in a folder that's accessible. The former is preferred.
		$LF
	]li
	[li 
		" 
		[a href=https://sourceforge.net/p/feos-tas/code/HEAD/tree/trunk/Misc/LuaPackSetup.7z?format=raw rel=noopener external nofollow 
			"LuaPackSetup
		]a
		$LF
	]li
	[li 
		" PlayStation Bios Files. They're most typically SCPH1001. 
		[small 
			"(If the movie is failing to sync refer to the 
			[a class=intlink href=/EmulatorResources/PCSX/SyncNotes 
				"compiled sync notes
			]a
			" from 
			[a class=intlink href=/Users/Profile/Spikestuff 
				"Spikestuff
			]a
			" if you're stuggling to get a title to sync.
		]small
		")
		$LF
	]li
	[li 
		" Optional: 
		[a href=http://www.pbernert.com/gpupete154.zip rel=noopener external nofollow 
			"Pete's Soft Driver 1.54
		]a
		" - Only if you're doing the 
		[a class=intlink href=/GameGroups/45 
			"PlayStation Oddworld series
		]a
		" as that reqires Special Game Fix 
		[em 
			"No Sprite Transparency
		]em
		" enabled.
		$LF
	]li
]ul
[div class=p 
	[br 
	]br
	$LF
]div
[div class=p 
	[b 
		"NOTE
	]b
	": The resync process is very slow on modern hardware.
	[br 
	]br
	$LF
	"It is recommended to do this within a virtual machine running Windows XP (32 bit).
	[br 
	]br
	$LF
	[small 
		"(Even having hardware based in that era is also more preferred than modern hardware.
	]small
	")
	$LF
]div
[div class=p 
	"There is 
	[a class=intlink href=/Forum/Topics/20862 
		"a forum thread
	]a
	" that partially tracks information about what to do, and a good area to ask questions.
	[br 
	]br
	$LF
	"That area will also provide files for Windows 10/11 machines, but again it's better if this done in a Windows XP enviroment.
	$LF
]div
[div class=p 
	(__wikiLink|href=/1506M|implicitdisplaytext=1506M)
	" will be referred to, as it is a great example on things that can go right, and things that can go wrong.
	$LF
]div
[div class=p 
	[br 
	]br
	$LF
]div
[div class=p 
	[img class=embed mw-100 src=https://files.tasvideos.org/common/PcsxrrEncodeWofkflow/pcsxresync-firstsetup.png 
	]img
	$LF
]div
[h4 id=RunningPcsxRr 
	" Running PCSX-rr:
	$LF
]h4
[div class=p 
	[img class=embedright mw-100 src=https://files.tasvideos.org/common/PcsxrrEncodeWofkflow/pcsxresync-tassoundplugin.png 
	]img
	$LF
]div
[ol 
	[li 
		" Download the files from above, and place all the files within a pcsx emulator directory.
		$LF
	]li
	[li 
		" Install 
		[em 
			"LuaPack
		]em
		".
		$LF
	]li
	[li 
		" Make sure all plugins are inside the 
		[b 
			"plugins
		]b
		" folder.
		$LF
	]li
	[li 
		" Launch PCSX-rr and go through first time setup 
		[small 
			"(refer to the first image
		]small
		") and click OK, relaunch the program.
		$LF
		[ol 
			[li 
				" Enable: 
				[em 
					"Tools
				]em
				" > 
				[em 
					"Skip SPU Loadstate
				]em
				" (Note: If this causes problems, disable it.)
				$LF
			]li
			[li 
				" 
				[em 
					"Configuration
				]em
				" > 
				[em 
					"CD-ROM
				]em
				" and select the ISO that PCSX-rr will automatically start with.
				$LF
				[ul 
					[li 
						" Rereferal: 
						[a class=intlink href=/Users/Profile/Spikestuff 
							"Spikestuff
						]a
						" has 
						[a class=intlink href=/EmulatorResources/PCSX/SyncNotes 
							"compiled sync notes
						]a
						" for each problematic movie in terms of what bios and settings the CD titles are required to be in.
						$LF
					]li
				]ul
			]li
			[li 
				" Disable: 
				[em 
					"Configuration
				]em
				" > 
				[em 
					"Options
				]em
				" - 
				[em 
					"Pause After Playback
				]em
				".
				$LF
			]li
		]ol
	]li
	[li 
		" Within the 
		[em 
			"Configuration
		]em
		" > 
		[em 
			"Plugins & Bios
		]em
		$LF
		[ul 
			[li 
				" 
				[b 
					[em 
						"Sound
					]em
				]b
				" > Select 
				[em 
					"TAS Sound Plugin 0.2
				]em
				".
				$LF
				[ul 
					[li 
						" Under 
						[em 
							"Sound
						]em
						", Select 
						[em 
							"Configure...
						]em
						" and validate that 
						[em 
							"Movie sync mode
						]em
						" is checked 
						[small 
							"(refer to the second image
						]small
						").
						$LF
					]li
				]ul
			]li
			[li 
				" 
				[b 
					[em 
						"Sound
					]em
				]b
				" > Select 
				[em 
					"Eternal SPU Plugin 1.41
				]em
				".
				$LF
				[ul 
					[li 
						" Under 
						[em 
							"Sound
						]em
						", Select 
						[em 
							"Configure...
						]em
						" and change 
						[em 
							"Audio out method
						]em
						" to 
						[em 
							"SPUasync
						]em
						" and Async Mode to 
						[em 
							"Wait
						]em
						" 
						[small 
							"(refer to the third image
						]small
						").
						$LF
					]li
					[li 
						" After selecting OK reselect 
						[em 
							"TAS Sound Plugin 0.2
						]em
						" as the sound plugin.
						$LF
					]li
				]ul
			]li
			[li 
				" 
				[b 
					[em 
						"Graphics
					]em
				]b
				" > Select 
				[em 
					"TAS Soft Graphics Plugin 0.2
				]em
				$LF
				[ul 
					[li 
						" Under 
						[em 
							"Graphics
						]em
						", Select 
						[em 
							"Configure...
						]em
						$LF
						[ul 
							[li 
								" Quick Default Settings to 
								[em 
									"Nice
								]em
								$LF
							]li
							[li 
								" Select 
								[em 
									"Windowed Mode
								]em
								" (640x480) and change 
								[em 
									"Stretching
								]em
								" to 
								[em 
									"1:1 (faster with some cards)
								]em
								$LF
							]li
							[li 
								" Uncheck 
								[em 
									"Show FPS display on startup
								]em
								".
								$LF
							]li
							[li 
								" Check "Use FPS limit".
								$LF
							]li
						]ul
					]li
				]ul
			]li
		]ul
	]li
]ol
[div class=p 
	[img class=embedright mw-100 src=https://files.tasvideos.org/common/PcsxrrEncodeWofkflow/pcsxresync-eternalplugin.png 
	]img
	$LF
]div
[div class=p 
	[br 
	]br
	$LF
]div
[div class=p 
	[br 
	]br
	$LF
]div
[div class=p 
	[br 
	]br
	$LF
]div
[div class=p 
	[br 
	]br
	$LF
]div
[div class=p 
	[br 
	]br
	$LF
]div
[div class=p 
	[br 
	]br
	$LF
]div
[hr 
]hr
[h4 id=SettingUpAndRunningTheScript 
	" Setting Up and Running the Script:
	$LF
]h4
[div class=p 
	[b 
		"NOTE
	]b
	": If the movie you're attempting to resync is above 200,000 frames refer to the Troubleshooting section below this one first.
	$LF
]div
[ol 
	[li 
		" Open 
		[b 
			"pcsxrrWorkflowConfig.lua
		]b
		" in a text editor and at the line 45 put the whole path to your movie file inside the brackets, including the file name. If the file isn't located to where you're referring to the process won't start at all.
		$LF
		[ul 
			[li 
				" If the files are all in the same directory as pcsx-rr, and you have placed the pxm inside the movie's folder you don't have to write a whole path and instead can do this: 
				[code 
					"movieName = [.\movies\pirohiko-cb2cortexstrikesbackglitched.pxm];
				]code
				$LF
			]li
		]ul
	]li
	[li 
		" 
		[em 
			"File
		]em
		" > 
		[em 
			"Lua Scripting
		]em
		" > 
		[em 
			"New Lua Script Window
		]em
		".
		$LF
		[ul 
			[li 
				" Select 
				[b 
					"detectCheckpoint.lua
				]b
				" and run it. The movie must start, telling you in the Lua prompt what step the script is doing. When it's over, stop the script (emulator might crash).
				$LF
			]li
		]ul
	]li
]ol
[div class=p 
	[b 
		"NOTE
	]b
	": Be sure to create a copy of the folder it produced, for if any issues come out from here on out.
	$LF
]div
[ol 
	[li 
		" Run 
		[b 
			"detectCheckpoint.lua
		]b
		" once again. It will start waiting for incoming desyncs.
		$LF
	]li
	[li 
		" Start 
		[b 
			"another instance
		]b
		" of PCSX-rr.
		$LF
	]li
	[li 
		" 
		[b 
			[em 
				"Sound
			]em
		]b
		" > Select 
		[em 
			"Eternal SPU Plugin 1.41
		]em
		".
		$LF
	]li
	[li 
		" 
		[em 
			"File
		]em
		" > 
		[em 
			"Lua Scripting
		]em
		" > 
		[em 
			"New Lua Script Window
		]em
		".
		$LF
		[ul 
			[li 
				" Select 
				[b 
					"syncCheckpoint.lua
				]b
				" and run it.
				$LF
			]li
		]ul
	]li
	[li 
		" After both instances finish their job (sending desync info and resync states to each other), stop the scripts (emulator might crash).
		$LF
	]li
	[li 
		" Start 
		[b 
			"a new instance
		]b
		" of PCSX-rr.
		$LF
	]li
	[li 
		" Now, as you run 
		[b 
			"syncCheckpoint.lua
		]b
		" with 
		[em 
			"Eternal SPU
		]em
		", it will automatically load the required states at desync points.
		$LF
		[ul 
			[li 
				" Keep an eye at it at this state, because it may sway and desync unexpectedly. If that's the case...
				$LF
			]li
		]ul
	]li
]ol
[div class=p 
	[br 
	]br
	$LF
]div
[h4 id=TroubleshootingTheScript 
	" Troubleshooting the script:
	$LF
]h4
[ul 
	[li 
		" If the movie you're attempting to resync is above 200,000.
		$LF
		[ul 
			[li 
				" Open the 
				[b 
					"pcsxrrWorkflowConfig.lua
				]b
				" and go to line 84, adjust the number under "hashFrameSplit" to be above the movie you're trying to resync.
				$LF
			]li
			[li 
				" For example: 
				(__wikiLink|displaytext=Croc 100%|href=/2051M)
				" is 282926 frames, changing the hashFrameSplit to 300,000 will allow the movie to sync to completion.
				$LF
			]li
		]ul
	]li
]ul
[ul 
	[li 
		" If a desync fix fails to get fixed, and falls into a loop it's due to lacking the automatic reduction of the distance it needs to go back to resync the state.
		$LF
	]li
	[li 
		" You will need to either reduce, or increase that distance manually in 
		[b 
			"syncCheckpoint.lua
		]b
		" at line 237.
		$LF
	]li
	[li 
		" The backwards distance is composed of 2 numbers that are subtracted from the framecount: 
		[code 
			"desyncPoint = emu.framecount() - desyncAlertCount - 2;
		]code
		".
		$LF
	]li
	[li 
		" The value 
		[code 
			"- 2
		]code
		" can be adjusted to 
		[code 
			"- 4
		]code
		" or 
		[code 
			"+ 4
		]code
		" for instance, whatever the number is required for the situation that's needed for it to resync and complete the resync.
		$LF
	]li
	[li 
		" 
		[b 
			"Do not delete the intermediate files!
		]b
		"  Existing checkpoints will be used up to that point, and then it will try to create new ones that are closer back to the desync point.
		$LF
	]li
	[li 
		" The closer it is, the more guaranteed it is to fix the desync, but the more apparent it may be that a state was loaded.
		$LF
	]li
	[li 
		" If this doesn't work, then restart again from the file that you made a backup of and use that new desyncPoint value you're using.
		$LF
	]li
]ul
[div class=p 
	[br 
	]br
	$LF
]div
[h2 id=KkaptureRequiredFiles 
	" kkapture Required Files: 
	[img class=embedright mw-100 src=https://files.tasvideos.org/common/PcsxrrEncodeWofkflow/pcsxresync-kkapture.png 
	]img
	$LF
]h2
[ul 
	[li 
		" 
		[a href=https://sourceforge.net/p/feos-tas/code/HEAD/tree/trunk/Misc/pcsx-kkapture.7z?format=raw rel=noopener external nofollow 
			"PCSX - kkapture
		]a
		$LF
	]li
	[li 
		" 
		[a href=https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist rel=noopener external nofollow 
			"Visual Studio
		]a
		" - If you're using Windows XP download 2008 (this is for kkapture).
		$LF
	]li
]ul
[h4 id=RunningKkapture 
	" Running kkapture.
	$LF
]h4
[div class=p 
	"Please also refer to the 
	[a class=intlink href=/EncodingGuide/VideoDumping#Pcsx 
		"Encoding Guide
	]a
	" as well, if anything changes.
	[br 
	]br
	$LF
	"Be sure to have 
	[em 
		"Eternal SPU
	]em
	" selected before running kkapture, and also 
	[b 
		"uncheck "Use FPS Limit"
	]b
	" in the video settings.
	$LF
]div
[ul 
	[li 
		" 
		[em 
			"Demo
		]em
		" > Select the emulator executional file.
		$LF
	]li
	[li 
		" 
		[em 
			"Arguments
		]em
		" > 
		[code 
			"-lua synchCheckpoint.lua
		]code
		$LF
		[ul 
			[li 
				" This is assuming that kkapture is in the same area as pcsx and synchCheckpoint.lua
				$LF
			]li
		]ul
	]li
	[li 
		" 
		[em 
			"Target
		]em
		" > Select the AVI file name and path.
		$LF
	]li
	[li 
		" 
		[em 
			"Frame rate
		]em
		" > 60.0 (all PCSX-RR TASes are NTSC-U/J).
		$LF
	]li
	[li 
		" 
		[em 
			"Encoder
		]em
		" > 
		[em 
			".AVI (VfW, segmented)
		]em
		".
		$LF
	]li
	[li 
		" 
		[em 
			"AVI encoding options
		]em
		" > Pick a lossless codec, preferably 
		[em 
			"Lagarith
		]em
		".
		$LF
	]li
	[li 
		" Enable these settings under 
		[em 
			"Tweaking
		]em
		" and 
		[em 
			"Auto-Skip
		]em
		", anything else should be disabled.
		$LF
		[ul 
			[li 
				" 
				[em 
					"Capture Video
				]em
				" and 
				[em 
					"Capture Audio
				]em
				".
				$LF
			]li
			[li 
				" 
				[em 
					"Make Sleep() last one frame
				]em
				".
				$LF
			]li
			[li 
				" 
				[em 
					"Skip frames on frequent time checks
				]em
				".
				$LF
			]li
		]ul
	]li
	[li 
		" Push 
		[b 
			"kkapture!
		]b
		" button.
		$LF
	]li
]ul
[hr 
]hr
[div class=p 
	"After the movie is completed, you can validate the dump, and be done... well almost.
	[br 
	]br
	$LF
	"As referred to at the start this 
	(__wikiLink|displaytext=Crash 2|href=/1506M)
	" TAS was going to be referred to later, and we'll explain why here.
	$LF
]div
[div class=p 
	"During its dumping process, after it successfully dumped it originally had audio issues within the Komodo Bros. fight 
	[b 
		[a href=https://youtu.be/XAri9uaXNrY rel=noopener external nofollow 
			"where the wrong audio samples would play
		]a
	]b
	".
	[br 
	]br
	$LF
	"Be sure to always create two resynced files if need be (maybe more), and try changing things up such as with the desyncPoint, or remove savestates it created if you need to.
	$LF
]div
[div class=p 
	"Another nice to have at least for the audience viewing the TAS is actually creating two dumps if necessary.
	[br 
	]br
	$LF
	"Again sticking to Crash 2, it showcases the vast difference of what it used to sound like, and what with the effort of going through it, what it actually should sound like with "Restored Audio".
	[br 
	]br
	$LF
	"There's no shame in showing a blemish with how TASes used to sound, and it should be shared for others to enjoy the little quirks.
	$LF
]div
[div class=p 
	"In other cases you may need to change and work with a different value for desyncPoint if the audio outright disapears and causes hitching.
	[br 
	]br
	$LF
	"If that's the case for you try doing the positive value to what you placed there instead. So for instance if you already changed it to 
	[code 
		"- 4
	]code
	", then switching the value to 
	[code 
		"+ 4
	]code
	" should help the process.
	[br 
	]br
	$LF
	"The movie should still sync with the opposite value of what you initially used, and hopefully not get stuck in a loop.
	[br 
	]br
	$LF
	"This will create some grunt work and some stitching but this is what can happen when you're going with Eternal SPU.
]div
