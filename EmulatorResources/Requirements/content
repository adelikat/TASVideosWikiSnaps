20
[p 
	(ActiveTab|tab=b4)
	$LF
	"Conditions on which the TASvideos site can start accepting
	$LF
	"and publishing movies for a new emulator.
	$LF
]p
[p 
	"Note: These are rules from the site maintainer perspective.
	[br 
	]br
	$LF
	"The page 
	(__wikiLink|EmulatorResources/Features)
	" lists which features are desired by the players.
	$LF
]p
[div class=toc 
	[ul 
		[li 
			[ul 
				[li 
					[a href=#heading-384 
						" Movie files
						$LF
					]a
				]li
				[li 
					[a href=#heading-492 
						" Re-recording
						$LF
					]a
				]li
				[li 
					[a href=#heading-1414 
						" Emulation quality
						$LF
					]a
				]li
				[li 
					[a href=#heading-1557 
						" Emulation stability
						$LF
					]a
				]li
				[li 
					[a href=#heading-2218 
						" Movie authenticity
						$LF
					]a
				]li
				[li 
					[a href=#heading-3586 
						" Other movie information
						$LF
					]a
				]li
				[li 
					[a href=#heading-4040 
						" Accessibility
						$LF
					]a
				]li
				[li 
					[a href=#heading-4481 
						" Possible to make AVI
						$LF
					]a
				]li
			]ul
		]li
	]ul
]div
[p 
	"This page is part of the 
	(__wikiLink|emulator resources)
	" page collection. Back to: 
	(listparents)
	$LF
]p
[h3 
	" Movie files
	$LF
	[a id=heading-384 
	]a
]h3
[p 
	"Obviously, the emulator must be capable of creating a movie file that
	$LF
	"it can later replay.
	$LF
]p
[h3 
	" Re-recording
	$LF
	[a id=heading-492 
	]a
]h3
[p 
	"Naturally, it must be possible to create tool-assisted movies on the emulator.
	$LF
	"This includes the absolute minimum of adjusting the emulation speed and
	$LF
	"sync-robust savestates.
	$LF
]p
[ul 
	[li 
		" Sync-robustness means that if the same savestate is loaded 10 times, the emulation must progress exactly the same way each time. There must not be random factors other than what is included in the savestate.
		$LF
		[ul 
			[li 
				" In particular, the clock of the host computer, and the files present in the host computer (besides the ROM), must not affect the emulation.
				$LF
			]li
		]ul
		" Changes in emulation speed and loading/writing savestates must not be written into the movie, or it must be possible to ignore them when playing back the movie 
		"[
		[a id=1 
		]a
		[a href=#r1 
			"1
		]a
		"]
		". When a savestate is loaded, the movie must automatically rewind to the time of the state being loaded.
		$LF
	]li
]ul
[p 
	"Other tools favored for TAS making are listed on 
	[a href=/EmulatorResources/Features 
		"Desired Emulator Features
	]a
	".
	$LF
]p
[h3 
	" Emulation quality
	$LF
	[a id=heading-1414 
	]a
]h3
[p 
	"The emulation should be as close to the original product as possible.
	$LF
	"What qualifies as "enough" can only be discussed.
	$LF
]p
[h3 
	" Emulation stability
	$LF
	[a id=heading-1557 
	]a
]h3
[p 
	"The nature of this site is that of an archive. The movie files will be preserved on this site as long as possible. Thus it is desirable that:
	$LF
]p
[ul 
	[li 
		" The files will be playable on future versions of the emulator 
		"[
		[a id=1 
		]a
		[a href=#r1 
			"1
		]a
		"]
		".
		$LF
	]li
	[li 
		" The files will be playable on the emulator regardless of platform (Linux, Windows), or environment (plugins, etc)
		$LF
	]li
	[li 
		" The emulator will still be around when the hardware/operating system for which it was compiled for has expired (source code should be publicly available, standards-compliant and portable).
		$LF
	]li
]ul
[p 
	"In that sense, we favor mature emulators over those which are having new incompatible versions released every month.
	$LF
]p
[h3 
	" Movie authenticity
	$LF
	[a id=heading-2218 
	]a
]h3
[p 
	"On this site, movies are usually made in the form of speed records,
	$LF
	"that will be challenged by other players. It is therefore mandatory
	$LF
	"to provide a common ground for all movies of a particular system.
	$LF
	"That common ground is usually decided to be 
	[em 
		"power-on
	]em
	" or 
	[em 
		"reset
	]em
	".
	$LF
]p
[ul 
	[li 
		" The movie file must indicate whether it begins from power-on or a savestate.
		$LF
	]li
	[li 
		" The indications must be tamper-proof; for example, if it indicates that it begins from a power-on, it must not load the savestate after resetting.
		$LF
	]li
	[li 
		" The movie should store the player's input, not the emulation results (CPU state changes or video frames). If the emulator is robust, only the input and the game are required to reproduce the playing session.
		$LF
		[ul 
			[li 
				" The CPU state changes and/or video frames are easy to tamper with, destroying the credibility of the movie.
				$LF
			]li
		]ul
		" The movie file must indicate the length of the movie in a way that can be derived into seconds without access to the game/emulator.
		$LF
		[ul 
			[li 
				" However, because the indicated length is easily changed with an hex editor, it should still be possible to programmatically verify that the indicated length actually matches with the amount of input data (i.e. access to the emulator and the ROM must not be required). Or, the emulator should reject movie files where the indicated length doesn't match the actual length of the movie.
				$LF
			]li
		]ul
	]li
]ul
[h3 
	" Other movie information
	$LF
	[a id=heading-3586 
	]a
]h3
[p 
	"By tradition, we require also that the movie indicates the
	$LF
	"number of rerecords used in creating the movie, and includes
	$LF
	"a field for the author in which they can fill their name
	$LF
	"(preferably utf-8 encoded to be international-friendly).
	$LF
]p
[p 
	"All information contained within the movie file must be parseable
	$LF
	"and interpretable without access to the game or the emulator (complete
	$LF
	"documentation of the movie file format is required).
	$LF
]p
[h3 
	" Accessibility
	$LF
	[a id=heading-4040 
	]a
]h3
[p 
	"The emulator must be freely available via Internet without subscriptions or fees.
	$LF
]p
[ul 
	[li 
		" It should be available for Windows.
		$LF
	]li
	[li 
		" It should be available for Linux.
		$LF
	]li
	[li 
		" It should be available for Mac OSX.
		$LF
	]li
	[li 
		" It should be customizable (source code included).
		$LF
	]li
]ul
[p 
	"Sometimes we let some of those requirements slip, but doing so will increase
	$LF
	"the work our 
	[a href=/Users 
		"encoders and judges
	]a
	" have to do, so it is preferred that
	$LF
	"those rules are met.
	$LF
]p
[h3 
	" Possible to make AVI
	$LF
	[a id=heading-4481 
	]a
]h3
[p 
	"It should be possible to create an AVI from the emulator.
	$LF
]p
[ul 
	[li 
		" If it runs on Windows, it should use the Windows API that allows codec selection 
		"[
		[a id=1 
		]a
		[a href=#r1 
			"1
		]a
		"]
		". It should also not have a 2 GB file size limit.
		$LF
	]li
	[li 
		" If the emulator runs on Linux and its source code is available, our Linux-friendly encoders can create their own AVI dumping tools.
		$LF
	]li
]ul
[p 
	"It should have a proper audio/video sync.
	$LF
]p
[ul 
	[li 
		" The number of video frames per second should be some known number. (Usually ~60 on NTSC systems, ~50 on PAL systems.) If the host computer is not fast enough to render at 100% speed, it should still be possible to force the emulator to render all frames without skipping and without duplicates.
		$LF
	]li
	[li 
		" The amount of audio stream generated per each video frame should be consistent regardless of system load. Without that, there is no A/V sync.
		$LF
	]li
]ul
[hr 
]hr
[p 
	[a id=r1 
	]a
	[sup 
		"[
		[a href=#1 
			"1
		]a
		"]
	]sup
	": 
	(__wikiLink|user:Nach)
	": Some statements here are ambiguous and also don't seem to be as thought out as they should be. "Changes in emulation speed and loading/writing savestates must not be written into the movie", why not? So what if that information is there as long as it is ignorable for playback? "The files will be playable on future versions of the emulator", is unreasonable. Future versions of emulators, and I just don't mean rerecording feature updates, but actual emulation updates will make old movies desync. Unless emulation core microcode is going to be stored in the movie file to be played back with, future compatibility is not really possible. The best you're going to get is maybe an emulator which splits each version of it's entire emulation core into one little package with a consistent interface, and have each new version bundle every previous emulation core package, and use the proper one on video playback. Such a system also means that if a graphics bug was fixed in a particular game, playing back an old video won't achieve the benefits of the new version. "If it runs on Windows, it should use the Windows API that allows codec selection", why must it use the Windows API for such a thing? If the codec is selectable, and has access to MPEG-4 codecs and x264, and any new codecs that we'll deem appropriate, I don't see why it must use the Windows API to do so. IMO, if it's an MEncoder frontend and can select from a list of MEncoder supported codecs, I don't see the problem.
]p
