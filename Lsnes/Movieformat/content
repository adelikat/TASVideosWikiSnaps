7
[div class=toc 
	[ul 
		[li 
			[a href=#Textformat
 
				"Text format
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#Overallfilestructure
 
						" Overall file structure
						$LF
					]a
				]li
				[li 
					[a href=#Savestate/SRAM/cleandetection
 
						" Savestate / SRAM / clean detection
						$LF
					]a
				]li
				[li 
					[a href=#Members
 
						" Members
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#Gametype
 
								" gametype
								$LF
							]a
						]li
						[li 
							[a href=#Port<n>(<n>isanumber)
 
								" port<n> (<n> is a number)
								$LF
							]a
						]li
						[li 
							[a href=#Setting.<name>
 
								" setting.<name>
								$LF
							]a
						]li
						[li 
							[a href=#Gamename
 
								" gamename
								$LF
							]a
						]li
						[li 
							[a href=#Authors
 
								" authors
								$LF
							]a
						]li
						[li 
							[a href=#Systemid
 
								" systemid
								$LF
							]a
						]li
						[li 
							[a href=#Controlsversion
 
								" controlsversion
								$LF
							]a
						]li
						[li 
							[a href=#Coreversion
 
								" coreversion
								$LF
							]a
						]li
						[li 
							[a href=#Projectid
 
								" projectid
								$LF
							]a
						]li
						[li 
							[a href=#<slot>.sha256
 
								" <slot>.sha256
								$LF
							]a
						]li
						[li 
							[a href=#Moviesram.<name>
 
								" moviesram.<name>
								$LF
							]a
						]li
						[li 
							[a href=#Saveframe
 
								" saveframe
								$LF
							]a
						]li
						[li 
							[a href=#Lagcounter
 
								" lagcounter
								$LF
							]a
						]li
						[li 
							[a href=#Pollcounters
 
								" pollcounters
								$LF
							]a
						]li
						[li 
							[a href=#Hostmemory
 
								" hostmemory
								$LF
							]a
						]li
						[li 
							[a href=#Ramcontent.<name>
 
								" ramcontent.<name>
								$LF
							]a
						]li
						[li 
							[a href=#Savestate
 
								" savestate
								$LF
							]a
						]li
						[li 
							[a href=#Savestate.anchor
 
								" savestate.anchor
								$LF
							]a
						]li
						[li 
							[a href=#Screenshot
 
								" screenshot
								$LF
							]a
						]li
						[li 
							[a href=#Sram.<name>
 
								" sram.<name>
								$LF
							]a
						]li
						[li 
							[a href=#Rerecords:
 
								" rerecords:
								$LF
							]a
						]li
						[li 
							[a href=#Rrdata
 
								" rrdata
								$LF
							]a
						]li
						[li 
							[a href=#Starttime.second
 
								" starttime.second
								$LF
							]a
						]li
						[li 
							[a href=#Starttime.subsecond
 
								" starttime.subsecond
								$LF
							]a
						]li
						[li 
							[a href=#Savetime.second
 
								" savetime.second
								$LF
							]a
						]li
						[li 
							[a href=#Savetime.subsecond
 
								" savetime.subsecond
								$LF
							]a
						]li
						[li 
							[a href=#Input
 
								" input
								$LF
							]a
						]li
						[li 
							[a href=#Subtitles
 
								" subtitles
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
		[li 
			[a href=#Binaryformat
 
				" Binary format
				$LF
			]a
		]li
		[li 
			[ul 
				[li 
					[a href=#Types:
 
						" Types:
						$LF
					]a
				]li
				[li 
					[a href=#Overallfilestructure:
 
						" Overall file structure:
						$LF
					]a
				]li
				[li 
					[a href=#Blocks
 
						" Blocks
						$LF
					]a
				]li
				[li 
					[ul 
						[li 
							[a href=#Blocktype0xf5e0fad7:ANCHOR_SAVE:
 
								" Block type 0xf5e0fad7: ANCHOR_SAVE:
								$LF
							]a
						]li
						[li 
							[a href=#Blocktype0xafff97b4:AUTHOR
 
								" Block type 0xafff97b4: AUTHOR
								$LF
							]a
						]li
						[li 
							[a href=#Blocktype0xe4344c7e:CORE_VERSION
 
								" Block type 0xe4344c7e: CORE_VERSION
								$LF
							]a
						]li
						[li 
							[a href=#Blocktype0xe80d6970:GAMENAME
 
								" Block type 0xe80d6970: GAMENAME
								$LF
							]a
						]li
						[li 
							[a href=#Blocktype0x3bf9d187:HOSTMEMORY
 
								" Block type 0x3bf9d187: HOSTMEMORY
								$LF
							]a
						]li
						[li 
							[a href=#Blocktype0xd261338f:MACRO
 
								" Block type 0xd261338f: MACRO
								$LF
							]a
						]li
						[li 
							[a href=#Blocktype0xf3dca44b:MOVIE
 
								" Block type 0xf3dca44b: MOVIE
								$LF
							]a
						]li
						[li 
							[a href=#Blocktype0xbbc824b7:MOVIE_SRAM
 
								" Block type 0xbbc824b7: MOVIE_SRAM
								$LF
							]a
						]li
						[li 
							[a href=#Blocktype0x18c3a975:MOVIE_TIME
 
								" Block type 0x18c3a975: MOVIE_TIME
								$LF
							]a
						]li
						[li 
							[a href=#Blocktype0x359bfbab:PROJECT_ID
 
								" Block type 0x359bfbab: PROJECT_ID
								$LF
							]a
						]li
						[li 
							[a href=#Blocktype0xd3ec3770:RAMCONTENT
 
								" Block type 0xd3ec3770: RAMCONTENT
								$LF
							]a
						]li
						[li 
							[a href=#Blocktype0x0428acfc:ROMHASH
 
								" Block type 0x0428acfc: ROMHASH
								$LF
							]a
						]li
						[li 
							[a href=#Blocktype0xa3a07f71:RRDATA
 
								" Block type 0xa3a07f71: RRDATA
								$LF
							]a
						]li
						[li 
							[a href=#Blocktype0xae9bfb2f:SAVE_SRAM
 
								" Block type 0xae9bfb2f: SAVE_SRAM
								$LF
							]a
						]li
						[li 
							[a href=#Blocktype0x2e5bc2ac:SAVESTATE
 
								" Block type 0x2e5bc2ac: SAVESTATE
								$LF
							]a
						]li
						[li 
							[a href=#Blocktype0xc6760d0e:SCREENSHOT
 
								" Block type 0xc6760d0e: SCREENSHOT
								$LF
							]a
						]li
						[li 
							[a href=#Blocktype0x6a7054d3:SUBTITLE
 
								" Block type 0x6a7054d3: SUBTITLE
								$LF
							]a
						]li
					]ul
				]li
			]ul
		]li
	]ul
]div
[h2 id=Textformat
 
	"Text format
	$LF
]h2
[h3 id=Overallfilestructure
 
	" Overall file structure
	$LF
]h3
[p 
	"The movie / savestate files are .zip archives with the following restictions
	$LF
]p
[ul 
	[li 
		" Members must be each be uncompressed or compressed using deflate.
		$LF
	]li
	[li 
		" Encryption must not be used.
		$LF
	]li
	[li 
		" No patching or any other exotic stuff.
		$LF
	]li
]ul
[h3 id=Savestate/SRAM/cleandetection
 
	" Savestate / SRAM / clean detection
	$LF
]h3
[ul 
	[li 
		" If file named "savestate" is present, it is a savestate, otherwise
		$LF
	]li
	[li 
		" If file named "savestate.anchor" is present, it starts from savestate, otherwise
		$LF
	]li
	[li 
		" If file with name starting with "moviesram." is present, it starts from SRAM, otherwise
		$LF
	]li
	[li 
		" It starts from clean state
		$LF
	]li
]ul
[h3 id=Members
 
	" Members
	$LF
]h3
[p 
	"The various standard members of the savestate.
	$LF
]p
[h4 id=Gametype
 
	" gametype
	$LF
]h4
[p 
	"Type: One line
	[br 
	]br
	$LF
	"If misisng: Load error
	[br 
	]br
	$LF
	"Gives the type of system and region.
	$LF
]p
[ul 
	[li 
		" snes_ntsc: NTSC SNES
		$LF
	]li
	[li 
		" snes_pal: PAL SNES
		$LF
	]li
	[li 
		" bsx: BS-X, non-slotted cartridge (always NTSC)
		$LF
	]li
	[li 
		" bsxslotted: BS-X slotted cartridge (always NTSC)
		$LF
	]li
	[li 
		" sufamiturbo: Sufami Turbo (always NTSC)
		$LF
	]li
	[li 
		" sgb_ntsc: NTSC SGB
		$LF
	]li
	[li 
		" sgb_pal: PAL SGB
		$LF
	]li
	[li 
		" gdmg: Game Boy
		$LF
	]li
	[li 
		" ggbc: Game Boy Color
		$LF
	]li
	[li 
		" ggbca: Game Boy Color (GBA initial reg. values)
		$LF
	]li
]ul
[p 
	"PAL framerate: 322445/6448 fps.
	[br 
	]br
	$LF
	"NTSC framerate: 10738636/178683 fps.
	[br 
	]br
	$LF
	"Game Boy framerate: 262144/4389 fps.
	$LF
]p
[h4 id=Port<n>(<n>isanumber)
 
	" port<n> (<n> is a number)
	$LF
]h4
[p 
	"Type: One line
	[br 
	]br
	$LF
	"If misisng: Set to default
	[br 
	]br
	$LF
	"Gives the type of port <n> (1-based).
	$LF
]p
[ul 
	[li 
		" none: No controller present
		$LF
	]li
	[li 
		" gamepad: Standard Gamepad
		$LF
	]li
	[li 
		" multitap: Multitap (4 gamepads). Note: Causes most games to not work or crash.
		$LF
	]li
	[li 
		" mouse: Mouse
		$LF
	]li
	[li 
		" superscope: Super Scope
		$LF
	]li
	[li 
		" justifier: 1 justifier
		$LF
	]li
	[li 
		" justifiers: 2 justifiers
		$LF
	]li
]ul
[p 
	"Valid values depend on core type.
	$LF
]p
[h4 id=Setting.<name>
 
	" setting.<name>
	$LF
]h4
[p 
	"Type: One line
	[br 
	]br
	$LF
	"If missing: Sett to default
	[br 
	]br
	$LF
	"Gives value of a setting. Valid values depend on core type.
	$LF
]p
[h4 id=Gamename
 
	" gamename
	$LF
]h4
[p 
	"Type: One line
	[br 
	]br
	$LF
	"If missing: Game name will be blank.
	[br 
	]br
	$LF
	"Name of the game. Purely for comment purposes
	$LF
]p
[h4 id=Authors
 
	" authors
	$LF
]h4
[p 
	"Type: Textual
	[br 
	]br
	$LF
	"If missing: Authors list will be blank.
	[br 
	]br
	$LF
	"Authors of the run, one per line. The part before '|' (if any) is real name, the part after is nickname.
	$LF
]p
[h4 id=Systemid
 
	" systemid
	$LF
]h4
[p 
	"Type: One line
	[br 
	]br
	$LF
	"If missing: Load error
	[br 
	]br
	$LF
	"Must contain 'lsnes-rr1' (note: Even with rr0 and rr2 versions).
	$LF
]p
[h4 id=Controlsversion
 
	" controlsversion
	$LF
]h4
[p 
	"Type: One line, mandatory
	[br 
	]br
	$LF
	"If missing: Load error
	[br 
	]br
	$LF
	"Must contain '0'.
	$LF
]p
[h4 id=Coreversion
 
	" coreversion
	$LF
]h4
[p 
	"Type: One line, mandatory
	[br 
	]br
	$LF
	"If missing: Load error
	[br 
	]br
	$LF
	"Bsnes core version string. Mismatch is error on loading savestate, warning on loading movie.
	$LF
]p
[h4 id=Projectid
 
	" projectid
	$LF
]h4
[p 
	"Type: One line
	[br 
	]br
	$LF
	"If missing: Load error
	[br 
	]br
	$LF
	"Hexadecimal movie identifier. Used for recognizing movies.
	$LF
]p
[h4 id=<slot>.sha256
 
	" <slot>.sha256
	$LF
]h4
[p 
	"Type one line
	[br 
	]br
	$LF
	"If missing: Corresponding ROM is assumed absent
	[br 
	]br
	$LF
	"SHA-256 hashes of ROM images. The <slot> may be either 'rom', 'romxml', 'slota'...'slotz' or 'slotaxml'...'slotzxml'.
	$LF
]p
[p 
	"The 'xml' slots are markup, and can be present only if corresponding non-'xml' slot is.
	$LF
]p
[p 
	"Valid slots vary depending on the system:
	$LF
]p
[ul 
	[li 
		" SNES/GB/GBC: rom
		$LF
	]li
	[li 
		" BS-X/SGB: rom, slota
		$LF
	]li
	[li 
		" Sufami Turbo: rom, slota, slotb.
		$LF
	]li
]ul
[p 
	"Hash failure is error on loading savestate, warning on loading movie.
	$LF
]p
[h4 id=Moviesram.<name>
 
	" moviesram.<name>
	$LF
]h4
[p 
	"Type: Raw binary
	[br 
	]br
	$LF
	"If absent: Start with said SRAM clean.
	[br 
	]br
	$LF
	"Contains initial contents of given SRAM.
	$LF
]p
[p 
	"As of bsnes v085, the following are used:
	$LF
]p
[ul 
	[li 
		" moviesram.bss: SRAM on BS-X cartridge
		$LF
	]li
	[li 
		" moviesram.bsp: PSRAM on BS-X cartridge
		$LF
	]li
	[li 
		" moviesram.rtc: State of RTC on cartridge
		$LF
	]li
	[li 
		" moviesram.nec: State of DSP ram on cartridge (if non-volatile)
		$LF
	]li
	[li 
		" moviesram.slota.sts: State of Sufami Turbo slot A SRAM.
		$LF
	]li
	[li 
		" moviesram.slotb.sts: State of Sufami Turbo slot B SRAM.
		$LF
	]li
	[li 
		" moviesram.srm: SNES cartridge SRAM.
		$LF
	]li
]ul
[p 
	"Gambatte uses the following:
	$LF
]p
[ul 
	[li 
		" moviesram.main: Main SRAM.
		$LF
	]li
	[li 
		" moviesram.rtc: RTC.
		$LF
	]li
]ul
[p 
	"The cartridge may have only some of possible SRAMs or even none.
	$LF
]p
[h4 id=Saveframe
 
	" saveframe
	$LF
]h4
[p 
	"Type: One line
	[br 
	]br
	$LF
	"If absent: Error if savestate, otherwise ignored
	[br 
	]br
	$LF
	"Contains the number of frame game was saved on. Ignored if not loading savestate.
	$LF
]p
[h4 id=Lagcounter
 
	" lagcounter
	$LF
]h4
[p 
	"Type: One line
	[br 
	]br
	$LF
	"If absent: Error if savestate, otherwise ignored
	[br 
	]br
	$LF
	"Contains the number of lag frames that have occured so far. Ignored if not loading savestate.
	$LF
]p
[h4 id=Pollcounters
 
	" pollcounters
	$LF
]h4
[p 
	"Type: Text
	[br 
	]br
	$LF
	"If absent: Error if savestate, otherwise ignored
	[br 
	]br
	$LF
	"Contains the poll counters and data ready flags of (currently 100) controls.
	$LF
]p
[h4 id=Hostmemory
 
	" hostmemory
	$LF
]h4
[p 
	"Type: Raw binary
	[br 
	]br
	$LF
	"If absent: Resume with hostmemory clean
	[br 
	]br
	$LF
	"Contains the Lua host memory. Ignored if not loading savestate.
	$LF
]p
[h4 id=Ramcontent.<name>
 
	" ramcontent.<name>
	$LF
]h4
[p 
	"Type: Raw binary
	[br 
	]br
	$LF
	"If absent: Fill with defaults
	[br 
	]br
	$LF
	"Contains initial content of RAM memory block <name>.
	$LF
]p
[h4 id=Savestate
 
	" savestate
	$LF
]h4
[p 
	"Type: Raw binary
	[br 
	]br
	$LF
	"If absent: Load as movie
	[br 
	]br
	$LF
	"Contains the bsnes core savestate.
	$LF
]p
[p 
	"The last 32 bytes are SHA-256 checksum of everything previous (the actual core savestate).
	$LF
]p
[h4 id=Savestate.anchor
 
	" savestate.anchor
	$LF
]h4
[p 
	"Type: Raw binary
	[br 
	]br
	$LF
	"If absent: Start from clean state or SRAM
	[br 
	]br
	$LF
	"Contains the bsnes core savestate for initial state.
	$LF
]p
[p 
	"The last 32 bytes are SHA-256 checksum of everything previous (the actual core savestate).
	$LF
]p
[h4 id=Screenshot
 
	" screenshot
	$LF
]h4
[p 
	"Type: Raw binary
	[br 
	]br
	$LF
	"If absent: Load error
	[br 
	]br
	$LF
	"Contains screenshot of current screen.
	$LF
]p
[h4 id=Sram.<name>
 
	" sram.<name>
	$LF
]h4
[p 
	"Type: Raw binary
	[br 
	]br
	$LF
	"If absent: Ignored
	[br 
	]br
	$LF
	"Contains the contents of SRAM at the time of savestate. Ignored when loading.
	$LF
]p
[h4 id=Rerecords:
 
	" rerecords:
	$LF
]h4
[p 
	"Type: One line
	[br 
	]br
	$LF
	"If absent: Ignored
	[br 
	]br
	$LF
	"Contains the rerecord count. Ignored when loading.
	$LF
]p
[h4 id=Rrdata
 
	" rrdata
	$LF
]h4
[p 
	"Type: Raw binary
	[br 
	]br
	$LF
	"If absent: Load error
	[br 
	]br
	$LF
	"Contains the data related to tracking rerecords. The rerecord count is computed from this.
	$LF
]p
[p 
	"The data compresses a set of IDs, each 32 bytes in length. Those are compressed into sequence of records (concatenated), each encoding starting ID and number of consequtive IDs (big-endian integers modulo 2^256 where next is increment by 1).
	$LF
]p
[p 
	"Each record consists of three parts:
	$LF
]p
[ul 
	[li 
		" Opcode byte
		$LF
	]li
	[li 
		" * Bits 0-4: The number of initial bytes omitted from the ID.
		$LF
	]li
	[li 
		" * Bits 5-6: Number of bytes in sequence length.
		$LF
	]li
	[li 
		" * Bit 7: Unused.
		$LF
	]li
	[li 
		" First ID in sequence
		$LF
	]li
	[li 
		" * The omitted bytes are taken from "next ID" field.
		$LF
	]li
	[li 
		" Sequence length
		$LF
	]li
	[li 
		" * If 0 bytes, the sequence length is 1.
		$LF
	]li
	[li 
		" * If 1 byte, the sequence length minus 2.
		$LF
	]li
	[li 
		" * If 2 bytes, big endian sequence length minus 258.
		$LF
	]li
	[li 
		" * If 3 bytes, big endian sequence length minus 65794.
		$LF
	]li
]ul
[p 
	"If more than 16,843,009 consequtive IDs are needed, multiple records are used to encode that.
	$LF
]p
[p 
	"After each record, the next ID field is set to the ID that comes after the last ID actually added. This field starts as all zeroes.
	$LF
]p
[h4 id=Starttime.second
 
	" starttime.second
	$LF
]h4
[p 
	"Type: One line
	[br 
	]br
	$LF
	"If absent: Default to 1,000,000,000.
	[br 
	]br
	$LF
	"Contains the RTC starting time second part (since Unix epoch).
	$LF
]p
[h4 id=Starttime.subsecond
 
	" starttime.subsecond
	$LF
]h4
[p 
	"Type: One line
	[br 
	]br
	$LF
	"If absent: Default to 0.
	[br 
	]br
	$LF
	"Contains the RTC starting time subsecond part (in units of SMP cycles).
	$LF
]p
[h4 id=Savetime.second
 
	" savetime.second
	$LF
]h4
[p 
	"Type: One line
	[br 
	]br
	$LF
	"If absent: Default to 1,000,000,000.
	[br 
	]br
	$LF
	"Contains the RTC current time second part (since Unix epoch).
	$LF
]p
[h4 id=Savetime.subsecond
 
	" savetime.subsecond
	$LF
]h4
[p 
	"Type: One line
	[br 
	]br
	$LF
	"If absent: Default to 0.
	[br 
	]br
	$LF
	"Contains the RTC current time subsecond part (in units of SMP cycles).
	$LF
]p
[h4 id=Input
 
	" input
	$LF
]h4
[p 
	"Type: Textual
	[br 
	]br
	$LF
	"If absent: Load error
	[br 
	]br
	$LF
	"Contains the input, one subframe per line.
	$LF
]p
[p 
	"If line starts with <tab>, <CR>, <LF>, space, '.' or '|', it is part of previous frame, otherwise it starts a new frame (the first non-empty line must start a new frame).
	$LF
]p
[p 
	"Format:
	$LF
]p
[pre 
	"   F.|BYsSudlrAXLR
	$LF
]pre
[p 
	"Where udlr are the directional buttons and LR are their respective buttons. If F is replaced with a '.' or whitespace, then this is a subframe instead of a frame. If the second character is not a '.' or whitespace, then this frame contains a reset. Certain resets are delayed resets, which have the following format:
	$LF
]p
[pre 
	"   FR X Y|BYsSudlrAXLR
	$LF
]pre
[p 
	"Where 10000 * X + Y = the number of instructions to wait before resetting. When using LSMV's Gameboy (Gambatte) core, the format of a frame is as follows:
	$LF
]p
[pre 
	"   F.|ABsSrlud
	$LF
]pre
[h4 id=Subtitles
 
	" subtitles
	$LF
]h4
[p 
	"Type: Textual
	[br 
	]br
	$LF
	"If absent: Assume empty
	[br 
	]br
	$LF
	"Contains subtitles, one per line in format <firstframe> <length> <text>
	$LF
]p
[p 
	"Backslash is written as \\, linefeed is written as \n
	$LF
]p
[h2 id=Binaryformat
 
	" Binary format
	$LF
]h2
[h3 id=Types:
 
	" Types:
	$LF
]h3
[ul 
	[li 
		" Byte: 1 byte unsigned number.
		$LF
	]li
	[li 
		" 32-bit: 4 byte unsigned big-endian number.
		$LF
	]li
	[li 
		" varint: Variable-length number, all but the last byte have bit 7 set, last 7 bits of each byte form the number in 
		[b 
			"little endian
		]b
		" order.
		$LF
	]li
	[li 
		" string: Varint containing number of bytes in string, followed by UTF-8 value of that length.
		$LF
	]li
	[li 
		" implicit-string: UTF-8 string taking remainder of block (these can only be inside blocks).
		$LF
	]li
	[li 
		" implicit-blob: Binary data taking the remainder of block (these can only be inside blocks).
		$LF
	]li
]ul
[h3 id=Overallfilestructure:
 
	" Overall file structure:
	$LF
]h3
[p 
	"In order:
	$LF
]p
[ul 
	[li 
		" Opaque: "lsmv" 0x1A
		$LF
	]li
	[li 
		" string: Sysregion code (see gametype).
		$LF
	]li
	[li 
		" Zero or more settings, for each:
		$LF
	]li
	[li 
		" * Byte: 1
		$LF
	]li
	[li 
		" * string: Name of setting.
		$LF
	]li
	[li 
		" * string: Value of setting.
		$LF
	]li
	[li 
		" Byte: 0
		$LF
	]li
	[li 
		" Zero or more blocks, for each:
		$LF
	]li
	[li 
		" * 32-bit: 0xaddb2d86
		$LF
	]li
	[li 
		" * 32-bit: Block type.
		$LF
	]li
	[li 
		" * Varint: Block payload length.
		$LF
	]li
	[li 
		" * Opaque: Specified number of bytes making block payload.
		$LF
	]li
]ul
[h3 id=Blocks
 
	" Blocks
	$LF
]h3
[h4 id=Blocktype0xf5e0fad7:ANCHOR_SAVE:
 
	" Block type 0xf5e0fad7: ANCHOR_SAVE:
	$LF
]h4
[ul 
	[li 
		" implicit-blob: The savestate (last 32 bytes are SHA-256 checksum of previous).
		$LF
	]li
]ul
[h4 id=Blocktype0xafff97b4:AUTHOR
 
	" Block type 0xafff97b4: AUTHOR
	$LF
]h4
[ul 
	[li 
		" string: Real name
		$LF
	]li
	[li 
		" implicit-string: Nickname
		$LF
	]li
]ul
[h4 id=Blocktype0xe4344c7e:CORE_VERSION
 
	" Block type 0xe4344c7e: CORE_VERSION
	$LF
]h4
[ul 
	[li 
		" implicit-string: Core version string.
		$LF
	]li
]ul
[h4 id=Blocktype0xe80d6970:GAMENAME
 
	" Block type 0xe80d6970: GAMENAME
	$LF
]h4
[ul 
	[li 
		" implicit-string: Game name.
		$LF
	]li
]ul
[h4 id=Blocktype0x3bf9d187:HOSTMEMORY
 
	" Block type 0x3bf9d187: HOSTMEMORY
	$LF
]h4
[ul 
	[li 
		" implicit-blob: Lua Host memory contents.
		$LF
	]li
]ul
[h4 id=Blocktype0xd261338f:MACRO
 
	" Block type 0xd261338f: MACRO
	$LF
]h4
[ul 
	[li 
		" varint: Frame number in macro
		$LF
	]li
	[li 
		" implicit-string: Macro name.
		$LF
	]li
]ul
[h4 id=Blocktype0xf3dca44b:MOVIE
 
	" Block type 0xf3dca44b: MOVIE
	$LF
]h4
[ul 
	[li 
		" implicit-blob: Raw binary movie data
		$LF
	]li
]ul
[p 
	"The frames are concatenated. Length of each frame and precise format depends on the core and settings.
	$LF
]p
[h4 id=Blocktype0xbbc824b7:MOVIE_SRAM
 
	" Block type 0xbbc824b7: MOVIE_SRAM
	$LF
]h4
[ul 
	[li 
		" string: Name of SRAM.
		$LF
	]li
	[li 
		" implicit-blob: Initial contents for the SRAM.
		$LF
	]li
]ul
[h4 id=Blocktype0x18c3a975:MOVIE_TIME
 
	" Block type 0x18c3a975: MOVIE_TIME
	$LF
]h4
[ul 
	[li 
		" varint: Seconds part of movie starting time.
		$LF
	]li
	[li 
		" varint: Subseconds part of movie starting time.
		$LF
	]li
]ul
[h4 id=Blocktype0x359bfbab:PROJECT_ID
 
	" Block type 0x359bfbab: PROJECT_ID
	$LF
]h4
[ul 
	[li 
		" implicit-string: Project ID.
		$LF
	]li
]ul
[h4 id=Blocktype0xd3ec3770:RAMCONTENT
 
	" Block type 0xd3ec3770: RAMCONTENT
	$LF
]h4
[ul 
	[li 
		" string: Name of memory area.
		$LF
	]li
	[li 
		" implicit-blob: Initial contents of that memory area.
		$LF
	]li
]ul
[h4 id=Blocktype0x0428acfc:ROMHASH
 
	" Block type 0x0428acfc: ROMHASH
	$LF
]h4
[ul 
	[li 
		" byte: Number of slot
		$LF
	]li
	[li 
		" * High 7 bits are slot number 0...26
		$LF
	]li
	[li 
		" * Low bit is 0 for ROM slots, 1 for markup slots.
		$LF
	]li
	[li 
		" implicit-string: Hash value
		$LF
	]li
]ul
[h4 id=Blocktype0xa3a07f71:RRDATA
 
	" Block type 0xa3a07f71: RRDATA
	$LF
]h4
[ul 
	[li 
		" implicit-blob: rrdata (see the textual file format).
		$LF
	]li
]ul
[h4 id=Blocktype0xae9bfb2f:SAVE_SRAM
 
	" Block type 0xae9bfb2f: SAVE_SRAM
	$LF
]h4
[ul 
	[li 
		" string: Name of SRAM.
		$LF
	]li
	[li 
		" implicit-blob: contents for the SRAM at time of savestate.
		$LF
	]li
]ul
[h4 id=Blocktype0x2e5bc2ac:SAVESTATE
 
	" Block type 0x2e5bc2ac: SAVESTATE
	$LF
]h4
[ul 
	[li 
		" Varint: Save frame
		$LF
	]li
	[li 
		" Varint: Lag counter
		$LF
	]li
	[li 
		" Varint: Current RTC second.
		$LF
	]li
	[li 
		" Varint: Current RTC subsecond.
		$LF
	]li
	[li 
		" 32-bit*n: Poll counters (Bit 31 is data ready bit). Number depends on the settings/core.
		$LF
	]li
	[li 
		" Byte: Polled this frame flag.
		$LF
	]li
	[li 
		" implicit-blob: Contents of the savestate.
		$LF
	]li
]ul
[h4 id=Blocktype0xc6760d0e:SCREENSHOT
 
	" Block type 0xc6760d0e: SCREENSHOT
	$LF
]h4
[ul 
	[li 
		" implicit-blob: Screen contents.
		$LF
	]li
]ul
[h4 id=Blocktype0x6a7054d3:SUBTITLE
 
	" Block type 0x6a7054d3: SUBTITLE
	$LF
]h4
[ul 
	[li 
		" Varint: Starting frame
		$LF
	]li
	[li 
		" Varint: Duration
		$LF
	]li
	[li 
		" Implicit-string: Text (without escaping)
		$LF
	]li
]ul
