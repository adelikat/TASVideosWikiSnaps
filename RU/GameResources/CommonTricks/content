16
[h2 id= 
	" Основные техники
	$LF
]h2
[div class=p 
	[em 
		""Это спарринг-программа. Похожа на виртуальную среду Матрицы. В ней действуют такие же законы – например, гравитация. Только запомни - это законы компьютерной системы. Одни из них можно обойти. Другие - нарушить."
	]em
	" ― Морфей, "Матрица"
	$LF
]div
[div class=p 
	"Существует ряд техник, которые можно применить (или хотя бы попытаться)
	$LF
	"во множестве игр, чтобы улучшить время. Если вы делаете мувик, обязательно
	$LF
	"попробуйте их все. Если не поможет, можно 
	[a class=intlink href=/Forum/Topics/13010 
		"изобрести свои
	]a
	".
	$LF
]div
[div class=card mb-2 
	[div class=card-header 
		[strong 
			"Table of contents
		]strong
	]div
	[div class=card-body 
		[ul 
			[li 
				[a href=# 
					" Основные техники
					$LF
				]a
				[ul 
					[li 
						[a href=#_2 
							" Злоупотребление непредусмотренными ситуациями
							$LF
						]a
						[ul 
							[li 
								[a href=#_3 
									" Непроверенный код
									$LF
								]a
							]li
							[li 
								[a href=#_4 
									" Ошибочные предположения
									$LF
								]a
							]li
							[li 
								[a href=#_5 
									" Побочные эффекты паузы
									$LF
								]a
							]li
							[li 
								[a href=#_6 
									" Смешение разной игровой логики
									$LF
								]a
							]li
						]ul
					]li
					[li 
						[a href=#_7 
							" Злоупотребление уроном от монстров
							$LF
						]a
						[ul 
							[li 
								[a href=#_8 
									" "Отталкивающий" урон
									$LF
								]a
							]li
						]ul
					]li
					[li 
						[a href=#_9 
							" Злоупотребление кадрами неуязвимости
							$LF
						]a
						[ul 
							[li 
								[a href=#_10 
									" Неуязвимость по событию
									$LF
								]a
							]li
							[li 
								[a href=#_11 
									" Неуязвимость при ранении
									$LF
								]a
							]li
						]ul
					]li
					[li 
						[a href=#_12 
							" Избежание обратных отсчетов
							$LF
						]a
					]li
					[li 
						[a href=#_13 
							" Нетипичные стратегии
							$LF
						]a
						[ul 
							[li 
								[a href=#_14 
									" Злоупотребление смертью и концом игры.
									$LF
								]a
							]li
							[li 
								[a href=#_15 
									" Воздержание от сохранений.
									$LF
								]a
							]li
							[li 
								[a href=#Sram 
									" Сброс игры без очистки SRAM.
									$LF
								]a
							]li
							[li 
								[a href=#Sram_2 
									" Сброс игры с учетом SRAM.
									$LF
								]a
							]li
						]ul
					]li
					[li 
						[a href=#_16 
							" Злоупотребление особенностями ввода
							$LF
						]a
						[ul 
							[li 
								[a href=#_17 
									" Много действий за раз
									$LF
								]a
							]li
							[li 
								[a href=#_18 
									" Окна ввода
									$LF
								]a
							]li
							[li 
								[a href=#_19 
									" Чередование клавиш.
									$LF
								]a
							]li
						]ul
					]li
					[li 
						[a href=#_20 
							" Злоупотребление супер-скоростью
							$LF
						]a
						[ul 
							[li 
								[a href=#_21 
									" Обогнать игру
									$LF
								]a
							]li
							[li 
								[a href=#_22 
									" Нет в кадре? Значит, не существует!
									$LF
								]a
							]li
							[li 
								[a href=#_23 
									" Обработка коллизий на скорости
									$LF
								]a
							]li
						]ul
					]li
					[li 
						[a href=#_24 
							" Обработка коллизий
							$LF
						]a
						[ul 
							[li 
								[a href=#_25 
									" Коллизии на малых расстояниях
									$LF
								]a
							]li
							[li 
								[a href=#_26 
									" Движение между тайлами по диагонали
									$LF
								]a
							]li
							[li 
								[a href=#_27 
									" Прочие ошибки обработки коллизий
									$LF
								]a
							]li
						]ul
					]li
					[li 
						[a href=#_28 
							" Прыжки с обрывов
							$LF
						]a
					]li
					[li 
						[a href=#_29 
							" Перенос субпиксельной позиции
							$LF
						]a
					]li
					[li 
						[a href=#_30 
							" Манипулирование удачей.
							$LF
						]a
					]li
					[li 
						[a href=#_31 
							" Борьба с лагом.
							$LF
						]a
					]li
					[li 
						[a href=#_32 
							" Повреждение данных в памяти игры или сохранениях
							$LF
						]a
					]li
					[li 
						[a href=#_33 
							" Настройки игры
							$LF
						]a
						[ul 
							[li 
								[a href=#_34 
									" Скорость текста
									$LF
								]a
							]li
							[li 
								[a href=#_35 
									" Анимация передвижения/боя
									$LF
								]a
							]li
							[li 
								[a href=#_36 
									" Демонстрации геймплея и катсцены
									$LF
								]a
							]li
							[li 
								[a href=#_37 
									" Уровень сложности
									$LF
								]a
							]li
							[li 
								[a href=#_38 
									" Автосохранение
									$LF
								]a
							]li
							[li 
								[a href=#_39 
									" Дата и время
									$LF
								]a
							]li
							[li 
								[a href=#_40 
									" Профиль пользователя
									$LF
								]a
							]li
						]ul
					]li
				]ul
			]li
			[li 
				[a href=#_41 
					" Как находить трюки
					$LF
				]a
				[ul 
					[li 
						[a href=#_42 
							" Изучайте существующий материал
							$LF
						]a
					]li
					[li 
						[a href=#_43 
							" Изучайте данные игры
							$LF
						]a
						[ul 
							[li 
								[a href=#_44 
									" Чтение кода
									$LF
								]a
							]li
							[li 
								[a href=#_45 
									" Читайте скрипты
									$LF
								]a
							]li
							[li 
								[a href=#_46 
									" Изучите данные уровней
									$LF
								]a
							]li
							[li 
								[a href=#_47 
									" Изучите структуры данных
									$LF
								]a
							]li
						]ul
					]li
					[li 
						[a href=#_48 
							" Экспериментируйте
							$LF
						]a
					]li
				]ul
			]li
			[li 
				[a href=#_49 
					" См. также
					$LF
				]a
			]li
		]ul
	]div
]div
[h3 id=_2 
	" Злоупотребление непредусмотренными ситуациями
	$LF
]h3
[h4 id=_3 
	" Непроверенный код
	$LF
]h4
[div class=p 
	"Непроверенный код является основным источников багов в играх. Это код, работающий в ситуациях, которые разработчики не тестировали.
	$LF
]div
[div class=p 
	"Такой код не всегда полезен. К примеру, в игре 
	(__wikiLink|displaytext=Battletoads|href=/355M)
	$LF
	"есть один уровень, который невозможно пройти вдвоем, потому что
	$LF
	"при тестировании никто не попытался пройти его в режиме для двоих игроков. Игра попала в продажу с серьезной программной ошибкой, из-за которой игрок 2 не мог двигаться (отчего моментально погибал) на уровне "Clinger-Wingers".
	$LF
]div
[h4 id=_4 
	" Ошибочные предположения
	$LF
]h4
[div class=p 
	"Ввиду ограниченной производительности, чтобы снизить количество необходимых вычислений, в старых консольных играх часто берутся за аксиому на деле не всегда верные предположения. Иногда такие ошибки могут оставаться просто по недосмотру программиста.
	$LF
]div
[div class=p 
	(youtube|align=right|h=148|hidelink=|loop=75|start=64|v=baubmbgjzAg|w=197)
	$LF
	"Есть большое множество колоритных примеров, как то:
	$LF
]div
[ul 
	[li 
		" В игре 
		(__wikiLink|displaytext=Super Mario Bros 2|href=/1002M)
		", программа определяет, стоите ли вы на противнике, исходя из того, насколько близко вы находитесь к его верхушке. Поэтому, если упасть рядом с ним на правильную точку, взведется "флаг приземления", и вы сможете сделать новый прыжок прямо в воздухе.
		$LF
	]li
	[li 
		" Видеоролик справа демонстрирует, как в игре 
		(__wikiLink|displaytext=Rygar|href=/1090M)
		" программа полагает, что персонаж игрока может присесть исключительно стоя на земле, из-за чего чередование коротких интервалов ходьбы и приседаний позволяет шагать с обрыва и не падать.
		$LF
	]li
	[li 
		" В играх 
		(__wikiLink|displaytext=Kid Chameleon|href=/1334M)
		" и 
		(__wikiLink|displaytext=Solomon's Key|href=/498M)
		", программа считает, что персонаж игрока всегда начинает уровень, стоя на земле, и тем самым позволяет в этот момент делать вещи, в воздухе недоступные, как то прыгать или атаковать.
		$LF
	]li
	[li 
		" В игре 
		(__wikiLink|displaytext=Flashback|href=/220M)
		", программа полагает, что игрок собрал на предыдущих уровнях все предметы, даже если это не так (после варп-зоны). То же самое справедливо для большинства игр серии Prince of Persia.
		$LF
	]li
]ul
[h4 id=_5 
	" Побочные эффекты паузы
	$LF
]h4
[div class=p 
	[img class=embedright mw-100 src=https://files.tasvideos.org/gameresources/nes/rockman2/pausetrick.gif 
	]img
	$LF
	"В некоторых играх вызов паузы имеет непредусмотренные программистом последствия:
	$LF
]div
[ul 
	[li 
		" В игре 
		(__wikiLink|displaytext=Mega Man|href=/1103M)
		" пауза останавливает пули, но таймеры неуязвимости тикать продолжают. Из-за этого, если вызывать паузу сразу после каждого попадания, выстрелы могут поражать цель по несколько раз.
		$LF
	]li
	[li 
		" Справа приводится пример ситуации, возможной в игре 
		(__wikiLink|displaytext=Mega Man 2|href=/1346M)
		", где при нажатии паузы сбрасывается параметр вертикального ускорения героя, что позволяет смягчить эффекты гравитации и делать очень дальние прыжки.
		$LF
	]li
	[li 
		" В некоторых играх пауза не приводит к остановке таймеров или счетчиков, что позволяет манипулировать удачей. Иногда это может даже приводить к их переполнению, способному повлечь за собой полезные последствия.
		$LF
	]li
	[li 
		" В большинстве игр вызов паузы сопровождается звуковым эффектом, мгновенно прерывающим воспроизведение музыки. Если какая-то сцена синхронизирована с музыкой, пауза может нарушить ее ход.
		$LF
	]li
]ul
[div class=p 
	"Может оказаться очень полезным уделить время исследованию аномалий, создаваемых вызовом паузы в игре.
	$LF
]div
[h4 id=_6 
	" Смешение разной игровой логики
	$LF
]h4
[ul 
	[li 
		" Если 
		[a href=http://www.youtube.com/watch?v=fmgDazOOxTY rel=noopener external nofollow 
			"позволить обычному врагу войти в комнату босса
		]a
		", или наоборот, 
		[a href=http://www.youtube.com/watch?v=TNCzboxA_ug rel=noopener external nofollow 
			"выманить босса на остальной уровень
		]a
		", это может привести к взаимному наложению разных правил игры. Данные в RAM, корректные для каждой из этих ситуаций по отдельности, начинают мешать друг другу, перемешиваться, а иногда вызывать появление новых объектов или выполнение непредусмотренного кода.
		$LF
	]li
	[li 
		" 
		[a href=http://www.youtube.com/watch?v=bOweqz4cDlA rel=noopener external nofollow 
			"Перезапуск уровня
		]a
		", при котором какая-то часть основных флагов инициализируется, а какая-то (которая по идее должна быть в составе первой) - нет, иногда тоже может приводить к появлению лишних объектов или позволять манипулировать содержимым RAM.
		$LF
	]li
	[li 
		" Злоупотребление переключением банков может привести к ошибкам при обработке немаскируемых прерываний и заставить программу вступить в очередную фазу своего рабочего цикла со значениями переменных из другой фазы. Именно это происходит в ТАС по игре 
		(__wikiLink|displaytext=RockMan 1|href=/1686M)
		" и позволяет закончить уровень раньше времени.
		$LF
	]li
]ul
[hr 
]hr
[h3 id=_7 
	" Злоупотребление уроном от монстров
	$LF
]h3
[h4 id=_8 
	" "Отталкивающий" урон
	$LF
]h4
[div class=p 
	"Для многих игр типична такая архитектура уровней, где персонаж игрока совсем немного не дотягивается до некоторых платформ или проходов. Однако, разработчики часто упускают из внимания ускорение, придаваемое атаками монстров персонажу игрока. Получив урон в нужном месте и в нужное время, можно заставить врагов забросить вас туда, куда по изначальному замыслу вам было попадать не положено.
	$LF
]div
[ul 
	[li 
		" Игры 
		(__wikiLink|displaytext=Castlevania|href=/901M)
		" и 
		(__wikiLink|displaytext=Ghosts'n Goblins|href=/853M)
		" содержат хорошие примеры такой механики.
		$LF
	]li
]ul
[div class=p 
	"В некоторых случаях, по недосмотру разработчиков, получение урона может протолкнуть персонажа сквозь физические препятствия. Этим можно пользоваться для нахождения не предусмотренных авторами коротких путей.
	$LF
]div
[ul 
	[li 
		" Игра 
		(__wikiLink|displaytext=King Kong 2|href=/721M)
		" служит примером того, как получение урона позволяет пройти через ворота сразу к финальной части игры.
		$LF
	]li
]ul
[div class=p 
	(youtube|align=right|h=148|hidelink=|loop=480|start=474|v=deOhM2NNNGc|w=197)
	$LF
	"Иногда бывает так, что получение существенного урона отбрасывает персонажа со скоростью выше обычной. При должном планировании, это может запустить игрока в нужном направлении и сэкономить время. Игры 
	(__wikiLink|displaytext=Super Castlevania 4|href=/126M)
	", 
	(__wikiLink|displaytext=Legend of Zelda|href=/868M)
	", 
	(__wikiLink|displaytext=Link's Awakening|href=/1122M)
	", и 
	(__wikiLink|displaytext=Kirby Superstar|href=/318M)
	" являются хорошими примерами.
	$LF
]div
[ul 
	[li 
		" Игра 
		(__wikiLink|displaytext=Symphony of the Night|href=/1363M)
		" известна примерами того, как можно от урона получить прибавку и к скорости, и к высоте, и к дистанции.
		$LF
	]li
]ul
[div class=p 
	[br 
	]br
	$LF
	(youtube|align=right|h=148|hidelink=|loop=98|start=66|v=CdPFvgKqPv4|w=197)
	$LF
	"А иногда бывает и так, что получив урон, персонаж сохраняет скорость до тех пор, пока не остановится. В приведенном примере из игры 
	(__wikiLink|displaytext=Adventure Island 4|href=/1304M)
	", персонаж игрока оказывается способен сохранять скорость удивительно долгое время. Также стоит ознакомиться со 
	(__wikiLink|displaytext=злоупотреблением окнами ввода|href=/RU/GameResources/CommonTricks#_18)
	".
	$LF
	[br 
	]br
	$LF
]div
[hr 
]hr
[h3 id=_9 
	" Злоупотребление кадрами неуязвимости
	$LF
]h3
[div class=p 
	"В большинстве игр существуют ситуации, когда персонажу игрока нельзя причинить урон.
	$LF
]div
[h4 id=_10 
	" Неуязвимость по событию
	$LF
]h4
[div class=p 
	"Нередко, когда игра начинает разыгрывать какую-то скриптовую сцену, которую нельзя прервать, к примеру, анимацию завершения уровня, персонаж игрока становится неуязвимым. Если в это время он коснется чего-то смертельно опасного, игра может это попросту проигнорировать. Мувики по играм 
	(__wikiLink|displaytext=Little Nemo|href=/1000M)
	" и 
	(__wikiLink|displaytext=Gremlins 2|href=/1325M)
	" содержат примеры такого поведения.
	$LF
]div
[div class=p 
	"Во множестве игр, таких как 
	(__wikiLink|displaytext=Umihara Kawase|href=/690M)
	" и 
	(__wikiLink|displaytext=The Wrath Of Black Manta|href=/531M)
	", столкновения со смертельно опасными объектами игнорируются, если персонаж игрока проходит через дверь. Игра 
	(__wikiLink|displaytext=Mega Man 2|href=/1346M)
	" ведет себя аналогично, когда игрок меняет оружие.
	$LF
]div
[h4 id=_11 
	" Неуязвимость при ранении
	$LF
]h4
[div class=p 
	"Во многих играх, если персонаж игрока получает урон, он начинает мигать, временно становясь неуязвимым, что не позволяет ему моментально снова получить урон. Подобная "защита" нередко спасает персонажа в том числе от "смертельных" опасностей, позволяя, к примеру, безопасно пройтись по острым кольям или лаве, пока мигание не закончилось. Примеры такой механики можно увидеть в играх 
	(__wikiLink|displaytext=Mega Man 4|href=/545M)
	" и 
	(__wikiLink|displaytext=Blaster Master|href=/365M)
	".
	$LF
]div
[div class=p 
	"Подобный период бессмертия может дать и другие преимущества, такие, как возможность пройти сквозь противников, сражение с которыми могло бы отнять много времени или привело бы к лишним потерям. Примеры использования этих преимуществ можно наблюдать в таких играх, как 
	(__wikiLink|displaytext=Goonies|href=/1051M)
	" и 
	(__wikiLink|displaytext=Castlevania: Circle of the Moon|href=/1093M)
	".
	$LF
]div
[hr 
]hr
[h3 id=_12 
	" Избежание обратных отсчетов
	$LF
]h3
[div class=p 
	"Во многих играх уровни заканчиваются анимацией прокрутки счетчика очков. Время, затрачиваемое на это, также считается, и должно быть сведено к минимуму за счет подбора настолько оптимального счета, насколько возможно без потери скорости. Обычно это сводится к воздержанию от подбора предметов и приходу в конец уровня с подходящим уровнем здоровья персонажа.
	$LF
]div
[h3 id=_13 
	" Нетипичные стратегии
	$LF
]h3
[h4 id=_14 
	" Злоупотребление смертью и концом игры.
	$LF
]h4
[div class=p 
	(youtube|align=right|h=148|hidelink=|loop=450|start=424|v=RuVhJInysBQ|w=197)
	$LF
	"Хотя это может показаться противоречащим цели делать все максимально быстро, это не всегда так. Иногда после гибели персонажа, игра возвращает его на исходную позицию, давая возможность срезать путь. Кроме того, здоровье персонажа часто восстанавливается, могут быть потеряны или добавлены предметы.
	$LF
]div
[div class=p 
	"В играх с несколькими игровыми персонажами это может быть использовано, чтобы снизить количество диалогов. К примеру, в ролевых играх мертвые персонажи не требуют давать им команды. Кроме того, погибшие члены группы могут означать изменение ее состава, что может повлиять на длину катсцен, если те зависят от присутствия конкретных персонажей.
	$LF
]div
[div class=p 
	"В играх на нескольких игроков, кто-то из них может использовать смерть, чтобы возродиться в более выгодной позиции. Видеоролик справа показывает применение данной техники в игре 
	(__wikiLink|displaytext=Super C|href=/830M)
	". Оба игрока гибнут несколько раз подряд, чтобы, каждый раз возрождаясь вверху экрана, сэкономить время на подъеме.
	$LF
]div
[div class=p 
	"Все это может использоваться для экономии времени. Мувики, содержащие такие техники, попадают в категорию 
	(__wikiLink|displaytext=злоупотребляющих смертью игрока|href=/Movies-C3030Y)
	".
	$LF
]div
[h4 id=_15 
	" Воздержание от сохранений.
	$LF
]h4
[div class=p 
	"Часто выполнение команды "Сохранить игру" занимает несколько секунд, и при создании ТАС не требуется. Аналогично, необходимо 
	(__wikiLink|displaytext=отключать автосохранения|href=/RU/GameResources/CommonTricks#_38)
	".
	$LF
]div
[div class=p 
	"Однако, во многих играх это может дать некоторые преимущества, такие как перенос ближе к началу уровня, сбросить какие-то параметры персонажа и прочие особенности поведения при загрузке сохраненной игры. В силу чего рекомендуется изучать, что делает игра после сохранения игры.
	$LF
]div
[h4 id=Sram 
	" Сброс игры без очистки SRAM.
	$LF
]h4
[div class=p 
	"У игровых приставок обычно есть кнопка сброса, которая перезапускает игру на начало программы. Это действие может показаться очевидно невыгодным, но иногда сделать перезагрузку сразу после сохранения игры оказывается быстрее, чем продолжать играть. Самым типичным применением такого поведения является позволить игре сохраниться в конце уровня, но последующую катсцену не смотреть.
	$LF
]div
[h4 id=Sram_2 
	" Сброс игры с учетом SRAM.
	$LF
]h4
[div class=p 
	"Сохранение игры - процесс тонкий. Игры при этом часто говорят "Не выключайте консоль". Игнорирование этого совета часто ведет к повреждению сохраняемых данных. Как правило, впоследствии игра может отказаться загружать их. Тем не менее, правильный выбор момента и некоторое везение могут позволить так повредить сохраненные данные, что игра посчитает их корректными. Это может привести к серьезным программным ошибкам и позволить существенно отойти от сценария игры.
	$LF
]div
[hr 
]hr
[h3 id=_16 
	" Злоупотребление особенностями ввода
	$LF
]h3
[h4 id=_17 
	" Много действий за раз
	$LF
]h4
[div class=p 
	"Попробуйте сочетания клавиш такие, какие, скорее всего, не тестировались, как то одновременное нажатие "влево"+"вправо" или "вверх"+"вниз". Попробуйте использовать сразу несколько устройств ввода, к примеру, одновременно геймпад и тачскрин. Все это может приводить к порой безумным, но полезным последствиям. Примеры использования подобных программных ошибок можно наблюдать в играх 
	(__wikiLink|displaytext=Zelda: ALttP|href=/1210M)
	" и 
	(__wikiLink|displaytext=Zelda 2|href=/1082M)
	".
	$LF
]div
[div class=p 
	"(Имейте ввиду, что некоторые эмуляторы (такие, как VirtuaNES или старые версии Snes9x и FCEU) не позволяют одновременное нажатие "влево"+"вправо" или "вверх"+"вниз". На реальных приставках такого ограничения нет, если не считать конструкции геймпада, обычно позволяющей нажимать противоположные направления лишь с очень большим усилием.) 
	$LF
]div
[ul 
	[li 
		" В игре 
		(__wikiLink|displaytext=Shining Soul II|href=/1626M)
		", можно вызвать дублирование предмета, если дать команду его выбросить и переместить курсор в инвентаре за один кадр.
		$LF
	]li
]ul
[h4 id=_18 
	" Окна ввода
	$LF
]h4
[div class=p 
	"В ряде игр возможны ситуации, когда в течение короткого периода времени вы можете давать игре команды там, где от вас этого не ждут. Использование такой возможности может как просто позволить вам что-то сделать раньше, так и вызвать поведение, не предусмотренное разработчиками.
	$LF
]div
[ul 
	[li 
		" В игре 
		(__wikiLink|displaytext=Castlevania: Harmony of Dissonance|href=/1222M)
		", игрок может начать двигаться вправо непосредственно перед входом в комнату через дверь, или перед началом катсцены. Использование в рамках такого "окна" рывка назад может при проходе через некоторые двери привести к ошибочному перемещению в другое место.
		$LF
	]li
	[li 
		" В игре 
		(__wikiLink|displaytext=Blaster Master|href=/1410M)
		", игрок может, проходя через дверь, резко повернуть обратно, после чего его по ошибке отправят не туда, куда ожидалось.
		$LF
	]li
	[li 
		" В игре 
		(__wikiLink|displaytext=Pokémon Red|href=/1700M)
		" время от времени программа разрешает открыть меню во время катсцены. Если в этот момент сохранить игру или запустить перелет на покемоне в другую зону, программа может начать ошибочно воспринимать происходящее, что может привести к повреждению данных в памяти.
		$LF
	]li
]ul
[h4 id=_19 
	" Чередование клавиш.
	$LF
]h4
[div class=p 
	"Часто бывает так, что вам нужно нажать какую-нибудь кнопку, чтобы пропустить
	$LF
	"диалог, начать игру и так далее. Если для этого можно использовать, скажем,
	$LF
	"одну из двух кнопок, можно нажимать их вот так:
	$LF
]div
[pre 
	"A, B, A, B, A, B, A, B, и т. д.
	$LF
]pre
[div class=p 
	"Таким образом, новая кнопка будет нажиматься каждый кадр.
	$LF
	"Это не поможет вам выиграть время в мувике, но ускорит его производство, коль скоро вам не потребуется каждый раз делать лишние прогоны для определения максимально раннего кадра для ввода. Некоторые эмуляторы (такие, как VBA и Snes9x) позволяют настроить автонажатие А и В начиная с определенных кадров и колотить эту последовательность за вас, что делает процесс еще проще.
	$LF
]div
[div class=p 
	"Бывает и так, что игра на самом деле способна получать ввод на каждом кадре, и в таком случае это действительно позволяет выиграть время в мувике, в сравнении с попытками нажать одну или две кнопки пораньше. Кроме того, в некоторых играх бывает вообще
	$LF
	"не предусмотрен такой быстрый ввод данных, что может приводить
	$LF
	"к чудным последствиям.
	$LF
]div
[div class=p 
	"Важно помнить, что использование данной техники может серьезно осложнить применение HEX-редактора. Могут возникнуть проблемы с точным определением кадра, в котором ввод реально повлиял на поведение игры.
	$LF
]div
[hr 
]hr
[h3 id=_20 
	" Злоупотребление супер-скоростью
	$LF
]h3
[div class=p 
	"Действуя на скорости, невозможной для живого человека, к примеру, нажимая клавиши 30 раз в секунду, вы можете получить возможности, о наличии которых разработчики могли никогда не догадываться.
	$LF
]div
[ul 
	[li 
		" В некоторых играх это позволяет игроку увеличить свою скорость выше всякого предела. См. пример в игре 
		(__wikiLink|displaytext=Sonic Advance|href=/1665M)
		".
		$LF
	]li
	[li 
		" А в некоторых играх можно убить какого-нибудь босса, пока он еще только появляется на арене или проходит какую-то трансформацию. Примеры такого поведения можно увидеть в играх 
		(__wikiLink|displaytext=Simon's Quest|href=/1119M)
		" и 
		(__wikiLink|displaytext=Super Metroid|href=/1075M)
		".
		$LF
	]li
]ul
[h4 id=_21 
	" Обогнать игру
	$LF
]h4
[div class=p 
	"Двигаясь на слишком большой скорости, можно часто застать игру врасплох. Иначе говоря, у нее может не оказаться времени приготовиться к вашему прибытию в определенную точку. На практике, некоторые объекты, которым там положено находиться, могут быть еще не созданы. В зависимости от конкретной ситуации это может оказаться как удачей, так и неприятностью.
	$LF
]div
[h4 id=_22 
	" Нет в кадре? Значит, не существует!
	$LF
]h4
[div class=p 
	"Нередко игры облегчают себе задачу, принимая во внимание лишь те объекты, что находятся неподалеку от видимой игроку местности. Если вам удастся обогнать игровую камеру, может получиться проигнорировать объекты, которые в ином случае могли бы создать задержку.
	$LF
]div
[h4 id=_23 
	" Обработка коллизий на скорости
	$LF
]h4
[div class=p 
	(youtube|align=right|h=148|hidelink=|loop=213|start=205|v=hETRzNzpFAI|w=197)
	$LF
	"Игры почти никогда не обрабатывают движение персонажей между кадрами. А это значит, что в одном кадре вы в одном месте, а в следующем - в другом, но проходить путь между ними вам, как в реальной жизни, не требуется. Такая уж вещь - анимация.
	$LF
]div
[div class=p 
	"Когда вы двигаетесь очень быстро, вы иногда можете проходить сквозь объекты
	$LF
	"просто потому, что кадра, где игра могла бы заметить вас внутри них, не случается.
	$LF
	"Если сочетать эту технику с упомянутым ниже злоупотреблением обработкой коллизий
	$LF
	"на малом расстоянии, скорость даже не должна быть такой уж большой.
	$LF
]div
[div class=p 
	"Примером может послужить обработка коллизий в игре 
	(__wikiLink|displaytext=Gradius|href=/711M)
	". Из-за очень большой скорости передвижения, звездолет игрока может пролетать сквозь тонкие преграды, столкновение с которыми при обычном прохождении было бы для него фатально.
	$LF
]div
[div class=p 
	[br 
	]br
	$LF
]div
[hr 
]hr
[h3 id=_24 
	" Обработка коллизий
	$LF
]h3
[h4 id=_25 
	" Коллизии на малых расстояниях
	$LF
]h4
[div class=p 
	"Большинство игр не пытаются определять коллизии с точностью до пикселя. Спрайты персонажей игрока и его врагов (собственно картинки на экране) могут быть всяческих форм, но их "хитбоксы" обычно прямоугольны. Игры программируют так в силу того, что гораздо проще рассчитать "хитбокс персонажа пересекается с хитбоксом врага", чем "какой-то пиксель спрайта игрока совпадает с каким-то пикселем спрайта врага".
	$LF
]div
[div class=p 
	"В некоторых играх хитбоксы даже больше, чем сами спрайты, из-за чего враг может ударить игрока тогда, когда с виду и не должен. Однако, для большинства игр справедливо обратное: хитбоксы на деле меньше, чем спрайты, из-за чего игрок может визуально прикоснуться к врагу или даже пройти сквозь него, не получив урона.
	$LF
	"Такие игры, как 
	(__wikiLink|displaytext=SMB1|href=/1330M)
	", 
	(__wikiLink|displaytext=SMB2|href=/1002M)
	" и 
	(__wikiLink|displaytext=Solomon's Key|href=/498M)
	" содержат множество примеров такого поведения.
	$LF
]div
[h4 id=_26 
	" Движение между тайлами по диагонали
	$LF
]h4
[div class=p 
	"Некоторые игры определяют, на каком тайле находится персонаж, проверяя лишь одну пару координат. Это может позволить двигаться между тайлами по диагонали, что иногда приносит пользу, давая возможность избежать попадания в тайлы, причиняющие персонажу урон или смерть.
	$LF
]div
[div class=p 
	"Демонстрация на примере игры Jetpack: 
	[a href=http://www.youtube.com/watch?v=EjTNYr7J_DY rel=noopener external nofollow 
		"http://www.youtube.com/watch?v=EjTNYr7J_DY
	]a
	$LF
]div
[h4 id=_27 
	" Прочие ошибки обработки коллизий
	$LF
]h4
[div class=p 
	[img class=embedright mw-100 src=https://files.tasvideos.org/gameresources/nes/smb/smb_minusentry2.gif 
	]img
	$LF
	"Используя ряд способов (таких как вхождение в углы необычным образом,
	$LF
	"или быть затолканным туда врагами), игрок иногда может частично углубиться
	$LF
	"в пол, стены или потолок. В каких-то случаях это приводит лишь к тому,
	$LF
	"что он застревает и не может идти дальше, но иногда это позволяет найти новые пути, до сего момента невозможные. К примеру, можно найти опору и совершить прыжок от стены. Примеры такого поведения есть в мувиках по играм 
	(__wikiLink|displaytext=SMB1|href=/1330M)
	" и 
	(__wikiLink|displaytext=SMB2j|href=/1031M)
	".
	$LF
]div
[div class=p 
	"В большинстве игр расчет коллизий очень прост. Как отмечено выше, движение персонажей не непрерывно, из-за чего они могут проходить сквозь стены или врагов при условии достаточно большой скорости или необычной траектории движения. Исходя из положения стен, многие игры компенсируют это, пытаясь быстро вытолкнуть игрока из стены и не дать ему там застрять. В ряде случаев программу можно обмануть, и заставить ее толкать вас в неверном направлении, что используется для хождения сквозь стены в игре 
	(__wikiLink|displaytext=SMB1|href=/1330M)
	". А в некоторых играх, выталкивание из стены заставляет вашего персонажа быстро лететь в конкретном направлении (обычно по горизонтали), пока не найдется место, где из стены можно выйти. Это особенно полезно, когда вы можете заставить игру прямо таки выстрелить вашим героем в нужном направлении! В играх 
	(__wikiLink|displaytext=Mega Man|href=/1103M)
	" и 
	(__wikiLink|displaytext=Mega Man 2|href=/1346M)
	" даже потолки выталкивают вас горизонтально, в силу чего авторы мувиков по ним регулярно устраивают трюки, заставляющие Мега Мэна втыкаться в потолок.
	$LF
]div
[div class=p 
	"На анимации справа показан классический пример из игры Super Mario Bros (знаменитый трюк со стеной, позволяющий попасть в мир -1).
	$LF
]div
[hr 
]hr
[h3 id=_28 
	" Прыжки с обрывов
	$LF
]h3
[div class=p 
	[img class=embedright mw-100 src=https://files.tasvideos.org/gameresources/nes/smb/smb_fallfast.gif 
	]img
	$LF
	"В большинстве игр, особенно в платформерах, скорость игровых персонажей не линейна. Как правило, имеет место принцип ускорения: чем дольше персонаж движется в конкретном направлении, тем быстрей. Аналогично, чем дольше падение, тем быстрее персонаж преодолеет расстояние между начальной точкой и конечной точкой ниже, из-за чего гораздо предпочтительнее начинать прыжок недалеко от края платформы. Старайтесь не поддаваться соблазну просто пробежать и упасть, так как часто персонаж будет начинать падение с почти нулевой вертикальной скоростью (если, конечно, вам это не на руку).
	$LF
]div
[div class=p 
	"Замечание: Некоторые игры снижают вашу горизонтальную скорость в прыжке. В них обычно лучше делать очень маленький прыжок лишь за пару кадров до обрыва, или даже вообще не прыгать. Всегда досконально исследуйте физику игры, над которой вы работаете, не ленитесь пользоваться инструментами 
	(__wikiLink|displaytext=поиска в памяти|href=/Memorysearch)
	", чтобы найти точные значения переменных, отражающих скорость персонажа.
	$LF
]div
[hr 
]hr
[h3 id=_29 
	" Перенос субпиксельной позиции
	$LF
]h3
[div class=p 
	(youtube|align=right|h=148|hidelink=|v=JisFSMHn8tY|w=197)
	$LF
	"Данное явление крайне распространено среди игр для NES (и несколько более редкое для DS и GBA). Вне зависимости от платформы, это следует исследовать в любой игре.
	$LF
]div
[div class=p 
	"Субпиксельная позиция измеряется в дробных частях пикселя. Это используется для того, чтобы определять, на сколько пикселей персонаж перемещается за кадр. Часто, когда происходит переход в следующий уровень/комнату, это значение не сбрасывается. Это значит, что после перехода оно продолжит использоваться. Если возможно, это значение под конец уровня следует оставлять большим, чтобы дать персонажу маленькую "фору" на следующем старте.
	$LF
]div
[div class=p 
	"Замечание: Несовпадение субпиксельной позиции - типичная причина рассинхронизации при копировании ввода между мувиками. В играх, где есть перенос субпиксельной позиции, перед копированием ее необходимо выровнять.
	$LF
]div
[hr 
]hr
[h3 id=_30 
	" Манипулирование удачей.
	$LF
]h3
[div class=p 
	"Игровая приставка - компьютер. Она всегда в точности следует программе, и всегда выдает одинаковый результат при условии одинаковых вводимых данных. Там не бывает ничего случайного. Единственный настоящий фактор случайности в играх - вы сами! Поведение всех игр абсолютно детерминировано и полностью зависит от данных, вводимых пользователем.
	$LF
]div
[div class=p 
	"Научитесь пользоваться этим обстоятельством. На все, что имеет в себе элемент случайности, как то поведение врагов или выпадение предметов, вы можете повлиять.
	$LF
]div
[div class=p 
	"Для подробностей, см. статью о 
	(__wikiLink|displaytext=манипуляции удачей|href=/LuckManipulation)
	".
	$LF
]div
[hr 
]hr
[h3 id=_31 
	" Борьба с лагом.
	$LF
]h3
[div class=p 
	"Производительность старых игровых систем ограничена. Они не могут обработать за кадр больше объектов, чем в рамках некоторого предела. Если же их слишком много, игра замедляется, так как посчитать все за кадр не успевает.
	$LF
]div
[div class=p 
	"Знание причин данного феномена очень важно при создании ТАС-мувика. Часто лаг можно минимизировать как путем сохранения низкой численности объектов на экране за счет раннего их уничтожения, так и за счет их 
	[em 
		"не
	]em
	"уничтожения во избежание запуска чересчур сложной (в том числе и для процессора) анимации гибели. Манипулирование удачей также может помочь. В некоторых играх появление врагов зависит от случайности.
	$LF
]div
[div class=p 
	"Наличие объектов на экране - не единственный источник нагрузки на процессор. Некоторые действия требуют больше вычислений, чем другие. К примеру, близость к врагам или сбор и использование отдельных предметов также могут вызвать лаги.
	$LF
]div
[div class=p 
	"Часто лаги случаются по вообще непонятным причинам. Иногда незначительная смена стратегии без потерь по времени может позволить избежать этого. В таких случаях, 
	(__wikiLink|displaytext=поиск в памяти|href=/Memorysearch)
	" игры может помочь с этим.
	$LF
]div
[hr 
]hr
[h3 id=_32 
	" Повреждение данных в памяти игры или сохранениях
	$LF
]h3
[div class=p 
	"В памяти игры определяется, что вы сделали, что делаете, и что вам еще надо сделать. Если вдруг у вас появилась возможность напрямую менять данные в памяти, вы уже практически победили.
	$LF
]div
[div class=p 
	"Подложив не те значения не по тому адресу, вы можете скомандовать игре делать вещи за пределами ее функционала. Однако, это требует обширных знаний и глубокого разбора кода игры.
	$LF
]div
[ul 
	[li 
		" 
		(__wikiLink|displaytext=Память SRAM может быть перепрограммирована|href=/2187M)
		$LF
	]li
	[li 
		" 
		(__wikiLink|displaytext=Указатель выполняемого кода может быть перехвачен|href=/2157M)
		$LF
	]li
	[li 
		" 
		(__wikiLink|displaytext=По критическим адресам могут быть записаны неверные значения|href=/1945M)
		$LF
	]li
	[li 
		" 
		(__wikiLink|displaytext=Критические процедуры|href=/1686M)
		" 
		(__wikiLink|displaytext=могут быть прерваны|href=/2047M)
		$LF
	]li
	[li 
		" Категория: 
		(__wikiLink|displaytext=Повреждение памяти|href=/Movies-C3058Y)
		$LF
	]li
	[li 
		" Категория: 
		(__wikiLink|displaytext=Повреждение сохранений|href=/Movies-C3057Y)
		$LF
	]li
]ul
[hr 
]hr
[h3 id=_33 
	" Настройки игры
	$LF
]h3
[div class=p 
	"Многие игры предлагают игроку различные опции, влияющие на игровой процесс. Рекомендуется всегда проверять их на случай, если какие-то из них позволят сэкономить время.
	$LF
]div
[h4 id=_34 
	" Скорость текста
	$LF
]h4
[div class=p 
	"Некоторые игры позволяют указать, как быстро появляются и исчезают текстовые сообщения. Установка максимальной скорости обычно позволяет сэкономить время и имеет смысл даже тогда, когда текст можно пропустить, так как ограничения по вводу данных не всегда позволяют сделать это так же быстро.
	$LF
]div
[h4 id=_35 
	" Анимация передвижения/боя
	$LF
]h4
[div class=p 
	"В ряде ролевых и стратегических игр можно выключить анимацию передвижения/боя, либо заменить ее на упрощенный вариант. Всегда выбирайте самое быстрое.
	$LF
]div
[h4 id=_36 
	" Демонстрации геймплея и катсцены
	$LF
]h4
[div class=p 
	"Хотя вы, скорее всего, и так сможете пропустить их с помощью ввода, если игра позволяет, может быть лучше выключить их совсем.
	$LF
]div
[h4 id=_37 
	" Уровень сложности
	$LF
]h4
[div class=p 
	"Как правило, мы предпочитаем мувики, сделанные на максимальной сложности, как лучше демонстрирующие сверхчеловеческое мастерство при прохождении, но есть случаи, когда пониженная сложность дает для этого более подходящие условия, и тогда такой вариант нас устраивает больше.
	$LF
]div
[div class=p 
	"Замечание: В некоторых играх на определенной сложности, обычно самой высокой, становятся доступны дополнительные предметы, уровни, боссы и/или секретные концовки. Подобные обстоятельства могут пересечься с целями, которые вы себе ставите в мувике. Потому старайтесь заранее выведать все секреты игры.
	$LF
]div
[h4 id=_38 
	" Автосохранение
	$LF
]h4
[div class=p 
	"В случае ТАС это часто пустая трата времени, особенно если происходит регулярно. Если возможно, эту опцию необходимо выключить, в иных случаях - избегать ее срабатывания.
	$LF
]div
[h4 id=_39 
	" Дата и время
	$LF
]h4
[div class=p 
	"Во многих играх эти показатели влияют на случайные факторы. Подробнее в статье о 
	(__wikiLink|displaytext=манипуляции удачей|href=/LuckManipulation)
	".
	$LF
]div
[div class=p 
	"В некоторых играх конкретные значения даты и времени могут открыть доступ к секретному контенту.
	$LF
]div
[h4 id=_40 
	" Профиль пользователя
	$LF
]h4
[div class=p 
	"Как правило, в большинстве длинных и не очень игр с возможностью сохранения/загрузки, игрока просят создать пользовательский профиль, содержащий имя персонажа игрока, его пол, день рождения и т. д.
	$LF
]div
[div class=p 
	"Обычно выгоднее делать такую информацию максимально краткой, чтобы не тратить время на ее заполнение при создании профиля или цитирование в ходе игрового процесса. Однако, в некоторых играх информация из профиля может иметь как конкретное, так и случайное влияние на игровой процесс, давая вам возможность манипулировать ей в своих целях.
	$LF
]div
[hr 
]hr
[h2 id=_41 
	" Как находить трюки
	$LF
]h2
[h3 id=_42 
	" Изучайте существующий материал
	$LF
]h3
[div class=p 
	"Прохождения, руководства, посты на форумах, электронная переписка по почте или IRC, и т. д. Если вы обнаружили или подозреваете, что игра, по которой вы делаете мувик, работает на движке, аналогичном движку из другой игры, по которой уже есть ТАС, проверьте последний на пример трюков, которые можно было бы применить и в вашей игре.
	$LF
]div
[h3 id=_43 
	" Изучайте данные игры
	$LF
]h3
[h4 id=_44 
	" Чтение кода
	$LF
]h4
[div class=p 
	"Все игры являются программами. И хотя написаны они для того, чтобы их исполняла игровая система, вас ничего не останавливает от самостоятельного прочтения кода. Разобраться в нем, скорее всего, будет непросто, но именно там определены точные правила поведения игры.
	$LF
]div
[div class=p 
	"Лучший способ понять эти правила - просто прочитать и попытаться понять, что в точности они значат. Вы можете в точности разобраться, как работает 
	(__wikiLink|displaytext=генератор случайных чисел|href=/LuckManipulation)
	", или просто почему персонаж игрока (теоретически) не может войти в стену.
	$LF
]div
[div class=p 
	"Данная задача совсем не из простых. Чтобы ей заниматься, лучше уметь программировать. И программирование это не обычное, а низкоуровневое. От вас потребуется способность понимать инструкции, непосредственно передаваемые процессору, которые могут не совпадать с тем, что изначально писал разработчик.
	$LF
]div
[div class=p 
	(__wikiLink|displaytext=Обратная разработка|href=/ReverseEngineering)
	$LF
]div
[h4 id=_45 
	" Читайте скрипты
	$LF
]h4
[div class=p 
	"Многие игры, особенно те, что с сюжетом, имеют свои средства исполнения скриптов. От них часто зависят важные вещи, такие как места, куда вы можете пойти, и как должны вести себя враги.
	$LF
]div
[div class=p 
	"Изучите, как работает исполнение скриптов и что эти скрипты делают. В них, как и в основной программе, могут быть ошибки. Но что важнее всего, это позволить вам четко понимать свои возможности.
	$LF
]div
[h4 id=_46 
	" Изучите данные уровней
	$LF
]h4
[div class=p 
	"Часто игры хранят важные данные в характеристиках уровней. Там можно найти всяческие переключатели тайлов, триггерные зоны, шаблоны поведения врагов и многое другое. Зачем тратить время и гадать, где что находится, когда можно найти все заранее?
	$LF
]div
[h4 id=_47 
	" Изучите структуры данных
	$LF
]h4
[div class=p 
	"Игры часто хранят имеющие практический смысл данные одним большим массивом, будь то параметры предметов в игре, показатели здоровья врагов, параметры роста характеристик персонажа или заранее вычисленные математические функции. Нет смысла тратить время на поиск значений в памяти по одному, когда их можно прочесть все разом.
	$LF
]div
[h3 id=_48 
	" Экспериментируйте
	$LF
]h3
[div class=p 
	"Просто пробуйте делать то, чего от вас не ожидают. Разработчики игр часто забывают о множестве возможностей. В ваших интересах напомнить им об этом.
	$LF
]div
[hr 
]hr
[h2 id=_49 
	" См. также
	$LF
]h2
[ul 
	[li 
		" 
		(__wikiLink|displaytext=Игровые ресурсы|href=/GameResources)
		" ― у нас есть документация и для других игр!
		$LF
	]li
	[li 
		" 
		(__wikiLink|displaytext=Руководство по сражениям с боссами|href=/GameResources/BossFightingGuide)
		" ― о трюках, характерных для схваток с боссами.
	]li
]ul
