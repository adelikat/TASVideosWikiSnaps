18
[p 
	"Released and approved for TASVideos submissions
	$LF
]p
[p 
	"Ported from mednafen to Bizhawk by 
	[a class=intlink href=/Users/Profile/zeromus 
		"zeromus
	]a
	$LF
]p
[h3 id=Backgrounder 
	" Backgrounder
	$LF
]h3
[p 
	"If you ever find a bug in psxhawk/octoshock, the first step is to test it in the latest mednafen to see if you have the same problem, if that test makes sense for the problem.  
	$LF
]p
[p 
	"As usual, emuhawk can load .cue files directly for psx games, but ones including mp3s or apes or whatever will need to get run through discohawk.
	$LF
]p
[p 
	"CCD files are superior to bin/cue and should be preferred where available. But generally cue+sbi will be required for copy protected games, and redumped discs are most preferable despite being cue+bin.
	$LF
]p
[p 
	"Disc swapping is supported. To use it, load an m3u instead of a cue/ccd. It hasnt been proven by anyone for serious use yet, so beware. For information how to make an m3u file, refer to 
	[a class=intlink href=/Forum/P/435317#435317 
		"this forum post
	]a
	". 
	[a class=intlink href=/5124S 
		"Here's how it's supposed to look like
	]a
	" when observing it in Notepad. The easier way exists though:
	$LF
]p
[ul 
	[li 
		" Tools > Multi-disk Bundler.
		$LF
	]li
]ul
[p 
	"To swap the disc, use the PSX > Disc Controls. It's a bit of an unusual interface, but I think it's a good one. You'll see that you can't change discs in one frame: this is physically impossible, therefore it cannot be emulated correctly.  You must eject the disc and advance a frame. After that youll be able to set the next disc.  Look at it this way: at one moment you press the eject button. Until time has passed, even at light-speed, the tray isnt open and the disc can't be swapped.  Watch out! Some games (I think I saw this in FF7) may require more than one frame of time for it to properly detect a swap.
	$LF
]p
[p 
	"Discs are quickly identified from the gamedb using a custom approach involving the TOC and the first couple dozen data sectors. This might possibly not catch hacks or patches as distinct from the clean rip 
	[a id=r1 
	]a
	[sup 
		"[
		[a href=#1 
			"1
		]a
		"]
	]sup
	". I'm looking for feedback on that. The "good" dumps are defined by redump.org. When using an M3U, the discs' IDs are checked and reported in the rom status display, but it isn't categorized as good or bad.
	$LF
]p
[p 
	"Here's the current differences between psxhawk and mednafen:
	$LF
]p
[ul 
	[li 
		" Default rendering of the screen (scaling, filtering, etc.) doesn't match mednafen. You can change that option. I like mednafen's behaviour, but not as default, at the present.
		$LF
	]li
	[li 
		" Input configuration is limited to one, two, or none standard gamepads, dualanalogs, or dual shocks
		$LF
	]li
	[li 
		" Disc loading isn't done through mednafen's code; some games may be bugged or fail to load for that reason alone. It's usually not a hard fix.
		$LF
	]li
	[li 
		" Savestates have been re-implemented, but theres nothing you can do with this information
		$LF
	]li
	[li 
		" memory card isn't modular. It works similarly to the sram on other bizhawk cores, EXCEPT: loading a state does not automatically cause the contained memorycard to updated on your disk. It won't be updated unless the game saves something else to it. In other words, until you see the game say 'SAVING' then your memcard is untouched (actually, it isn't touched until the emulator or core closes or you flush the save ram, as per normal in bizhawk). This may be an unusual approach, but I'm trying it out. 
		$LF
	]li
	[li 
		" Bizhawk does not perform error correction on disc images like mednafen does. See more under 'Patches'
		$LF
	]li
]ul
[p 
	"Here is a list of functionalities that are on-line for PSX, and some gotchas. If it's not working, we dont need you to tell us that it isn't working. if it's "working" but buggy, tell us.
	$LF
]p
[p 
	"Working:
	$LF
]p
[ul 
	[li 
		" saveram
		$LF
	]li
	[li 
		" savestates
		$LF
	]li
	[li 
		" input
		$LF
	]li
	[li 
		" memorydomains (ram tools & hex editor)
		$LF
	]li
	[li 
		" lua getregisters
		$LF
	]li
	[li 
		" auto-detection of PSX discs
		$LF
	]li
	[li 
		" audio/video
		$LF
	]li
	[li 
		" disc/tray management and swapping PAL/EU & JP regions
		$LF
	]li
	[li 
		" virtual pad
		$LF
	]li
	[li 
		" SBI files
		$LF
	]li
	[li 
		" lag frame detection
		$LF
	]li
	[li 
		" PSF
		$LF
	]li
]ul
[p 
	"Not working:
	$LF
]p
[ul 
	[li 
		" trace logger
		$LF
	]li
	[li 
		" hooks/callbacks
		$LF
	]li
]ul
[p 
	"Not fully validated:
	$LF
]p
[ul 
	[li 
		" do cheats work?
		$LF
	]li
]ul
[h3 id=Patches&ErrorCorrection 
	" Patches & Error Correction
	$LF
]h3
[p 
	"PSX disc images are full of error correction data. Many patches (PPF, etc.) ("naive patches"
	[a id=r2 
	]a
	[sup 
		"[
		[a href=#2 
			"2
		]a
		"]
	]sup
	" in the mednafen docs) will modify the actual data but not update the error correction data. This is a mistake. It works on many emulators, but would not work on a real console, because the console will spy the mismatch between the error correction and actual data, and 'repair' the actual data. So for example let's say a patch changed one byte containing your HP from 3 to 255. If it doesn't change the error correction data, the PSX (and mednafen) will say 'Oops, there's one byte wrong on the disc. Let me fix that for you.'
	$LF
]p
[p 
	"Bizhawk doesn't use this behaviour by default (but it can be enabled.) It's more accurate to do the error correction, but more annoying to gamers using lousy patches.
	$LF
]p
[p 
	"There's no excuse for PSX patches to be leaving off the error correction data. From what I can see, the best way to make a PPF patch is to use "PPF-Studio" ( http://www.romhacking.net/utilities/514/ ) which has an option (why isn't it enabled by default? That's a mistake.) to edit the error correction data as well.
	$LF
]p
[p 
	"Users with flawed PPF patches can use a utility called ECCRegen ( http://web.tiscali.it/eccregen/download.htm ) to fix their patched disc images. This will essentially say "I know the actual data is good and the error correction data is not matching it. Re-generate the error correction data"
	$LF
]p
[p 
	"As a technical side note, the ECC of XA discs doesn't cover the bytes 12-15 (LBA and mode) which should be cleared to zero before running the ECC. After this the ECC will 'repair' them always to zero, and then some other process (unclear whether it's in the XA/CDi specs or just PSX behaviour) will re-fill the LBA and mode fields.
	$LF
]p
[h3 id=Accuracy 
	" Accuracy
	$LF
]h3
[p 
	[a class=extlink href=http://emulation.gametechwiki.com/index.php/PS1_Tests rel=nofollow 
		"http://emulation.gametechwiki.com/index.php/PS1_Tests
	]a
	$LF
]p
[h3 id=AdditionalResources 
	" Additional Resources
	$LF
]h3
[p 
	"http://mednafen.fobby.net/documentation/psx.html
	$LF
]p
[p 
	"http://mednafen.fobby.net/releases
	$LF
]p
[hr 
]hr
[p 
	"[
	[a id=1 
	]a
	[a href=#r1 
		"1
	]a
	"]
	" Looking for feedback in the form of homebrews or romhacks that this malfunctions for. If needed, possible future work includes scanning the filesystem and hashing the structure of that + the game's EXE. This is easier than it sounds. So far I've found one case where a disc had been patched (only dozens of bytes) from it's pristine form, which we labeled a good dump--but the changes were all in the EXE, so the aforementioned approach wouldve covered it.
	$LF
]p
[p 
	"[
	[a id=2 
	]a
	[a href=#r2 
		"2
	]a
	"]
	" http://mednafen.fobby.net/documentation
]p
